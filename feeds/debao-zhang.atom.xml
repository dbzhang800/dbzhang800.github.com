<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>1+1=10 - Debao Zhang</title><link href="https://blog.debao.me/" rel="alternate"></link><link href="https://blog.debao.me/feeds/debao-zhang.atom.xml" rel="self"></link><id>https://blog.debao.me/</id><updated>2025-02-07T00:31:00+08:00</updated><subtitle>记记笔记，放松一下...</subtitle><entry><title>BPM 小记</title><link href="https://blog.debao.me/2025/02/notes-on-bpm/" rel="alternate"></link><published>2025-02-07T00:31:00+08:00</published><updated>2025-02-07T00:31:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2025-02-07:/2025/02/notes-on-bpm/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;随便记录一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="bpm"&gt;BPM&lt;/h2&gt;
&lt;p&gt;BPM（Business Process Management，业务流程管理）是一种系统化的方法，用于设计、分析、执行、监控和优化企业的业务流程。&lt;/p&gt;
&lt;p&gt;BPM 的实施 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;随便记录一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="bpm"&gt;BPM&lt;/h2&gt;
&lt;p&gt;BPM（Business Process Management，业务流程管理）是一种系统化的方法，用于设计、分析、执行、监控和优化企业的业务流程。&lt;/p&gt;
&lt;p&gt;BPM 的实施通常依赖于 BPM 软件平台。&lt;/p&gt;
&lt;h3 id="process"&gt;Process&lt;/h3&gt;
&lt;p&gt;在 BPM 中，Process（流程） 是指一系列有序的活动（Tasks）或步骤（Steps），这些活动协同工作以实现特定的业务目标。&lt;/p&gt;
&lt;h3 id="product-project-process"&gt;Product, Project 与 Process 管理对比&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;贴个表格，内容由 ChatGPT (GPT-4) 生成。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;特点&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;产品管理（Product Management）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;项目管理（Project Management）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;流程管理（Process Management）&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;核心关注点&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;产品的用户价值、市场定位和商业成功。&lt;/td&gt;
&lt;td&gt;项目的目标、进度、预算和资源的管理。&lt;/td&gt;
&lt;td&gt;企业内部流程的效率和标准化。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;目标&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;创建满足用户需求并实现商业价值的产品。&lt;/td&gt;
&lt;td&gt;完成特定的任务或交付成果（如发布新功能、完成建筑施工等）。&lt;/td&gt;
&lt;td&gt;持续优化和改进日常业务流程，确保运营效率。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;时间框架&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;持续性&lt;/strong&gt;：贯穿整个产品生命周期（从概念到退市）。&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;临时性&lt;/strong&gt;：项目有明确的开始和结束时间。&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;持续性&lt;/strong&gt;：流程是长期存在的，并定期优化。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;重复性&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;产品的开发和优化可能重复，但每次迭代有所不同。&lt;/td&gt;
&lt;td&gt;项目通常是&lt;strong&gt;一次性&lt;/strong&gt;的，针对特定目标。&lt;/td&gt;
&lt;td&gt;流程是&lt;strong&gt;高度重复&lt;/strong&gt;的，按照既定规则反复执行。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;管理对象&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;产品的功能、体验、市场表现和用户满意度。&lt;/td&gt;
&lt;td&gt;项目的时间、资源、范围和预算。&lt;/td&gt;
&lt;td&gt;流程的步骤、规则、效率和跨部门协作。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;参与角色&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;产品经理、设计师、开发人员、市场营销团队、用户等。&lt;/td&gt;
&lt;td&gt;项目经理、开发团队、相关干系人。&lt;/td&gt;
&lt;td&gt;流程分析师、运营团队、技术支持团队等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;结果&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;成功的产品（如应用、服务、硬件等），用户愿意为之买单。&lt;/td&gt;
&lt;td&gt;项目目标的完成（如新产品发布、活动成功举办）。&lt;/td&gt;
&lt;td&gt;流程效率提升、标准化和一致性。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;工具/方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;产品路线图、用户故事地图、市场调研工具、原型设计工具等。&lt;/td&gt;
&lt;td&gt;甘特图、敏捷开发工具（如 Jira、Trello）、Scrum 框架等。&lt;/td&gt;
&lt;td&gt;流程建模工具（如 BPMN）、工作流管理系统等。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;另外，可能还有 Program（项目集）管理。&lt;/p&gt;
&lt;h2 id="bpmn"&gt;BPMN&lt;/h2&gt;
&lt;p&gt;BPMN（Business Process Model and Notation） 是一种建模语言，由 OMG（Object Management Group） 组织制定，目的是提供一种直观、易读、可执行的方式来描述业务流程。&lt;/p&gt;
&lt;p&gt;BPMN 是 BPM 中的重要工具，它通过标准化的符号和规则帮助业务人员和技术人员协作，共同理解并优化流程。&lt;/p&gt;
&lt;h3 id="_1"&gt;历史&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BPMN 1.0&lt;/strong&gt;（2004年）  &lt;/li&gt;
&lt;li&gt;由 BPMI.org 发布，首次引入业务流程建模符号（如任务、网关、事件）。  &lt;/li&gt;
&lt;li&gt;提供了一种标准化的业务流程图（BPD）表示方法。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BPMN 1.1&lt;/strong&gt;（2008年）  &lt;/li&gt;
&lt;li&gt;由 OMG（Object Management Group）维护，改进了 1.0 的技术细节。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BPMN 2.0&lt;/strong&gt;（2011年）  &lt;/li&gt;
&lt;li&gt;重大更新版本，由 OMG 发布。  &lt;/li&gt;
&lt;li&gt;新增 XML 表达支持，实现业务流程的建模与自动化。  &lt;/li&gt;
&lt;li&gt;引入泳道池（Pools and Lanes）、协作建模和更多事件类型。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BPMN 2.0.2&lt;/strong&gt;（2014年）  &lt;/li&gt;
&lt;li&gt;修正了 2.0 的部分技术细节，无重大符号变更。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;一个例子&lt;/h3&gt;
&lt;p&gt;&lt;img alt="demo" src="https://blog.debao.me/images/tools/bpmn-demo-diagram.png"&gt;&lt;/p&gt;
&lt;p&gt;对应的xml文件还是很复杂的&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;  1&lt;/span&gt;
&lt;span class="normal"&gt;  2&lt;/span&gt;
&lt;span class="normal"&gt;  3&lt;/span&gt;
&lt;span class="normal"&gt;  4&lt;/span&gt;
&lt;span class="normal"&gt;  5&lt;/span&gt;
&lt;span class="normal"&gt;  6&lt;/span&gt;
&lt;span class="normal"&gt;  7&lt;/span&gt;
&lt;span class="normal"&gt;  8&lt;/span&gt;
&lt;span class="normal"&gt;  9&lt;/span&gt;
&lt;span class="normal"&gt; 10&lt;/span&gt;
&lt;span class="normal"&gt; 11&lt;/span&gt;
&lt;span class="normal"&gt; 12&lt;/span&gt;
&lt;span class="normal"&gt; 13&lt;/span&gt;
&lt;span class="normal"&gt; 14&lt;/span&gt;
&lt;span class="normal"&gt; 15&lt;/span&gt;
&lt;span class="normal"&gt; 16&lt;/span&gt;
&lt;span class="normal"&gt; 17&lt;/span&gt;
&lt;span class="normal"&gt; 18&lt;/span&gt;
&lt;span class="normal"&gt; 19&lt;/span&gt;
&lt;span class="normal"&gt; 20&lt;/span&gt;
&lt;span class="normal"&gt; 21&lt;/span&gt;
&lt;span class="normal"&gt; 22&lt;/span&gt;
&lt;span class="normal"&gt; 23&lt;/span&gt;
&lt;span class="normal"&gt; 24&lt;/span&gt;
&lt;span class="normal"&gt; 25&lt;/span&gt;
&lt;span class="normal"&gt; 26&lt;/span&gt;
&lt;span class="normal"&gt; 27&lt;/span&gt;
&lt;span class="normal"&gt; 28&lt;/span&gt;
&lt;span class="normal"&gt; 29&lt;/span&gt;
&lt;span class="normal"&gt; 30&lt;/span&gt;
&lt;span class="normal"&gt; 31&lt;/span&gt;
&lt;span class="normal"&gt; 32&lt;/span&gt;
&lt;span class="normal"&gt; 33&lt;/span&gt;
&lt;span class="normal"&gt; 34&lt;/span&gt;
&lt;span class="normal"&gt; 35&lt;/span&gt;
&lt;span class="normal"&gt; 36&lt;/span&gt;
&lt;span class="normal"&gt; 37&lt;/span&gt;
&lt;span class="normal"&gt; 38&lt;/span&gt;
&lt;span class="normal"&gt; 39&lt;/span&gt;
&lt;span class="normal"&gt; 40&lt;/span&gt;
&lt;span class="normal"&gt; 41&lt;/span&gt;
&lt;span class="normal"&gt; 42&lt;/span&gt;
&lt;span class="normal"&gt; 43&lt;/span&gt;
&lt;span class="normal"&gt; 44&lt;/span&gt;
&lt;span class="normal"&gt; 45&lt;/span&gt;
&lt;span class="normal"&gt; 46&lt;/span&gt;
&lt;span class="normal"&gt; 47&lt;/span&gt;
&lt;span class="normal"&gt; 48&lt;/span&gt;
&lt;span class="normal"&gt; 49&lt;/span&gt;
&lt;span class="normal"&gt; 50&lt;/span&gt;
&lt;span class="normal"&gt; 51&lt;/span&gt;
&lt;span class="normal"&gt; 52&lt;/span&gt;
&lt;span class="normal"&gt; 53&lt;/span&gt;
&lt;span class="normal"&gt; 54&lt;/span&gt;
&lt;span class="normal"&gt; 55&lt;/span&gt;
&lt;span class="normal"&gt; 56&lt;/span&gt;
&lt;span class="normal"&gt; 57&lt;/span&gt;
&lt;span class="normal"&gt; 58&lt;/span&gt;
&lt;span class="normal"&gt; 59&lt;/span&gt;
&lt;span class="normal"&gt; 60&lt;/span&gt;
&lt;span class="normal"&gt; 61&lt;/span&gt;
&lt;span class="normal"&gt; 62&lt;/span&gt;
&lt;span class="normal"&gt; 63&lt;/span&gt;
&lt;span class="normal"&gt; 64&lt;/span&gt;
&lt;span class="normal"&gt; 65&lt;/span&gt;
&lt;span class="normal"&gt; 66&lt;/span&gt;
&lt;span class="normal"&gt; 67&lt;/span&gt;
&lt;span class="normal"&gt; 68&lt;/span&gt;
&lt;span class="normal"&gt; 69&lt;/span&gt;
&lt;span class="normal"&gt; 70&lt;/span&gt;
&lt;span class="normal"&gt; 71&lt;/span&gt;
&lt;span class="normal"&gt; 72&lt;/span&gt;
&lt;span class="normal"&gt; 73&lt;/span&gt;
&lt;span class="normal"&gt; 74&lt;/span&gt;
&lt;span class="normal"&gt; 75&lt;/span&gt;
&lt;span class="normal"&gt; 76&lt;/span&gt;
&lt;span class="normal"&gt; 77&lt;/span&gt;
&lt;span class="normal"&gt; 78&lt;/span&gt;
&lt;span class="normal"&gt; 79&lt;/span&gt;
&lt;span class="normal"&gt; 80&lt;/span&gt;
&lt;span class="normal"&gt; 81&lt;/span&gt;
&lt;span class="normal"&gt; 82&lt;/span&gt;
&lt;span class="normal"&gt; 83&lt;/span&gt;
&lt;span class="normal"&gt; 84&lt;/span&gt;
&lt;span class="normal"&gt; 85&lt;/span&gt;
&lt;span class="normal"&gt; 86&lt;/span&gt;
&lt;span class="normal"&gt; 87&lt;/span&gt;
&lt;span class="normal"&gt; 88&lt;/span&gt;
&lt;span class="normal"&gt; 89&lt;/span&gt;
&lt;span class="normal"&gt; 90&lt;/span&gt;
&lt;span class="normal"&gt; 91&lt;/span&gt;
&lt;span class="normal"&gt; 92&lt;/span&gt;
&lt;span class="normal"&gt; 93&lt;/span&gt;
&lt;span class="normal"&gt; 94&lt;/span&gt;
&lt;span class="normal"&gt; 95&lt;/span&gt;
&lt;span class="normal"&gt; 96&lt;/span&gt;
&lt;span class="normal"&gt; 97&lt;/span&gt;
&lt;span class="normal"&gt; 98&lt;/span&gt;
&lt;span class="normal"&gt; 99&lt;/span&gt;
&lt;span class="normal"&gt;100&lt;/span&gt;
&lt;span class="normal"&gt;101&lt;/span&gt;
&lt;span class="normal"&gt;102&lt;/span&gt;
&lt;span class="normal"&gt;103&lt;/span&gt;
&lt;span class="normal"&gt;104&lt;/span&gt;
&lt;span class="normal"&gt;105&lt;/span&gt;
&lt;span class="normal"&gt;106&lt;/span&gt;
&lt;span class="normal"&gt;107&lt;/span&gt;
&lt;span class="normal"&gt;108&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;definitions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.omg.org/spec/BPMN/20100524/MODEL&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="na"&gt;xmlns:xsi=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="na"&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="na"&gt;xmlns:bpmndi=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.omg.org/spec/BPMN/20100524/DI&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="na"&gt;xmlns:dc=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.omg.org/spec/DD/20100524/DC&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="na"&gt;xmlns:di=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.omg.org/spec/DD/20100524/DI&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="na"&gt;xmlns:camunda=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://camunda.org/schema/1.0/bpmn&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Definitions_1&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;targetNamespace=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://bpmn.io/schema/bpmn&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;process&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;leave_approval&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;请假审批流程&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;isExecutable=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;&amp;lt;!-- 开始事件 --&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;startEvent&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;startEvent&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;提交请假申请&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;outgoing&amp;gt;&lt;/span&gt;flow1&lt;span class="nt"&gt;&amp;lt;/outgoing&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/startEvent&amp;gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;&amp;lt;!-- 任务：经理审批 --&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;userTask&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;managerApproval&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;经理审批&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;camunda:assignee=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;manager&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;incoming&amp;gt;&lt;/span&gt;flow1&lt;span class="nt"&gt;&amp;lt;/incoming&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;outgoing&amp;gt;&lt;/span&gt;flow2&lt;span class="nt"&gt;&amp;lt;/outgoing&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/userTask&amp;gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;&amp;lt;!-- 网关：审批是否通过 --&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;exclusiveGateway&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gateway1&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;审批通过？&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;incoming&amp;gt;&lt;/span&gt;flow2&lt;span class="nt"&gt;&amp;lt;/incoming&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;outgoing&amp;gt;&lt;/span&gt;flow3&lt;span class="nt"&gt;&amp;lt;/outgoing&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;outgoing&amp;gt;&lt;/span&gt;flow4&lt;span class="nt"&gt;&amp;lt;/outgoing&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/exclusiveGateway&amp;gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;&amp;lt;!-- 任务：通知 HR --&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;userTask&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;notifyHR&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;通知 HR&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;camunda:assignee=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hr&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;incoming&amp;gt;&lt;/span&gt;flow3&lt;span class="nt"&gt;&amp;lt;/incoming&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;outgoing&amp;gt;&lt;/span&gt;flow5&lt;span class="nt"&gt;&amp;lt;/outgoing&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/userTask&amp;gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;&amp;lt;!-- 任务：通知员工（审批被拒绝） --&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;userTask&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;notifyEmployee&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;通知员工&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;camunda:assignee=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;employee&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;incoming&amp;gt;&lt;/span&gt;flow4&lt;span class="nt"&gt;&amp;lt;/incoming&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;outgoing&amp;gt;&lt;/span&gt;flow6&lt;span class="nt"&gt;&amp;lt;/outgoing&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/userTask&amp;gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;&amp;lt;!-- 结束事件 --&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;endEvent&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;endEvent&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;incoming&amp;gt;&lt;/span&gt;flow5&lt;span class="nt"&gt;&amp;lt;/incoming&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;incoming&amp;gt;&lt;/span&gt;flow6&lt;span class="nt"&gt;&amp;lt;/incoming&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/endEvent&amp;gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;&amp;lt;!-- 流程连线 --&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;sequenceFlow&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow1&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;sourceRef=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;startEvent&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;targetRef=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;managerApproval&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;sequenceFlow&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow2&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;sourceRef=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;managerApproval&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;targetRef=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gateway1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;sequenceFlow&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow3&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;sourceRef=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gateway1&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;targetRef=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;notifyHR&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;通过&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;sequenceFlow&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow4&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;sourceRef=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gateway1&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;targetRef=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;notifyEmployee&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;拒绝&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;sequenceFlow&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow5&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;sourceRef=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;notifyHR&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;targetRef=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;endEvent&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;sequenceFlow&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow6&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;sourceRef=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;notifyEmployee&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;targetRef=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;endEvent&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/process&amp;gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;&amp;lt;!-- 添加 BPMN 图形 --&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;bpmndi:BPMNDiagram&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;BPMNDiagram_1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;bpmndi:BPMNPlane&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;BPMNPlane_1&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;bpmnElement=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;leave_approval&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;bpmndi:BPMNShape&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;StartEvent_1_di&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;bpmnElement=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;startEvent&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;dc:Bounds&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;150&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;36&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;36&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/bpmndi:BPMNShape&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;bpmndi:BPMNShape&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;UserTask_1_di&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;bpmnElement=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;managerApproval&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;dc:Bounds&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;200&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;150&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;80&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/bpmndi:BPMNShape&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;bpmndi:BPMNShape&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Gateway_1_di&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;bpmnElement=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gateway1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;dc:Bounds&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;350&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;165&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/bpmndi:BPMNShape&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;bpmndi:BPMNShape&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;UserTask_2_di&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;bpmnElement=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;notifyHR&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;dc:Bounds&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;450&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;80&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/bpmndi:BPMNShape&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;bpmndi:BPMNShape&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;UserTask_3_di&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;bpmnElement=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;notifyEmployee&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;dc:Bounds&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;450&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;250&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;80&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/bpmndi:BPMNShape&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;bpmndi:BPMNShape&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;EndEvent_1_di&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;bpmnElement=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;endEvent&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;dc:Bounds&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;600&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;180&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;36&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;36&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/bpmndi:BPMNShape&amp;gt;&lt;/span&gt;

&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="cm"&gt;&amp;lt;!-- 连接线 --&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;bpmndi:BPMNEdge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow1_di&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;bpmnElement=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;di:waypoint&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;136&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;168&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;di:waypoint&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;200&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;168&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/bpmndi:BPMNEdge&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;bpmndi:BPMNEdge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow2_di&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;bpmnElement=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow2&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;di:waypoint&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;300&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;168&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;di:waypoint&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;350&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;168&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/bpmndi:BPMNEdge&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;bpmndi:BPMNEdge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow3_di&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;bpmnElement=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow3&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;di:waypoint&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;400&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;168&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;di:waypoint&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;450&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;140&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/bpmndi:BPMNEdge&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;bpmndi:BPMNEdge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow4_di&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;bpmnElement=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow4&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;di:waypoint&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;400&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;168&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;di:waypoint&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;450&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;290&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/bpmndi:BPMNEdge&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;bpmndi:BPMNEdge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow5_di&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;bpmnElement=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow5&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;di:waypoint&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;550&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;140&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;di:waypoint&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;600&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;180&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/bpmndi:BPMNEdge&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;bpmndi:BPMNEdge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow6_di&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;bpmnElement=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;flow6&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;di:waypoint&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;550&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;290&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;di:waypoint&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;600&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;180&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/bpmndi:BPMNEdge&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/bpmndi:BPMNPlane&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/bpmndi:BPMNDiagram&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/definitions&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;可以通过一些网站，比如 demo.bpmn.io 等将其可视化。&lt;/p&gt;
&lt;h2 id="epc"&gt;EPC&lt;/h2&gt;
&lt;p&gt;EPC（Event-driven Process Chain） 是一种图形化的流程建模方法，专注于描述业务流程中事件和功能之间的关系。它广泛用于企业流程建模，特别是在 ERP 系统（如 SAP）的实施过程中。&lt;/p&gt;
&lt;p&gt;1992 年，由德国萨尔布吕肯大学（University of Saarland）的 August-Wilhelm Scheer 教授 及其团队在 ARIS 框架中首次提出。&lt;/p&gt;
&lt;h3 id="epc-vs-bpmn"&gt;EPC vs BPMN&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;比较维度&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;BPMN&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;EPC&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;全称&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Business Process Model and Notation（业务流程建模与标注）&lt;/td&gt;
&lt;td&gt;Event-driven Process Chain（事件驱动流程链）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;组织制定&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;OMG（Object Management Group）&lt;/td&gt;
&lt;td&gt;SAP 与 IDS Scheer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;主要用途&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;业务流程建模、流程 &lt;strong&gt;自动化执行&lt;/strong&gt; 、BPM 执行&lt;/td&gt;
&lt;td&gt;业务流程分析、优化，不直接支持自动化执行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;建模方式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;以任务（Task）为核心&lt;/strong&gt;，结合事件（Event）、网关（Gateway）等元素&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;以事件（Event）驱动流程&lt;/strong&gt;，连接功能（Function）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;表达能力&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;强，支持复杂流程、子流程、异常处理、消息流等&lt;/td&gt;
&lt;td&gt;适用于高层次流程分析，但对复杂逻辑表达有限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;核心元素&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;事件（Event）、任务（Task）、网关（Gateway）、流程（Flow）等&lt;/td&gt;
&lt;td&gt;事件（Event）、功能（Function）、连接器（Connector）、组织单元（Organization Unit）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;流程控制&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;使用 &lt;strong&gt;网关（Gateways）&lt;/strong&gt; 进行分支与合并&lt;/td&gt;
&lt;td&gt;依赖 &lt;strong&gt;连接符（如 AND、OR、XOR）&lt;/strong&gt; 实现分支控制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;优缺点&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;优点&lt;/strong&gt;：标准化强，支持自动化执行，表达能力强&lt;br&gt;&lt;strong&gt;缺点&lt;/strong&gt;：复杂流程可能较难理解&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;优点&lt;/strong&gt;：适用于企业级 ERP 业务流程，适合高层分析&lt;br&gt;&lt;strong&gt;缺点&lt;/strong&gt;：不适用于复杂流程自动化，缺少标准化执行支持&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="bpmn_1"&gt;如何理解 BPMN 自动化执行&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;头大，如何理解？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;BPMN 2.0 规范使用 XML 格式存储流程模型，并且可以被 &lt;strong&gt;BPM 引擎&lt;/strong&gt;（如 Camunda、jBPM、Bonita）解析和自动执行。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;BPMN&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;EPC&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;是否有标准 XML 存储格式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✅ 是，BPMN 2.0 XML&lt;/td&gt;
&lt;td&gt;❌ 不是，EPC 没有标准 XML&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;是否可被 BPM 引擎解析和执行&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✅ 可以自动执行&lt;/td&gt;
&lt;td&gt;❌ 不能自动执行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;是否有任务分配机制&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✅ &lt;code&gt;userTask&lt;/code&gt; 可自动分配&lt;/td&gt;
&lt;td&gt;❌ 任务只是描述，没有执行机制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;是否支持流程控制（网关）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✅ &lt;code&gt;exclusiveGateway&lt;/code&gt;、&lt;code&gt;parallelGateway&lt;/code&gt; 控制流程&lt;/td&gt;
&lt;td&gt;⚠️ 有控制流但无标准执行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;是否支持事件驱动&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✅ &lt;code&gt;startEvent&lt;/code&gt;、&lt;code&gt;endEvent&lt;/code&gt;、&lt;code&gt;messageEvent&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;❌ 事件只是状态，不会主动触发&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="aris"&gt;Aris&lt;/h2&gt;
&lt;p&gt;Aris 是支持流程建模和企业架构管理的工具（之一）。&lt;/p&gt;
&lt;p&gt;Aris: Architecture of Integrated Information Systems&lt;/p&gt;
&lt;h3 id="software-ag"&gt;Software AG&lt;/h3&gt;
&lt;p&gt;Aris 是德国 Software AG 公司的产品。Software AG 成立于1969年，在2023被Silver Lake收购后，已经已经股份公司（Aktiengesellschaft，AG） 转变为 有限责任公司（GmbH），但继续使用原有商标 Software AG。&lt;/p&gt;
&lt;h3 id="_3"&gt;五视图架构&lt;/h3&gt;
&lt;p&gt;ARIS 主要依赖于自己的五视图架构（ARIS house）。这五个视图基于流程的功能、组织、数据、产品或服务视图，以及集成其他视图的流程视图本身。进行分类是为了将模型的复杂性分解为五个方面，从而使业务流程建模更简单。&lt;/p&gt;
&lt;p&gt;&lt;img alt="aris house" src="https://blog.debao.me/images/tools/aris_house.png"&gt;&lt;/p&gt;
&lt;p&gt;每一个 Process 【流程视图】
- 需要有 Actor 执行 【组织视图】
- 依赖或生成 Data 【数据视图】
- 由 Action 构成 【功能视图】
- 有产出 Output 【产品或服务视图】&lt;/p&gt;
&lt;p&gt;换句话，回答如下问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What（做什么）？【功能视图】&lt;/li&gt;
&lt;li&gt;Who（谁来做）？【组织视图】&lt;/li&gt;
&lt;li&gt;Why（为什么）？【产品或服务视图】&lt;/li&gt;
&lt;li&gt;Which（哪些信息）？【数据视图】&lt;/li&gt;
&lt;li&gt;How（如何做）？【流程视图】&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_4"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Business_Process_Model_and_Notation&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Business_process_management&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Architecture_of_Integrated_Information_Systems&lt;/li&gt;
&lt;li&gt;https://ariscommunity.com/university/bpm-tutorials-aris&lt;/li&gt;
&lt;li&gt;https://s3-eu-west-1.amazonaws.com/arisexpress/community2/documents/urelation/BPM-ARIS_Part2.pdf&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tools"></category></entry><entry><title>半导体存储器术语小记</title><link href="https://blog.debao.me/2025/01/a-brief-note-on-semiconductor-memory-terminology/" rel="alternate"></link><published>2025-01-23T23:15:00+08:00</published><updated>2025-01-23T23:15:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2025-01-23:/2025/01/a-brief-note-on-semiconductor-memory-terminology/</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;术语&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nand-flash"&gt;NAND Flash&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_2"&gt;时间线&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#floating-gates-charge-traps"&gt;Floating Gates 与 Charge Traps&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#floating-gate"&gt;浮动栅（Floating Gate）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#charge-traps"&gt;电荷捕捉（Charge Traps）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#dram"&gt;DRAM&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_3"&gt;时间线&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#bit-line-word-line"&gt;Bit Line 与 Word Line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;术语&lt;/h2&gt;
&lt;p&gt;借助AI，先整个表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;术语&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;英文全称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;中 …&lt;/strong&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;/table&gt;</summary><content type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;术语&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nand-flash"&gt;NAND Flash&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_2"&gt;时间线&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#floating-gates-charge-traps"&gt;Floating Gates 与 Charge Traps&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#floating-gate"&gt;浮动栅（Floating Gate）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#charge-traps"&gt;电荷捕捉（Charge Traps）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#dram"&gt;DRAM&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_3"&gt;时间线&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#bit-line-word-line"&gt;Bit Line 与 Word Line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;术语&lt;/h2&gt;
&lt;p&gt;借助AI，先整个表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;术语&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;英文全称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;中文名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;备注&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;DRAM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Dynamic Random Access Memory&lt;/td&gt;
&lt;td&gt;动态随机存储器&lt;/td&gt;
&lt;td&gt;易失性，需刷新，速度快，容量大，常用于计算机主存（RAM）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SRAM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Static Random Access Memory&lt;/td&gt;
&lt;td&gt;静态随机存储器&lt;/td&gt;
&lt;td&gt;易失性，无需刷新，速度快但成本高，常用于 CPU 缓存（L1/L2/L3）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SDRAM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Synchronous Dynamic Random Access Memory&lt;/td&gt;
&lt;td&gt;同步动态随机存取存储器&lt;/td&gt;
&lt;td&gt;2000年，SDRAM已经取代了其他各种类型的DRAM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;NAND Flash&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;NAND Flash Memory&lt;/td&gt;
&lt;td&gt;NAND 闪存&lt;/td&gt;
&lt;td&gt;非易失性，存储密度高，成本低，常用于 U 盘、SSD、存储卡和手机存储。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;NOR Flash&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;NOR Flash Memory&lt;/td&gt;
&lt;td&gt;NOR 闪存&lt;/td&gt;
&lt;td&gt;非易失性，随机访问性能优异，常用于嵌入式系统固件（如 BIOS 芯片）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;3D NAND&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;3D NAND Flash&lt;/td&gt;
&lt;td&gt;三维堆叠式 NAND 闪存&lt;/td&gt;
&lt;td&gt;存储单元垂直堆叠，提升存储密度，降低成本，广泛用于现代 SSD 和存储卡中。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ROM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Read-Only Memory&lt;/td&gt;
&lt;td&gt;只读存储器&lt;/td&gt;
&lt;td&gt;非易失性，数据不可修改或仅可少量修改，常用于存储固件或不可变数据。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;PROM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Programmable Read-Only Memory&lt;/td&gt;
&lt;td&gt;可编程只读存储器&lt;/td&gt;
&lt;td&gt;一次性可编程的 ROM 类型。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;EPROM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Erasable Programmable Read-Only Memory&lt;/td&gt;
&lt;td&gt;可擦除可编程只读存储器&lt;/td&gt;
&lt;td&gt;可通过紫外光擦除数据后重新写入。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;EEPROM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Electrically Erasable Programmable ROM&lt;/td&gt;
&lt;td&gt;电可擦除可编程只读存储器&lt;/td&gt;
&lt;td&gt;数据通过电信号擦除和写入，常用于存储小量可修改数据。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SLC&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Single-Level Cell&lt;/td&gt;
&lt;td&gt;单层单元存储&lt;/td&gt;
&lt;td&gt;每存储单元存储 1 位数据，速度快、耐用性高、成本高，适合工业级和高性能存储应用。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;MLC&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Multi-Level Cell&lt;/td&gt;
&lt;td&gt;多层单元存储&lt;/td&gt;
&lt;td&gt;每存储单元存储 2 位数据，成本低于 SLC，耐用性和速度略低，适合消费级 SSD 和存储卡。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;TLC&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Triple-Level Cell&lt;/td&gt;
&lt;td&gt;三层单元存储&lt;/td&gt;
&lt;td&gt;每存储单元存储 3 位数据，成本更低，存储密度更高，适合大容量存储设备，如消费级 SSD 和 U 盘。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;QLC&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Quad-Level Cell&lt;/td&gt;
&lt;td&gt;四层单元存储&lt;/td&gt;
&lt;td&gt;每存储单元存储 4 位数据，成本最低，存储密度最高，但耐用性和速度较差，适合冷存储和大容量 SSD。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SD&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Secure Digital Card&lt;/td&gt;
&lt;td&gt;安全数码卡&lt;/td&gt;
&lt;td&gt;一种基于 NAND Flash 的存储卡，广泛用于相机、便携设备和嵌入式设备。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;TF&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;TransFlash&lt;/td&gt;
&lt;td&gt;微型存储卡&lt;/td&gt;
&lt;td&gt;又称 MicroSD 卡，比 SD 更小，常用于手机、无人机、智能设备扩展存储。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SSD&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Solid-State Drive&lt;/td&gt;
&lt;td&gt;固态硬盘&lt;/td&gt;
&lt;td&gt;基于 NAND Flash 的存储设备，速度快、无机械部件，广泛用于笔记本电脑和服务器。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;eMMC&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Embedded MultiMedia Card&lt;/td&gt;
&lt;td&gt;嵌入式多媒体卡&lt;/td&gt;
&lt;td&gt;内嵌式 NAND 存储，常用于手机、平板电脑等设备，成本低，性能一般。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;UFS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Universal Flash Storage&lt;/td&gt;
&lt;td&gt;通用闪存存储&lt;/td&gt;
&lt;td&gt;高性能嵌入式存储技术，比 eMMC 更快，常用于高端手机和平板设备。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;NVMe&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Non-Volatile Memory Express&lt;/td&gt;
&lt;td&gt;非易失性存储器主机控制器接口规范&lt;/td&gt;
&lt;td&gt;基于 PCIe 接口协议，专为高性能 SSD 设计，提供更高带宽和更低延迟。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ECC&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Error-Correcting Code&lt;/td&gt;
&lt;td&gt;纠错码&lt;/td&gt;
&lt;td&gt;检测并修正存储器中数据错误，常用于服务器和关键任务系统，提高数据可靠性。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;HBM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;High Bandwidth Memory&lt;/td&gt;
&lt;td&gt;高带宽存储器&lt;/td&gt;
&lt;td&gt;多层 DRAM 堆叠，高带宽低功耗，常用于高性能计算和 GPU。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;DDR&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Double Data Rate&lt;/td&gt;
&lt;td&gt;双倍数据速率存储器&lt;/td&gt;
&lt;td&gt;DRAM 的改进版，速度更快，演进版本：DDR → DDR2 → DDR3 → DDR4 → DDR5。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;LPDDR&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Low Power Double Data Rate&lt;/td&gt;
&lt;td&gt;低功耗双倍数据速率存储器&lt;/td&gt;
&lt;td&gt;DDR 的低功耗版本，专为移动设备设计，演进版本：LPDDR → LPDDR2 → LPDDR3 → LPDDR5。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SDR&lt;/td&gt;
&lt;td&gt;Single data rate&lt;/td&gt;
&lt;td&gt;单数据速率同步&lt;/td&gt;
&lt;td&gt;SDR SDRAM 是第一代 SDRAM。早已被 DDR 取代&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="nand-flash"&gt;NAND Flash&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Flash 存储器从 1980 年代的发明到如今的全面普及，经历了架构演进（NOR vs NAND）、存储单元技术优化（SLC → QLC）、以及制造工艺的突破（2D → 3D NAND）。还改变了存储设备的形态（如 U 盘、SSD）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_2"&gt;时间线&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;1980年：富士通（Fujitsu）的 Masuoka Fujio 提出 Flash Memory（闪存）概念。&lt;/li&gt;
&lt;li&gt;1988年：英特尔（Intel）推出首款商业化 NOR Flash，用于嵌入式代码存储。&lt;/li&gt;
&lt;li&gt;1989年：东芝（Toshiba）推出 NAND Flash，专注于高密度数据存储。&lt;/li&gt;
&lt;li&gt;1995年：CompactFlash (CF) 卡问世，基于 NAND Flash，进入消费市场。&lt;/li&gt;
&lt;li&gt;2000年：首款 USB Flash Drive（U盘）推出，推动 NAND Flash 的普及。&lt;/li&gt;
&lt;li&gt;2003年：第一款基于 NAND Flash 的 Solid-State Drive (SSD) 问世。&lt;/li&gt;
&lt;li&gt;2006年：Secure Digital (SD) 和 microSD 卡成为移动设备主要存储方式。&lt;/li&gt;
&lt;li&gt;2013年：三星（Samsung）推出 3D NAND 技术，存储单元实现垂直堆叠。&lt;/li&gt;
&lt;li&gt;2016年：3D NAND 成为主流，推动 SSD 容量提升、价格下降。&lt;/li&gt;
&lt;li&gt;2020年代：高层数 3D NAND（如 176 层）和 QLC (Quad-Level Cell) 技术逐步普及。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="floating-gates-charge-traps"&gt;Floating Gates 与 Charge Traps&lt;/h3&gt;
&lt;p&gt;&lt;img alt="ctf" src="https://blog.debao.me/images/semi/CTF-from-skhynix.webp"&gt;&lt;/p&gt;
&lt;h4 id="floating-gate"&gt;浮动栅（Floating Gate）&lt;/h4&gt;
&lt;p&gt;&lt;img alt="floating gate" src="https://blog.debao.me/images/semi/float-gate.png"&gt;&lt;/p&gt;
&lt;p&gt;浮动栅技术是 NAND Flash 的传统工作机制，它通过将电荷存储在一个&lt;strong&gt;隔离的浮动栅&lt;/strong&gt;中来表示数据的“0”或“1”。&lt;/p&gt;
&lt;p&gt;每个存储单元由一个金属氧化物半导体场效应晶体管（MOSFET）组成，其栅极区域包含两个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浮动栅（Floating Gate）：一个被完全绝缘的区域，用于存储电荷。&lt;/li&gt;
&lt;li&gt;控制栅（Control Gate）：负责控制浮动栅中的电荷状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;术语，写入 叫 Program：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编程（Program）：通过隧穿效应（Fowler-Nordheim Tunneling）或热电子注入，将电子注入到浮动栅中。浮动栅中是否存储了电荷决定存储单元的阈值电压（Vt）。&lt;/li&gt;
&lt;li&gt;擦除（Erase）：通过施加反向电压，使浮动栅中的电荷通过隧穿效应释放。&lt;/li&gt;
&lt;li&gt;读出（Read）：通过检测存储单元阈值电压，判断浮动栅中是否有电荷，从而确定存储的“0”或“1”。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="charge-traps"&gt;电荷捕捉（Charge Traps）&lt;/h4&gt;
&lt;p&gt;用一个电介质（通常是氮化硅层）代替传统的浮动栅，用于存储电荷。电荷被“捕获”在电介质中，而不是存储在完全绝缘的浮动栅中。&lt;/p&gt;
&lt;h2 id="dram"&gt;DRAM&lt;/h2&gt;
&lt;p&gt;罗伯特·丹纳德 （Robert Dennard）申请了MOS存储器的专利：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Each cell is formed, in one embodiment, using a single field-effect transistor and a single capacitor."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_3"&gt;时间线&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;1966年：IBM 的 Robert Dennard 发明 DRAM 技术。&lt;/li&gt;
&lt;li&gt;1970年：英特尔推出首款商用 DRAM 芯片 Intel 1103（1Kb）。&lt;/li&gt;
&lt;li&gt;1973年：Mostek 开发地址复用技术，降低 DRAM 成本。&lt;/li&gt;
&lt;li&gt;1980年代：1Mbit DRAM 芯片问世，日本厂商主导市场。&lt;/li&gt;
&lt;li&gt;1993年：三星推出 SDRAM，实现与处理器同步运行。&lt;/li&gt;
&lt;li&gt;1998年：DDR SDRAM 标准化，每时钟周期传输两次数据。&lt;/li&gt;
&lt;li&gt;2003年：DDR2 推出，功耗更低，频率更高。&lt;/li&gt;
&lt;li&gt;2007年：DDR3 推出，支持更高容量和频率，成为主流内存。&lt;/li&gt;
&lt;li&gt;2014年：DDR4 推出，提供更高带宽、更低功耗。&lt;/li&gt;
&lt;li&gt;2020年：DDR5 推出，满足 AI、大数据高带宽需求。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="bit-line-word-line"&gt;Bit Line 与 Word Line&lt;/h2&gt;
&lt;p&gt;在存储器（如 DRAM 和 NAND Flash）的架构中，Bit Line 和 Word Line 是两种核心的互连线，负责控制和访问存储单元.&lt;/p&gt;
&lt;p&gt;Bit Line 和 Word Line 在存储阵列中交叉，每个交叉点对应一个存储单元。Word Line负责选中 负责选择存储单元；Bit Line 负责传输存储单元的数据。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DRAM：&lt;ul&gt;
&lt;li&gt;Word Line：控制存储单元（电容+晶体管）的晶体管栅极，选择行。&lt;/li&gt;
&lt;li&gt;Bit Line：传输存储单元电容中的电荷，进行数据读写。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NAND Flash：&lt;ul&gt;
&lt;li&gt;Word Line：控制浮动栅晶体管的栅极，选择多个存储单元组成的页（Page）。&lt;/li&gt;
&lt;li&gt;Bit Line：传输数据到存储单元或从存储单元读取数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_4"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Dynamic_random-access_memory&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Flash_memory&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Charge_trap_flash&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Floating-gate_MOSFET&lt;/li&gt;
&lt;/ul&gt;</content><category term="Science"></category></entry><entry><title>亦庄、经开区、亦庄新城备忘</title><link href="https://blog.debao.me/2025/01/notes-on-yizhuang-bda-and-e-town/" rel="alternate"></link><published>2025-01-21T00:11:00+08:00</published><updated>2025-01-21T00:11:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2025-01-21:/2025/01/notes-on-yizhuang-bda-and-e-town/</id><summary type="html">&lt;p&gt;发现，亦庄是什么，想说清楚真的很难。或许，只需要先分清：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 经开区：孩子上学，经开区管委会管&lt;/li&gt;
&lt;li&gt;在 亦庄新城 但不在经开区：部 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;发现，亦庄是什么，想说清楚真的很难。或许，只需要先分清：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 经开区：孩子上学，经开区管委会管&lt;/li&gt;
&lt;li&gt;在 亦庄新城 但不在经开区：部分事务归管委会管，但孩子上学，由大兴区或通州区管理&lt;/li&gt;
&lt;li&gt;在 2街8镇，但不在亦庄新城：完全不归管委会管&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不用纠结哪个镇，这地方管理权限都不是按照街镇边界划分的&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#bdae-town"&gt;开发区（BDA）、亦庄新城（E-Town）、亦庄镇（地区）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;亦庄新城行政区划&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#28"&gt;2街8镇&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;经开区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="bdae-town"&gt;开发区（BDA）、亦庄新城（E-Town）、亦庄镇（地区）&lt;/h2&gt;
&lt;p&gt;先摘录一下 京政发〔2019〕23号 中的一段话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由经开区管委会在 &lt;strong&gt;亦庄新城(约225平方公里)&lt;/strong&gt; 区域内行使2509项行政权力，其中市级163项、
区级2346项；办理17项公共服务事项，其中市级2项、区级15项(详见附件)。&lt;/p&gt;
&lt;p&gt;由经开区管委会在 &lt;strong&gt;经开区(约60平方公里)&lt;/strong&gt; 规划范围内行使 &lt;strong&gt;区级&lt;/strong&gt; 人民政府行使的职权。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;亦庄开发区（约60平方公里），正式名字 北京经济技术开发区开发区，简称 经开区，英文缩写 BDA（也叫 博大）。&lt;/li&gt;
&lt;li&gt;亦庄新城（约225平方公里），英文E-Town，也叫 北京亦庄，包含：&lt;ul&gt;
&lt;li&gt;经开区   --&amp;gt; 管委会直管&lt;/li&gt;
&lt;li&gt;亦庄新城大兴部分 --&amp;gt; 管委会和大兴区共管&lt;/li&gt;
&lt;li&gt;亦庄新城通州部分 --&amp;gt; 管委会和通州区共管&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;亦庄镇（地区），大兴区的一个乡镇&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;找张图放上&lt;/p&gt;
&lt;p&gt;&lt;img alt="core" src="https://blog.debao.me/images/geo/etown-core.jpg"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;亦庄新城的 核心单元 就是 经开区。&lt;/li&gt;
&lt;li&gt;经开区 自身四个片区&lt;ul&gt;
&lt;li&gt;核心区&lt;/li&gt;
&lt;li&gt;河西区&lt;/li&gt;
&lt;li&gt;路东区&lt;/li&gt;
&lt;li&gt;路南区&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看起来很乱，其实细究起来，更乱...&lt;/p&gt;
&lt;h2 id="_1"&gt;亦庄新城行政区划&lt;/h2&gt;
&lt;p&gt;先看看官方的行政区划：注意看亦庄新城涉及到 &lt;strong&gt;2街8镇&lt;/strong&gt;，分属两个区，图中蓝色实线是大兴区和通州区的分界线&lt;/p&gt;
&lt;p&gt;&lt;img alt="etown" src="https://blog.debao.me/images/geo/etown20172035.jpg"&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;粉色虚线包围的区域，经开区（约60平方公里）&lt;/li&gt;
&lt;li&gt;红色虚线包围的区域，亦庄新城（约225平方公里）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="28"&gt;2街8镇&lt;/h3&gt;
&lt;p&gt;亦庄新城涉及到的2街8镇具体包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;北京市大兴区 荣华街道&lt;/li&gt;
&lt;li&gt;北京市大兴区 博兴街道&lt;/li&gt;
&lt;li&gt;北京市大兴区 &lt;strong&gt;亦庄地区&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;北京市大兴区 瀛海地区&lt;/li&gt;
&lt;li&gt;北京市大兴区 旧宫镇&lt;/li&gt;
&lt;li&gt;北京市大兴区 青云店镇&lt;/li&gt;
&lt;li&gt;北京市大兴区 长子营镇&lt;/li&gt;
&lt;li&gt;北京市大兴区 采育镇&lt;/li&gt;
&lt;li&gt;北京市通州区 马驹桥镇&lt;/li&gt;
&lt;li&gt;北京市通州区 台湖镇&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;荣华街道和博兴街道 经开区的亲儿子，设立于2014年（名义上属于大兴区）&lt;/li&gt;
&lt;li&gt;2019年经开区曾提到研究设立另一个亲儿子 &lt;strong&gt;经海街道&lt;/strong&gt;。2022年还在推进，但最近似乎不提了。&lt;/li&gt;
&lt;li&gt;博兴街道 目前代管经开区的路东区。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以注意到：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;亦庄地区（镇），被荣华街道一分为二&lt;/li&gt;
&lt;li&gt;瀛海地区（镇），被博兴街道一分为二&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;经开区&lt;/h2&gt;
&lt;p&gt;简单捋一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1992年：亦庄工业开发区建设启动。&lt;/li&gt;
&lt;li&gt;1991年：市政府批准成立北京市亦庄工业小区，规划面积15平方公里。&lt;/li&gt;
&lt;li&gt;1994年：经国务院批复成为国家级经济技术开发区。规划面积 10 平方公里（缩了？）。&lt;/li&gt;
&lt;li&gt;2002年：国务院批准在一期规划面积基础上扩区24平方公里。&lt;/li&gt;
&lt;li&gt;2010年：开发区与大兴区行政资源整合，开发区开发和管理亦庄新城范围内大兴区12平方公里产业和配套用地。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;好吧，还是算不出来当前 经开区的 60 平方公里怎么来的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;开发区面积约66平方公里（功能区范围约60平方公里）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下图是1996年《北京经济技术开发区总体规划》划定功能分区示意图&lt;/p&gt;
&lt;p&gt;&lt;img alt="90" src="https://blog.debao.me/images/geo/etown-bda-90.jpg"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;东至京津塘高速公路，西至西环路，南至凉水河，北至北环路。规划面积为１０平方公里，起步面积为１平方公里。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_3"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://xinwen.bjd.com.cn/content/s60efc039e4b003a0f66bb856.html"&gt;北京经济技术开发区——未来新城的历史沿革&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.beijing.gov.cn/zhengce/zfwj/zfwj/bgtwj/201905/t20190523_73995.html"&gt;北京市人民政府办公厅关于北京市 亦庄工业开发区管理委员会、北京市 亦兴投资开发总公司更名的通知 京政办发〔1992〕46号&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gov.cn/xxgk/pub/govpublic/mrlm/201012/t20101203_63057.html"&gt;国务院关于设立北京经济技术开发区的批复 国函〔1994〕89号&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.beijing.gov.cn/zhengce/zfwj/zfwj/szfwj/201905/t20190523_72258.html"&gt;北京市人民政府关于北京经济技术开发区扩大发展用地的通知 京政发[2003]10号&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.beijing.gov.cn/zhengce/gfxwj/202001/t20200123_1620940.html"&gt;北京市人民政府关于由北京经济技术开发区管理委员会行使部分行政权力和办理部分公共服务事项的决定 京政发〔2019〕23号&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://news.sina.com.cn/o/2022-08-11/doc-imizirav7697344.shtml"&gt;发现亦庄，小红楼：北京经开区梦想起航的地方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kfqgw.beijing.gov.cn/zwgkkfq/ghjh/zfgzbg/202103/t20210330_2336744.html"&gt;北京经济技术开发区管委会2019年度工作报告&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Legal"></category></entry><entry><title>FreeCAD学习小记（二）</title><link href="https://blog.debao.me/2025/01/freecad-learning-notes-2/" rel="alternate"></link><published>2025-01-12T20:36:00+08:00</published><updated>2025-01-12T20:36:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2025-01-12:/2025/01/freecad-learning-notes-2/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="{filename}freecad-learning-notes-1.md"&gt;FreeCAD学习小记（一）&lt;/a&gt;，继续看看 FreeCAD 的python接口 与 PySide&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#pyside"&gt;PySide 走马观花&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#aboutqt"&gt;控制台下调出 aboutQt 对话框&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gui-app"&gt;Gui 和 App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;修改主窗口&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#workbench"&gt;添加自定义控制台（Workbench）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#freecad-freecadcmd"&gt;freecad 与 freecadcmd&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#freecadcmd"&gt;freecadcmd …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="{filename}freecad-learning-notes-1.md"&gt;FreeCAD学习小记（一）&lt;/a&gt;，继续看看 FreeCAD 的python接口 与 PySide&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#pyside"&gt;PySide 走马观花&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#aboutqt"&gt;控制台下调出 aboutQt 对话框&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gui-app"&gt;Gui 和 App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;修改主窗口&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#workbench"&gt;添加自定义控制台（Workbench）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#freecad-freecadcmd"&gt;freecad 与 freecadcmd&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#freecadcmd"&gt;freecadcmd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#api"&gt;API文档&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#app"&gt;APP 模块&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#document"&gt;Document 类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentobject"&gt;DocumentObject 类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#expressions-framework"&gt;Expressions Framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#gui"&gt;Gui 模块&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#gui-document"&gt;GUI Document&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#objects"&gt;Objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#view"&gt;View 视图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#command-framework"&gt;Command Framework?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#workbench_1"&gt;workbench&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="pyside"&gt;PySide 走马观花&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;FreeCAD 早期使用 PyQt，2013年换成了 PySide，而后随着Qt5升级到PySide2，现在源码中已经适配到了PySide6。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;FreeCAD 深度使用 Qt 和 PySide。FreeCAD 1.0 在 Windows下安装包使用的是 Qt 5.15.15和PySide2 5.15.15。&lt;/p&gt;
&lt;h3 id="aboutqt"&gt;控制台下调出 aboutQt 对话框&lt;/h3&gt;
&lt;p&gt;FreeCAD 提供了一个 Python 控制台，在该控制台下，我们可以直接输如python和pyside代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PySide2.QtWidgets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QMessageBox&lt;/span&gt;
&lt;span class="n"&gt;QMessageBox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;aboutQt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Gui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getMainWindow&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1+1=10&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;两行代码，即可调用Qt的关于对话框，显示效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="console" src="https://blog.debao.me/images/simu/freecad-console-pyside.png"&gt;&lt;/p&gt;
&lt;p&gt;注意，代码中我们调用了 FreeCAD 的 &lt;code&gt;Gui&lt;/code&gt; 模块，以获取当前的主窗口。当然，此处简单传入一个None也是可以的。&lt;/p&gt;
&lt;p&gt;注意，为了兼容PySide、PySide2、PySide6，FreeCAD做了如下变换：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;PySide2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PySide&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QtCore&lt;/span&gt;
&lt;span class="n"&gt;PySide2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PySide&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QtGui&lt;/span&gt;
&lt;span class="n"&gt;PySide2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QtSvg&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PySide&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QtSvg&lt;/span&gt;
&lt;span class="n"&gt;PySide2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QtUiTools&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PySide&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QtUiTools&lt;/span&gt;

&lt;span class="n"&gt;PySide2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QtWidgets&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PySide&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QtGui&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;所以上面的代码，可以写作（建议写成？）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PySide.QtGui&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QMessageBox&lt;/span&gt;
&lt;span class="n"&gt;QMessageBox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;aboutQt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Gui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getMainWindow&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1+1=10&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;除了在控制台下面直接输入，我们还可以将其保存到文件（一个名为 .FCMacro 文件），而后通过 菜单中的 &lt;code&gt;宏&lt;/code&gt; 来执行它。&lt;/p&gt;
&lt;p&gt;&lt;img alt="macro aboutQt" src="https://blog.debao.me/images/simu/freecad-macro-pyside.png"&gt;&lt;/p&gt;
&lt;h3 id="gui-app"&gt;Gui 和 App&lt;/h3&gt;
&lt;p&gt;这两个兄弟是 FreeCADGui 和 FreeCAD 的别名，控制台下容易验证它：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;Gui
&amp;lt;module&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;FreeCADGui&amp;#39;&lt;/span&gt;&amp;gt;
&amp;gt;&amp;gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;App
&amp;lt;module&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;FreeCAD&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;built-in&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt;
&amp;gt;&amp;gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;FreeCAD.Gui
&amp;lt;module&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;FreeCADGui&amp;#39;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;另外，可以看出 FreeCAD.Gui 也是 FreeCADGui的别名。这些别名是在什么位置取的？我们可以从源码中找到...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在源码文件 &lt;code&gt;FreeCAD/src/Gui/FreeCADGuiInit.py&lt;/code&gt;中，有：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# shortcuts&lt;/span&gt;
&lt;span class="n"&gt;Gui&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FreeCADGui&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;和&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# init the gui&lt;/span&gt;

&lt;span class="c1"&gt;# signal that the gui is up&lt;/span&gt;
&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GuiUp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Gui&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FreeCADGui&lt;/span&gt;
&lt;span class="n"&gt;FreeCADGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Workbench&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Workbench&lt;/span&gt;

&lt;span class="n"&gt;Gui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addWorkbench&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NoneWorkbench&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="c1"&gt;# init modules&lt;/span&gt;
&lt;span class="n"&gt;InitApplications&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# set standard workbench (needed as fallback)&lt;/span&gt;
&lt;span class="n"&gt;Gui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;activateWorkbench&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NoneWorkbench&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在源码 &lt;code&gt;FreeCAD/src/App/FreeCADInit.py&lt;/code&gt; 中，可以看到：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# some often used shortcuts (for lazy people like me  ;-)&lt;/span&gt;
&lt;span class="n"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FreeCAD&lt;/span&gt;
&lt;span class="n"&gt;Log&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FreeCAD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PrintLog&lt;/span&gt;
&lt;span class="n"&gt;Msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FreeCAD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PrintMessage&lt;/span&gt;
&lt;span class="n"&gt;Err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FreeCAD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PrintError&lt;/span&gt;
&lt;span class="n"&gt;Wrn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FreeCAD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PrintWarning&lt;/span&gt;
&lt;span class="n"&gt;Crt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FreeCAD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PrintCritical&lt;/span&gt;
&lt;span class="n"&gt;Ntf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FreeCAD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PrintNotification&lt;/span&gt;
&lt;span class="n"&gt;Tnf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FreeCAD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PrintTranslatedNotification&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_1"&gt;修改主窗口&lt;/h3&gt;
&lt;p&gt;上面的例子中通过Gui可以获得主窗口对象，根据PySide的经验，借助它，我们可以做试着做些简单的事情&lt;/p&gt;
&lt;p&gt;控制窗口全屏显示或正常显示&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Gui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getMainWindow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showFullScreen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;Gui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getMainWindow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showNormal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;改变标题&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Gui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getMainWindow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setWindowTitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello 1+1=10&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;也可以直接放置一个停靠窗口&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PySide.QtCore&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Qt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PySide&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;
&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QDockWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello Dock&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QLabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1+1=10&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;mw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Gui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getMainWindow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addDockWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Qt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LeftDockWidgetArea&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="dock widget" src="https://blog.debao.me/images/simu/freecad-dockwidget.png"&gt;&lt;/p&gt;
&lt;h3 id="workbench"&gt;添加自定义控制台（Workbench）&lt;/h3&gt;
&lt;p&gt;先找找感觉，添加自定义控制台&lt;code&gt;Hello 1+1=10&lt;/code&gt;，并增加一个自定义的菜单，对应代码如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Workbench&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MenuText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello 1+1=10&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;Gui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addWorkbench&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Std_Test1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Std_Test2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Std_Test3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;appendMenu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="workbench" src="https://blog.debao.me/images/simu/freecad-custom_workbench.png"&gt;&lt;/p&gt;
&lt;p&gt;对界面的所有操作，都在Gui模块中。&lt;/p&gt;
&lt;h2 id="freecad-freecadcmd"&gt;freecad 与 freecadcmd&lt;/h2&gt;
&lt;p&gt;FreeCAD 有两个可执行程序&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;freecad：界面程序&lt;/li&gt;
&lt;li&gt;freecadcmd：命令行程序&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前者是常用的主程序，源码的入口文件在：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;src/Main/MainGui.cpp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;后者是一个全功能的命令行程序，入口文件位于：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;src/Main/MainCmd.cpp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;简单看一下后者&lt;/p&gt;
&lt;h3 id="freecadcmd"&gt;freecadcmd&lt;/h3&gt;
&lt;p&gt;FreeCADCmd 是 FreeCAD 的命令行模式（无图形界面模式），主要用于在没有图形用户界面（GUI）的情况下运行 FreeCAD 脚本、执行自动化任务、或者处理 CAD 文件。它适用于服务器环境、后台任务或只需要 FreeCAD 核心功能的场景。&lt;/p&gt;
&lt;p&gt;直接运行起来之后，它直接就是一个python命令行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;PS &lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="p"&gt;:\&lt;/span&gt;&lt;span class="n"&gt;Program&lt;/span&gt; &lt;span class="n"&gt;Files&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;FreeCAD&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;./&lt;/span&gt;&lt;span class="n"&gt;freecadcmd&lt;/span&gt;
&lt;span class="n"&gt;FreeCAD&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Libs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;0R39109&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Git&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;2001&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;2024&lt;/span&gt; &lt;span class="n"&gt;FreeCAD&lt;/span&gt; &lt;span class="n"&gt;contributors&lt;/span&gt;
&lt;span class="n"&gt;FreeCAD&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;free&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;open-source&lt;/span&gt; &lt;span class="n"&gt;software&lt;/span&gt; &lt;span class="n"&gt;licensed&lt;/span&gt; &lt;span class="n"&gt;under&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;terms&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;LGPL2&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;license&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;FreeCAD&lt;/span&gt; &lt;span class="n"&gt;Console&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="n"&gt;Ctrl-Z&lt;/span&gt; &lt;span class="n"&gt;plus&lt;/span&gt; &lt;span class="k"&gt;Return&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;.&amp;gt;]&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ActiveDocument&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Axis&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Base&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BoundBox&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ConfigDump&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ConfigGet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ConfigSet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Console&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Document&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DocumentObject&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DocumentObjectExtension&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DocumentObjectGroup&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Extension&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ExtensionContainer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GeoFeature&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GeoFeatureGroupExtension&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GroupExtension&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GuiUp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;LinkBaseExtension&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Logger&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Material&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Matrix&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;MeasureManager&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Metadata&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;OriginGroupExtension&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ParamGet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Placement&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;PropertyContainer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;PropertyType&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Qt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ReturnType&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Rotation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ScaleType&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;StringHasher&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;StringID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Units&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Vector&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__ModDirs__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__cmake__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__doc__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__loader__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__name__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__package__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__path__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__spec__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__unit_test__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;_importFromFreeCAD&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;activeDocument&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;addDocumentObserver&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;addExportType&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;addImportType&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;changeExportModule&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;changeImportModule&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;checkAbort&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;checkLinkDepth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;closeActiveTransaction&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;closeDocument&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;getActiveTransaction&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;getDependentObjects&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;getDocument&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;getExportType&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;getHelpDir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;getHomePath&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;getImportType&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;getLibraryDir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;getLinksTo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;getLogLevel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;getResourceDir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;getTempPath&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;getUserAppDataDir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;getUserCachePath&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;getUserConfigDir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;getUserMacroDir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;isRestoring&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;listDocuments&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;loadFile&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;newDocument&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;open&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;openDocument&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;removeDocumentObserver&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;saveParameter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;setActiveDocument&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;setActiveTransaction&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;setLogLevel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在这个界面下，可以绘制一个立方体（操作的核心类是 document）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;./&lt;/span&gt;&lt;span class="n"&gt;freecadcmd&lt;/span&gt;
&lt;span class="n"&gt;FreeCAD&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Libs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;0R39109&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Git&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;2001&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;2024&lt;/span&gt; &lt;span class="n"&gt;FreeCAD&lt;/span&gt; &lt;span class="n"&gt;contributors&lt;/span&gt;
&lt;span class="n"&gt;FreeCAD&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;free&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;open-source&lt;/span&gt; &lt;span class="n"&gt;software&lt;/span&gt; &lt;span class="n"&gt;licensed&lt;/span&gt; &lt;span class="n"&gt;under&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;terms&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;LGPL2&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;license&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;FreeCAD&lt;/span&gt; &lt;span class="n"&gt;Console&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="n"&gt;Ctrl-Z&lt;/span&gt; &lt;span class="n"&gt;plus&lt;/span&gt; &lt;span class="k"&gt;Return&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;.&amp;gt;]&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Part::Box&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Box&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;10&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Width&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;10&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Height&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;10&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;saveAs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;test.FCStd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;还可以先写一个python脚本 &lt;code&gt;mytest.py&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TestDoc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Part::Box&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Box&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;saveAs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;test.FCStd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;而后直接执行它：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;freecadcmd mytest.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="api"&gt;API文档&lt;/h2&gt;
&lt;p&gt;似乎很不完整&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://freecad.github.io/SourceDoc/modules.html&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="app"&gt;APP 模块&lt;/h3&gt;
&lt;h4 id="document"&gt;Document 类&lt;/h4&gt;
&lt;p&gt;Document 是 FreeCAD 数据结构的顶层容器，代表一个 FreeCAD 项目或文件（通常以 .FCStd 格式保存）。它是一个逻辑上的工作空间，包含了所有的建模对象、参数、视图信息等。&lt;/p&gt;
&lt;p&gt;每个 FreeCAD 文档都可以包含多个对象（DocumentObject），这些对象构成了文档的内容，例如几何体、草图、装配体等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;管理和组织 DocumentObject。&lt;/li&gt;
&lt;li&gt;提供文件的保存、加载和重新计算功能。&lt;/li&gt;
&lt;li&gt;允许通过脚本访问和操作项目中的所有对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;doc.addObject(type, name) - 向文档添加一个新对象。&lt;/li&gt;
&lt;li&gt;doc.getObject(name) - 根据名称获取对象。&lt;/li&gt;
&lt;li&gt;doc.removeObject(name) - 删除指定名称的对象。&lt;/li&gt;
&lt;li&gt;doc.recompute() - 重新计算文档中的所有对象。&lt;/li&gt;
&lt;li&gt;doc.saveAs(filename) - 保存文档到指定路径。&lt;/li&gt;
&lt;li&gt;doc.save() - 保存文档（覆盖当前路径）。&lt;/li&gt;
&lt;li&gt;doc.Label - 获取或设置文档的标签。&lt;/li&gt;
&lt;li&gt;doc.Objects - 返回文档中所有对象的列表。&lt;/li&gt;
&lt;li&gt;doc.getObjectsByLabel(label) - 根据标签获取对象。&lt;/li&gt;
&lt;li&gt;doc.getDependentDocuments(objName) - 获取指定对象的依赖关系。&lt;/li&gt;
&lt;li&gt;doc.undo() - 撤销上一步操作。&lt;/li&gt;
&lt;li&gt;doc.redo() - 重做上一步操作。&lt;/li&gt;
&lt;li&gt;doc.clear() - 清空文档中的所有内容。&lt;/li&gt;
&lt;li&gt;doc.isModified() - 检查文档是否已被修改。&lt;/li&gt;
&lt;li&gt;doc.FileName - 返回文档的文件路径。&lt;/li&gt;
&lt;li&gt;doc.ActiveObject - 当前活动的对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="documentobject"&gt;DocumentObject 类&lt;/h4&gt;
&lt;p&gt;DocumentObject 是 Document 中包含的实际对象，每个对象代表具体的建模元素或功能，例如一个立方体、草图、约束、几何体等。&lt;/p&gt;
&lt;p&gt;DocumentObject 是 FreeCAD 的核心建模单位，所有的几何体、关系和属性都存储在这些对象中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定义具体的建模元素（如立方体、球体、草图等）。&lt;/li&gt;
&lt;li&gt;提供对象的属性（如形状、尺寸、位置等）。&lt;/li&gt;
&lt;li&gt;支持对象之间的关联和依赖关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一些接口：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;obj.Name - 对象的唯一标识名称。&lt;/li&gt;
&lt;li&gt;obj.Label - 对象的标签（可用于显示）。&lt;/li&gt;
&lt;li&gt;obj.TypeId - 对象的类型（如 Part::Box）。&lt;/li&gt;
&lt;li&gt;obj.Shape - 获取对象的几何形状（如立方体的形状）。&lt;/li&gt;
&lt;li&gt;obj.Placement - 获取或设置对象的位置和方向。&lt;/li&gt;
&lt;li&gt;obj.ViewObject - 控制对象的显示属性（颜色、透明度等）。&lt;/li&gt;
&lt;li&gt;obj.Visibility - 设置对象是否可见。&lt;/li&gt;
&lt;li&gt;obj.touch() - 标记对象为已修改（需要重新计算）。&lt;/li&gt;
&lt;li&gt;obj.recompute() - 重新计算对象。&lt;/li&gt;
&lt;li&gt;obj.getLinkedObject() - 获取与对象链接在一起的对象。&lt;/li&gt;
&lt;li&gt;obj.Document - 获取对象所属的文档。&lt;/li&gt;
&lt;li&gt;obj.getParentGeoFeatureGroup() - 获取对象所在的父组。&lt;/li&gt;
&lt;li&gt;obj.isDerivedFrom(type) - 检查对象是否派生自某类型。&lt;/li&gt;
&lt;li&gt;obj.PropertiesList - 返回对象的所有属性。&lt;/li&gt;
&lt;li&gt;obj.getPropertyByName(name) - 根据属性名称获取值。&lt;/li&gt;
&lt;li&gt;obj.addObject(type, name) - 添加子对象。&lt;/li&gt;
&lt;li&gt;obj.removeObject(name) - 删除子对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="expressions-framework"&gt;Expressions Framework&lt;/h4&gt;
&lt;p&gt;FreeCAD 自己实现了一个功能模块。尽管它使用 Python 的语法和表达式风格，但它是专门为 FreeCAD 的参数化建模功能设计的，并深度集成到了 FreeCAD 的属性管理和文档系统中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# App.setActiveDocument(&amp;quot;Hello&amp;quot;)&lt;/span&gt;
&lt;span class="c1"&gt;# App.ActiveDocument=App.getDocument(&amp;quot;Hello&amp;quot;)&lt;/span&gt;
&lt;span class="c1"&gt;# Gui.ActiveDocument=Gui.getDocument(&amp;quot;Hello&amp;quot;)&lt;/span&gt;
&lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Part::Box&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MyCube&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;  &lt;span class="c1"&gt;# set to 100 mm&lt;/span&gt;
&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setExpression&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Width&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Length *2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setExpression&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Height&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Width / 2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recompute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;支持单位，所以可以：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2 in&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recompute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;核心依赖于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Property 系统：管理对象的属性，支持绑定表达式并动态计算值。&lt;/li&gt;
&lt;li&gt;Expression Evaluator：解析表达式，计算属性值。建立属性之间的依赖关系，确保重计算时值的正确性。&lt;/li&gt;
&lt;li&gt;Unit Framework：处理单位并确保单位一致性。支持物理单位（如 mm, in, deg）的自动转换。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="gui"&gt;Gui 模块&lt;/h3&gt;
&lt;p&gt;FreeCADGui（即Gui）是 FreeCAD 中的图形用户界面模块，用于管理和操作 FreeCAD 的 GUI（图形用户界面）部分。&lt;/p&gt;
&lt;p&gt;它与 FreeCAD 核心模块（即App模块）不同，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FreeCAD 主要用于后台建模和管理文档数据，而 &lt;/li&gt;
&lt;li&gt;FreeCADGui 则负责与用户交互的可视化相关内容，例如 3D 视图、工具栏、任务面板、属性编辑等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="gui-document"&gt;GUI Document&lt;/h4&gt;
&lt;p&gt;GUI Document 是一个与普通文档（Document）相对应的图形用户界面表示。它由 FreeCAD 的 FreeCADGui.ActiveDocument 管理，负责处理文档中的对象如何在 FreeCAD 的图形界面（如 3D 视图、任务面板、属性面板等）中显示和交互。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Gui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ActiveDocument&lt;/span&gt;
&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Gui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;activeDocument&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="objects"&gt;Objects&lt;/h4&gt;
&lt;p&gt;和App中的DocumentObject对应，GUI中提供显示支持。&lt;/p&gt;
&lt;p&gt;获取当前对象：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Gui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ActiveDocument&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;activeObject&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ShapeColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;获取指定名称对象&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Gui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ActiveDocument&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MyCube&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;获取顶层对象列表&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;root_objects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Gui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ActiveDocument&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TreeRootObjects&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="view"&gt;View 视图&lt;/h4&gt;
&lt;p&gt;获取视图&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Gui.ActiveDocument.ActiveView
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;设置视角（如顶部视图、正视图、轴测视图等）。&lt;/li&gt;
&lt;li&gt;调整视图（如缩放、平移、适应所有对象）。&lt;/li&gt;
&lt;li&gt;获取鼠标及屏幕坐标信息。&lt;/li&gt;
&lt;li&gt;捕获当前视图为图像。&lt;/li&gt;
&lt;li&gt;获取用户交互信息（如鼠标点击位置）。&lt;/li&gt;
&lt;li&gt;实时控制相机和视图参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Gui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ActiveDocument&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ActiveView&lt;/span&gt;

&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;viewTop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;viewBottom&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;viewFront&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;viewAxometric&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="command-framework"&gt;Command Framework?&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Qt Creator 内部似乎也实现了类似的 Command 框架。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Qt中菜单项和工具按钮，都是QAction，在FreeCAD中，为了让QAction和workbench等模组解耦，它定义了一套所谓的命令框架（Command Framework）。&lt;/p&gt;
&lt;p&gt;在C++下，Open命令定义如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;OpenCommand&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Command&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;OpenCommand&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Std_Open&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// set up menu text, status tip, ...&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;sMenuText&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;amp;Open&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;sToolTipText&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Open a file&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;sWhatsThis&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Open a file&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;sStatusTip&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Open a file&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;sPixmap&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Open&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// name of a registered pixmap&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;sAccel&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Shift+P&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// or &amp;quot;P&amp;quot; or &amp;quot;P, L&amp;quot; or &amp;quot;Ctrl+X, Ctrl+C&amp;quot; for a sequence&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;protected&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;activated&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;QString&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// make a filter of all supported file formats&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;QStringList&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FileList&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;QFileDialog&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;getOpenFileNames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;QString&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;getMainWindow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;QStringList&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Iterator&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FileList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FileList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;getGuiApplication&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;latin1&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="workbench_1"&gt;workbench&lt;/h4&gt;
&lt;p&gt;Workbench 主要配置菜单栏、工具栏、命令、停靠窗口&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;setupMenuBar()&lt;/li&gt;
&lt;li&gt;setupToolBars()&lt;/li&gt;
&lt;li&gt;setupCommandBars()&lt;/li&gt;
&lt;li&gt;setupDockWindows()&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://wiki.freecad.org/PySide&lt;/li&gt;
&lt;li&gt;https://freecad.github.io/SourceDoc/modules.html&lt;/li&gt;
&lt;li&gt;https://github.com/FreeCAD/FreeCAD&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/FreeCAD/FreeCAD-library&lt;/li&gt;
&lt;li&gt;https://github.com/shaise/FreeCAD_FastenersWB&lt;/li&gt;
&lt;li&gt;https://github.com/boltsparts/boltsparts&lt;/li&gt;
&lt;/ul&gt;</content><category term="CAx"></category><category term="Python"></category><category term="pyside"></category></entry><entry><title>37号文是个啥？</title><link href="https://blog.debao.me/2025/01/what-is-document-no.-37/" rel="alternate"></link><published>2025-01-09T10:03:00+08:00</published><updated>2025-01-09T10:03:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2025-01-09:/2025/01/what-is-document-no.-37/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;简单了解一些基本概念&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="37"&gt;37号文？&lt;/h2&gt;
&lt;p&gt;37号文指代 汇发〔2014〕37号，全称《国家外汇管理局关于境内居民通过特殊目的公司境外投融资及返程投资外 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;简单了解一些基本概念&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="37"&gt;37号文？&lt;/h2&gt;
&lt;p&gt;37号文指代 汇发〔2014〕37号，全称《国家外汇管理局关于境内居民通过特殊目的公司境外投融资及返程投资外汇管理有关问题的通知》&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;37号文生效时，废止了75号文。75号文指代 汇发〔2005〕75号，全称《国家外汇管理局关于境内居民通过境外特殊目的公司融资及返程投资外汇管理有关问题的通知》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;主要涉及如下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;外汇登记&lt;/strong&gt;：境内居民通过 SPV 进行境外投融资和返程投资，需依法完成外汇登记。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;资金汇兑&lt;/strong&gt;：需在完成外汇登记后，经合规银行渠道进行资金汇兑。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;资金使用&lt;/strong&gt;：资金用途必须符合国家外汇管理政策，不得用于非法或违规活动。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;返程投资&lt;/strong&gt;：需符合外商直接投资的法律法规要求，并完成外汇登记和备案。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;监管与处罚&lt;/strong&gt;：外汇局对不合规行为进行监管和处罚。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;术语&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SPV&lt;/strong&gt;（特殊目的公司）: Special Purpose Vehicle - &lt;strong&gt;境内居民&lt;/strong&gt; 以投融资为目的，在境外直接设立或间接控制的 &lt;strong&gt;境外企业&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VIE&lt;/strong&gt;（可变利益实体，协议控制）: Variable Interest Entity - 通过协议控制境内公司，常用于规避外资准入限制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JV&lt;/strong&gt;（合资企业）: Joint Venture - 由多方共同出资设立的企业，各方按比例分享利润和承担风险。外商和境内的合资。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WFOE&lt;/strong&gt;（外商独资企业）: Wholly Foreign-Owned Enterprise - 完全由外资设立的企业，无中方股东参与。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OPCO&lt;/strong&gt;（境内实体公司）：Operating Company - 境内的实际业务公司通常由中国人或中国法人持股&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Red Chip&lt;/strong&gt;（红筹）: Red Chip Structure - 国内企业通过境外控股架构在境外上市的模式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ODI&lt;/strong&gt;（对外直接投资）: Outbound Direct Investment - 国内企业或个人向境外企业或项目进行的直接投资。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FDI&lt;/strong&gt;（外商直接投资）: Foreign Direct Investment - 外国企业或个人向国内企业进行的直接投资。&lt;/li&gt;
&lt;li&gt;SAFE（国家外汇管理局）: State Administration of Foreign Exchange - 负责管理外汇和跨境资本流动的中国机构。&lt;/li&gt;
&lt;li&gt;Onshore（在岸）: On shore - 资金、资产或交易位于境内，受本国法律监管。&lt;/li&gt;
&lt;li&gt;Offshore（离岸）: Off shore - 资金、资产或交易位于境外，受境外法律监管。&lt;/li&gt;
&lt;li&gt;Round-Trip Investment（返程投资）: 境内居民通过 SPV 在境内开展投资活动（ WFOE 或者 JV）。&lt;/li&gt;
&lt;li&gt;境内居民个人：指持有中国境内居民身份证、军人身份证件、武装警察身份证件的中国公民，以及虽无中国境内合法身份证件、但因经济利益关系在中国境内习惯性居住的境外个人。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="vie"&gt;VIE&lt;/h2&gt;
&lt;p&gt;比较烧脑，借用网图，来源&lt;a href="https://www.ingstart.com/blog/6267.html"&gt;ingstart&lt;/a&gt;，注意VIE箭头：&lt;/p&gt;
&lt;p&gt;&lt;img alt="vie" src="https://blog.debao.me/images/vie-opco-wfoe.png"&gt;&lt;/p&gt;
&lt;p&gt;再贴一个37号文附表6，里面的境内权益，应该指代 OPCO：&lt;/p&gt;
&lt;p&gt;&lt;img alt="37" src="https://blog.debao.me/images/37-6.png"&gt;&lt;/p&gt;
&lt;h2 id="_2"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.safe.gov.cn/hubei/2014/0714/52.html"&gt;国家外汇管理局关于境内居民通过特殊目的公司境外投融资及返程投资外汇管理有关问题的通知&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://m.safe.gov.cn/safe/2005/1021/5524.html"&gt;国家外汇管理局关于境内居民通过境外特殊目的公司融资及返程投资外汇管理有关问题的通知&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Legal"></category></entry><entry><title>元素周期表小记</title><link href="https://blog.debao.me/2025/01/notes-on-periodic-table-of-the-elements/" rel="alternate"></link><published>2025-01-08T11:22:00+08:00</published><updated>2025-01-08T11:22:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2025-01-08:/2025/01/notes-on-periodic-table-of-the-elements/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;这种表格，还是用Excel做起来简单...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="periodic talbe" src="https://blog.debao.me/images/science/periodic_table_of_the_elements.png"&gt;&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;分类？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;一些元素读音&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;命名&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#gen"&gt;gen（氢、氮、氧）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ium"&gt;ium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#on"&gt;on&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ine"&gt;ine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;元素临时命名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#93"&gt;93后的命名&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#alloy"&gt;合金（Alloy）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ceramic"&gt;陶瓷（Ceramic）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;分类？&lt;/h2&gt;
&lt;p&gt;上面元素周期表中 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;这种表格，还是用Excel做起来简单...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="periodic talbe" src="https://blog.debao.me/images/science/periodic_table_of_the_elements.png"&gt;&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;分类？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;一些元素读音&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;命名&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#gen"&gt;gen（氢、氮、氧）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ium"&gt;ium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#on"&gt;on&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ine"&gt;ine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;元素临时命名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#93"&gt;93后的命名&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#alloy"&gt;合金（Alloy）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ceramic"&gt;陶瓷（Ceramic）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;分类？&lt;/h2&gt;
&lt;p&gt;上面元素周期表中，除了镧系和锕系外，单元格不同的背景色表示元素的分类&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;分类&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;英文术语&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;典型元素&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;碱金属&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Alkali Metals&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;周期表第1族元素（不包括氢），化学性质活泼，最外层有1个电子，容易失去形成+1阳离子。&lt;/td&gt;
&lt;td&gt;锂（Li）、钠（Na）、钾（K）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;碱土金属&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Alkaline Earth Metals&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;周期表第2族元素，化学性质较活泼，最外层有2个电子，容易失去形成+2阳离子。&lt;/td&gt;
&lt;td&gt;铍（Be）、镁（Mg）、钙（Ca）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;过渡金属&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Transition Metals&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;周期表第3族到第12族的金属，d电子未完全填满，具有多种氧化态、催化活性强。&lt;/td&gt;
&lt;td&gt;铁（Fe）、铜（Cu）、钛（Ti）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;贫金属&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Post-Transition Metals&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;周期表第13到16族的金属，金属性较弱，导电性差于过渡金属，化学活性较低。&lt;/td&gt;
&lt;td&gt;铝（Al）、镓（Ga）、锡（Sn）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;类金属&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Metalloids&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;化学性质介于金属和非金属之间，既有金属的某些性质，又有非金属的某些性质，通常为半导体。&lt;/td&gt;
&lt;td&gt;硼（B）、硅（Si）、锗（Ge）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;活泼非金属&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Reactive Nonmetals&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;活泼的非金属元素，具有强烈的氧化性，容易与金属或其他非金属反应，形成化合物。&lt;/td&gt;
&lt;td&gt;氢（H）、氧（O）、氮（N）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;稀有气体&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Noble Gases&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;周期表第18族元素，化学性质极不活泼，最外层电子已满足“八隅体规则”，通常以单原子状态存在。&lt;/td&gt;
&lt;td&gt;氦（He）、氖（Ne）、氩（Ar）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;另外，关于有色和黑色：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;分类&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;英文术语&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;典型元素&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;黑色金属&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Ferrous Metals&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;含铁的金属及其合金，通常具有磁性，强度高，广泛用于建筑和机械制造。&lt;/td&gt;
&lt;td&gt;铁（Fe）、镍（Ni）、钴（Co）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;有色金属&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Non-Ferrous Metals&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;除铁、镍、钴以外的所有金属及其合金，通常颜色多样，导电性和抗腐蚀性良好。&lt;/td&gt;
&lt;td&gt;铜（Cu）、铝（Al）、锌（Zn）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_2"&gt;一些元素读音&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;原子序数&lt;/th&gt;
&lt;th&gt;简称&lt;/th&gt;
&lt;th&gt;中文名称 (拼音)&lt;/th&gt;
&lt;th&gt;英文名称 (EPD 音标)&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;H&lt;/td&gt;
&lt;td&gt;氢 (qīng)&lt;/td&gt;
&lt;td&gt;Hydrogen /ˈhaɪ.drə.dʒən/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;He&lt;/td&gt;
&lt;td&gt;氦 (hài)&lt;/td&gt;
&lt;td&gt;Helium /ˈhiː.li.əm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Li&lt;/td&gt;
&lt;td&gt;锂 (lǐ)&lt;/td&gt;
&lt;td&gt;Lithium /ˈlɪθ.i.əm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Be&lt;/td&gt;
&lt;td&gt;铍 (pí)&lt;/td&gt;
&lt;td&gt;Beryllium /bəˈrɪl.i.əm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;硼 (péng)&lt;/td&gt;
&lt;td&gt;Boron /ˈbɔː.rɒn/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;碳 (tàn)&lt;/td&gt;
&lt;td&gt;Carbon /ˈkɑː.bən/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;氮 (dàn)&lt;/td&gt;
&lt;td&gt;Nitrogen /ˈnaɪ.trə.dʒən/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;O&lt;/td&gt;
&lt;td&gt;氧 (yǎng)&lt;/td&gt;
&lt;td&gt;Oxygen /ˈɒk.sɪ.dʒən/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;氟 (fú)&lt;/td&gt;
&lt;td&gt;Fluorine /ˈflʊə.riːn/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Ne&lt;/td&gt;
&lt;td&gt;氖 (nǎi)&lt;/td&gt;
&lt;td&gt;Neon /ˈniː.ɒn/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;Na&lt;/td&gt;
&lt;td&gt;钠 (nà)&lt;/td&gt;
&lt;td&gt;Sodium /ˈsəʊ.di.əm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;Mg&lt;/td&gt;
&lt;td&gt;镁 (měi)&lt;/td&gt;
&lt;td&gt;Magnesium /mæɡˈniː.zi.əm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;Al&lt;/td&gt;
&lt;td&gt;铝 (lǚ)&lt;/td&gt;
&lt;td&gt;Aluminium /ˌæl.jəˈmɪn.i.əm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;Si&lt;/td&gt;
&lt;td&gt;硅 (guī)&lt;/td&gt;
&lt;td&gt;Silicon /ˈsɪl.ɪ.kən/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;P&lt;/td&gt;
&lt;td&gt;磷 (lín)&lt;/td&gt;
&lt;td&gt;Phosphorus /ˈfɒs.fər.əs/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;S&lt;/td&gt;
&lt;td&gt;硫 (liú)&lt;/td&gt;
&lt;td&gt;Sulfur /ˈsʌl.fər/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;Cl&lt;/td&gt;
&lt;td&gt;氯 (lǜ)&lt;/td&gt;
&lt;td&gt;Chlorine /ˈklɔː.riːn/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;Ar&lt;/td&gt;
&lt;td&gt;氩 (yà)&lt;/td&gt;
&lt;td&gt;Argon /ˈɑː.ɡɒn/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;K&lt;/td&gt;
&lt;td&gt;钾 (jiǎ)&lt;/td&gt;
&lt;td&gt;Potassium /pəˈtæs.i.əm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;Ca&lt;/td&gt;
&lt;td&gt;钙 (gài)&lt;/td&gt;
&lt;td&gt;Calcium /ˈkæl.si.əm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;Sc&lt;/td&gt;
&lt;td&gt;钪 (kàng)&lt;/td&gt;
&lt;td&gt;Scandium /ˈskæn.di.əm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;Ti&lt;/td&gt;
&lt;td&gt;钛 (tài)&lt;/td&gt;
&lt;td&gt;Titanium /taɪˈteɪ.ni.əm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;钒 (fán)&lt;/td&gt;
&lt;td&gt;Vanadium /vəˈneɪ.di.əm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;Cr&lt;/td&gt;
&lt;td&gt;铬 (gè)&lt;/td&gt;
&lt;td&gt;Chromium /ˈkrəʊ.mi.əm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;Mn&lt;/td&gt;
&lt;td&gt;锰 (měng)&lt;/td&gt;
&lt;td&gt;Manganese /ˈmæŋ.ɡə.niːz/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;Fe&lt;/td&gt;
&lt;td&gt;铁 (tiě)&lt;/td&gt;
&lt;td&gt;Iron /ˈaɪ.ən/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;Co&lt;/td&gt;
&lt;td&gt;钴 (gǔ)&lt;/td&gt;
&lt;td&gt;Cobalt /ˈkəʊ.bɔːlt/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;Ni&lt;/td&gt;
&lt;td&gt;镍 (niè)&lt;/td&gt;
&lt;td&gt;Nickel /ˈnɪk.əl/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Cu&lt;/td&gt;
&lt;td&gt;铜 (tóng)&lt;/td&gt;
&lt;td&gt;Copper /ˈkɒp.ər/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;Zn&lt;/td&gt;
&lt;td&gt;锌 (xīn)&lt;/td&gt;
&lt;td&gt;Zinc /zɪŋk/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;31&lt;/td&gt;
&lt;td&gt;Ga&lt;/td&gt;
&lt;td&gt;镓 (jiā)&lt;/td&gt;
&lt;td&gt;Gallium /ˈɡæl.i.əm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;Ge&lt;/td&gt;
&lt;td&gt;锗 (zhě)&lt;/td&gt;
&lt;td&gt;Germanium /dʒɜːˈmeɪ.ni.əm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;td&gt;As&lt;/td&gt;
&lt;td&gt;砷 (shēn)&lt;/td&gt;
&lt;td&gt;Arsenic /ˈɑː.sə.nɪk/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;Se&lt;/td&gt;
&lt;td&gt;硒 (xī)&lt;/td&gt;
&lt;td&gt;Selenium /səˈliː.ni.əm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt;Br&lt;/td&gt;
&lt;td&gt;溴 (xiù)&lt;/td&gt;
&lt;td&gt;Bromine /ˈbrəʊ.miːn/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt;Kr&lt;/td&gt;
&lt;td&gt;氪 (kè)&lt;/td&gt;
&lt;td&gt;Krypton /ˈkrɪp.tɒn/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;Zr&lt;/td&gt;
&lt;td&gt;锆 (gào)&lt;/td&gt;
&lt;td&gt;Zirconium /zɜːˈkəʊ.ni.əm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;Mo&lt;/td&gt;
&lt;td&gt;钼 (mù)&lt;/td&gt;
&lt;td&gt;Molybdenum /məˈlɪb.də.nəm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;47&lt;/td&gt;
&lt;td&gt;Ag&lt;/td&gt;
&lt;td&gt;银 (yín)&lt;/td&gt;
&lt;td&gt;Silver /ˈsɪl.vər/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;Sn&lt;/td&gt;
&lt;td&gt;锡 (xī)&lt;/td&gt;
&lt;td&gt;Tin /tɪn/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;55&lt;/td&gt;
&lt;td&gt;Cs&lt;/td&gt;
&lt;td&gt;铯 (sè)&lt;/td&gt;
&lt;td&gt;Cesium /ˈsiː.zi.əm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;74&lt;/td&gt;
&lt;td&gt;W&lt;/td&gt;
&lt;td&gt;钨 (wū)&lt;/td&gt;
&lt;td&gt;Tungsten /ˈtʌŋ.stən/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;78&lt;/td&gt;
&lt;td&gt;Pt&lt;/td&gt;
&lt;td&gt;铂 (bó)&lt;/td&gt;
&lt;td&gt;Platinum /ˈplæt.ɪ.nəm/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;79&lt;/td&gt;
&lt;td&gt;Au&lt;/td&gt;
&lt;td&gt;金 (jīn)&lt;/td&gt;
&lt;td&gt;Gold /ɡəʊld/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;80&lt;/td&gt;
&lt;td&gt;Hg&lt;/td&gt;
&lt;td&gt;汞 (gǒng)&lt;/td&gt;
&lt;td&gt;Mercury /ˈmɜː.kjəri/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;https://www.youtube.com/watch?v=MVut43EAQIA&lt;/li&gt;
&lt;li&gt;https://www.youtube.com/watch?v=Vlxiw8Ujsxo&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;命名&lt;/h2&gt;
&lt;h3 id="gen"&gt;gen（氢、氮、氧）&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;元素&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;中文名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;英文名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;命名来源&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;He&lt;/td&gt;
&lt;td&gt;氢&lt;/td&gt;
&lt;td&gt;Hydrogen&lt;/td&gt;
&lt;td&gt;希腊语 &lt;em&gt;hydro&lt;/em&gt;（水）+ &lt;em&gt;genes&lt;/em&gt;（生成），意为“水的生成者”。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;氮&lt;/td&gt;
&lt;td&gt;Nitrogen&lt;/td&gt;
&lt;td&gt;希腊语 &lt;em&gt;nitron&lt;/em&gt;（硝石）+ &lt;em&gt;genes&lt;/em&gt;（生成），意为“硝石生成者”。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;O&lt;/td&gt;
&lt;td&gt;氧&lt;/td&gt;
&lt;td&gt;Oxygen&lt;/td&gt;
&lt;td&gt;希腊语 &lt;em&gt;oxys&lt;/em&gt;（酸）+ &lt;em&gt;genes&lt;/em&gt;（生成），意为“生成酸的物质”。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;关于He：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;氢气由英国科学家 亨利·卡文迪许 (Henry Cavendish) 于1766年首次分离并命名为“可燃空气”（inflammable air）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;拉瓦锡&lt;/strong&gt;通过实验发现氢与氧结合生成水，因此将其命名为 &lt;strong&gt;Hydrogen&lt;/strong&gt;，意指“生成水的物质”。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于N：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;氮气由苏格兰科学家 丹尼尔·拉瑟福德 (Daniel Rutherford) 于1772年首次分离并称为“窒息空气”（noxious air），因为它无法支持燃烧或呼吸。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;夏普塔尔&lt;/strong&gt;根据氮气是硝酸和硝石的组成成分，将其命名为 &lt;strong&gt;Nitrogen&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;中文“氮”来自其性质——氮气无法支持生命，古人称之为“淡气”或“窒气”，后简化为“氮”。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于O：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1774年&lt;/strong&gt;，英国科学家 &lt;strong&gt;约瑟夫·普利斯特里 (Joseph Priestley)&lt;/strong&gt; 和瑞典化学家 &lt;strong&gt;卡尔·舍勒 (Carl Scheele)&lt;/strong&gt; 分别独立发现氧气。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;拉瓦锡&lt;/strong&gt;通过实验发现氧气参与燃烧和酸的生成，因此命名为 &lt;strong&gt;Oxygen&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;尽管后来发现并非所有酸都含有氧气，但这个名字仍然沿用至今。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ium"&gt;ium&lt;/h3&gt;
&lt;p&gt;金属元素基本以 &lt;code&gt;-ium&lt;/code&gt;结尾，一些不以它结尾的元素如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;原子序数&lt;/th&gt;
&lt;th&gt;化学符号&lt;/th&gt;
&lt;th&gt;中文（拼音）&lt;/th&gt;
&lt;th&gt;英文名称（音标）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;Fe&lt;/td&gt;
&lt;td&gt;铁（tiě）&lt;/td&gt;
&lt;td&gt;Iron (/ˈaɪən/)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Cu&lt;/td&gt;
&lt;td&gt;铜（tóng）&lt;/td&gt;
&lt;td&gt;Copper (/ˈkɒpə/)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;Zn&lt;/td&gt;
&lt;td&gt;锌（xìn）&lt;/td&gt;
&lt;td&gt;Zinc (/zɪŋk/)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;47&lt;/td&gt;
&lt;td&gt;Ag&lt;/td&gt;
&lt;td&gt;银（yín）&lt;/td&gt;
&lt;td&gt;Silver (/ˈsɪlvə/)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;Sn&lt;/td&gt;
&lt;td&gt;锡（xī）&lt;/td&gt;
&lt;td&gt;Tin (/tɪn/)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;74&lt;/td&gt;
&lt;td&gt;W&lt;/td&gt;
&lt;td&gt;钨（wū）&lt;/td&gt;
&lt;td&gt;Tungsten (/ˈtʌŋstən/)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;78&lt;/td&gt;
&lt;td&gt;Pt&lt;/td&gt;
&lt;td&gt;铂（bó）&lt;/td&gt;
&lt;td&gt;Platinum (/ˈplætɪnəm/)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;79&lt;/td&gt;
&lt;td&gt;Au&lt;/td&gt;
&lt;td&gt;金（jīn）&lt;/td&gt;
&lt;td&gt;Gold (/ɡəʊld/)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;80&lt;/td&gt;
&lt;td&gt;Hg&lt;/td&gt;
&lt;td&gt;汞（gǒng）&lt;/td&gt;
&lt;td&gt;Mercury (/ˈmɜːkjʊri/)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;82&lt;/td&gt;
&lt;td&gt;Pb&lt;/td&gt;
&lt;td&gt;铅（qiān）&lt;/td&gt;
&lt;td&gt;Lead (/lɛd/)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="on"&gt;on&lt;/h3&gt;
&lt;p&gt;许多惰性气体的名称以 -on 结尾。这种命名规则来源于拉丁语和希腊语的词根，表示气体状态。&lt;/p&gt;
&lt;p&gt;Helium (氦)：是惰性气体中唯一一个不以 -on 结尾的元素。这是因为其名称来源于希腊语中的 ἥλιος (helios)，意为“太阳”，因为氦最早是在太阳光谱中发现的。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;原子序数&lt;/th&gt;
&lt;th&gt;化学符号&lt;/th&gt;
&lt;th&gt;中文（拼音）&lt;/th&gt;
&lt;th&gt;英文名称（音标）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;He&lt;/td&gt;
&lt;td&gt;氦（hài）&lt;/td&gt;
&lt;td&gt;Helium (/ˈhiː.li.əm/)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Ne&lt;/td&gt;
&lt;td&gt;氖（nǎi）&lt;/td&gt;
&lt;td&gt;Neon (/ˈniː.ɒn/)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;Ar&lt;/td&gt;
&lt;td&gt;氩（yà）&lt;/td&gt;
&lt;td&gt;Argon (/ˈɑː.ɡɒn/)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt;Kr&lt;/td&gt;
&lt;td&gt;氪（kè）&lt;/td&gt;
&lt;td&gt;Krypton (/ˈkrɪp.tɒn/)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;54&lt;/td&gt;
&lt;td&gt;Xe&lt;/td&gt;
&lt;td&gt;氙（xiān）&lt;/td&gt;
&lt;td&gt;Xenon (/ˈziː.nɒn/)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;86&lt;/td&gt;
&lt;td&gt;Rn&lt;/td&gt;
&lt;td&gt;氡（dōng）&lt;/td&gt;
&lt;td&gt;Radon (/ˈreɪ.dɒn/)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;118&lt;/td&gt;
&lt;td&gt;Og&lt;/td&gt;
&lt;td&gt;鿫（ào）&lt;/td&gt;
&lt;td&gt;Oganesson (/ˌəʊ.ɡəˈnɛs.ɒn/)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="ine"&gt;ine&lt;/h3&gt;
&lt;p&gt;元素周期表中，以“ine”结尾的元素通常属于卤素（Halogens）&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;原子序数&lt;/th&gt;
&lt;th&gt;化学符号&lt;/th&gt;
&lt;th&gt;中文（拼音）&lt;/th&gt;
&lt;th&gt;英文名称（音标）&lt;/th&gt;
&lt;th&gt;词源&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;氟 (fú)&lt;/td&gt;
&lt;td&gt;Fluorine (/ˈflʊəˌriːn/)&lt;/td&gt;
&lt;td&gt;拉丁语 &lt;strong&gt;fluere&lt;/strong&gt;，意为“流动”，与其矿物氟石相关。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;Cl&lt;/td&gt;
&lt;td&gt;氯 (lǜ)&lt;/td&gt;
&lt;td&gt;Chlorine (/ˈklɔːriːn/)&lt;/td&gt;
&lt;td&gt;希腊语 &lt;strong&gt;chloros&lt;/strong&gt;，意为“绿色”，因其气体呈黄绿色。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt;Br&lt;/td&gt;
&lt;td&gt;溴 (xiù)&lt;/td&gt;
&lt;td&gt;Bromine (/ˈbroʊmiːn/)&lt;/td&gt;
&lt;td&gt;希腊语 &lt;strong&gt;bromos&lt;/strong&gt;，意为“恶臭”，因其具有刺激性气味。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;53&lt;/td&gt;
&lt;td&gt;I&lt;/td&gt;
&lt;td&gt;碘 (diǎn)&lt;/td&gt;
&lt;td&gt;Iodine (/ˈaɪəˌdiːn/)&lt;/td&gt;
&lt;td&gt;希腊语 &lt;strong&gt;ioeides&lt;/strong&gt;，意为“紫罗兰色”，因其升华时呈紫色气体。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;85&lt;/td&gt;
&lt;td&gt;At&lt;/td&gt;
&lt;td&gt;砹 (ài)&lt;/td&gt;
&lt;td&gt;Astatine (/ˈæstəˌtiːn/)&lt;/td&gt;
&lt;td&gt;希腊语 &lt;strong&gt;astatos&lt;/strong&gt;，意为“不稳定”，因其放射性会迅速衰变。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_4"&gt;元素临时命名&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;当某个新元素刚被发现，但尚未正式命名时，会先使用系统命名法给它起一个临时名称。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Systematic_element_name#IUPAC_rules&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;临时名称基于元素的原子序数，用拉丁或希腊数字的词根拼写而成。例如：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数字&lt;/th&gt;
&lt;th&gt;词根&lt;/th&gt;
&lt;th&gt;音标（IPA）&lt;/th&gt;
&lt;th&gt;词源&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;nil&lt;/td&gt;
&lt;td&gt;/nɪl/&lt;/td&gt;
&lt;td&gt;Latin &lt;strong&gt;nihil&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;un&lt;/td&gt;
&lt;td&gt;/uːn/&lt;/td&gt;
&lt;td&gt;Latin &lt;strong&gt;unus&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;bi&lt;/td&gt;
&lt;td&gt;/baɪ/&lt;/td&gt;
&lt;td&gt;Latin &lt;strong&gt;bis&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;tri&lt;/td&gt;
&lt;td&gt;/traɪ/&lt;/td&gt;
&lt;td&gt;Greek &lt;strong&gt;treis&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;quad&lt;/td&gt;
&lt;td&gt;/kwɒd/&lt;/td&gt;
&lt;td&gt;Latin &lt;strong&gt;quattuor&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;pent&lt;/td&gt;
&lt;td&gt;/pɛnt/&lt;/td&gt;
&lt;td&gt;Greek &lt;strong&gt;pente&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;hex&lt;/td&gt;
&lt;td&gt;/hɛks/&lt;/td&gt;
&lt;td&gt;Greek &lt;strong&gt;hex&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;sept&lt;/td&gt;
&lt;td&gt;/sɛpt/&lt;/td&gt;
&lt;td&gt;Latin &lt;strong&gt;septem&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;oct&lt;/td&gt;
&lt;td&gt;/ɒkt/&lt;/td&gt;
&lt;td&gt;Greek &lt;strong&gt;oktō&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;enn&lt;/td&gt;
&lt;td&gt;/ɛn/&lt;/td&gt;
&lt;td&gt;Latin &lt;strong&gt;novem&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;最后加上后缀 -ium，表示这是一个金属元素（即使它可能不是金属）。&lt;/p&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;p&gt;原子序数 113，未正式命名时：Ununtrium (Uut)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;“Un” (1) + “un” (1) + “tri” (3) + “ium” → Ununtrium
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;原子序数 118，未正式命名时：Ununoctium (Uuo)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;“Un” (1) + “un” (1) + “oct” (8) + “ium” → Ununoctium
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="93"&gt;93后的命名&lt;/h3&gt;
&lt;p&gt;主要关注一下命名背后是纪念哪些大神&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;原子序数&lt;/th&gt;
&lt;th&gt;化学符号&lt;/th&gt;
&lt;th&gt;中文名称（拼音）&lt;/th&gt;
&lt;th&gt;英文名称（音标）&lt;/th&gt;
&lt;th&gt;命名规则与来源&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;93&lt;/td&gt;
&lt;td&gt;Np&lt;/td&gt;
&lt;td&gt;镎 (ná)&lt;/td&gt;
&lt;td&gt;Neptunium (/nɛpˈtjuːniəm/)&lt;/td&gt;
&lt;td&gt;以海王星（Neptune）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;94&lt;/td&gt;
&lt;td&gt;Pu&lt;/td&gt;
&lt;td&gt;钚 (bù)&lt;/td&gt;
&lt;td&gt;Plutonium (/pluːˈtoʊniəm/)&lt;/td&gt;
&lt;td&gt;以冥王星（Pluto）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;95&lt;/td&gt;
&lt;td&gt;Am&lt;/td&gt;
&lt;td&gt;镅 (méi)&lt;/td&gt;
&lt;td&gt;Americium (/ˌæməˈrɪsiəm/)&lt;/td&gt;
&lt;td&gt;以美洲（America）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;96&lt;/td&gt;
&lt;td&gt;Cm&lt;/td&gt;
&lt;td&gt;锔 (jú)&lt;/td&gt;
&lt;td&gt;Curium (/ˈkjʊriəm/)&lt;/td&gt;
&lt;td&gt;以玛丽·居里和皮埃尔·居里（Marie &amp;amp; Pierre Curie）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;97&lt;/td&gt;
&lt;td&gt;Bk&lt;/td&gt;
&lt;td&gt;锫 (péi)&lt;/td&gt;
&lt;td&gt;Berkelium (/ˈbɜːrkliəm/)&lt;/td&gt;
&lt;td&gt;以美国加州大学伯克利分校（Berkeley）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;98&lt;/td&gt;
&lt;td&gt;Cf&lt;/td&gt;
&lt;td&gt;锎 (kāi)&lt;/td&gt;
&lt;td&gt;Californium (/ˌkælɪˈfɔːrniəm/)&lt;/td&gt;
&lt;td&gt;以加州（California）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;99&lt;/td&gt;
&lt;td&gt;Es&lt;/td&gt;
&lt;td&gt;锿 (āi)&lt;/td&gt;
&lt;td&gt;Einsteinium (/aɪnˈstaɪniəm/)&lt;/td&gt;
&lt;td&gt;以阿尔伯特·爱因斯坦（Albert Einstein）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;Fm&lt;/td&gt;
&lt;td&gt;镄 (fèi)&lt;/td&gt;
&lt;td&gt;Fermium (/ˈfɜːrmiəm/)&lt;/td&gt;
&lt;td&gt;以恩里科·费米（Enrico Fermi）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;Md&lt;/td&gt;
&lt;td&gt;钔 (mén)&lt;/td&gt;
&lt;td&gt;Mendelevium (/ˌmɛndəˈliːviəm/)&lt;/td&gt;
&lt;td&gt;以门捷列夫（Dmitri Mendeleev）命名，化学元素周期表的创始人。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;102&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;锘 (nuò)&lt;/td&gt;
&lt;td&gt;Nobelium (/noʊˈbɛliəm/)&lt;/td&gt;
&lt;td&gt;以阿尔弗雷德·诺贝尔（Alfred Nobel）命名，诺贝尔奖创始人。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;103&lt;/td&gt;
&lt;td&gt;Lr&lt;/td&gt;
&lt;td&gt;铹 (láo)&lt;/td&gt;
&lt;td&gt;Lawrencium (/ˈlɔːrɛnsiəm/)&lt;/td&gt;
&lt;td&gt;以欧内斯特·劳伦斯（Ernest O. Lawrence）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;104&lt;/td&gt;
&lt;td&gt;Rf&lt;/td&gt;
&lt;td&gt;𬬻 (lǔ)&lt;/td&gt;
&lt;td&gt;Rutherfordium (/ˌrʌðərˈfɔːrdiəm/)&lt;/td&gt;
&lt;td&gt;以欧内斯特·卢瑟福（Ernest Rutherford）命名，他是核物理学的奠基人。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;105&lt;/td&gt;
&lt;td&gt;Db&lt;/td&gt;
&lt;td&gt;𬭊 (dù)&lt;/td&gt;
&lt;td&gt;Dubnium (/ˈdʌbniəm/)&lt;/td&gt;
&lt;td&gt;以俄罗斯杜布纳（Dubna）命名，该地是联合核研究所所在地。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;106&lt;/td&gt;
&lt;td&gt;Sg&lt;/td&gt;
&lt;td&gt;𬭳 (xī)&lt;/td&gt;
&lt;td&gt;Seaborgium (/ˈsiːbɔːrɡiəm/)&lt;/td&gt;
&lt;td&gt;以格伦·西博格（Glenn T. Seaborg）命名，他是多种超铀元素的发现者之一。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;107&lt;/td&gt;
&lt;td&gt;Bh&lt;/td&gt;
&lt;td&gt;𬭛 (bó)&lt;/td&gt;
&lt;td&gt;Bohrium (/ˈboʊriəm/)&lt;/td&gt;
&lt;td&gt;以尼尔斯·玻尔（Niels Bohr）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;108&lt;/td&gt;
&lt;td&gt;Hs&lt;/td&gt;
&lt;td&gt;𬭶 (hēi)&lt;/td&gt;
&lt;td&gt;Hassium (/ˈhæsiəm/)&lt;/td&gt;
&lt;td&gt;以德国黑森州（Hesse，拉丁名 Hassia）命名，该地是发现该元素的研究机构所在地。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;109&lt;/td&gt;
&lt;td&gt;Mt&lt;/td&gt;
&lt;td&gt;鿏 (mài)&lt;/td&gt;
&lt;td&gt;Meitnerium (/maɪtˈnɪəriəm/)&lt;/td&gt;
&lt;td&gt;以莉泽·迈特纳（Lise Meitner）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;110&lt;/td&gt;
&lt;td&gt;Ds&lt;/td&gt;
&lt;td&gt;𫟼 (dá)&lt;/td&gt;
&lt;td&gt;Darmstadtium (/ˌdɑːrmˈʃtætiəm/)&lt;/td&gt;
&lt;td&gt;以德国达姆施塔特（Darmstadt）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;111&lt;/td&gt;
&lt;td&gt;Rg&lt;/td&gt;
&lt;td&gt;𬬭 (lún)&lt;/td&gt;
&lt;td&gt;Roentgenium (/ˈrɛntɡəniəm/)&lt;/td&gt;
&lt;td&gt;以威廉·伦琴（Wilhelm Röntgen）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;112&lt;/td&gt;
&lt;td&gt;Cn&lt;/td&gt;
&lt;td&gt;鿔 (gē)&lt;/td&gt;
&lt;td&gt;Copernicium (/ˌkoʊpərˈnɪsiəm/)&lt;/td&gt;
&lt;td&gt;以哥白尼（Nicolaus Copernicus）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;113&lt;/td&gt;
&lt;td&gt;Nh&lt;/td&gt;
&lt;td&gt;鿭 (nǐ)&lt;/td&gt;
&lt;td&gt;Nihonium (/niːˈhoʊniəm/)&lt;/td&gt;
&lt;td&gt;以日本（Nihon，日本的日语名称）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;114&lt;/td&gt;
&lt;td&gt;Fl&lt;/td&gt;
&lt;td&gt;𫓧 (fú)&lt;/td&gt;
&lt;td&gt;Flerovium (/flɪˈroʊviəm/)&lt;/td&gt;
&lt;td&gt;以弗廖罗夫（Georgiy Flerov）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;115&lt;/td&gt;
&lt;td&gt;Mc&lt;/td&gt;
&lt;td&gt;镆 (mò)&lt;/td&gt;
&lt;td&gt;Moscovium (/ˌmɒˈskoʊviəm/)&lt;/td&gt;
&lt;td&gt;以俄罗斯莫斯科（Moscow）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;116&lt;/td&gt;
&lt;td&gt;Lv&lt;/td&gt;
&lt;td&gt;𫟷 (lì)&lt;/td&gt;
&lt;td&gt;Livermorium (/ˌlɪvərˈmɔːriəm/)&lt;/td&gt;
&lt;td&gt;以美国劳伦斯利弗莫尔国家实验室（Lawrence Livermore National Laboratory）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;117&lt;/td&gt;
&lt;td&gt;Ts&lt;/td&gt;
&lt;td&gt;鿬 (tián)&lt;/td&gt;
&lt;td&gt;Tennessine (/ˈtɛnəsiːn/)&lt;/td&gt;
&lt;td&gt;以美国田纳西州（Tennessee）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;118&lt;/td&gt;
&lt;td&gt;Og&lt;/td&gt;
&lt;td&gt;鿫 (ǎo)&lt;/td&gt;
&lt;td&gt;Oganesson (/ˌoʊɡəˈnɛsɒn/)&lt;/td&gt;
&lt;td&gt;以尤里·奥加涅相（Yuri Oganessian）命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="alloy"&gt;合金（Alloy）&lt;/h2&gt;
&lt;p&gt;常见合金英文分类？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;铁基合金 (Iron-Based Alloys)&lt;ul&gt;
&lt;li&gt;Stainless Steel（不锈钢）：铁+铬+镍，耐腐蚀和耐高温。&lt;/li&gt;
&lt;li&gt;Carbon Steel（碳钢）：铁+碳，强度高但易生锈。&lt;/li&gt;
&lt;li&gt;Tool Steel（工具钢）：铁+钨+钼，硬度高，用于切削工具。&lt;/li&gt;
&lt;li&gt;Spring Steel（弹簧钢）：铁+硅+锰，具有高弹性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;镍基合金 (Nickel-Based Alloys)&lt;ul&gt;
&lt;li&gt;Monel Alloy（蒙乃尔合金）：镍+铜，耐腐蚀性强。&lt;/li&gt;
&lt;li&gt;Invar Alloy（因瓦合金）：铁+镍，热膨胀系数低。&lt;/li&gt;
&lt;li&gt;Superalloy（高温合金）：镍+铬+钴，耐高温，常用于航空。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;钛基合金 (Titanium-Based Alloys)&lt;ul&gt;
&lt;li&gt;Titanium Alloy（钛合金）：钛+铝+钒，重量轻，耐腐蚀，用于航空航天。&lt;/li&gt;
&lt;li&gt;Titanium-Nickel Alloy（钛镍合金）：形状记忆合金，用于医疗和工业领域。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;铜基合金 (Copper-Based Alloys)&lt;ul&gt;
&lt;li&gt;Brass（黄铜）：铜+锌，常用于装饰和乐器。&lt;/li&gt;
&lt;li&gt;Bronze（青铜）：铜+锡，耐磨损。&lt;/li&gt;
&lt;li&gt;Copper-Nickel Alloy（铜镍合金）：抗海水腐蚀，用于船舶和海洋设备。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;钴基合金 (Cobalt-Based Alloys)&lt;ul&gt;
&lt;li&gt;Cobalt Alloy（钴合金）：钴+铬+钼，高强度和耐腐蚀性，用于医疗植入物。&lt;/li&gt;
&lt;li&gt;Cobalt-Based Superalloy（钴基高温合金）：用于航空发动机。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;特种合金 (Special Alloys)&lt;ul&gt;
&lt;li&gt;Hastelloy（哈氏合金）：镍+钼+铁，抗腐蚀性能极高。&lt;/li&gt;
&lt;li&gt;Tungsten Steel（钨钢）：铁+钨+碳，极硬，用于切削工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;列个表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;中文名&lt;/th&gt;
&lt;th&gt;英文名&lt;/th&gt;
&lt;th&gt;主要成分&lt;/th&gt;
&lt;th&gt;特点与用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;不锈钢&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Stainless Steel&lt;/td&gt;
&lt;td&gt;铁 (Fe)、铬 (Cr)、镍 (Ni)&lt;/td&gt;
&lt;td&gt;耐腐蚀，耐高温，广泛用于建筑、厨具、医疗器械等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;碳钢&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Carbon Steel&lt;/td&gt;
&lt;td&gt;铁 (Fe)、碳 (C)&lt;/td&gt;
&lt;td&gt;高强度、低成本，用于建筑、机械制造等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;高温合金&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Superalloy&lt;/td&gt;
&lt;td&gt;镍 (Ni)、铬 (Cr)、钴 (Co)&lt;/td&gt;
&lt;td&gt;在高温和高压下性能优异，用于航空发动机、燃气轮机等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;钴基合金&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Cobalt Alloy&lt;/td&gt;
&lt;td&gt;钴 (Co)、铬 (Cr)、钼 (Mo)&lt;/td&gt;
&lt;td&gt;高强度、耐腐蚀，用于刀具、医疗植入物（如人工关节）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;铜镍合金&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Copper-Nickel Alloy&lt;/td&gt;
&lt;td&gt;铜 (Cu)、镍 (Ni)&lt;/td&gt;
&lt;td&gt;耐腐蚀，用于海洋工业（如船体材料、换热器管道）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;黄铜&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Brass&lt;/td&gt;
&lt;td&gt;铜 (Cu)、锌 (Zn)&lt;/td&gt;
&lt;td&gt;高韧性、良好的导电性和可塑性，用于装饰品、乐器等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;青铜&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Bronze&lt;/td&gt;
&lt;td&gt;铜 (Cu)、锡 (Sn)&lt;/td&gt;
&lt;td&gt;耐磨损，用于机械部件、雕塑、硬币等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;钛合金&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Titanium Alloy&lt;/td&gt;
&lt;td&gt;钛 (Ti)、铝 (Al)、钒 (V)&lt;/td&gt;
&lt;td&gt;高强度、低密度、耐腐蚀，用于航空航天、医疗设备等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;蒙乃尔合金&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Monel Alloy&lt;/td&gt;
&lt;td&gt;镍 (Ni)、铜 (Cu)&lt;/td&gt;
&lt;td&gt;耐腐蚀、高强度，用于化工设备、船舶部件等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;哈氏合金&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Hastelloy&lt;/td&gt;
&lt;td&gt;镍 (Ni)、钼 (Mo)、铁 (Fe)&lt;/td&gt;
&lt;td&gt;超强抗腐蚀性，用于化工设备、核工业。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;镍铁合金&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Nickel-Iron Alloy&lt;/td&gt;
&lt;td&gt;铁（Fe）、镍（Ni）&lt;/td&gt;
&lt;td&gt;用于磁性应用，如继电器、电磁线圈、磁存储设备。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;坡莫合金&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Permalloy&lt;/td&gt;
&lt;td&gt;铁（Fe）、镍（Ni，约80%）&lt;/td&gt;
&lt;td&gt;高磁导率，低矫顽力，用于变压器芯、磁屏蔽等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;因瓦合金&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Invar Alloy&lt;/td&gt;
&lt;td&gt;铁（Fe）、镍（Ni，36%）&lt;/td&gt;
&lt;td&gt;热膨胀系数极低，用于精密仪器、钟表、光学设备。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;可伐合金&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Kovar Alloy&lt;/td&gt;
&lt;td&gt;铁（Fe）、镍（Ni）、钴（Co）&lt;/td&gt;
&lt;td&gt;热膨胀系数接近玻璃或陶瓷，用于真空管、电子封装。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;超导磁合金&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Supermalloy&lt;/td&gt;
&lt;td&gt;铁（Fe）、镍（Ni，75%）、钼（Mo，5%）&lt;/td&gt;
&lt;td&gt;极高磁导率，用于高精度磁性器件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;钨钢&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Tungsten Steel&lt;/td&gt;
&lt;td&gt;铁 (Fe)、钨 (W)、碳 (C)&lt;/td&gt;
&lt;td&gt;极高硬度，用于刀具、钻头、耐磨部件等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;马氏体合金&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Martensitic Alloy&lt;/td&gt;
&lt;td&gt;铁 (Fe)、镍 (Ni)、钼 (Mo)&lt;/td&gt;
&lt;td&gt;高强度、可热处理，用于航空部件、医疗器械等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;弹簧钢&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Spring Steel&lt;/td&gt;
&lt;td&gt;铁 (Fe)、硅 (Si)、锰 (Mn)&lt;/td&gt;
&lt;td&gt;高弹性，用于弹簧、悬架系统等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;钛镍合金&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Titanium-Nickel Alloy&lt;/td&gt;
&lt;td&gt;钛 (Ti)、镍 (Ni)&lt;/td&gt;
&lt;td&gt;形状记忆合金，广泛用于眼镜框、医疗器械等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;超级双相钢&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Super Duplex Steel&lt;/td&gt;
&lt;td&gt;铁 (Fe)、铬 (Cr)、镍 (Ni)&lt;/td&gt;
&lt;td&gt;出色的耐腐蚀性和强度，用于海洋、化工工业。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;工具钢&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Tool Steel&lt;/td&gt;
&lt;td&gt;铁 (Fe)、钨 (W)、钼 (Mo)&lt;/td&gt;
&lt;td&gt;高硬度，用于切削工具、模具等。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="ceramic"&gt;陶瓷（Ceramic）&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;材料名称&lt;/th&gt;
&lt;th&gt;英文名称&lt;/th&gt;
&lt;th&gt;特点&lt;/th&gt;
&lt;th&gt;应用领域&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;氧化铝陶瓷&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Alumina (Al₂O₃) Ceramic， /əˈluːmɪnə/&lt;/td&gt;
&lt;td&gt;高硬度、耐磨损、耐腐蚀、绝缘性好&lt;/td&gt;
&lt;td&gt;用于电子基板、切削工具、耐磨部件、实验坩埚。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;氧化锆陶瓷&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Zirconia (ZrO₂) Ceramic， /zərˈkoʊnɪə/&lt;/td&gt;
&lt;td&gt;高韧性、耐高温、耐腐蚀、热膨胀系数低&lt;/td&gt;
&lt;td&gt;用于刀具、发动机部件、牙科修复材料、工业轴承。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;氮化硅陶瓷&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Silicon Nitride (Si₃N₄) ， /ˈnaɪtraɪd/&lt;/td&gt;
&lt;td&gt;高强度、高硬度、耐高温、抗热震性能优异&lt;/td&gt;
&lt;td&gt;用于涡轮叶片、发动机部件、轴承、耐高温实验器件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;碳化硅陶瓷&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Silicon Carbide (SiC)， /ˈkɑːbaɪd/&lt;/td&gt;
&lt;td&gt;极高硬度、耐高温、耐腐蚀、优良导热性&lt;/td&gt;
&lt;td&gt;用于半导体器件衬底、窑炉内衬、热交换器、光学反射镜。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;氧化镁陶瓷&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Magnesia (MgO) Ceramic， /mæɡˈniːziə/&lt;/td&gt;
&lt;td&gt;高熔点、耐腐蚀、耐高温、良好绝缘性&lt;/td&gt;
&lt;td&gt;用于高温电绝缘体、热电偶保护管、坩埚、炉衬材料。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;铝镁尖晶石陶瓷&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Spinel (MgAl₂O₄) Ceramic， /ˈspɪnəl/&lt;/td&gt;
&lt;td&gt;高耐热性、抗热冲击、透明性&lt;/td&gt;
&lt;td&gt;用于光学窗口、防弹玻璃、高温炉衬。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;氮化铝陶瓷&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Aluminum Nitride (AlN)&lt;/td&gt;
&lt;td&gt;高导热性、电绝缘性、耐高温&lt;/td&gt;
&lt;td&gt;用于电子散热基板、绝缘材料、LED芯片散热器。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;碳化硼陶瓷&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Boron Carbide (B₄C)&lt;/td&gt;
&lt;td&gt;超高硬度、低密度、耐腐蚀&lt;/td&gt;
&lt;td&gt;用于防弹装甲、喷砂喷嘴、核工业中中子吸收材料。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;钛酸钡陶瓷&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Barium Titanate (BaTiO₃)， /ˈtaɪtəˌneɪt/&lt;/td&gt;
&lt;td&gt;高介电常数、压电性、铁电性&lt;/td&gt;
&lt;td&gt;用于电容器、压电传感器、超声波设备。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;锆钛酸铅陶瓷&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Lead Zirconate Titanate&lt;/td&gt;
&lt;td&gt;优异的压电性能、电致伸缩效应&lt;/td&gt;
&lt;td&gt;用于超声波探头、压电传感器、声纳设备、医疗成像。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;石英陶瓷&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Quartz Ceramic&lt;/td&gt;
&lt;td&gt;热膨胀系数低、耐高温、电绝缘性好&lt;/td&gt;
&lt;td&gt;用于光学设备、实验室器皿、半导体生产设备部件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;铝硅酸盐陶瓷&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Aluminosilicate Ceramic&lt;/td&gt;
&lt;td&gt;耐高温、抗化学腐蚀、绝缘性好&lt;/td&gt;
&lt;td&gt;用于高压绝缘体、耐火材料、实验室坩埚。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;氧化铝钛陶瓷&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Alumina-Titanium Composite&lt;/td&gt;
&lt;td&gt;高强度、耐热、耐磨损&lt;/td&gt;
&lt;td&gt;用于机械零件、切削工具、电子封装材料。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;氮化硼陶瓷&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Boron Nitride (BN)&lt;/td&gt;
&lt;td&gt;优良的热导性、电绝缘性、润滑性&lt;/td&gt;
&lt;td&gt;用于高温润滑剂、绝缘衬垫、半导体热管理。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;锂铝硅酸盐陶瓷&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Lithium Aluminosilicate Glass-Ceramic&lt;/td&gt;
&lt;td&gt;高强度、低膨胀系数&lt;/td&gt;
&lt;td&gt;用于望远镜镜片、炉灶面板、精密光学镜片。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_5"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://iupac.org/what-we-do/periodic-table-of-elements/&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Periodic_table&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pubchem.ncbi.nlm.nih.gov/periodic-table/"&gt;https://pubchem.ncbi.nlm.nih.gov/periodic-table/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ptable.com"&gt;https://ptable.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;https://next-gen.materialsproject.org&lt;/li&gt;
&lt;li&gt;https://asia.matweb.com&lt;/li&gt;
&lt;li&gt;https://www.totalmateria.com&lt;/li&gt;
&lt;/ul&gt;</content><category term="ESL"></category></entry><entry><title>FreeCAD学习小记（一）</title><link href="https://blog.debao.me/2025/01/freecad-learning-notes-1/" rel="alternate"></link><published>2025-01-07T00:27:00+08:00</published><updated>2025-01-07T00:27:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2025-01-07:/2025/01/freecad-learning-notes-1/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;FreeCAD 是一款开源的三维建模软件，主要用于参数化建模和工程设计。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;源码？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_3"&gt;巨人肩膀（第三方库）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;代码结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;构建&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;使用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#workbench"&gt;工作台 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;FreeCAD 是一款开源的三维建模软件，主要用于参数化建模和工程设计。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;源码？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_3"&gt;巨人肩膀（第三方库）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;代码结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;构建&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;使用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#workbench"&gt;工作台（Workbench）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#part-part-design"&gt;Part 与 Part Design&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_7"&gt;历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#csg-brep"&gt;CSG 与 BRep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_8"&gt;操作对比&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_9"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;历史&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Cas.CADE 是一个商业软件开发框架，包含了一个几何建模内核（或称 CAD 内核）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;2000年，Cas.CADE框架以开源许可证发布，并更名为 OpenCASCADE。&lt;strong&gt;这一开源化使得开发一款开源的 3D CAD 软件成为可能&lt;/strong&gt;，不然，从零开始编写一个 CAD 内核工作量将极为庞大。&lt;/li&gt;
&lt;li&gt;2001年1月，FreeCAD &lt;strong&gt;项目启动&lt;/strong&gt;，它由从事 Cas.CADE 项目的 Jürgen Riegel 开发。&lt;/li&gt;
&lt;li&gt;2005年，FreeCAD 只用不再用OpenCasCade的文档框架， 只用其CAD内核。&lt;/li&gt;
&lt;li&gt;2007年，切换到 Qt4&lt;/li&gt;
&lt;li&gt;2009年4月，版本0.7发布，它是第一个包含草稿模块的版本。零件模块提供了简单的 CSG 工作流程。&lt;/li&gt;
&lt;li&gt;2011年5月，版本0.11发布，引入了新的&lt;strong&gt;零件设计&lt;/strong&gt;工作台，其中包括 Pad、Pocket、Fillet 和 Chamfer 等工具&lt;/li&gt;
&lt;li&gt;2012年1月，版本0.12发布，具有更完整的 Sketcher 工作台。&lt;/li&gt;
&lt;li&gt;2014年7月，版本0.14发布，用PySide取代了PyQt，FreeCAD完全支持LGPL协议（&lt;strong&gt;FreeCAD is now fully LGPL&lt;/strong&gt;）。&lt;/li&gt;
&lt;li&gt;2024年11月，FreeCAD 1.0 发布&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;源码？&lt;/h2&gt;
&lt;h3 id="_3"&gt;巨人肩膀（第三方库）&lt;/h3&gt;
&lt;p&gt;打开About对话框，能看到它所用的库，很多都很眼熟&lt;/p&gt;
&lt;p&gt;&lt;img alt="freecad" src="https://blog.debao.me/images/simu/freecad-about.png"&gt;&lt;/p&gt;
&lt;p&gt;以下四个属于支柱：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open CASCADE （ CAD 内核）&lt;/li&gt;
&lt;li&gt;Coin3D（与 Open Inventor 兼容API的3D库）&lt;/li&gt;
&lt;li&gt;Qt（GUI框架）&lt;/li&gt;
&lt;li&gt;Python（脚本语言）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python和Qt，用在核心和几乎所有模块中。FreeCAD创建和管理所有的实体几何，采用了OpenCasCade；而管理3D视图，采用了coin3D。&lt;/p&gt;
&lt;h3 id="_4"&gt;代码结构&lt;/h3&gt;
&lt;p&gt;FreeCAD代码主要采用C++编程，但是重度依赖Python。FreeCAD的功能里，非常大的部分都提供相应的Python包装。FreeCAD的核心哲学之一，就是对任何C++开发的新属性，都要给出Python接口。&lt;/p&gt;
&lt;p&gt;FreeCAD的几乎所有功能都分成了两部分，称为App和Gui。&lt;/p&gt;
&lt;p&gt;源代码的基本文件夹结构如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;App&lt;/strong&gt;：包含FreeCAD的控制台模式应用。它定义了基本结构，它也为文档对象定义基础类。这些类被各个模块继承，用于创建各自的类。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Base&lt;/strong&gt;：包含FreeCAD里到处都用得到的核心功能性东西：3D向量，单位，矩阵，位置，等等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gui&lt;/strong&gt;：包含FreeCAD在GUI模式下的应用。它定义3D视图，也包含很多工具和函数，被工作台调用，用来与接口和3D视图互动。它为视图提供者定义基础类。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Doc&lt;/strong&gt;：包含一个文件，从FreeCAD的wiki生成的Qt帮助文件，是一个大全。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mod&lt;/strong&gt;：包含所有的模块。它们本身又进一步分割为App和Gui（除了python模块，它们并不总是清晰地遵从那条约定）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_5"&gt;构建&lt;/h3&gt;
&lt;p&gt;FreeCAD 使用 cmake构建。构建时，所依赖的第三库需要就位&lt;/p&gt;
&lt;p&gt;&lt;img alt="compilation" src="https://blog.debao.me/images/simu/FreeCAD_source_compilation_workflow.svg"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://wiki.freecad.org/Compile_on_Linux&lt;/li&gt;
&lt;li&gt;https://wiki.freecad.org/Compile_on_Windows&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_6"&gt;使用&lt;/h2&gt;
&lt;p&gt;&lt;img alt="demo" src="https://blog.debao.me/images/simu/freecad-demo-1.png"&gt;&lt;/p&gt;
&lt;h3 id="workbench"&gt;工作台（Workbench）&lt;/h3&gt;
&lt;p&gt;FreeCAD 与许多现代设计应用程序（例如 Revit 或 CATIA）一样，基于 工作台（Workbench） 的概念。&lt;/p&gt;
&lt;p&gt;工作台可以被看作是为完成特定任务而特别分组的一组工具。&lt;/p&gt;
&lt;p&gt;当从一个工作台切换到另一个工作台时，界面上可用的工具会发生变化。工具栏、命令栏以及界面中的其他部分会切换到新工作台的配置，但场景中的内容不会改变。例如，可以用 Sketcher 工作台 开始绘制 2D 图形，然后使用 Part Design工作台 进一步处理这些图形。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;工作台名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;功能描述&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;适用场景&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Std Base&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;提供通用命令和工具（如文件操作、视图控制），适用于所有工作台。&lt;/td&gt;
&lt;td&gt;基础操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Assembly 工作台&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;用于创建和求解机械装配体，支持装配约束和运动模拟。&lt;/td&gt;
&lt;td&gt;机械设计、产品开发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BIM 工作台&lt;/td&gt;
&lt;td&gt;用于建筑设计和 BIM 流程，结合 Arch 工作台和之前的外部 BIM 插件。&lt;/td&gt;
&lt;td&gt;建筑设计、工程建设&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CAM 工作台&lt;/td&gt;
&lt;td&gt;生成 G-Code 指令，用于数控加工（CNC）。之前称为 Path 工作台。&lt;/td&gt;
&lt;td&gt;制造业、数控加工&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Draft 工作台&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;提供 2D 几何绘制和基本的 2D/3D CAD 操作工具。&lt;/td&gt;
&lt;td&gt;建筑设计、2D 制图&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FEM 工作台&lt;/td&gt;
&lt;td&gt;提供有限元分析（FEA）工具，用于应力分析、热传导分析等。&lt;/td&gt;
&lt;td&gt;工程仿真、结构分析&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Inspection 工作台&lt;/td&gt;
&lt;td&gt;提供几何形状检查工具，目前处于早期开发阶段。&lt;/td&gt;
&lt;td&gt;几何验证、质量检查&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Material 工作台&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;管理材料系统，定义和分配材料到模型，并可视化材料属性。&lt;/td&gt;
&lt;td&gt;工程设计、材料分析&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mesh 工作台&lt;/td&gt;
&lt;td&gt;用于处理三角网格模型（如 STL/OBJ），支持修复和优化网格。&lt;/td&gt;
&lt;td&gt;3D 打印准备、模型修复&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OpenSCAD 工作台&lt;/td&gt;
&lt;td&gt;提供与 OpenSCAD 的互操作功能，支持代码生成几何体和修复模型历史。&lt;/td&gt;
&lt;td&gt;程序化建模、参数化设计&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Part 工作台&lt;/td&gt;
&lt;td&gt;提供几何体原件操作和布尔运算工具，用于基础 3D 建模。&lt;/td&gt;
&lt;td&gt;基础建模&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Part Design 工作台&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;基于草图的参数化零件建模，支持拉伸、切割、倒角等特征操作。&lt;/td&gt;
&lt;td&gt;零件设计、参数化建模&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Points 工作台&lt;/td&gt;
&lt;td&gt;用于导入和处理点云数据，并基于点云生成几何体。&lt;/td&gt;
&lt;td&gt;3D 扫描后处理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Sketcher 工作台&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;创建几何约束草图，支持参数化设计的基础构建工具。&lt;/td&gt;
&lt;td&gt;零件设计、草图绘制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spreadsheet 工作台&lt;/td&gt;
&lt;td&gt;创建和操作电子表格数据，支持引用表格值进行参数化建模。&lt;/td&gt;
&lt;td&gt;参数化设计、数据管理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Surface 工作台&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;提供曲面创建和修改工具，支持复杂曲面建模。&lt;/td&gt;
&lt;td&gt;自由曲面设计、高级建模&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;TechDraw 工作台&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;从 3D 模型生成技术图纸，支持 2D 投影视图、剖视图及标注。&lt;/td&gt;
&lt;td&gt;产品文档、工程图纸输出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Test Framework 工作台&lt;/td&gt;
&lt;td&gt;为 FreeCAD 开发者提供调试和单元测试工具，验证功能和修复的可靠性。&lt;/td&gt;
&lt;td&gt;FreeCAD 开发和调试&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="part-part-design"&gt;Part 与 Part Design&lt;/h3&gt;
&lt;p&gt;打开FreeCAD，首次看到这两个东西时，还挺困惑的&lt;/p&gt;
&lt;h4 id="_7"&gt;历史&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;FreeCAD 最初设计为使用构造实体几何（Constructive Solid Geometry，CSG）方法进行参数化操作【 Part 工作台】。&lt;/li&gt;
&lt;li&gt;后来，它通过 &lt;strong&gt;Part Design 工作台&lt;/strong&gt; 引入了特征编辑（Feature Editing）方法。例如通过 Pad（拉伸） 和 Pocket（切割） 等操作逐步构建零件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="csg-brep"&gt;CSG 与 BRep&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;不同于Part工作台使用使用CSG建模，Part Design 工作台使用 BRep（Boundary Representation，边界表示） 来表示几何体。FreeCAD 的几何内核基于 OpenCASCADE，它本身是一个支持 BRep 表示的强大几何建模内核。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;CSG（Constructive Solid Geometry）：Part 工作台中支持 CSG 方法，使用原始几何体（例如立方体、球体）通过布尔运算构建模型。&lt;/li&gt;
&lt;li&gt;BRep：Part Design 工作台则更偏向于基于 BRep 的逐步构建和特征编辑，支持更复杂的几何操作和细节调整。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_8"&gt;操作对比&lt;/h4&gt;
&lt;p&gt;下图是 两种工作台的下的操作方式对比：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;左侧 Part Design工作台下操作：始终基于一个实体进行特征编辑操作&lt;/li&gt;
&lt;li&gt;右侧 Part 工作台下操作：创建不同的实体，而后进行布尔操作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="vs" src="https://blog.debao.me/images/simu/freecad-partdesign-vs-part.png"&gt;&lt;/p&gt;
&lt;p&gt;另外，Part Design 与 Solidworks 在操作上可大致对应：&lt;/p&gt;
&lt;p&gt;&lt;img alt="part design 和 sw" src="https://blog.debao.me/images/simu/Features_and_Part_Design.png"&gt;&lt;/p&gt;
&lt;h2 id="_9"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/FreeCAD/FreeCAD&lt;/li&gt;
&lt;li&gt;https://wiki.freecad.org/Getting_started&lt;/li&gt;
&lt;li&gt;https://freecad.github.io/DevelopersHandbook/&lt;/li&gt;
&lt;li&gt;https://github.com/qingfengxia/FreeCAD_Mod_Dev_Guide&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/FreeCAD&lt;/li&gt;
&lt;li&gt;https://wiki.freecad.org/History&lt;/li&gt;
&lt;li&gt;https://wiki.freecad.org/PySide&lt;/li&gt;
&lt;/ul&gt;</content><category term="CAx"></category></entry><entry><title>浅谈Qt Designer中使用自定义控件的提升法</title><link href="https://blog.debao.me/2025/01/a-brief-discussion-on-promoting-custom-widgets-in-qt-designer/" rel="alternate"></link><published>2025-01-05T22:24:00+08:00</published><updated>2025-01-05T22:24:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2025-01-05:/2025/01/a-brief-discussion-on-promoting-custom-widgets-in-qt-designer/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;属于很老旧的内容了，简单写写，主要覆盖C++ Qt，PySide6，PyQt6。&lt;/p&gt;
&lt;p&gt;尽管PyQt6没有PySide6的LGPL协议友好，但是.ui动态加载这一块，确实比Pyside6要强不少。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#c"&gt;C++ 自定义控件&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;提升法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cqtui"&gt;C++Qt下.ui 如何用？（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cqtui_1"&gt;C++Qt下.ui …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;属于很老旧的内容了，简单写写，主要覆盖C++ Qt，PySide6，PyQt6。&lt;/p&gt;
&lt;p&gt;尽管PyQt6没有PySide6的LGPL协议友好，但是.ui动态加载这一块，确实比Pyside6要强不少。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#c"&gt;C++ 自定义控件&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;提升法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cqtui"&gt;C++Qt下.ui 如何用？（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cqtui_1"&gt;C++Qt下.ui 如何用？（二）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#pyside6"&gt;PySide6&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#pysideui"&gt;PySide下.ui用法（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pysideui_1"&gt;PySide下.ui用法（二）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pysideui_2"&gt;PySide下.ui用法（三）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#pyqt6"&gt;PyQt6&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#pyqtui"&gt;PyQt下.ui用法（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pyqtui_1"&gt;PyQt下.ui用法（二）！！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pyqtui_2"&gt;PyQt下.ui用法（三）！！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#pythonui"&gt;python下对.ui自定义控件路径处理&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#pyside6-uic"&gt;pyside6-uic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pyuic6"&gt;pyuic6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;很多人抱怨Qt Designer（或Qt Creator中的Designer）不好用，其中有一个很大原因是，不太了解如何在Designer中使用自定义控件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果我用C++写一个自定义按钮，比如QPushButton的派生类，如何在Designer中放置它？&lt;/li&gt;
&lt;li&gt;如果我用Python写一个自定义的Led控件，从QWidget派生的，如何在Designer中放置它？&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;正统的做法&lt;/strong&gt;有两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;插件法（Plugins）：实现 Qt Designer 的插件，使得自定义插件可以和内置的QPushButton等一样拖拽放置。【这个东西比较复杂，写库（供别人用）时会比较有用，单独自已用意义不大】&lt;/li&gt;
&lt;li&gt;提升法（Promotion）：&lt;strong&gt;简单直接&lt;/strong&gt;。只需要知道自定义控件所在文件名，比如xxxx.h 或 xxxx.py 等即可，即使设计ui时，这些文件不存在都没问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;本文通篇不考虑插件法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="c"&gt;C++ 自定义控件&lt;/h2&gt;
&lt;p&gt;考虑简单场景，我写好了一个支持行号、语法高亮以及自动补全的文本编辑器，比如，像下面这样：&lt;/p&gt;
&lt;p&gt;&lt;img alt="code edit" src="https://blog.debao.me/images/qt/my_codeedit.png"&gt;&lt;/p&gt;
&lt;p&gt;对应代码大概这样：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;DEBAO_WIDGETS_EXPORT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CodeEdit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;QPlainTextEdit&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Q_OBJECT&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;CodeEdit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QWidget&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;CodeEdit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;override&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;isLineNumberVisible&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;QCompleter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nf"&gt;completer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;slots&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;setLineNumberVisible&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;setCompleter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QCompleter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;如何将其加入到designer的.ui文件中??&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="_1"&gt;提升法&lt;/h3&gt;
&lt;p&gt;我们这个edit是从QPlainTextEdit派生的，所以只需要在designer拖拽一个 QPlainTextEdit 上去就行了：&lt;/p&gt;
&lt;p&gt;&lt;img alt="promotion" src="https://blog.debao.me/images/qt/designer_promotion.png"&gt;&lt;/p&gt;
&lt;p&gt;然后提升它，注意输入：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;类的名字（在C++下，可包含namespace信息，比如 &lt;code&gt;Xxxx::Yyy::CodeEdit&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;头文件的名字（可包含路径信息，比如 &lt;code&gt;xxx/bbb.h&lt;/code&gt;，Python会自动处理这种情况）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;这样就可以了。注意本文8个例子，使用的均是这一个.ui文件。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其实，我们直接拖拽一个QWidget上去，然后提升到CodeEdit也是完全可以的。只是右侧属性栏内容不太一样，designer阶段显示不够友好。但完全不影响后期运行效果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="cqtui"&gt;C++Qt下.ui 如何用？（一）&lt;/h3&gt;
&lt;p&gt;常规用法，将其转换成 .cpp 文件（cmake或qmake可以自动进行这个操作），执行如下命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;uic&lt;span class="w"&gt; &lt;/span&gt;dialog.ui&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;ui_dialog.cpp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;生成文件&lt;code&gt;ui_dialog.cpp&lt;/code&gt;如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;QtCore/QVariant&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;QtWidgets/QApplication&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;QtWidgets/QDialog&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;QtWidgets/QVBoxLayout&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;quot;codeedit.h&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;QT_BEGIN_NAMESPACE&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Ui_Dialog&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;QVBoxLayout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;verticalLayout&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;CodeEdit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;plainTextEdit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;setupUi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QDialog&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;里面用到了，我们设定的头文件 和 类名。仅此而已！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;c++文件生成后，在代码中怎么用它就灵活了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单继承方式&lt;/li&gt;
&lt;li&gt;多重继承方式&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="cqtui_1"&gt;C++Qt下.ui 如何用？（二）&lt;/h3&gt;
&lt;p&gt;除了上面的常规用法，.ui 文件更灵活的用法是通过 QUiLoader 动态加载。&lt;/p&gt;
&lt;p&gt;同样，由于要通过.ui文件动态加载自定义控件，这儿有两个路线可以选：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把自定义控件做成插件，供QUiLoader 使用。【自从有了Qt Creator，我个人就不再喜欢插件法。因为Qt Creator的版本和我们所用Qt的版本通常不一样，插件需要做两份】&lt;/li&gt;
&lt;li&gt;派生QUiLoader，实现其&lt;code&gt;createWidget()&lt;/code&gt;以便于其运行时完成自定义控件的创建。【写起来还好，至少也很直观！！简单】&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;派生QUiLoader，示例代码如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;quot;uiloader.h&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;quot;codeedit.h&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;UiLoader&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;UiLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QObject&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;QUiLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="n"&gt;QWidget&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;UiLoader&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;createWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;QString&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;QWidget&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;QString&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;CodeEdit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CodeEdit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;QUiLoader&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;createWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;然后就可以用它来加载我们的包含自定义控件的 .ui 文件了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;UiLoader&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;QFile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;qApp&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;applicationDirPath&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/../../dialog.ui&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QFile&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ReadOnly&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;QWidget&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;myWidget&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;myWidget&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="pyside6"&gt;PySide6&lt;/h2&gt;
&lt;p&gt;和 C++ 相对应，ui在PySide下主要也有两类用法。但是由于Python更灵活，所以还是有所不同...&lt;/p&gt;
&lt;h3 id="pysideui"&gt;PySide下.ui用法（一）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;不知道你有没有疑惑？ 在前面的ui文件中，我们指定的是 C++ 自定义控件的类名和头文件，那么这个文件怎么可以用于python呢？？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;常规用法，将前面的列出的.ui文件直接转换成 .py 文件，执行如下命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyside6-uic&lt;span class="w"&gt; &lt;/span&gt;dialog.ui&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;ui_dialog.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;内容大致如下（注意看，codeedit.h 没有对python造成困扰，它直接认为是模块 codeedit）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PySide6.QtCore&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QCoreApplication&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QMetaObject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QObject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Qt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PySide6.QtWidgets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QDialog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QSizePolicy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QVBoxLayout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QWidget&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;codeedit&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CodeEdit&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Ui_Dialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setupUi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objectName&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setObjectName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Dialog&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verticalLayout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QVBoxLayout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verticalLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setObjectName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;verticalLayout&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plainTextEdit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CodeEdit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plainTextEdit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setObjectName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;plainTextEdit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verticalLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plainTextEdit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;retranslateUi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;QMetaObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connectSlotsByName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# setupUi&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;retranslateUi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setWindowTitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QCoreApplication&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Dialog&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1+1=10&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="c1"&gt;# retranslateUi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;python文件生成了，在代码中怎么用就灵活了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单继承方式&lt;/li&gt;
&lt;li&gt;多重继承方式&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="pysideui_1"&gt;PySide下.ui用法（二）&lt;/h3&gt;
&lt;p&gt;依然和C++下的用法二一样，不过Python下写代码比C++简单，下面是完整的可运行的伪代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# codeedit.py&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os.path&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PySide6.QtWidgets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QPlainTextEdit&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PySide6.QtUiTools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QUiLoader&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PySide6.QtCore&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QFile&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CodeEdit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QPlainTextEdit&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;appendPlainText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello 1+1=10&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UiLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QUiLoader&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;createWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;className&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;CodeEdit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;CodeEdit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;createWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;([])&lt;/span&gt;

    &lt;span class="n"&gt;loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UiLoader&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dialog.ui&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QFile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadOnly&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;逻辑和C++的完全一样，派生QUiLoader并实现的其createWidget()成员。&lt;/p&gt;
&lt;h3 id="pysideui_2"&gt;PySide下.ui用法（三）&lt;/h3&gt;
&lt;p&gt;不同于C++，在PySide下，还有一种用法。使用 &lt;code&gt;loadUiType&lt;/code&gt;（这个应该是抄袭的PyQt的&lt;strong&gt;接口&lt;/strong&gt;，内部实现方法差异很大）&lt;/p&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这个函数在运行时加载.ui并生成相应的 Python 类和基类&lt;/li&gt;
&lt;li&gt;Qt官方建议使用本文提到的方法一（手动调用 &lt;code&gt;pyside6-uic&lt;/code&gt; 的方法）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;尤其要注意，官方说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The internal process relies on uic being in the PATH. The pyside6-uic wrapper uses a shipped uic that is located in the site-packages/PySide6/uic, so PATH needs to be updated to use that if there is no uic in the system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不管怎样，为了完整期间，一个可运行的例子如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os.path&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PySide6.QtUiTools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;loadUiType&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PySide6.QtWidgets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QDialog&lt;/span&gt;


&lt;span class="n"&gt;Ui_Dialog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;base_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;loadUiType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dialog.ui&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QDialog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Ui_Dialog&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setupUi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;([])&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;该例子运行时会使用我们一开始的.ui文件，以及用法二中给出的 codeedit.py 文件。&lt;/p&gt;
&lt;h2 id="pyqt6"&gt;PyQt6&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;PyQt历史比较久，资料更多，对ui文件的支持，也更强大，但由于GPL授权问题，我个人用它机会比较少。为了和PySide对比，还是简单写写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="pyqtui"&gt;PyQt下.ui用法（一）&lt;/h3&gt;
&lt;p&gt;常规用法，将前面的列出的.ui文件直接转换成 .py 文件，执行如下命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyuic6&lt;span class="w"&gt; &lt;/span&gt;dialog.ui&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;ui_dialog.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;注意和pyside6的命令区分。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;生成结果如下（处理方式一样, codeedit.h 被它作为python模块 codedit）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PyQt6&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QtWidgets&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Ui_Dialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setupUi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setObjectName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Dialog&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verticalLayout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtWidgets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QVBoxLayout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verticalLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setObjectName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;verticalLayout&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plainTextEdit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CodeEdit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plainTextEdit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setObjectName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;plainTextEdit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verticalLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plainTextEdit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;retranslateUi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QMetaObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connectSlotsByName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;retranslateUi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;_translate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QCoreApplication&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;translate&lt;/span&gt;
        &lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setWindowTitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Dialog&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1+1=10&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;codeedit&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CodeEdit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;有了这个py文件，使用时可以直接用，或者单继承或多重继承&lt;/p&gt;
&lt;p&gt;另外，不同于 PySide下的uic，PyQt下的uic还支持其他的命令行参数，比如&lt;code&gt;-x&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyuic6 dialog.ui -o ui_dialog.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;这样一来，生成的代码中会包含如下片段（编写小的demo时可能有用，或者作为使用参照）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtWidgets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;Dialog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtWidgets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QDialog&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;ui&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Ui_Dialog&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setupUi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="pyqtui_1"&gt;PyQt下.ui用法（二）！！&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，PyQt 没有提供 QtUiTools模块的封装，所以不能像C++ Qt和 PySide下那么用 QtUiTools。但是&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;PyQt 自己用 python 实现了一个 uic 模块！！该模块有如下接口：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;PyQt6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loadUi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uifile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;baseinstance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;可运行的示例代码如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os.path&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PyQt6.QtWidgets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QPlainTextEdit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QDialog&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PyQt6&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;uic&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CodeEdit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QPlainTextEdit&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;appendPlainText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello 1+1=10&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QDialog&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;uic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loadUi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dialog.ui&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;([])&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;和PySide的用法二比较一下，可知 PyQt6的更简洁。毕竟它是 PyQt重写的，而不是对C++的 QtUiTools的简单封装。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="pyqtui_2"&gt;PyQt下.ui用法（三）！！&lt;/h3&gt;
&lt;p&gt;PyQt 的uic模块也提供 loadUiType 函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;PyQt6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loadUiType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uifile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;用起来和PySide下面几乎一样（毕竟PySide 仿制的对象就是PyQt），但是没有PySide的毛病，所以可以放心用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os.path&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PyQt6.uic&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;loadUiType&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PyQt6.QtWidgets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QDialog&lt;/span&gt;


&lt;span class="n"&gt;Ui_Dialog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;base_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;loadUiType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dialog.ui&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QDialog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Ui_Dialog&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setupUi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;([])&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="pythonui"&gt;python下对.ui自定义控件路径处理&lt;/h2&gt;
&lt;p&gt;回到我们开头提到的自定义控件，需要指定头文件。但头文件时 c/c++ 下的概念，我们看看 python 下如何处理的：&lt;/p&gt;
&lt;h3 id="pyside6-uic"&gt;pyside6-uic&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;如果头文件有&lt;code&gt;.h&lt;/code&gt;、&lt;code&gt;.hpp&lt;/code&gt;、&lt;code&gt;.hh&lt;/code&gt; 后缀，则去掉后缀&lt;/li&gt;
&lt;li&gt;如果文件中有路径分隔符&lt;code&gt;/&lt;/code&gt;，则替换成 &lt;code&gt;.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;WriteImports::addPythonCustomWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;QString&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DomCustomWidget&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;::&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;_L1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// Exclude namespaced names (just to make tests pass).&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addQtClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// Qt custom widgets like QQuickWidget, QAxWidget, etc&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// When the elementHeader is not set, we know it&amp;#39;s the continuation&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// of a Qt for Python import or a normal import of another module.&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;elementHeader&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;elementHeader&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;isEmpty&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;m_plainCustomWidgets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// When we do have elementHeader, we know it&amp;#39;s a relative import.&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;QString&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;modulePath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;elementHeader&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// Replace the &amp;#39;/&amp;#39; by &amp;#39;.&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;modulePath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// &amp;#39;.h&amp;#39; is added by default on headers for &amp;lt;customwidget&amp;gt;.&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;modulePath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.h&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;_L1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Qt&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;CaseInsensitive&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;modulePath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;modulePath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.hh&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;_L1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;modulePath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;modulePath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.hpp&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;_L1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;modulePath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;insertClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;modulePath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;m_customWidgets&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="pyuic6"&gt;pyuic6&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;如果头文件以 &lt;code&gt;.h&lt;/code&gt; 结尾，直接去掉后缀&lt;/li&gt;
&lt;li&gt;如果有路径分割符 &lt;code&gt;/&lt;/code&gt; ,则替换成 &lt;code&gt;.&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;源码逻辑：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;header2module&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;header2module(header) -&amp;gt; strin&lt;/span&gt;
&lt;span class="sd"&gt;    Convert paths to C++ header files to according Python modules&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; header2module(&amp;quot;foo/bar/baz.h&amp;quot;)&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;foo.bar.baz&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.h&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;header&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="n"&gt;mpath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;part&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Ignore any empty parts or those that refer to thcurrent&lt;/span&gt;
        &lt;span class="c1"&gt;# directory.&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;part&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;part&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;..&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="c1"&gt;# We should allow this for Python3.&lt;/span&gt;
                &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;SyntaxError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;custom widget header filname may not contain &amp;#39;..&amp;#39;.&amp;quot;&lt;/span&gt;
            &lt;span class="n"&gt;mpath&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;part&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_2"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://doc.qt.io/qt-6/designer-using-custom-widgets.html&lt;/li&gt;
&lt;li&gt;https://doc.qt.io/qtforpython-6/PySide6/QtUiTools/index.html&lt;/li&gt;
&lt;li&gt;https://www.riverbankcomputing.com/static/Docs/PyQt6/designer.html#pyuic6&lt;/li&gt;
&lt;li&gt;https://www.riverbankcomputing.com/static/Docs/PyQt6/api/uic/uic-module.html#PyQt6.uic.loadUi&lt;/li&gt;
&lt;li&gt;https://github.com/qt/qtbase/blob/dev/src/tools/uic&lt;/li&gt;
&lt;/ul&gt;</content><category term="Qt"></category><category term="Qt"></category><category term="Python"></category><category term="pyside"></category></entry><entry><title>Jupyter 学习小记（一）</title><link href="https://blog.debao.me/2025/01/jupyter-learning-notes-1/" rel="alternate"></link><published>2025-01-04T10:08:00+08:00</published><updated>2025-01-04T10:08:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2025-01-04:/2025/01/jupyter-learning-notes-1/</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;简介&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#jupyter"&gt;Jupyter 是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;安装&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#jupyterlab"&gt;安装 jupyterlab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#jupyter-console"&gt;安装 jupyter-console&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#qtconsole"&gt;安装 qtconsole&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#notebook"&gt;安装 notebook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#ipynb"&gt;.ipynb&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_4"&gt;方括号？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;魔法指令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#shell"&gt;Shell 命令&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;扩展？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_7"&gt;注意事项&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#kernel"&gt;内核管理（Kernel）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_8"&gt;单元格的运行 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;简介&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#jupyter"&gt;Jupyter 是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;安装&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#jupyterlab"&gt;安装 jupyterlab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#jupyter-console"&gt;安装 jupyter-console&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#qtconsole"&gt;安装 qtconsole&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#notebook"&gt;安装 notebook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#ipynb"&gt;.ipynb&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_4"&gt;方括号？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;魔法指令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#shell"&gt;Shell 命令&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;扩展？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_7"&gt;注意事项&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#kernel"&gt;内核管理（Kernel）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_8"&gt;单元格的运行顺序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_9"&gt;文件路径问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_10"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;简介&lt;/h2&gt;
&lt;h3 id="jupyter"&gt;Jupyter 是什么？&lt;/h3&gt;
&lt;p&gt;Jupyter（发音 /ˈdʒuːpɪtər/ ）是一个开源的&lt;strong&gt;交互式计算&lt;/strong&gt;(interactive computing)项目，起源于数据科学和科学计算领域，目的是为用户提供一种整合代码、文档、数学公式和可视化的直观工具。它的历史可以追溯到 IPython 项目，逐步演变为如今广泛使用的 Jupyter 生态系统。&lt;/p&gt;
&lt;p&gt;&lt;img alt="icon" src="https://blog.debao.me/images/python/jupyter-rectanglelogo-greytext-orangebody-greymoons.svg"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jupyter 的名称源于其所支持的三种核心编程语言，即 &lt;strong&gt;Ju&lt;/strong&gt;lia、&lt;strong&gt;Pyt&lt;/strong&gt;hon 和 &lt;strong&gt;R&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;它的名字和标志是对伽利略（Galileo）发现木星（Jupiter）卫星的致敬。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="notebook" src="https://blog.debao.me/images/python/jupyter_notebook.png"&gt;&lt;/p&gt;
&lt;p&gt;一个典型的 Jupyter Notebook 文件的后缀是 .ipynb，它由一系列的 单元格（Cell） 组成，主要分为以下两种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码单元格（Code Cell）：&lt;ul&gt;
&lt;li&gt;用于编写代码。&lt;/li&gt;
&lt;li&gt;支持即时运行，并在单元格下方显示结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Markdown 单元格（Markdown Cell）：&lt;ul&gt;
&lt;li&gt;用于编写文档，支持 Markdown 语法。&lt;/li&gt;
&lt;li&gt;可以插入标题、文本、列表、公式（LaTeX 语法）等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;历史&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2001 年：IPython 项目诞生，由 Fernando Pérez 开发，作为增强版的 Python 交互式命令行工具。&lt;/li&gt;
&lt;li&gt;2011 年：发布 IPython Notebook，支持代码、文本、数学公式和可视化的集成开发环境。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2014 年&lt;/strong&gt;：IPython Notebook 更名为 &lt;strong&gt;Jupyter&lt;/strong&gt; Notebook，支持多种语言（如 Python、R、Julia）。&lt;/li&gt;
&lt;li&gt;2015 年：Jupyter Notebook 在数据科学和教学领域迅速普及，成为主流工具。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2018 年&lt;/strong&gt;：推出 &lt;strong&gt;JupyterLab&lt;/strong&gt;，作为下一代用户界面，支持更复杂的项目开发。&lt;/li&gt;
&lt;li&gt;2023 年：发布 Jupyter Notebook 7，基于 JupyterLab 技术栈，升级经典 Notebook。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_3"&gt;安装&lt;/h3&gt;
&lt;h4 id="jupyterlab"&gt;安装 jupyterlab&lt;/h4&gt;
&lt;p&gt;&lt;img alt="jupyter lab" src="https://blog.debao.me/images/python/jupyter_lab.png"&gt;&lt;/p&gt;
&lt;p&gt;通过&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;jupyterlab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或者&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-c&lt;span class="w"&gt; &lt;/span&gt;conda-forge&lt;span class="w"&gt; &lt;/span&gt;jupyterlab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;安装完成后，在site-packages下会有如下一堆包&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;模块&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;功能简介&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;jupyter_client&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;管理前端与 Kernel 的通信。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;jupyter_core&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;提供核心配置和工具，是整个生态的基础模块。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;jupyter_events&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;处理事件流和内部通信。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;jupyter_lsp&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;提供语言服务器协议支持，增强代码编辑体验（如补全、检查）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;jupyter_server&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;核心服务器，管理文件系统、Kernel 会话和 REST API。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;jupyterlab&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;JupyterLab 的前端界面，提供现代化的交互式开发环境。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;jupyterlab_server&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;支持 JupyterLab 的扩展和静态文件服务。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;jupyterlab_pygments&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;提供代码语法高亮功能，基于 Pygments 实现。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在Scripts下，更是一堆可执行程序（以Windows为例），比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;jupyter.exe&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;jupyter-dejavu.exe&lt;/li&gt;
&lt;li&gt;jupyter-kernel.exe&lt;/li&gt;
&lt;li&gt;jupyter-kernelspec.exe&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;jupyter-lab.exe&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;jupyter-labextension.exe&lt;/li&gt;
&lt;li&gt;jupyter-labhub.exe&lt;/li&gt;
&lt;li&gt;jupyter-migrate.exe&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;jupyter-nbconvert.exe&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;jupyter-run.exe&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;jupyter-server.exe&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;jupyter-troubleshoot.exe&lt;/li&gt;
&lt;li&gt;jupyter-trust.exe&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;执行如下命令，会调用jupyter-lab 来启动浏览器界面&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jupiter lab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="jupyter-console"&gt;安装 jupyter-console&lt;/h4&gt;
&lt;p&gt;jupyter-console 是 Jupyter 提供的一个 基于命令行的交互式计算环境，它允许用户通过终端（或命令行）直接与 Jupyter Kernel 进行交互。&lt;/p&gt;
&lt;p&gt;&lt;img alt="jupyter console" src="https://blog.debao.me/images/python/jupyter_console.png"&gt;&lt;/p&gt;
&lt;p&gt;安装：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;jupyter-console
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;执行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jupyter console
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无需图形界面，比 Jupyter Notebook 或 JupyterLab 的图形界面更轻量。&lt;/li&gt;
&lt;li&gt;类似于 IPython，但支持 Jupyter 的多语言 Kernel&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="qtconsole"&gt;安装 qtconsole&lt;/h4&gt;
&lt;p&gt;&lt;img alt="qtconsole" src="https://blog.debao.me/images/python/jupyter_qtconsole.png"&gt;&lt;/p&gt;
&lt;p&gt;QtConsole 是 Jupyter 生态系统中的一个 图形化的交互式控制台，提供了类似于命令行的界面，但比终端更强大、更直观。它基于 Qt 框架开发，支持丰富的功能，包括代码高亮、内嵌图形显示、Markdown 渲染等。&lt;/p&gt;
&lt;p&gt;安装（它依赖于PyQt或PySide）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda install qtconsole
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;运行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jupyter qtconsole
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="notebook"&gt;安装 notebook&lt;/h4&gt;
&lt;p&gt;&lt;img alt="notebook" src="https://blog.debao.me/images/python/jupyter_notebook.png"&gt;&lt;/p&gt;
&lt;p&gt;安装：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda install -c anaconda notebook
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;运行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jupyter notebook
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="ipynb"&gt;.ipynb&lt;/h2&gt;
&lt;p&gt;.ipynb 是 Jupyter Notebook 的文件格式，全称是 "Interactive Python Notebook"。它是 Jupyter Notebook 使用的核心文件类型，支持 代码、文本、图表 和 交互式内容 的组合，是一种用于交互式计算的文档格式。&lt;/p&gt;
&lt;p&gt;.ipynb 文件的结构是基于 JSON（JavaScript Object Notation） 的纯文本文件。它可以分为以下几个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cells：存储每个单元格的内容，包括代码、Markdown 文本等。&lt;/li&gt;
&lt;li&gt;metadata：Notebook 的全局元数据，例如 Kernel 和语言信息。&lt;/li&gt;
&lt;li&gt;nbformat 和 nbformat_minor：文件格式的版本号。&lt;/li&gt;
&lt;li&gt;outputs：存储代码单元的执行结果，包括文本输出、图形、错误信息等。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;cells&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;cell_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;code&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;execution_count&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0ca5ef4a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;metadata&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;outputs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;stdout&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;output_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;stream&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello, 1+1=10!\n&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;print(&amp;#39;Hello, 1+1=10!&amp;#39;)&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;cell_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;markdown&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;6dd9d4f5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;metadata&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;# This is a Markdown cell\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;You can write text here.&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;metadata&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;kernelspec&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;display_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Python 3 (ipykernel)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;language&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;python3&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;language_info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;codemirror_mode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ipython&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;file_extension&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;mimetype&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text/x-python&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;nbconvert_exporter&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;pygments_lexer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ipython3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3.12.8&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;nbformat&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;nbformat_minor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_4"&gt;方括号？&lt;/h3&gt;
&lt;p&gt;&lt;img alt="notebook" src="https://blog.debao.me/images/python/jupyter_notebook_2.png"&gt;&lt;/p&gt;
&lt;p&gt;方括号中的数字表示该单元格 被执行的顺序。每次运行一个代码单元时，Jupyter 会为其分配一个递增的执行计数。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一个运行的单元格显示 &lt;code&gt;[1]&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;第二个运行的单元格显示 &lt;code&gt;[2]&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;第三个运行的单元格显示 &lt;code&gt;[3]&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;如果单元格 &lt;strong&gt;未被运行过&lt;/strong&gt;，方括号会显示为空白：&lt;code&gt;[ ]&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;如果 &lt;strong&gt;再次运行&lt;/strong&gt; 某个单元格，数字会更新为最新的执行顺序。如果之前某个单元格的方括号是 &lt;code&gt;[2]&lt;/code&gt;，再次运行后会更新为当前的执行计数（如 &lt;code&gt;[5]&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;如果 &lt;strong&gt;重新启动&lt;/strong&gt; 了 Kernel，所有的执行计数会重置。所有单元格的方括号会变成 &lt;code&gt;[ ]&lt;/code&gt;，表示未执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_5"&gt;魔法指令&lt;/h3&gt;
&lt;p&gt;Jupyter的魔法命令（Magic Commands）用于简化操作和扩展 Notebook 的功能。分为两种类型：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;行魔法命令（Line Magics）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以单个 % 开头。&lt;/li&gt;
&lt;li&gt;只作用于当前 行。&lt;/li&gt;
&lt;li&gt;一行中只能包含魔法命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;魔法命令&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;功能&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%time&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;测量 &lt;strong&gt;一行代码&lt;/strong&gt; 的执行时间。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%timeit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;多次运行 &lt;strong&gt;一行代码&lt;/strong&gt; 并测量平均执行时间。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%pwd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示当前工作目录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%ls&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;列出当前目录中的文件和文件夹。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%env&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;列出当前环境变量。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%who&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;列出当前会话中的变量。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%pip install&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;安装 Python 包（等同于在终端中运行 &lt;code&gt;pip install&lt;/code&gt;）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%debug&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;进入调试模式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;...&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;....&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;单元魔法命令（Cell Magics）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以两个 %% 开头。&lt;/li&gt;
&lt;li&gt;作用于整个 单元格。&lt;/li&gt;
&lt;li&gt;单元格中可以包含多行代码或指令。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;魔法命令&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;功能&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%%time&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;测量 &lt;strong&gt;整个单元格&lt;/strong&gt; 的执行时间。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%%timeit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;多次运行 &lt;strong&gt;整个单元格&lt;/strong&gt; 并测量平均执行时间。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%%writefile&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将单元格中的内容写入一个文件中。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%%capture&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;捕获单元格中的输出（标准输出和标准错误），可以保存到变量中。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%%bash&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在单元格中运行 Bash 命令。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%%HTML&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;渲染 HTML 代码。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%%latex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;渲染 LaTeX 代码。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%%script&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在单元格中运行不同语言的脚本（如 Python、Ruby、Perl 等，需安装对应的内核）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;...&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;....&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="shell"&gt;Shell 命令&lt;/h3&gt;
&lt;p&gt;在 Jupyter 中，还可以使用以 ! 开头的命令。这些命令并不属于 Jupyter 的魔法命令（Magic Commands），而是调用系统的 Shell 环境执行命令。&lt;/p&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="sx"&gt;!dir&lt;/span&gt;
&lt;span class="sx"&gt;!ls&lt;/span&gt;
&lt;span class="sx"&gt;!pip install numpy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_6"&gt;扩展？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/jupyterlab/extension-examples&lt;/li&gt;
&lt;li&gt;https://jupyterlab.readthedocs.io/en/4.2.x/user/extensions.html&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 jupyter lab 启动的界面中，可以查看和安装扩展&lt;/p&gt;
&lt;p&gt;&lt;img alt="ext" src="https://blog.debao.me/images/python/jupyter_lab_extensions.png"&gt;&lt;/p&gt;
&lt;p&gt;如果，在命令行下，那么&lt;/p&gt;
&lt;p&gt;查看已安装扩展：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jupyter labextension list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;安装扩展，使用pip或conda，比如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install jupyterlab-code-formatter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_7"&gt;注意事项&lt;/h2&gt;
&lt;h3 id="kernel"&gt;内核管理（Kernel）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Jupyter Notebook 的代码执行依赖一个运行中的 内核（Kernel），它的状态会直接影响 Notebook 的运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;所有单元格共享一个内核（即所有变量、函数、导入的模块在内核中是全局可见的）。&lt;/li&gt;
&lt;li&gt;变量的值会随着单元格的执行而变化，即使重新运行某些单元格，之前的变量值可能仍然存在。&lt;/li&gt;
&lt;li&gt;重启内核后，所有之前运行的变量都会消失，需要重新运行相关单元格。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_8"&gt;单元格的运行顺序&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Jupyter Notebook 的单元格可以按任意顺序运行，这可能导致代码之间的依赖关系出现问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;从头运行所有单元格：使用 Kernel &amp;gt; Restart &amp;amp; Run All，确保代码按正确顺序运行。&lt;/li&gt;
&lt;li&gt;保持单元格的逻辑性：将相互依赖的代码放在相邻的单元格中，便于维护和运行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_9"&gt;文件路径问题&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Notebook 的工作目录（当前路径）是启动 Jupyter 的目录，而不是 Notebook 文件所在的目录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;相对路径问题：在 Notebook 中使用相对路径加载文件（如 data/file.csv），路径是相对于运行 Jupyter 的工作目录，而不是 Notebook 的文件位置。&lt;/li&gt;
&lt;li&gt;切换路径可能引发混淆：如在 Notebook 中切换了 os.getcwd()，后续路径引用可能会出错&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_10"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://jupyter.org&lt;/li&gt;
&lt;li&gt;https://github.com/jupyter&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Project_Jupyter&lt;/li&gt;
&lt;li&gt;https://jupyterlab-contrib.github.io/migrate_from_classical.html&lt;/li&gt;
&lt;/ul&gt;</content><category term="Python"></category></entry><entry><title>混乱的字符集编码</title><link href="https://blog.debao.me/2025/01/chaotic-character-encodings/" rel="alternate"></link><published>2025-01-02T10:50:00+08:00</published><updated>2025-01-02T10:50:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2025-01-02:/2025/01/chaotic-character-encodings/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;ASCII，Latin1，GBK，Utf8，...
字符集编码，乍一听似乎是一个简单的东西，但它却隐藏着丰富的历史故事（乱）和复杂的技术细节（杂）...，
不妨抛开细 …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;ASCII，Latin1，GBK，Utf8，...
字符集编码，乍一听似乎是一个简单的东西，但它却隐藏着丰富的历史故事（乱）和复杂的技术细节（杂）...，
不妨抛开细节和完整性，简单写写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#python"&gt;从Python开始？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#python_1"&gt;初识 Python 内置编码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;获取编码名&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;太多了，怎么看？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#ebcdic-8bit1963"&gt;EBCDIC 编码（8bit），1963&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ascii-7bit1967"&gt;ASCII 标准诞生（7bit），1967&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ascii"&gt;ASCII 扩展：商业公司&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#ibmxxx"&gt;IBMxxx 扩展&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#apple"&gt;Apple 扩展&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#ascii-iso-8859"&gt;ASCII 扩展：ISO 8859 系列标准&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#iso-8859-1-windows-1252"&gt;ISO-8859-1 扩展：Windows-1252&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#html5-iso-8859-1-windows-1252"&gt;HTML5 的妥协：将 ISO-8859-1 视为 Windows-1252&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#windows-125x"&gt;Windows-125x 字符集&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#gb2312gbkgb18030"&gt;中文编码：GB2312、GBK、GB18030&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#gb2312"&gt;GB2312：区位码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gbk"&gt;GBK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gb18030"&gt;GB18030&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#big5big5-hkscs"&gt;中文编码：Big5、Big5-HKSCS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#iso-2022-cn"&gt;ISO-2022-CN&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#eucextended-unix-code"&gt;EUC（Extended Unix Code）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#unicode"&gt;Unicode&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#unicode-ucs"&gt;Unicode 与 UCS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ucs-2ucs-4utf-8utf-16utf-32"&gt;UCS-2、UCS-4、UTF-8、UTF-16、UTF-32&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;附表&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_4"&gt;标准&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#iana"&gt;IANA 字符集注册表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ansi"&gt;ANSI 编码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#python_2"&gt;Python内置编码的列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#qt"&gt;Qt支持的编码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="python"&gt;从Python开始？&lt;/h2&gt;
&lt;p&gt;都2025年了，尽管 &lt;a href="https://blog.debao.me/2024/01/exploring-cpp-character-types/"&gt;C++引入了一个又一个字符类型&lt;/a&gt; ，但即便是在最简单的UTF-8编码上，&lt;a href="https://blog.debao.me/2024/12/casual-talk-on-utf-8-support-in-c++-and-windows/"&gt;C++仍在苦苦挣扎&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;所以我们还是从Python3开始吧，毕竟和C/C++，甚至是Python2相比，它非常简单，不是么？&lt;/p&gt;
&lt;h3 id="python_1"&gt;初识 Python 内置编码&lt;/h3&gt;
&lt;p&gt;不考虑别名的话，Python也支持将近百种编码，可以列个表格（本文重点关注标红和标绿的部分）：&lt;/p&gt;
&lt;p&gt;&lt;img alt="codec" src="https://blog.debao.me/images/tools/codec_table.png"&gt;&lt;/p&gt;
&lt;p&gt;尽管看起来还是很杂，但上面表格已经做了很多简化。比如，表中ascii只列出2个别名，其实在Python下，单单一个ascii，有如下一堆别名：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;646&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ansi_x3.4_1968&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ansi_x3.4_1986&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ansi_x3_4_1968&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cp367&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;csascii&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ibm367&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iso646_us&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iso_646.irv_1991&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iso_ir_6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;us&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;us_ascii&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_1"&gt;获取编码名&lt;/h3&gt;
&lt;p&gt;要获得python内置的完整的编码列表，可通过如下python代码输出：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;encodings&lt;/span&gt;

&lt;span class="n"&gt;aliases&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;encodings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;aliases&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;aliases&lt;/span&gt;

&lt;span class="n"&gt;codec_map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;alias&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;main_name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;aliases&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;codec_map&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setdefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 按编码名字排序并输出&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;编码&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;20&lt;/span&gt;&lt;span class="si"&gt;}{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;别名&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;main_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alias_list&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;codec_map&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;()):&lt;/span&gt;
    &lt;span class="n"&gt;aliases_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alias_list&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;main_name&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;20&lt;/span&gt;&lt;span class="si"&gt;}{&lt;/span&gt;&lt;span class="n"&gt;aliases_str&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_2"&gt;太多了，怎么看？&lt;/h2&gt;
&lt;p&gt;按时间先后看看，挑几个关键节点看看？？&lt;/p&gt;
&lt;h3 id="ebcdic-8bit1963"&gt;EBCDIC 编码（8bit），1963&lt;/h3&gt;
&lt;p&gt;在 ASCII 之前，已经存在 EBCDIC 编码，但是EBCDIC 是 IBM 的专有编码，不是开放标准。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BCD：全称 Binary Coded Decimal（二进制编码十进制），起源于1940年代&lt;/li&gt;
&lt;li&gt;EBCDIC：全称 Extended Binary Coded Decimal Interchange Code（扩展二进制编码十进制交换码），1963年，IBM推出基于BCD的扩展，主要用于IBM大型机。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;EBCDIC 有超过186种变体（代码页）。前面表格中出现的，以下编码，属于 EBCDIC 的变种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CP037&lt;/li&gt;
&lt;li&gt;CP424&lt;/li&gt;
&lt;li&gt;CP500&lt;/li&gt;
&lt;li&gt;CP875&lt;/li&gt;
&lt;li&gt;CP1026&lt;/li&gt;
&lt;li&gt;CP1140&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ascii-7bit1967"&gt;ASCII 标准诞生（7bit），1967&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;ASCII，发音 /ˈæskiː/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;随着个人计算机（PC）的普及，ASCII 成为跨平台的通用编码。而由于 ASCII 与 EBCDIC 不兼容，ASCII 的普及也推动了 EBCDIC 的边缘化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ASCII：全称 American Standard Code for Information Interchange，1967年，由 ANSI（美国国家标准协会），作为行业标准发布。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不过 ASCII ，只有7bit，容量实在太小了，只能照顾到美国，连英国可能都不舒服（英镑符号 ￡ 在哪里？）&lt;/p&gt;
&lt;h3 id="ascii"&gt;ASCII 扩展：商业公司&lt;/h3&gt;
&lt;p&gt;ASCII只使用7bit，把高位置一，还可以多存储128个字符。多出来的这部分，到底存法语字符呢，存葡萄牙语字符呢，还是阿拉伯语字符呢？&lt;/p&gt;
&lt;p&gt;分而治之，分别用不同的代码页(code page)不就得了。于是 &lt;/p&gt;
&lt;h4 id="ibmxxx"&gt;IBMxxx 扩展&lt;/h4&gt;
&lt;p&gt;IBM 整出了下面一堆和ASCII兼容的东西：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cp437 / IBM437&lt;/li&gt;
&lt;li&gt;cp850 / IBM850&lt;/li&gt;
&lt;li&gt;cp852 / IBM852&lt;/li&gt;
&lt;li&gt;cp855 / IBM855&lt;/li&gt;
&lt;li&gt;cp857 / IBM857&lt;/li&gt;
&lt;li&gt;cp858 / IBM858&lt;/li&gt;
&lt;li&gt;cp860 / IBM860&lt;/li&gt;
&lt;li&gt;cp861 / IBM861&lt;/li&gt;
&lt;li&gt;cp862 / IBM862&lt;/li&gt;
&lt;li&gt;cp863 / IBM863&lt;/li&gt;
&lt;li&gt;cp864 / IBM864&lt;/li&gt;
&lt;li&gt;cp865 / IBM865&lt;/li&gt;
&lt;li&gt;cp866 / IBM866&lt;/li&gt;
&lt;li&gt;cp869 / IBM869&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="apple"&gt;Apple 扩展&lt;/h4&gt;
&lt;p&gt;苹果公司闲不住，有如下东西：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mac_cyrillic&lt;/li&gt;
&lt;li&gt;mac_greek&lt;/li&gt;
&lt;li&gt;mac_iceland&lt;/li&gt;
&lt;li&gt;mac_latin2&lt;/li&gt;
&lt;li&gt;mac_roman&lt;/li&gt;
&lt;li&gt;mac_turkish&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ascii-iso-8859"&gt;ASCII 扩展：ISO 8859 系列标准&lt;/h3&gt;
&lt;p&gt;在 1987 年，国际标准化组织（ISO）发布了一组针对 8 位 ASCII 扩展的标准，即 ISO 8859 系列。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：与其他编码相比，ISO 8859 将 8016 到 9F16（十六进制）这 32 个字符位置保留为控制字符。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;该系列中，最流行的是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ISO 8859-1（ISO Latin 1），它包含了大多数常见西欧语言字符。&lt;/li&gt;
&lt;li&gt;ISO 8859-15（ISO Latin 9），是 Latin1 的改进版，使用欧元符号 € 等取代了Latin 1中的一些不常用的字符。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一共15个标准：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ISO 8859-1 to 11&lt;/li&gt;
&lt;li&gt;ISO 8859-13 to 16&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中：ISO 8859-12 从未被正式分配，直接被跳过了。&lt;/p&gt;
&lt;h3 id="iso-8859-1-windows-1252"&gt;ISO-8859-1 扩展：Windows-1252&lt;/h3&gt;
&lt;p&gt;Windows-1252 也被称为 CP1252、Windows Latin 1 甚至是 ANSI。它支持大部分的 西欧语言，包括英语、法语、德语、西班牙语、意大利语、葡萄牙语、荷兰语、丹麦语、瑞典语、挪威语等。&lt;/p&gt;
&lt;p&gt;尽管和 Latin-1（ISO 8859-1）非常相似，但是并不相同，它在ISO 8859 的保留区里面，塞了很多其他字符，比如 欧元符号 €。&lt;/p&gt;
&lt;p&gt;曾经的辉煌：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows-1252 是Windows默认的编码之一，特别是在早期的 Microsoft Office 文档（如 Word 和 Excel）中。&lt;/li&gt;
&lt;li&gt;在 HTML 和网页开发中，Windows-1252 曾被广泛使用，特别是在西欧语言网站中。&lt;/li&gt;
&lt;li&gt;在未指定编码的情况下，许多早期的浏览器（如 Internet Explorer）会默认使用 Windows-1252。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="html5-iso-8859-1-windows-1252"&gt;HTML5 的妥协：将 ISO-8859-1 视为 Windows-1252&lt;/h4&gt;
&lt;p&gt;在 HTML5 标准中，如果在网页中声明了字符编码为 ISO-8859-1，浏览器会将其解释为 Windows-1252，而不是严格意义上的 ISO 8859-1。&lt;/p&gt;
&lt;p&gt;这种行为是为了保证向后兼容，因为早期大量网页实际使用的是 Windows-1252，而不是 ISO 8859-1。&lt;/p&gt;
&lt;h4 id="windows-125x"&gt;Windows-125x 字符集&lt;/h4&gt;
&lt;p&gt;Microsoft 定义了一系列 Windows-125x 字符集，用于支持不同语言和地区的文本编码。这些字符集都是基于 单字节编码，每个字符占用 1 个字节，最多支持 256 个字符。&lt;/p&gt;
&lt;p&gt;这一系列可以和 ISO-8859 系列进行对应。二者的根本区别和 前面 ISO-8859-1 与 Windows 1252 的区别一样。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Windows-125x&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;ISO-8859 系列&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;范围&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0x00-0xFF&lt;/td&gt;
&lt;td&gt;0x00-0xFF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;差异&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0x80-0x9F 区域是可打印字符&lt;/td&gt;
&lt;td&gt;0x80-0x9F 区域是控制字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;使用场景&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Windows 系统&lt;/td&gt;
&lt;td&gt;早期的 UNIX 和网络协议&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="gb2312gbkgb18030"&gt;中文编码：GB2312、GBK、GB18030&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;ISO-8859 基本解决了除了中国、日本、韩国之外，其他国家的编码问题。但是一个8位字节，铁定无法解决中日韩字符编码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="gb2312"&gt;GB2312：区位码&lt;/h4&gt;
&lt;p&gt;GB2312 是中国国家标准化管理委员会于 1980 年发布的一种字符集标准，全称是 《信息交换用汉字编码字符集·基本集》。它是中国最早的用于计算机处理简体汉字的编码标准之一，主要用于简体中文的显示和处理。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GB2312 将所有字符划分为 94 个区，每区包含 94 个字符。&lt;/li&gt;
&lt;li&gt;区号和位号的范围均为 01-94。&lt;/li&gt;
&lt;li&gt;每个字符的位置由 区号 和 位号 唯一确定。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了与 ASCII 兼容：用于计算机编码时，区位码会加上一个偏移量 0xA0 转化为&lt;strong&gt;机内码&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id="gbk"&gt;GBK&lt;/h4&gt;
&lt;p&gt;1993年，Unicode 1.1 标准发布。&lt;/p&gt;
&lt;p&gt;同年，GBK开始定义。&lt;/p&gt;
&lt;p&gt;GBK（汉字内码扩展规范）是对 GB2312 的扩展，兼容 GB2312 的所有字符，同时新增了 21003 个汉字（对应于Unicode 1.1 引入的汉字），包括繁体字、更多生僻字和少数民族语言字符。&lt;/p&gt;
&lt;p&gt;微软的代码页 CP936 基本可以认为对应 GBK。&lt;/p&gt;
&lt;h4 id="gb18030"&gt;GB18030&lt;/h4&gt;
&lt;p&gt;GB18030 是中国国家标准，支持所有 Unicode 字符，是中文字符编码的最新标准。&lt;/p&gt;
&lt;p&gt;GB2312 和 GBK 都是 GB18030 的子集。&lt;/p&gt;
&lt;h3 id="big5big5-hkscs"&gt;中文编码：Big5、Big5-HKSCS&lt;/h3&gt;
&lt;p&gt;Big5 是一种用于繁体中文字符的编码标准，最早由台湾的五家厂商（因此得名 Big5）在 1984 年共同制定。它是繁体中文计算机系统中最广泛使用的字符集之一，尤其在台湾和香港地区应用广泛。&lt;/p&gt;
&lt;p&gt;作为一种双字节编码方案，Big5 设计上与 GB2312 类似，但它专注于繁体中文的字符集。&lt;/p&gt;
&lt;p&gt;初版 Big5 的字符集有限，无法覆盖所有繁体中文字符以及其他扩展需求。后续版本增加了一些扩展字符集，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Big5+：新增字符以支持更多的生僻字和罕见字符。&lt;/li&gt;
&lt;li&gt;Big5-HKSCS（香港增补字符集）：为香港特别行政区设计的扩展版本，增加了约 5000 个字符，用于处理香港地区的独特用字。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="iso-2022-cn"&gt;ISO-2022-CN&lt;/h3&gt;
&lt;p&gt;前述各个字符集之间缺乏统一性，导致跨语言和跨系统的文本交换变得困难。因此，ISO 2022 的诞生旨在提供一种灵活的机制，允许在同一数据流中动态切换字符集，以支持多语言环境。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1971 年：首次发布 ISO 2022，成为早期字符编码标准的基础，用于多语言文本支持。&lt;/li&gt;
&lt;li&gt;1986 年：进行了修订，逐步完善了字符集切换的机制，支持更多的字符集。&lt;/li&gt;
&lt;li&gt;1994 年：被重新编号为 ISO/IEC 2022，并纳入国际电工委员会（IEC）的标准体系。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面这些东西，韩国和日本（曾经）用的比较多：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ISO-2022-CN,&lt;/li&gt;
&lt;li&gt;ISO-2022-CN-EXT,&lt;/li&gt;
&lt;li&gt;ISO-2022-JP,&lt;/li&gt;
&lt;li&gt;ISO-2022-JP-1,&lt;/li&gt;
&lt;li&gt;ISO-2022-JP-2&lt;/li&gt;
&lt;li&gt;ISO-2022-KR&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基本被unicode取代了&lt;/p&gt;
&lt;h4 id="eucextended-unix-code"&gt;EUC（Extended Unix Code）&lt;/h4&gt;
&lt;p&gt;EUC（Extended Unix Code，扩展 UNIX 编码） 是一种多字节字符编码，用于在 UNIX 和类 UNIX 系统中表示多种东亚语言字符集（如日文、韩文和中文）。EUC 是基于 ISO 2022 编码标准的扩展，能够在同一编码中支持多种字符集，并且保持对 ASCII 的兼容性。&lt;/p&gt;
&lt;p&gt;这个编码日本和韩国还在用，在前面python的表格中，可以看到下面4个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;euc_jp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;euc_jis_2004&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;euc_jisx0213&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;euc_kr&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在中国，&lt;code&gt;euc_cn&lt;/code&gt; 需要配合 GB2312 使用，但是 GB2312 已经被 GBK 和 GB18030 取代。&lt;/p&gt;
&lt;h3 id="unicode"&gt;Unicode&lt;/h3&gt;
&lt;p&gt;小结一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ASCII：用于英语和西方语言的 7 位编码。&lt;/li&gt;
&lt;li&gt;ISO 8859 系列：分为多个版本，用于不同的西方语言。&lt;/li&gt;
&lt;li&gt;GB2312：用于简体中文的字符集。&lt;/li&gt;
&lt;li&gt;Big5：用于繁体中文的字符集。&lt;/li&gt;
&lt;li&gt;ISO/IEC 2022：没能很好解决这个问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以发现存在致命问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不兼容性：不同编码系统之间无法互相解读。&lt;/li&gt;
&lt;li&gt;字符冲突：同一个字节值在不同编码中可能代表完全不同的字符。&lt;/li&gt;
&lt;li&gt;缺乏全球化支持：无法同时支持多种语言文字。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如何解决？&lt;/p&gt;
&lt;h4 id="unicode-ucs"&gt;Unicode 与 UCS&lt;/h4&gt;
&lt;p&gt;为了统一全球字符编码，早期出现了两个独立的组织：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unicode 联盟（Unicode Consortium） 于 1987 年成立。1991 年发布Unicode 1.0，支持固定长度的 16 位编码，能够容纳 65,536 个字符。&lt;/li&gt;
&lt;li&gt;UCS（通用字符集，Universal Character Set）由 ISO/IEC 10646 国际标准定义的。第一个版本（ISO 10646-1:1993）发布于 1993 年，定义了一个更大的编码空间（31 位），远远超过 Unicode 的初始设计范围。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从 Unicode 2.0 起（1996 年），Unicode 和 ISO/IEC 10646 的编码点完全同步。Unicode 2.0 版本扩展到 21 位范围（0x000000–0x10FFFF），并引入了补充平面，覆盖了更多的字符。&lt;/p&gt;
&lt;h4 id="ucs-2ucs-4utf-8utf-16utf-32"&gt;UCS-2、UCS-4、UTF-8、UTF-16、UTF-32&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UCS-2&lt;/strong&gt;：早期 Unicode 编码方式，定长2字节，现已淘汰。【容易和UTF-16混淆】&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UTF-8&lt;/strong&gt;：最流行的 Unicode 编码方式1~4个字节，与 ASCII兼容，适用于网络和跨平台文本处理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UTF-16&lt;/strong&gt;：广泛用于操作系统和编程语言的内部表示，变长的编码方式，2个字节或4个字节。【既不和ASCII兼容，也不定长，集 UTF-8 和 UTF-32 缺点于一身？？】&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UTF-32&lt;/strong&gt;：定长，尽管和ASCII不兼容，但它编码简单&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;放个表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;年份&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;事件&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1991&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;UCS-2&lt;/strong&gt; 发布：Unicode 1.0 中的编码方式，使用固定 2 字节表示字符，仅支持 BMP 范围（0x0000–0xFFFF）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1992&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;UTF-8&lt;/strong&gt; 设计完成：由 Ken Thompson 和 Rob Pike 设计，作为一种变长编码方式，兼容 ASCII。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1993&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;UTF-8&lt;/strong&gt; 标准化：成为 Unicode 的正式编码方式（RFC 2279）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1996&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;UTF-16&lt;/strong&gt; 发布：Unicode 2.0 推出，扩展编码范围至 0x0000–0x10FFFF，引入补充平面字符，支持代理对。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1996&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;UCS-4&lt;/strong&gt; 发布：ISO/IEC 10646 定义的 4 字节固定长度编码，支持完整 Unicode 范围。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1996&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;UTF-7&lt;/strong&gt; 标准化（RFC 1642）：一种为电子邮件和其他 7 位传输协议设计的 Unicode 编码方式，但逐渐被废弃。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1999&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;UTF-8&lt;/strong&gt; 更新（RFC 3629）：限制编码范围为 0x0000–0x10FFFF，与 Unicode 的定义保持一致。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2000s&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;UTF-8 成为主流&lt;/strong&gt;：随着互联网的发展，UTF-8 被广泛应用于网页、协议（如 HTML、JSON）和操作系统中。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2000s&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;UTF-16&lt;/strong&gt; 流行：Windows、Java、C# 等系统和语言内部采用 UTF-16 作为默认编码方式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;现代&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;UCS-2 被淘汰&lt;/strong&gt;：由于无法支持补充平面字符，UCS-2 被 UTF-16 完全取代。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;现代&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;UTF-32 用于内部处理&lt;/strong&gt;：虽然内存占用高，但其编码简单，适用于数据库和编译器等场景。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_3"&gt;附表&lt;/h2&gt;
&lt;h3 id="_4"&gt;标准&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ISO/IEC 646&lt;/li&gt;
&lt;li&gt;ISO/IEC 8859&lt;/li&gt;
&lt;li&gt;ISO/IEC 2022&lt;/li&gt;
&lt;li&gt;ISO/IEC 10646&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="iana"&gt;IANA 字符集注册表&lt;/h3&gt;
&lt;p&gt;IANA 字符集注册表（IANA Character Sets Registry） 是由 IANA（Internet Assigned Numbers Authority） 维护的一个标准化列表，用于记录和规范互联网上使用的 字符集（Character Sets）。该注册表为各种网络协议（如 HTTP、SMTP、MIME 等）提供了标准化的字符集名称、编号和相关信息，以确保跨平台、跨语言环境下的互操作性。&lt;/p&gt;
&lt;p&gt;每个字符集分配一个唯一的 MIBenum 值，用于在 MIB（Management Information Base，管理信息库） 中标识字符集。范围划分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0-2：保留。&lt;/li&gt;
&lt;li&gt;3-999：由标准化组织分配的字符集。&lt;/li&gt;
&lt;li&gt;1000-1999：Unicode 和 ISO/IEC 10646 编码。&lt;/li&gt;
&lt;li&gt;2000 及以上：厂商特定字符集。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ansi"&gt;ANSI 编码&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;虽然名称中含有“ANSI”（American National Standards Institute，美国国家标准协会），但实际上它与 ANSI 标准没有直接关系，而是 Microsoft 自定义的字符集。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 Windows 系统中，&lt;strong&gt;ANSI 编码&lt;/strong&gt;实际上是基于 &lt;strong&gt;代码页（Code Page）&lt;/strong&gt; 的单字节或多字节字符编码方案。每种语言或语言组在 Windows 中对应一个特定的代码页，ANSI 编码依赖这些代码页来表示特定语言的字符集。&lt;/p&gt;
&lt;p&gt;一些常见的代码页：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;代码页（Code Page）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;语言/区域&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;对应的字符集&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1250&lt;/td&gt;
&lt;td&gt;中欧字符集&lt;/td&gt;
&lt;td&gt;波兰语、捷克语、匈牙利语等&lt;/td&gt;
&lt;td&gt;Windows-1250&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1251&lt;/td&gt;
&lt;td&gt;西里尔字符集&lt;/td&gt;
&lt;td&gt;俄语、乌克兰语、保加利亚语等&lt;/td&gt;
&lt;td&gt;Windows-1251&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1252&lt;/td&gt;
&lt;td&gt;西欧字符集（ANSI 默认）&lt;/td&gt;
&lt;td&gt;英语、法语、德语、西班牙语等&lt;/td&gt;
&lt;td&gt;Windows-1252&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1253&lt;/td&gt;
&lt;td&gt;希腊字符集&lt;/td&gt;
&lt;td&gt;希腊语&lt;/td&gt;
&lt;td&gt;Windows-1253&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1254&lt;/td&gt;
&lt;td&gt;土耳其字符集&lt;/td&gt;
&lt;td&gt;土耳其语&lt;/td&gt;
&lt;td&gt;Windows-1254&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1255&lt;/td&gt;
&lt;td&gt;希伯来字符集&lt;/td&gt;
&lt;td&gt;希伯来语&lt;/td&gt;
&lt;td&gt;Windows-1255&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1256&lt;/td&gt;
&lt;td&gt;阿拉伯字符集&lt;/td&gt;
&lt;td&gt;阿拉伯语&lt;/td&gt;
&lt;td&gt;Windows-1256&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1257&lt;/td&gt;
&lt;td&gt;波罗的海字符集&lt;/td&gt;
&lt;td&gt;拉脱维亚语、立陶宛语等&lt;/td&gt;
&lt;td&gt;Windows-1257&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1258&lt;/td&gt;
&lt;td&gt;越南语字符集&lt;/td&gt;
&lt;td&gt;越南语&lt;/td&gt;
&lt;td&gt;Windows-1258&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;936&lt;/td&gt;
&lt;td&gt;简体中文字符集&lt;/td&gt;
&lt;td&gt;简体中文&lt;/td&gt;
&lt;td&gt;GB2312（CP936）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;950&lt;/td&gt;
&lt;td&gt;繁体中文字符集&lt;/td&gt;
&lt;td&gt;繁体中文&lt;/td&gt;
&lt;td&gt;Big5（CP950）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;932&lt;/td&gt;
&lt;td&gt;日文字符集&lt;/td&gt;
&lt;td&gt;日语&lt;/td&gt;
&lt;td&gt;Shift_JIS（CP932）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;949&lt;/td&gt;
&lt;td&gt;韩文字符集&lt;/td&gt;
&lt;td&gt;韩语&lt;/td&gt;
&lt;td&gt;KS C 5601（CP949）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="python_2"&gt;Python内置编码的列表&lt;/h3&gt;
&lt;p&gt;作为参考，此处把Python手册中的编码表格列出来（注意，表格别名只列出部分名字）&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;编码名称&lt;/th&gt;
&lt;th&gt;别名&lt;/th&gt;
&lt;th&gt;语言&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ascii&lt;/strong&gt; ★&lt;/td&gt;
&lt;td&gt;646, us-ascii&lt;/td&gt;
&lt;td&gt;英语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;big5&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;big5-tw, csbig5&lt;/td&gt;
&lt;td&gt;繁体中文&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;big5hkscs&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;big5-hkscs, hkscs&lt;/td&gt;
&lt;td&gt;繁体中文&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp037&lt;/td&gt;
&lt;td&gt;IBM037, IBM039&lt;/td&gt;
&lt;td&gt;英语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp273&lt;/td&gt;
&lt;td&gt;273, IBM273, csIBM273&lt;/td&gt;
&lt;td&gt;德语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp424&lt;/td&gt;
&lt;td&gt;EBCDIC-CP-HE, IBM424&lt;/td&gt;
&lt;td&gt;希伯来语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp437&lt;/td&gt;
&lt;td&gt;437, IBM437&lt;/td&gt;
&lt;td&gt;英语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp500&lt;/td&gt;
&lt;td&gt;EBCDIC-CP-BE, EBCDIC-CP-CH, IBM500&lt;/td&gt;
&lt;td&gt;西欧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp720&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;阿拉伯语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp737&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;希腊语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp775&lt;/td&gt;
&lt;td&gt;IBM775&lt;/td&gt;
&lt;td&gt;波罗的海语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp850&lt;/td&gt;
&lt;td&gt;850, IBM850&lt;/td&gt;
&lt;td&gt;西欧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp852&lt;/td&gt;
&lt;td&gt;852, IBM852&lt;/td&gt;
&lt;td&gt;中欧和东欧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp855&lt;/td&gt;
&lt;td&gt;855, IBM855&lt;/td&gt;
&lt;td&gt;保加利亚语、白俄罗斯语、马其顿语、俄语、塞尔维亚语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp856&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;希伯来语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp857&lt;/td&gt;
&lt;td&gt;857, IBM857&lt;/td&gt;
&lt;td&gt;土耳其语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp858&lt;/td&gt;
&lt;td&gt;858, IBM858&lt;/td&gt;
&lt;td&gt;西欧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp860&lt;/td&gt;
&lt;td&gt;860, IBM860&lt;/td&gt;
&lt;td&gt;葡萄牙语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp861&lt;/td&gt;
&lt;td&gt;861, CP-IS, IBM861&lt;/td&gt;
&lt;td&gt;冰岛语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp862&lt;/td&gt;
&lt;td&gt;862, IBM862&lt;/td&gt;
&lt;td&gt;希伯来语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp863&lt;/td&gt;
&lt;td&gt;863, IBM863&lt;/td&gt;
&lt;td&gt;加拿大法语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp864&lt;/td&gt;
&lt;td&gt;IBM864&lt;/td&gt;
&lt;td&gt;阿拉伯语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp865&lt;/td&gt;
&lt;td&gt;865, IBM865&lt;/td&gt;
&lt;td&gt;丹麦语、挪威语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp866&lt;/td&gt;
&lt;td&gt;866, IBM866&lt;/td&gt;
&lt;td&gt;俄语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp869&lt;/td&gt;
&lt;td&gt;869, CP-GR, IBM869&lt;/td&gt;
&lt;td&gt;希腊语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp874&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;泰语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp875&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;希腊语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp932&lt;/td&gt;
&lt;td&gt;932, ms932, mskanji, ms-kanji, windows-31j&lt;/td&gt;
&lt;td&gt;日语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp949&lt;/td&gt;
&lt;td&gt;949, ms949, uhc&lt;/td&gt;
&lt;td&gt;韩语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp950&lt;/td&gt;
&lt;td&gt;950, ms950&lt;/td&gt;
&lt;td&gt;繁体中文&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp1006&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;乌尔都语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp1026&lt;/td&gt;
&lt;td&gt;ibm1026&lt;/td&gt;
&lt;td&gt;土耳其语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp1125&lt;/td&gt;
&lt;td&gt;1125, ibm1125, cp866u, ruscii&lt;/td&gt;
&lt;td&gt;乌克兰语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp1140&lt;/td&gt;
&lt;td&gt;ibm1140&lt;/td&gt;
&lt;td&gt;西欧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp1250&lt;/td&gt;
&lt;td&gt;windows-1250&lt;/td&gt;
&lt;td&gt;中欧和东欧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp1251&lt;/td&gt;
&lt;td&gt;windows-1251&lt;/td&gt;
&lt;td&gt;保加利亚语、白俄罗斯语、马其顿语、俄语、塞尔维亚语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;cp1252&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;windows-1252&lt;/td&gt;
&lt;td&gt;西欧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp1253&lt;/td&gt;
&lt;td&gt;windows-1253&lt;/td&gt;
&lt;td&gt;希腊语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp1254&lt;/td&gt;
&lt;td&gt;windows-1254&lt;/td&gt;
&lt;td&gt;土耳其语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp1255&lt;/td&gt;
&lt;td&gt;windows-1255&lt;/td&gt;
&lt;td&gt;希伯来语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp1256&lt;/td&gt;
&lt;td&gt;windows-1256&lt;/td&gt;
&lt;td&gt;阿拉伯语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp1257&lt;/td&gt;
&lt;td&gt;windows-1257&lt;/td&gt;
&lt;td&gt;波罗的海语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp1258&lt;/td&gt;
&lt;td&gt;windows-1258&lt;/td&gt;
&lt;td&gt;越南语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;euc_jp&lt;/td&gt;
&lt;td&gt;eucjp, ujis, u-jis&lt;/td&gt;
&lt;td&gt;日语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;euc_jis_2004&lt;/td&gt;
&lt;td&gt;jisx0213, eucjis2004&lt;/td&gt;
&lt;td&gt;日语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;euc_jisx0213&lt;/td&gt;
&lt;td&gt;eucjisx0213&lt;/td&gt;
&lt;td&gt;日语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;euc_kr&lt;/td&gt;
&lt;td&gt;euckr, korean, ksc5601, ks_c-5601, ks_c-5601-1987, ksx1001, ks_x-1001&lt;/td&gt;
&lt;td&gt;韩语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;gb2312&lt;/strong&gt; ★&lt;/td&gt;
&lt;td&gt;chinese, csiso58gb231280, euc-cn, euccn, eucgb2312-cn, gb2312-1980, gb2312-80, iso-ir-58&lt;/td&gt;
&lt;td&gt;简体中文&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;gbk&lt;/strong&gt; ★&lt;/td&gt;
&lt;td&gt;936, &lt;strong&gt;cp936&lt;/strong&gt;, ms936&lt;/td&gt;
&lt;td&gt;统一中文（Unified Chinese）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;gb18030&lt;/strong&gt; ★&lt;/td&gt;
&lt;td&gt;gb18030-2000&lt;/td&gt;
&lt;td&gt;统一中文（Unified Chinese）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;hz&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;hzgb, hz-gb, hz-gb-2312&lt;/td&gt;
&lt;td&gt;简体中文&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso2022_jp&lt;/td&gt;
&lt;td&gt;csiso2022jp, iso2022jp, iso-2022-jp&lt;/td&gt;
&lt;td&gt;日语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso2022_jp_1&lt;/td&gt;
&lt;td&gt;iso2022jp-1, iso-2022-jp-1&lt;/td&gt;
&lt;td&gt;日语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso2022_jp_2&lt;/td&gt;
&lt;td&gt;iso2022jp-2, iso-2022-jp-2&lt;/td&gt;
&lt;td&gt;日语、韩语、简体中文、西欧、希腊语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso2022_jp_2004&lt;/td&gt;
&lt;td&gt;iso2022jp-2004, iso-2022-jp-2004&lt;/td&gt;
&lt;td&gt;日语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso2022_jp_3&lt;/td&gt;
&lt;td&gt;iso2022jp-3, iso-2022-jp-3&lt;/td&gt;
&lt;td&gt;日语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso2022_jp_ext&lt;/td&gt;
&lt;td&gt;iso2022jp-ext, iso-2022-jp-ext&lt;/td&gt;
&lt;td&gt;日语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso2022_kr&lt;/td&gt;
&lt;td&gt;csiso2022kr, iso2022kr, iso-2022-kr&lt;/td&gt;
&lt;td&gt;韩语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;latin_1&lt;/strong&gt; ★&lt;/td&gt;
&lt;td&gt;iso-8859-1, iso8859-1, 8859, &lt;strong&gt;cp819&lt;/strong&gt;, latin, latin1, L1&lt;/td&gt;
&lt;td&gt;西欧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso8859_2&lt;/td&gt;
&lt;td&gt;iso-8859-2, latin2, L2&lt;/td&gt;
&lt;td&gt;中欧和东欧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso8859_3&lt;/td&gt;
&lt;td&gt;iso-8859-3, latin3, L3&lt;/td&gt;
&lt;td&gt;世界语、马耳他语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso8859_4&lt;/td&gt;
&lt;td&gt;iso-8859-4, latin4, L4&lt;/td&gt;
&lt;td&gt;波罗的海语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso8859_5&lt;/td&gt;
&lt;td&gt;iso-8859-5, cyrillic&lt;/td&gt;
&lt;td&gt;保加利亚语、白俄罗斯语、马其顿语、俄语、塞尔维亚语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso8859_6&lt;/td&gt;
&lt;td&gt;iso-8859-6, arabic&lt;/td&gt;
&lt;td&gt;阿拉伯语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso8859_7&lt;/td&gt;
&lt;td&gt;iso-8859-7, greek, greek8&lt;/td&gt;
&lt;td&gt;希腊语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso8859_8&lt;/td&gt;
&lt;td&gt;iso-8859-8, hebrew&lt;/td&gt;
&lt;td&gt;希伯来语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso8859_9&lt;/td&gt;
&lt;td&gt;iso-8859-9, latin5, L5&lt;/td&gt;
&lt;td&gt;土耳其语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso8859_10&lt;/td&gt;
&lt;td&gt;iso-8859-10, latin6, L6&lt;/td&gt;
&lt;td&gt;北欧语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso8859_11&lt;/td&gt;
&lt;td&gt;iso-8859-11, thai&lt;/td&gt;
&lt;td&gt;泰语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso8859_13&lt;/td&gt;
&lt;td&gt;iso-8859-13, latin7, L7&lt;/td&gt;
&lt;td&gt;波罗的海语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso8859_14&lt;/td&gt;
&lt;td&gt;iso-8859-14, latin8, L8&lt;/td&gt;
&lt;td&gt;凯尔特语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;iso8859_15&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iso-8859-15, &lt;strong&gt;latin9&lt;/strong&gt;, L9&lt;/td&gt;
&lt;td&gt;西欧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iso8859_16&lt;/td&gt;
&lt;td&gt;iso-8859-16, latin10, L10&lt;/td&gt;
&lt;td&gt;东南欧语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;johab&lt;/td&gt;
&lt;td&gt;cp1361, ms1361&lt;/td&gt;
&lt;td&gt;韩语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;koi8_r&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;俄语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;koi8_t&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;塔吉克语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;koi8_u&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;乌克兰语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kz1048&lt;/td&gt;
&lt;td&gt;kz_1048, strk1048_2002, rk1048&lt;/td&gt;
&lt;td&gt;哈萨克语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mac_cyrillic&lt;/td&gt;
&lt;td&gt;maccyrillic&lt;/td&gt;
&lt;td&gt;保加利亚语、白俄罗斯语、马其顿语、俄语、塞尔维亚语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mac_greek&lt;/td&gt;
&lt;td&gt;macgreek&lt;/td&gt;
&lt;td&gt;希腊语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mac_iceland&lt;/td&gt;
&lt;td&gt;maciceland&lt;/td&gt;
&lt;td&gt;冰岛语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mac_latin2&lt;/td&gt;
&lt;td&gt;maclatin2, maccentraleurope, mac_centeuro&lt;/td&gt;
&lt;td&gt;中欧和东欧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mac_roman&lt;/td&gt;
&lt;td&gt;macroman, macintosh&lt;/td&gt;
&lt;td&gt;西欧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mac_turkish&lt;/td&gt;
&lt;td&gt;macturkish&lt;/td&gt;
&lt;td&gt;土耳其语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ptcp154&lt;/td&gt;
&lt;td&gt;csptcp154, pt154, cp154, cyrillic-asian&lt;/td&gt;
&lt;td&gt;哈萨克语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;shift_jis&lt;/td&gt;
&lt;td&gt;csshiftjis, shiftjis, sjis, s_jis&lt;/td&gt;
&lt;td&gt;日语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;shift_jis_2004&lt;/td&gt;
&lt;td&gt;shiftjis2004, sjis_2004, sjis2004&lt;/td&gt;
&lt;td&gt;日语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;shift_jisx0213&lt;/td&gt;
&lt;td&gt;shiftjisx0213, sjisx0213, s_jisx0213&lt;/td&gt;
&lt;td&gt;日语&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;utf_32&lt;/strong&gt; ★&lt;/td&gt;
&lt;td&gt;U32, utf32&lt;/td&gt;
&lt;td&gt;所有语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;utf_32_be&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;UTF-32BE&lt;/td&gt;
&lt;td&gt;所有语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;utf_32_le&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;UTF-32LE&lt;/td&gt;
&lt;td&gt;所有语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;utf_16&lt;/strong&gt; ★&lt;/td&gt;
&lt;td&gt;U16, utf16&lt;/td&gt;
&lt;td&gt;所有语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;utf_16_be&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;UTF-16BE&lt;/td&gt;
&lt;td&gt;所有语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;utf_16_le&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;UTF-16LE&lt;/td&gt;
&lt;td&gt;所有语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;utf_7&lt;/td&gt;
&lt;td&gt;U7, unicode-1-1-utf-7&lt;/td&gt;
&lt;td&gt;所有语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;utf_8&lt;/strong&gt; ★&lt;/td&gt;
&lt;td&gt;U8, UTF, utf8, cp65001&lt;/td&gt;
&lt;td&gt;所有语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;utf_8_sig&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;所有语言&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="qt"&gt;Qt支持的编码&lt;/h3&gt;
&lt;p&gt;在Qt6，QStringConverter 支持如下编码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UTF-8&lt;/li&gt;
&lt;li&gt;UTF-16&lt;/li&gt;
&lt;li&gt;UTF-16BE&lt;/li&gt;
&lt;li&gt;UTF-16LE&lt;/li&gt;
&lt;li&gt;UTF-32&lt;/li&gt;
&lt;li&gt;UTF-32BE&lt;/li&gt;
&lt;li&gt;UTF-32LE&lt;/li&gt;
&lt;li&gt;ISO-8859-1 (Latin-1)&lt;/li&gt;
&lt;li&gt;The system encoding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Qt 的 QTextCodec 支持如下的编码（注：Qt6中QTextCodec已经被边缘化了）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Big5&lt;/li&gt;
&lt;li&gt;Big5-HKSCS&lt;/li&gt;
&lt;li&gt;CP949&lt;/li&gt;
&lt;li&gt;EUC-JP&lt;/li&gt;
&lt;li&gt;EUC-KR&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GB18030&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;HP-ROMAN8&lt;/li&gt;
&lt;li&gt;IBM 850&lt;/li&gt;
&lt;li&gt;IBM 866&lt;/li&gt;
&lt;li&gt;IBM 874&lt;/li&gt;
&lt;li&gt;ISO 2022-JP&lt;/li&gt;
&lt;li&gt;ISO 8859-1 to 10&lt;/li&gt;
&lt;li&gt;ISO 8859-13 to 16&lt;/li&gt;
&lt;li&gt;Iscii-Bng, Dev, Gjr, Knd, Mlm, Ori, Pnj, Tlg, and Tml&lt;/li&gt;
&lt;li&gt;KOI8-R&lt;/li&gt;
&lt;li&gt;KOI8-U&lt;/li&gt;
&lt;li&gt;Macintosh&lt;/li&gt;
&lt;li&gt;Shift-JIS&lt;/li&gt;
&lt;li&gt;TIS-620&lt;/li&gt;
&lt;li&gt;TSCII&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UTF-8&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UTF-16&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;UTF-16BE&lt;/li&gt;
&lt;li&gt;UTF-16LE&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UTF-32&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;UTF-32BE&lt;/li&gt;
&lt;li&gt;UTF-32LE&lt;/li&gt;
&lt;li&gt;Windows-1250 to 1258&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_5"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://docs.python.org/3/library/codecs.html#standard-encodings&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/EBCDIC&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/ASCII&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Extended_ASCII&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/GBK_(character_encoding)&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/GB_2312&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Big5&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Unicode&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/ISO/IEC_646&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/ISO/IEC_10646&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/ISO/IEC_2022&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Extended_Unix_Code&lt;/li&gt;
&lt;li&gt;https://www.iana.org/assignments/character-sets/character-sets.xml&lt;/li&gt;
&lt;/ul&gt;</content><category term="Python"></category><category term="C++"></category></entry><entry><title>Python Import机制乱谈（二）</title><link href="https://blog.debao.me/2025/01/an-exploration-of-python-s-import-mechanism-part-2/" rel="alternate"></link><published>2025-01-01T20:14:00+08:00</published><updated>2025-01-01T20:14:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2025-01-01:/2025/01/an-exploration-of-python-s-import-mechanism-part-2/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/12/an-exploration-of-python-s-import-mechanism-part-1/"&gt;Python Import机制乱谈（一）&lt;/a&gt;，继续看看&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#syspath"&gt;sys.path&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;初始化值受什么影响？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;例子&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#site-1"&gt;执行 site 模块（1）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#site-2-p"&gt;执行 site 模块（2） 使用 -P&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#site-3"&gt;执行 site 模块（3）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#site-4venv"&gt;执行 site 模块（4 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/12/an-exploration-of-python-s-import-mechanism-part-1/"&gt;Python Import机制乱谈（一）&lt;/a&gt;，继续看看&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#syspath"&gt;sys.path&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;初始化值受什么影响？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;例子&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#site-1"&gt;执行 site 模块（1）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#site-2-p"&gt;执行 site 模块（2） 使用 -P&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#site-3"&gt;执行 site 模块（3）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#site-4venv"&gt;执行 site 模块（4）venv环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#site-5ubuntu"&gt;执行 site 模块（5）ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#site-6use-site"&gt;执行 site 模块（6）use-site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#sysprefix-sysexec_prefix"&gt;sys.prefix 与 sys.exec_prefix&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_3"&gt;是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#pyvenvcfg"&gt;pyvenv.cfg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_5"&gt;在哪里？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;长什么样？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_pth-pth"&gt;._pth 与 .pth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pip"&gt;PIP 安装包位置？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#venv"&gt;venv环境中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_7"&gt;全局环境中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_8"&gt;用户级安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_9"&gt;查看包位置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#python"&gt;便携式Python？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#conda"&gt;conda&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_10"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="syspath"&gt;sys.path&lt;/h2&gt;
&lt;p&gt;导入模块时，需要从这里面的路径开始，那么它里面到底有什么东西&lt;/p&gt;
&lt;h3 id="_1"&gt;初始化值受什么影响？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;这东西的生成逻辑太复杂了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;脚本所在目录（如果执行的是脚本），或当前工作目录（如果使用 &lt;code&gt;-m&lt;/code&gt; 或 &lt;code&gt;-c&lt;/code&gt; 参数。【所谓的不安全路径？】&lt;/li&gt;
&lt;li&gt;环境变量PYTHONPATH设置的路径&lt;/li&gt;
&lt;li&gt;与PYTHONHOME相关的 &lt;code&gt;prefix&lt;/code&gt; 和 &lt;code&gt;exec_prefix&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;code&gt;python&amp;lt;major&amp;gt;&amp;lt;minor&amp;gt;.zip&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;site模块 与 site-packages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以及&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pyvenv.cfg 文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;._pth&lt;/code&gt; 文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;例子&lt;/h3&gt;
&lt;p&gt;把 sys.path 当作黑盒子，直接执行看看&lt;/p&gt;
&lt;h4 id="site-1"&gt;执行 site 模块（1）&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;-m&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;输出内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;PS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;dbzha&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;dbzha&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;python&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;
&lt;span class="nx"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;dbzha&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;python312&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zip&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;DLLs&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Lib&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Lib&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;USER_BASE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;dbzha&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Roaming&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;USER_SITE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;dbzha&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Roaming&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;doesn&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;exist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="site-2-p"&gt;执行 site 模块（2） 使用 -P&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;-P&lt;/span&gt; &lt;span class="n"&gt;-m&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;添加 &lt;code&gt;-P&lt;/code&gt; 参数，（或者设置环境变量  PYTHONSAFEPATH 为非空值，比如1），结果如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;python312&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zip&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;DLLs&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Lib&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Lib&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;USER_BASE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;dbzha&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Roaming&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;USER_SITE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;dbzha&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Roaming&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;doesn&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;exist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;ENABLE_USER_SITE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;容易注意到：里面没有自动添加不安全的当前工作目录。&lt;/p&gt;
&lt;h4 id="site-3"&gt;执行 site 模块（3）&lt;/h4&gt;
&lt;p&gt;注意前面&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;USER_SITE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;dbzha&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Roaming&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;doesn&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;exist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;如果这个路径存在的话，输出结果会包含它&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;python312&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zip&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;DLLs&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Lib&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;dbzha&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Roaming&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Lib&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;USER_BASE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;dbzha&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Roaming&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;USER_SITE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;dbzha&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Roaming&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;ENABLE_USER_SITE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="site-4venv"&gt;执行 site 模块（4）venv环境&lt;/h4&gt;
&lt;p&gt;在 venv 环境下，执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python -m site
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;会怎么样？&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;D&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Source&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;debao&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;debaoblog&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;python312&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zip&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;DLLs&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Lib&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;D&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Source&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;debao&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;debaoblog&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;venv&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;D&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Source&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;debao&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;debaoblog&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;venv&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Lib&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;USER_BASE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;dbzha&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Roaming&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;USER_SITE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;dbzha&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Roaming&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;ENABLE_USER_SITE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;注意，USER SITE禁用状态&lt;/p&gt;
&lt;h4 id="site-5ubuntu"&gt;执行 site 模块（5）ubuntu&lt;/h4&gt;
&lt;p&gt;也可以对照Ubuntu下结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python -m site
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/home/debao&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/usr/lib/python312.zip&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/usr/lib/python3.12&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/usr/lib/python3.12/lib-dynload&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/usr/local/lib/python3.12/dist-packages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/usr/lib/python3/dist-packages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;USER_BASE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/home/debao/.local&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doesn&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t exist)&lt;/span&gt;
&lt;span class="n"&gt;USER_SITE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/home/debao/.local/lib/python3.12/site-packages&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doesn&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t exist)&lt;/span&gt;
&lt;span class="n"&gt;ENABLE_USER_SITE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="site-6use-site"&gt;执行 site 模块（6）use-site&lt;/h4&gt;
&lt;p&gt;如果只关注 user级别的 site，可以用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;site&lt;span class="w"&gt; &lt;/span&gt;--user-site
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;其输出&lt;/p&gt;
&lt;p&gt;在Ubuntu下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;debao&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;python3&lt;/span&gt;&lt;span class="m m-Double"&gt;.12&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在 Windows下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;dbzha&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Roaming&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Python&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="sysprefix-sysexec_prefix"&gt;sys.prefix 与 sys.exec_prefix&lt;/h2&gt;
&lt;h3 id="_3"&gt;是什么？&lt;/h3&gt;
&lt;p&gt;sys.prefix:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表示 Python 的安装路径根目录&lt;/li&gt;
&lt;li&gt;包含与平台无关的 Python 文件，如标准库模块(.py文件)&lt;/li&gt;
&lt;li&gt;默认情况下，在类Unix系统中通常是 "/usr" 或 "/usr/local"&lt;/li&gt;
&lt;li&gt;在虚拟环境中，指向虚拟环境的根目录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sys.exec_prefix:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表示包含依赖平台的 Python 文件的根目录&lt;/li&gt;
&lt;li&gt;包含编译后的扩展模块(.so文件)、可执行文件等&lt;/li&gt;
&lt;li&gt;通常与 sys.prefix 相同&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;例子&lt;/h3&gt;
&lt;p&gt;如下命令结果？&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python&lt;span class="w"&gt; &lt;/span&gt;-c&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;import sys; print(sys.prefix, sys.exec_prefix)&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Windows：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C:\Python312 C:\Python312
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Windows 下 venv&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;D:\Source\debao\debaoblog\.venv D:\Source\debao\debaoblog\.venv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Ubuntu:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/usr /usr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;依据 &lt;code&gt;sys.prefix != sys.base_prefix&lt;/code&gt; 可判定当前是否在venv环境中执行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="pyvenvcfg"&gt;pyvenv.cfg&lt;/h2&gt;
&lt;h3 id="_5"&gt;在哪里？&lt;/h3&gt;
&lt;p&gt;使用 venv 创建虚拟环境，&lt;/p&gt;
&lt;p&gt;在Windows下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;venv_name&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Scripts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Windows下的可执行文件目录&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;python&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exe&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Python解释器&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;pythonw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exe&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;无控制台的Python&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;pip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exe&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;activate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bat&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;cmd激活脚本&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;└──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Activate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ps1&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;PowerShell激活脚本&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;└──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;第三方包目录&lt;/span&gt;
&lt;span class="err"&gt;└──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;pyvenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cfg&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;配置文件&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在 Ubuntu下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;venv_name&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Unix系统&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="nx"&gt;存放可执行文件&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;python&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Python解释器的软链接&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;pip&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;pip的软链接&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;└──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;activate&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;激活脚本&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;└──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;pythonX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="err"&gt;└──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;第三方包安装位置&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;头文件目录&lt;/span&gt;
&lt;span class="err"&gt;└──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;pyvenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cfg&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;配置文件&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_6"&gt;长什么样？&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;
&lt;span class="nx"&gt;include&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;system&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m m-Double"&gt;3.12.1&lt;/span&gt;
&lt;span class="nx"&gt;executable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;python&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exe&lt;/span&gt;
&lt;span class="nx"&gt;command&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;python&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exe&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;venv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;D&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Source&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;debao&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;debaoblog&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;venv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;标记这是个虚拟环境，并指向原始Python解释器位置（home字段）&lt;/li&gt;
&lt;li&gt;控制是否可以使用系统安装的包（include-system-site-packages）&lt;/li&gt;
&lt;li&gt;影响Python的模块搜索路径（通过调整sys.prefix和sys.base_prefix）&lt;/li&gt;
&lt;li&gt;记录Python版本和环境创建信息（version和executable字段）&lt;/li&gt;
&lt;li&gt;为虚拟环境的隔离机制提供必要的配置信息&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_pth-pth"&gt;._pth 与 .pth&lt;/h2&gt;
&lt;p&gt;注意区分二者&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;._pth&lt;/th&gt;
&lt;th&gt;.pth&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;文件名&lt;/td&gt;
&lt;td&gt;必须是 python版本号._pth&lt;/td&gt;
&lt;td&gt;任意名称，以 .pth 结尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;位置&lt;/td&gt;
&lt;td&gt;python.exe 同目录&lt;/td&gt;
&lt;td&gt;site-packages 目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;路径控制&lt;/td&gt;
&lt;td&gt;完全替换 sys.path&lt;/td&gt;
&lt;td&gt;追加到 sys.path&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;默认路径&lt;/td&gt;
&lt;td&gt;禁用所有默认路径&lt;/td&gt;
&lt;td&gt;保留默认路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PYTHONPATH&lt;/td&gt;
&lt;td&gt;禁用&lt;/td&gt;
&lt;td&gt;保留有效&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;主要用途&lt;/td&gt;
&lt;td&gt;嵌入式/便携版 Python&lt;/td&gt;
&lt;td&gt;添加额外包路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;使用场景&lt;/td&gt;
&lt;td&gt;需要严格控制导入&lt;/td&gt;
&lt;td&gt;普通包管理&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Python的嵌入式版本，会提供一个 &lt;code&gt;._pth&lt;/code&gt;文件，比如 &lt;code&gt;python312._pth&lt;/code&gt;，内容如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;python312&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zip&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="c1"&gt;# Uncomment to run site.main() automatically&lt;/span&gt;
&lt;span class="c1"&gt;#import site&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="pip"&gt;PIP 安装包位置？&lt;/h2&gt;
&lt;p&gt;pip 安装包的位置取决于以下情况：&lt;/p&gt;
&lt;h3 id="venv"&gt;venv环境中&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;venv/Lib/site-packages/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比如：'D:\Source\debao\debaoblog\.venv\Lib\site-packages'&lt;/p&gt;
&lt;h3 id="_7"&gt;全局环境中&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Windows: C:\Python3x\Lib\site-packages\&lt;/li&gt;
&lt;li&gt;Linux: /usr/lib/python3.x/site-packages/&lt;/li&gt;
&lt;li&gt;macOS: /Library/Python/3.x/site-packages/&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_8"&gt;用户级安装&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;--user
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Windows: %APPDATA%\Python\Python3x\site-packages\&lt;/li&gt;
&lt;li&gt;Linux: ~/.local/lib/python3.x/site-packages/&lt;/li&gt;
&lt;li&gt;macOS: ~/Library/Python/3.x/site-packages/&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_9"&gt;查看包位置&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;&amp;lt;package&amp;gt;.__path__&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;import markdown as _; print(_.__path__)&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;D&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Source&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;debao&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;debaoblog&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;venv&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Lib&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;markdown&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;使用 &lt;code&gt;&amp;lt;package&amp;gt;.__file__&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;import markdown as _; print(_.__file__)&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;D&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Source&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;debao&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;debaoblog&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;venv&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;markdown&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或者直接 pip show：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;pip&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;show&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;markdown&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;结果如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Markdown&lt;/span&gt;
&lt;span class="n"&gt;Version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;3.7&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;implementation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;John&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Gruber&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Location&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="o"&gt;:\&lt;/span&gt;&lt;span class="n"&gt;Source&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;debao&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;debaoblog&lt;/span&gt;&lt;span class="o"&gt;\.&lt;/span&gt;&lt;span class="n"&gt;venv&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Lib&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;
&lt;span class="n"&gt;Requires&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Required&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mermaidjs&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mdx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;truly&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sane&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lists&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;yaml&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;metadata&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="python"&gt;便携式Python？&lt;/h2&gt;
&lt;p&gt;默认Python需要安装，为了便携，不少人在搞，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://winpython.github.io/&lt;/li&gt;
&lt;li&gt;https://github.com/codrsquad/portable-python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外还有 anaconda（miniconda）&lt;/p&gt;
&lt;h3 id="conda"&gt;conda&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;似乎不直接相关，它可以管理不同版本的python。先放上&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如Windows下，当前 &lt;code&gt;Miniconda3-latest-Windows-x86_64.exe&lt;/code&gt; 对应的是 Python3.12：&lt;/p&gt;
&lt;p&gt;安装后可执行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path/to/conda init powershell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;以便于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改 PowerShell 的配置文件（通常在 $PROFILE 位置）&lt;/li&gt;
&lt;li&gt;添加必要的脚本来初始化 conda&lt;/li&gt;
&lt;li&gt;使 conda activate 和 conda deactivate 命令在 PowerShell 中可用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而后可以安装其他版本python：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda create -n py311 python=3.11
conda create -n py310 python=3.10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;注意和 conda install python=3.11 的不同，这是直接降级原来的 3.12。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而后&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# 使用 Python 3.11
conda activate py311

# 使用 Python 3.10
conda activate py310

# 回到基础环境，等同 conda activate
conda activate base
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_10"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://docs.python.org/3/library/sys_path_init.html&lt;/li&gt;
&lt;li&gt;https://github.com/python/cpython/blob/main/Modules/getpath.py&lt;/li&gt;
&lt;li&gt;https://docs.python.org/3/library/venv.html&lt;/li&gt;
&lt;li&gt;https://peps.python.org/pep-0370/&lt;/li&gt;
&lt;li&gt;https://pip.pypa.io/en/stable/cli/pip_install/&lt;/li&gt;
&lt;li&gt;https://docs.conda.io/en/latest/&lt;/li&gt;
&lt;/ul&gt;</content><category term="Python"></category></entry><entry><title>Windows下CMD、Powershell、pwsh与Terminal小记</title><link href="https://blog.debao.me/2025/01/notes-on-cmd-powershell-pwsh-and-terminal-in-windows/" rel="alternate"></link><published>2025-01-01T00:03:00+08:00</published><updated>2025-01-01T00:03:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2025-01-01:/2025/01/notes-on-cmd-powershell-pwsh-and-terminal-in-windows/</id><summary type="html">&lt;p&gt;&lt;img alt="terminal" src="https://blog.debao.me/images/tools/windows_terminal.png"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;从传统的 &lt;code&gt;cmd.exe&lt;/code&gt; 到 &lt;code&gt;Windows Powershell&lt;/code&gt;，再到跨平台的 &lt;code&gt;PowerShell Core&lt;/code&gt;，随着 Windows 系统的不断发展，命令行工具上的选择也越来越多（乱），稍作记录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#windows"&gt;Windows 下的黑 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="terminal" src="https://blog.debao.me/images/tools/windows_terminal.png"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;从传统的 &lt;code&gt;cmd.exe&lt;/code&gt; 到 &lt;code&gt;Windows Powershell&lt;/code&gt;，再到跨平台的 &lt;code&gt;PowerShell Core&lt;/code&gt;，随着 Windows 系统的不断发展，命令行工具上的选择也越来越多（乱），稍作记录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#windows"&gt;Windows 下的黑色窗口到底叫什么？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;列个表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pwshexepowershell-corepowershell"&gt;pwsh.exe（Powershell Core，Powershell）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_2"&gt;面向对象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;别名&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#powershellexewindows-powershell"&gt;powershell.exe（Windows Powershell）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#windows-powershell-ise"&gt;Windows PowerShell ISE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#cmdexecommand-promote"&gt;cmd.exe（Command Promote）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#commandcomms-dos-prompt"&gt;command.com（MS-DOS Prompt）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bashexemingw-bash"&gt;bash.exe（MinGW Bash）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wsl-shell"&gt;WSL Shell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#windowsterminalexewindows-terminal"&gt;WindowsTerminal.exe（Windows Terminal）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conhostexewindows-console"&gt;conhost.exe（Windows Console）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;配置文件&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#pwsh"&gt;pwsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mingw-bash"&gt;mingw bash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#windows-terminal"&gt;Windows terminal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;脚本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="windows"&gt;Windows 下的黑色窗口到底叫什么？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;“控制台”？？那个黑色的文字交互窗口本身&lt;/li&gt;
&lt;li&gt;“命令提示符”？？运行在控制台中的 CMD.exe 程序&lt;/li&gt;
&lt;li&gt;“终端”？？现代化的工具（如 Windows Terminal），支持运行多个命令行解释器&lt;/li&gt;
&lt;li&gt;“Shell”？？负责解析命令的实际程序。&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_1"&gt;列个表&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;工具&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;平台支持&lt;/th&gt;
&lt;th&gt;特点和用途&lt;/th&gt;
&lt;th&gt;适用场景&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;pwsh.exe&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Shell+脚本语言&lt;/td&gt;
&lt;td&gt;跨平台&lt;/td&gt;
&lt;td&gt;跨平台支持，持续更新，现代化功能丰富&lt;/td&gt;
&lt;td&gt;跨平台脚本开发、云计算管理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;powershell.exe&lt;/td&gt;
&lt;td&gt;Shell+脚本语言&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;td&gt;深度集成 Windows，成熟稳定，但已停止更新&lt;/td&gt;
&lt;td&gt;Windows 系统管理、企业环境&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cmd.exe&lt;/td&gt;
&lt;td&gt;Shell&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;td&gt;基础命令行工具，支持旧版批处理脚本&lt;/td&gt;
&lt;td&gt;简单任务、运行旧版脚本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;command.com&lt;/td&gt;
&lt;td&gt;Shell&lt;/td&gt;
&lt;td&gt;DOS/早期 Windows&lt;/td&gt;
&lt;td&gt;16 位环境，仅用于兼容性目的&lt;/td&gt;
&lt;td&gt;运行旧版 DOS 程序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Windows Terminal&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;终端模拟器&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;td&gt;多标签、多主题，支持丰富的命令行工具&lt;/td&gt;
&lt;td&gt;多工具整合、开发者日常任务&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="pwshexepowershell-corepowershell"&gt;pwsh.exe（Powershell Core，Powershell）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;首个预览版发布于2016年，正式版PowerShell Core6.0发布于2018年，2020年更名为PowerShell7（注意它和Windows Powershell的关系）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;pwsh.exe&lt;/code&gt;&lt;/strong&gt; 是 &lt;strong&gt;PowerShell Core/PowerShell&lt;/strong&gt; 的可执行程序。&lt;/li&gt;
&lt;li&gt;它是 &lt;strong&gt;PowerShell&lt;/strong&gt; 的现代化版本，由 Microsoft 基于 .NET Core 开发，支持 &lt;strong&gt;Windows、Linux、macOS&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;相较于 &lt;strong&gt;Windows PowerShell&lt;/strong&gt;，它更轻量、更快，并且提供了跨平台兼容性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对powershell的评价挺两极分化的，它的问题包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学习曲线较陡，对新手不友好&lt;/li&gt;
&lt;li&gt;对 Unix/Linux 用户来说不够直观&lt;/li&gt;
&lt;li&gt;对 Windows 用户的传统习惯冲击大&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_2"&gt;面向对象&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;PowerShell（pwsh） 和 CMD 的核心区别之一是 PowerShell 是面向对象的，而 CMD 是基于文本的。理解这一点的关键在于它们处理数据的方式：CMD 将命令输出作为纯文本，而 PowerShell 将命令输出作为对象。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Cmdlet 是 PowerShell 的核心命令，是一种小型、轻量级的命令行工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有 Cmdlet 都采用统一的命名规范，格式为 Verb-Noun（如 Get-Process、Set-Location）。&lt;/li&gt;
&lt;li&gt;动词表示操作（如 Get、Set、Remove 等），名词表示目标对象（如 Process、Location 等）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;找个例子看看：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-ChildItem&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;输出是一个对象列表，每个文件或文件夹是一个 System.IO.FileInfo 或 System.IO.DirectoryInfo 对象。&lt;/li&gt;
&lt;li&gt;这些对象包含丰富的元数据，例如文件名称、大小、创建时间等。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----        2025-01-01  10:00 AM                Documents
-a----        2025-01-01  10:00 AM         12345 example.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;可以直接访问这些对象的属性，例如文件名和大小&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-ChildItem&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Select-Object&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;可能这样更直观&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$files&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Get-ChildItem&lt;/span&gt;
&lt;span class="nv"&gt;$files&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;  &lt;span class="c"&gt;# 获取第一个文件/文件夹的名称&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="_3"&gt;别名&lt;/h4&gt;
&lt;p&gt;别名是一种对完整命令（Cmdlet）的简化表示。常见的别名&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;别名&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;对应命令&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;来源&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类似于&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ls&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Get-ChildItem&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;列出文件和目录&lt;/td&gt;
&lt;td&gt;模拟 Linux 下的 &lt;code&gt;ls&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;Linux 的 &lt;code&gt;ls&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Get-Location&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示当前目录&lt;/td&gt;
&lt;td&gt;模拟 Linux 下的 &lt;code&gt;pwd&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;Linux 的 &lt;code&gt;pwd&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rm&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Remove-Item&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;删除文件或目录&lt;/td&gt;
&lt;td&gt;模拟 Linux 下的 &lt;code&gt;rm&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;Linux 的 &lt;code&gt;rm&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Move-Item&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;移动或重命名文件/目录&lt;/td&gt;
&lt;td&gt;模拟 Linux 下的 &lt;code&gt;mv&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;Linux 的 &lt;code&gt;mv&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Copy-Item&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;复制文件或目录&lt;/td&gt;
&lt;td&gt;模拟 Linux 下的 &lt;code&gt;cp&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;Linux 的 &lt;code&gt;cp&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cat&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Get-Content&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示文件内容&lt;/td&gt;
&lt;td&gt;模拟 Linux 下的 &lt;code&gt;cat&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;Linux 的 &lt;code&gt;cat&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;man&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;help&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取命令帮助信息&lt;/td&gt;
&lt;td&gt;模拟 Linux 下的 &lt;code&gt;man&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;Linux 的 &lt;code&gt;man&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sleep&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Start-Sleep&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;等待指定秒数&lt;/td&gt;
&lt;td&gt;模拟 Linux 下的 &lt;code&gt;sleep&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;Linux 的 &lt;code&gt;sleep&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;grep&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Select-String&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查找文本内容&lt;/td&gt;
&lt;td&gt;模拟 Linux 下的 &lt;code&gt;grep&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;Linux 的 &lt;code&gt;grep&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;kill&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Stop-Process&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;终止进程&lt;/td&gt;
&lt;td&gt;模拟 Linux 下的 &lt;code&gt;kill&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;Linux 的 &lt;code&gt;kill&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Clear-Host&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;清屏&lt;/td&gt;
&lt;td&gt;模拟 Linux 下的 &lt;code&gt;clear&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;Linux 的 &lt;code&gt;clear&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;echo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Write-Output&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;输出内容&lt;/td&gt;
&lt;td&gt;模拟 Linux 下的 &lt;code&gt;echo&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;Linux 的 &lt;code&gt;echo&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;touch&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;New-Item&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;创建新文件&lt;/td&gt;
&lt;td&gt;模拟 Linux 下的 &lt;code&gt;touch&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;Linux 的 &lt;code&gt;touch&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Get-Content&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看文件内容&lt;/td&gt;
&lt;td&gt;模拟 CMD 下的 &lt;code&gt;type&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;CMD 的 &lt;code&gt;type&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cls&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Clear-Host&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;清屏&lt;/td&gt;
&lt;td&gt;模拟 CMD 下的 &lt;code&gt;cls&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;CMD 的 &lt;code&gt;cls&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Set-Location&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切换目录&lt;/td&gt;
&lt;td&gt;模拟 CMD 下的 &lt;code&gt;cd&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;CMD 的 &lt;code&gt;cd&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dir&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Get-ChildItem&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;列出文件和目录&lt;/td&gt;
&lt;td&gt;模拟 CMD 下的 &lt;code&gt;dir&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;CMD 的 &lt;code&gt;dir&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;del&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Remove-Item&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;删除文件&lt;/td&gt;
&lt;td&gt;模拟 CMD 下的 &lt;code&gt;del&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;CMD 的 &lt;code&gt;del&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Remove-Item&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;删除目录&lt;/td&gt;
&lt;td&gt;模拟 CMD 下的 &lt;code&gt;rd&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;CMD 的 &lt;code&gt;rd&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;md&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;New-Item&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;创建目录&lt;/td&gt;
&lt;td&gt;模拟 CMD 下的 &lt;code&gt;md&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;CMD 的 &lt;code&gt;md&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ren&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Rename-Item&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;重命名文件或目录&lt;/td&gt;
&lt;td&gt;模拟 CMD 下的 &lt;code&gt;ren&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;CMD 的 &lt;code&gt;ren&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;history&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Get-History&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看命令历史&lt;/td&gt;
&lt;td&gt;模拟 CMD 下的 &lt;code&gt;doskey /history&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;CMD 的 &lt;code&gt;doskey /history&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;start&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Start-Process&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;启动文件/程序&lt;/td&gt;
&lt;td&gt;模拟 CMD 下的 &lt;code&gt;start&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;CMD 的 &lt;code&gt;start&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;popd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Pop-Location&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;从堆栈中恢复目录&lt;/td&gt;
&lt;td&gt;模拟 CMD 下的 &lt;code&gt;popd&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;CMD 的 &lt;code&gt;popd&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pushd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Push-Location&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将目录压入堆栈&lt;/td&gt;
&lt;td&gt;模拟 CMD 下的 &lt;code&gt;pushd&lt;/code&gt; 命令&lt;/td&gt;
&lt;td&gt;CMD 的 &lt;code&gt;pushd&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ForEach-Object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;遍历对象&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;?&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Where-Object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;过滤对象&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;gci&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Get-ChildItem&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;列出文件和目录&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;gps&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Get-Process&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取当前运行的进程信息&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;gal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Get-Alias&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看别名列表&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;gc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Get-Content&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;读取文件内容&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ni&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;New-Item&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;创建新文件或目录&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;measure&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Measure-Object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;统计对象数量、总和等&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;select&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Select-Object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;选择对象的属性&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Sort-Object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;对对象进行排序&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Format-List&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;以列表形式显示对象&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ft&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Format-Table&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;以表格形式显示对象&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sls&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Select-String&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查找字符串内容&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ogv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Out-GridView&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;图形化方式显示内容&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ipcsv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Import-Csv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;从 CSV 文件导入数据&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;epcsv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Export-Csv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;导出数据到 CSV 文件&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tee&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Tee-Object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将输出写入文件并同时输出到控制台&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;r&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Invoke-History&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;运行历史中的命令&lt;/td&gt;
&lt;td&gt;PowerShell 原生&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="powershellexewindows-powershell"&gt;powershell.exe（Windows Powershell）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;首次发布于2006年，Windows PowerShell 5.1 是基于 .NET Framework 构建的最后一个版本，也是 Windows PowerShell 系列的最终版本。（后续转向开源的Powershell Core）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows PowerShell&lt;/strong&gt; 是 Windows 系统自带的命令行 Shell 和脚本语言。&lt;/li&gt;
&lt;li&gt;基于 .NET Framework 开发，仅支持 Windows 平台。&lt;/li&gt;
&lt;li&gt;虽然功能强大，但由于依赖 .NET Framework，它的跨平台能力和性能相比 PowerShell Core 有所限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="windows-powershell-ise"&gt;Windows PowerShell ISE&lt;/h4&gt;
&lt;p&gt;Windows PowerShell ISE（Integrated Scripting Environment）是一个图形化的脚本编辑和运行环境，专为 Windows PowerShell 用户设计。它集成了脚本编辑、调试和运行功能，使用户可以更轻松地编写、测试和调试 PowerShell 脚本。&lt;/p&gt;
&lt;p&gt;Windows PowerShell ISE 是专为 Windows PowerShell（基于 .NET Framework）设计的工具，因此仅支持 Windows 平台。已经停止开发，且不适用于pwsh。&lt;/p&gt;
&lt;h3 id="cmdexecommand-promote"&gt;cmd.exe（Command Promote）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;首次发布于1987年&lt;/li&gt;
&lt;li&gt;Command Prompt（命令提示符）是 Windows 系统的传统命令行工具，通常简称为 CMD。&lt;/li&gt;
&lt;li&gt;Windows 早期的 Shell 环境，提供了 DOS 风格的命令行接口。&lt;/li&gt;
&lt;li&gt;支持 .bat 和 .cmd 文件的执行&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="commandcomms-dos-prompt"&gt;command.com（MS-DOS Prompt）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;首次发布于1980年&lt;/li&gt;
&lt;li&gt;command.com 是 MS-DOS 的命令行解释器，也是 Windows 9x 系列系统中默认的 Shell。&lt;/li&gt;
&lt;li&gt;它是 CMD 的前辈，设计于 16 位环境，功能非常有限。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="bashexemingw-bash"&gt;bash.exe（MinGW Bash）&lt;/h3&gt;
&lt;p&gt;MinGW（Minimalist GNU for Windows） 是一个工具集，它将一部分常见的 GNU 工具移植到 Windows 平台上，主要用于编译和构建基于 Windows 的程序。&lt;/p&gt;
&lt;p&gt;MinGW Bash 是 MinGW 提供的一个命令行工具，它模拟了一个类似于 Linux 环境的 Bash Shell，用于在 Windows 上运行一部分 GNU 命令。&lt;/p&gt;
&lt;h3 id="wsl-shell"&gt;WSL Shell&lt;/h3&gt;
&lt;p&gt;WSL 提供了一个核心命令行工具 wsl.exe，它允许：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动默认的 WSL 发行版。&lt;/li&gt;
&lt;li&gt;指定启动某个具体的 WSL 发行版（如 Ubuntu、Debian 等）。&lt;/li&gt;
&lt;li&gt;执行 Linux 命令或脚本（例如：wsl ls）。&lt;/li&gt;
&lt;li&gt;启动 Bash Shell&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当运行 wsl 或 wsl.exe 时，WSL 会启动用户安装的 Linux 发行版的默认 Shell（通常是 Bash）。&lt;/p&gt;
&lt;h3 id="windowsterminalexewindows-terminal"&gt;WindowsTerminal.exe（Windows Terminal）&lt;/h3&gt;
&lt;p&gt;&lt;img alt="terminal" src="https://blog.debao.me/images/tools/windows_terminal.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首次发布于2019年。&lt;/li&gt;
&lt;li&gt;Windows Terminal 是微软开发的现代化终端工具，为用户提供统一的命令行体验。&lt;/li&gt;
&lt;li&gt;它并不是一个 Shell，而是一个终端模拟器，可以托管多个 Shell 和命令行工具，如 CMD、PowerShell、WSL、Azure CLI 等。&lt;/li&gt;
&lt;li&gt;它支持多标签、多主题和 GPU 加速渲染，是现代开发者的首选终端工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Windows Terminal 使用一个 JSON 配置文件（settings.json）来定义终端的外观和行为。每种终端环境（如 PowerShell、CMD、WSL Bash）都作为一个单独的 "profile" 被定义在这个配置文件中。通过配置文件，Windows Terminal 可以调用这些环境并在独立的标签页或分屏中运行它们。&lt;/p&gt;
&lt;h3 id="conhostexewindows-console"&gt;conhost.exe（Windows Console）&lt;/h3&gt;
&lt;p&gt;conhost.exe 是 Console Host（控制台主机），是 Windows Console API 的宿主进程。
它是用来管理和渲染 控制台窗口 的组件，负责处理控制台应用程序的输入输出（如显示文本、处理键盘输入等）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在早期 Windows 系统（如 XP）中，控制台应用程序（如 cmd.exe）直接与 csrss.exe（Client Server Runtime Process）交互，这是 Windows 的核心系统服务。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从 Windows 7 开始，Microsoft 引入了 conhost.exe，将控制台窗口的管理从 csrss.exe 中分离出来。&lt;/p&gt;
&lt;h2 id="_4"&gt;配置文件&lt;/h2&gt;
&lt;p&gt;看看位置&lt;/p&gt;
&lt;h3 id="pwsh"&gt;pwsh&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;%UserProfile%\Documents\PowerShell\Profile.ps1&lt;/li&gt;
&lt;li&gt;%ProgramFiles%\PowerShell\7\Profile.ps1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以通过如下命令查看具体位置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$PROFILE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;比如：anaconda的 conda init 会修改这个文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="mingw-bash"&gt;mingw bash&lt;/h3&gt;
&lt;p&gt;全局配置文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通常在 MinGW 安装目录下的 /etc/profile 或 /etc/bash.bashrc。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用户级配置文件，则在用户主目录下的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;~/.bashrc&lt;/li&gt;
&lt;li&gt;~/.bash_profile&lt;/li&gt;
&lt;li&gt;~/.profile&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="windows-terminal"&gt;Windows terminal&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;%LocalAppData%\Packages\Microsoft.WindowsTerminal_8wekyb3d8bbwe\LocalState&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_5"&gt;脚本&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;.ps1 中的 ps 代表 PowerShell。数字 1 代表 PowerShell 版本 1.0（这是 PowerShell 的第一个正式版本），后面没再改。【注意：.ps 是 Adobe 公司大名鼎鼎的 postscript 文件（.pdf文件的前身）的后缀，微软这也是避嫌了】&lt;/li&gt;
&lt;li&gt;.bat 或 .cmd：Windows 批处理脚本文件。（Powershell 通过内部调用cmd可以支持.bat文件）&lt;/li&gt;
&lt;li&gt;.sh 取自shell，Linux 本身不关注后缀，而且有各种shell存在&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;code&gt;.ps1&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;code&gt;.bat&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;code&gt;.sh&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;运行环境&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;PowerShell&lt;/td&gt;
&lt;td&gt;Windows CMD（命令提示符）&lt;/td&gt;
&lt;td&gt;Linux/Unix（Shell）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;适用系统&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Windows、Linux、macOS&lt;/td&gt;
&lt;td&gt;仅 Windows&lt;/td&gt;
&lt;td&gt;Linux、macOS（Windows 需工具）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;功能&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;强（支持面向对象和模块化设计）&lt;/td&gt;
&lt;td&gt;中（适合简单任务）&lt;/td&gt;
&lt;td&gt;强（擅长文本处理和系统管理）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;现代化&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;td&gt;较低&lt;/td&gt;
&lt;td&gt;中等&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_6"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/PowerShell&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Cmd.exe&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Windows_Terminal&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/COMMAND.COM&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Windows_Console&lt;/li&gt;
&lt;li&gt;https://github.com/microsoft/terminal&lt;/li&gt;
&lt;li&gt;https://github.com/PowerShell/PowerShell&lt;/li&gt;
&lt;li&gt;https://www.mingw-w64.org/&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tools"></category></entry><entry><title>Nvidia GPU历史小记</title><link href="https://blog.debao.me/2024/12/notes-on-the-history-of-nvidia-gpus/" rel="alternate"></link><published>2024-12-31T00:11:00+08:00</published><updated>2024-12-31T00:11:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-31:/2024/12/notes-on-the-history-of-nvidia-gpus/</id><summary type="html">&lt;p&gt;据说，Nvidia开头的大写字母“N”代表着“新”（new）、“下一代”（next-generation）和“数字”（number），而“vidia”则来源于拉丁语单词“videre”，意为“看见”。合起来整个名称可以理解为“新视野”（new vision …&lt;/p&gt;</summary><content type="html">&lt;p&gt;据说，Nvidia开头的大写字母“N”代表着“新”（new）、“下一代”（next-generation）和“数字”（number），而“vidia”则来源于拉丁语单词“videre”，意为“看见”。合起来整个名称可以理解为“新视野”（new vision），体现在logo中是一只眼睛。&lt;/p&gt;
&lt;p&gt;创新时间线：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1993：3D Graphics&lt;/li&gt;
&lt;li&gt;1999：GPU&lt;/li&gt;
&lt;li&gt;2006：CUDA&lt;/li&gt;
&lt;li&gt;2012：AI&lt;/li&gt;
&lt;li&gt;2018：RTX&lt;/li&gt;
&lt;li&gt;2022：Omniverse&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;术语&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GPU：Graphics Processing Unit&lt;/li&gt;
&lt;li&gt;CUDA：Compute Unified Device Architecture&lt;/li&gt;
&lt;li&gt;RT：Ray tracing&lt;/li&gt;
&lt;li&gt;Omniverse：由 "Omni"（意为“全、全面”）和 "Universe"（意为“宇宙”）组合而成。聚焦元宇宙（Metaverse） 和 虚拟现实（VR） 需求的实时协作与3D仿真平台。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2006年起，Nvidia开始以知名人物命名起架构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Tesla&lt;/strong&gt;：尼古拉·特斯拉（Nikola Tesla），发明家和电气工程师，交流电系统的先驱。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fermi&lt;/strong&gt;：恩里科·费米（Enrico Fermi），物理学家，“原子弹之父”，也是量子力学和粒子物理学的开创者。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kepler&lt;/strong&gt;：约翰内斯·开普勒（Johannes Kepler），天文学家，开普勒行星运动定律的发现者。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maxwell&lt;/strong&gt;：詹姆斯·克拉克·麦克斯韦（James Clerk Maxwell），提出了电磁场理论的物理学家。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pascal&lt;/strong&gt;：布莱兹·帕斯卡（Blaise Pascal），数学家、物理学家，概率论和流体力学的奠基者。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Volta&lt;/strong&gt;：亚历山德罗·伏打（Alessandro Volta），电池的发明者，电压单位“伏特”的来源。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Turing&lt;/strong&gt;：艾伦·图灵（Alan Turing），计算机科学之父，人工智能和图灵测试的奠基者。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ampere&lt;/strong&gt;：安德烈-玛丽·安培（André-Marie Ampère），电磁学的先驱，“安培”单位的来源。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ada Lovelace&lt;/strong&gt;：阿达·洛芙莱斯（Ada Lovelace），世界上第一位程序员，现代计算机科学的先驱。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hopper&lt;/strong&gt;：格蕾丝·霍普（Grace Hopper），计算机科学家，“COBOL”语言的创造者，现代编程的开拓者。  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;简要历史&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1993年&lt;/strong&gt;: Nvidia 由黄仁勋（Jensen Huang）、Chris Malachowsky 和 Curtis Priem 创立。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1995年&lt;/strong&gt;: 发布 NV1，这是首款多媒体 PCI 单槽卡（PCI single-slot card），实现 3D 图像渲染，并支持连接游戏手柄。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1997年&lt;/strong&gt;: 发布 RIVA 128，这是首款高性能的 128 位 Direct3D 图形处理器，能够渲染 2D 和 3D 图像。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="1999-2010"&gt;早期的图形处理单元（1999-2010）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GeForce 256 (1999)&lt;/strong&gt;：被称为“世界上第一款GPU”，标志着从传统的图形加速卡向专门的图形处理单元的转变。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tesla (2006)&lt;/strong&gt;：专为科学计算和高性能计算（HPC）设计的系列，开创了GPU计算的先河。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fermi (2009)&lt;/strong&gt;：第一个支持CUDA并行计算架构的GPU，开启了GPU在深度学习和科学计算中的应用。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;关于Tesla:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tesla 是 NVIDIA 的第四代 GPU 架构名称（2006 年），首次引入统一着色器架构和 CUDA 支持。&lt;/li&gt;
&lt;li&gt;Tesla 也是 NVIDIA 的专业显卡系列名称，专注于高性能计算（HPC）、科学计算和 AI 加速，后续产品基于不同架构（如 Fermi、Kepler、Pascal 等）。&lt;/li&gt;
&lt;li&gt;Tesla 系列显卡如今已被 NVIDIA A 系列（如 A100、H100）取代，但其架构和技术仍是现代 GPU 的基础之一。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id="gpu2010"&gt;现代GPU架构的崛起（2010至今）&lt;/h3&gt;
&lt;p&gt;&lt;img alt="kapler" src="https://blog.debao.me/images/tools/nvidia_gpu_history_0.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Kepler (2012)&lt;/strong&gt;：Kepler架构进一步提升了性能，并优化了功耗表现，成为了游戏和计算领域的主力架构。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maxwell (2014)&lt;/strong&gt;：专注于能效提升，广泛应用于消费级显卡中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pascal (2016)&lt;/strong&gt;：强化了深度学习、AI计算和VR等领域的性能，推出了Titan X和P100等标志性产品。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Volta (2017)&lt;/strong&gt;：推出了Tesla V100，进一步推动了深度学习的训练任务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Turing (2018)&lt;/strong&gt;：引入了实时光线追踪技术，开创了AI推理、游戏、专业图形的多重应用领域。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ampere (2020)&lt;/strong&gt;：强化了深度学习训练的性能，并推出了A100，成为AI和HPC的“工作马”。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hopper (2022)&lt;/strong&gt;：为AI推理任务提供了更强大的算力，继续在数据中心领域占据主导地位。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ada Lovelace (2023)&lt;/strong&gt;：最新一代的架构，优化了AI推理和图形渲染的性能。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;架构&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;代表系列&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Tesla&lt;/td&gt;
&lt;td&gt;Tesla C870, S1070&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Fermi&lt;/td&gt;
&lt;td&gt;GeForce GTX 400 系列&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Kepler&lt;/td&gt;
&lt;td&gt;GeForce GTX 600 系列 / Tesla K 系列&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maxwell&lt;/td&gt;
&lt;td&gt;GeForce GTX 900 系列 / Quadro M 系列&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pascal&lt;/td&gt;
&lt;td&gt;GeForce GTX 10 系列 / Tesla P 系列&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Volta&lt;/td&gt;
&lt;td&gt;Tesla V100, Titan V&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Turing&lt;/td&gt;
&lt;td&gt;GeForce RTX 20 系列 / T4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ampere&lt;/td&gt;
&lt;td&gt;GeForce RTX 30 系列 / A100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hopper&lt;/td&gt;
&lt;td&gt;H100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ada Lovelace&lt;/td&gt;
&lt;td&gt;GeForce RTX 40 系列&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_3"&gt;系列分类&lt;/h2&gt;
&lt;p&gt;似乎很乱&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;系列&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;架构&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;典型用途&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;代表产品&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GeForce GTX 系列&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Kepler / Maxwell / Pascal&lt;/td&gt;
&lt;td&gt;游戏、家庭娱乐、基础图形处理&lt;/td&gt;
&lt;td&gt;GTX 1660, GTX 1080 Ti&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GeForce RTX 系列&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Turing / Ampere / Ada Lovelace&lt;/td&gt;
&lt;td&gt;游戏、实时光线追踪、内容创作&lt;/td&gt;
&lt;td&gt;RTX 4090, RTX 3090, RTX 2080 Ti&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;NVIDIA RTX（专业级）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Turing / Ampere&lt;/td&gt;
&lt;td&gt;CAD、3D 渲染、科学可视化、动画制作&lt;/td&gt;
&lt;td&gt;RTX A6000, RTX A4000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Quadro 系列&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Kepler / Maxwell / Pascal / Turing&lt;/td&gt;
&lt;td&gt;专业图形设计与工程软件优化&lt;/td&gt;
&lt;td&gt;Quadro RTX 8000, Quadro P5000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Tesla 系列&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Kepler / Maxwell / Pascal&lt;/td&gt;
&lt;td&gt;高性能计算（HPC）、AI 训练与推理&lt;/td&gt;
&lt;td&gt;Tesla K80, Tesla P100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;A 系列（数据中心）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Ampere&lt;/td&gt;
&lt;td&gt;数据中心 AI 训练与推理、大模型计算&lt;/td&gt;
&lt;td&gt;A100, A30, A40&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;H 系列（数据中心）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Hopper&lt;/td&gt;
&lt;td&gt;AI 推理优化、大模型（Transformer）训练&lt;/td&gt;
&lt;td&gt;H100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Jetson 系列&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Maxwell / Pascal / Volta&lt;/td&gt;
&lt;td&gt;边缘计算、嵌入式 AI、机器人&lt;/td&gt;
&lt;td&gt;Jetson Xavier NX, Jetson Nano&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;T 系列（推理优化）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Turing&lt;/td&gt;
&lt;td&gt;云推理、边缘计算、低功耗 AI 推理&lt;/td&gt;
&lt;td&gt;T4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;NVIDIA GRID 系列&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Kepler / Maxwell / Pascal&lt;/td&gt;
&lt;td&gt;虚拟化、云游戏、虚拟桌面&lt;/td&gt;
&lt;td&gt;GRID K2, GRID V100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;CMP 系列（挖矿专用）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Ampere&lt;/td&gt;
&lt;td&gt;加密货币挖矿&lt;/td&gt;
&lt;td&gt;CMP 30HX, CMP 170HX&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_4"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/List_of_Nvidia_graphics_processing_units&lt;/li&gt;
&lt;li&gt;https://www.nvidia.com.tw/content/PDF/GTC/keynote/marc-hamilton-nvidia-keynote.pdf&lt;/li&gt;
&lt;li&gt;https://www.thestreet.com/technology/nvidia-company-history-timeline&lt;/li&gt;
&lt;li&gt;https://www.girolino.com/nvidia-gpu-evolution-from-geforce-to-ai-powerhouse/&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tools"></category></entry><entry><title>图像格式tiff小记</title><link href="https://blog.debao.me/2024/12/notes-no-tiff-image-format/" rel="alternate"></link><published>2024-12-29T19:19:00+08:00</published><updated>2024-12-29T19:19:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-29:/2024/12/notes-no-tiff-image-format/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;一个很古老，很简单 的图像格式；同时又是存在各种扩展，又超级复杂的图像格式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#tiff-60"&gt;Tiff 6.0 规格书&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#tiffbaseline-tiff"&gt;基线TIFF（Baseline TIFF）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tifftiff-extensions"&gt;TIFF扩展（TIFF Extensions）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;压缩格 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;一个很古老，很简单 的图像格式；同时又是存在各种扩展，又超级复杂的图像格式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#tiff-60"&gt;Tiff 6.0 规格书&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#tiffbaseline-tiff"&gt;基线TIFF（Baseline TIFF）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tifftiff-extensions"&gt;TIFF扩展（TIFF Extensions）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;压缩格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#tiffep"&gt;TIFF/EP&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#tiff60exif"&gt;与TIFF6.0、EXIF的关系&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;压缩格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#dngdigital-negative"&gt;DNG(Digital Negative)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#readerwriter"&gt;对Reader、Writer的要求&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#reader"&gt;Reader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#writer"&gt;Writer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#tiff"&gt;TIFF格式&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#tiff_1"&gt;TIFF文件结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;文件头&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ifdimage-file-directory"&gt;IFD(Image File Directory)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ifd-entrytag"&gt;IFD Entry（Tag）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_4"&gt;数据类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#field"&gt;一些可选Field&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;图像数据&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_6"&gt;灰度图像&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_7"&gt;索引图像&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_8"&gt;真彩图像&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tile"&gt;平铺（Tile）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#thumbnail"&gt;缩微图（Thumbnail）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#libtiff"&gt;LibTiff 库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_9"&gt;文件打开&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ifd"&gt;IFD&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#ifd_1"&gt;读IFD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ifd_2"&gt;写IFD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ifd_3"&gt;切换IFD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ifd_4"&gt;移除IFD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#tag"&gt;Tag&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_10"&gt;注意事项&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tifffield"&gt;TIFFField&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tag_1"&gt;非内置的Tag&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_11"&gt;读写图像数据&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#tile_1"&gt;Tile接口&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_12"&gt;压缩格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#geotiff"&gt;GeoTiff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bigtiff"&gt;BigTiff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_13"&gt;格式&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_14"&gt;文件头&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ifd_5"&gt;IFD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tag-field"&gt;TAG Field&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_15"&gt;软件&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#photoshop"&gt;Photoshop&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#pyramin"&gt;Pyramin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_16"&gt;缩微图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#imagemagick"&gt;ImageMagick&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#qt"&gt;Qt 图像&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_17"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;TIFF(Tag Image File Format)是用于存储位图图像的计算机文件格式，在印刷行业和摄影界等很流行。它被扫描仪、传真机、文字处理、光学字符识别、桌面出版系统、图像处理、页面布局等程序广泛的支持。&lt;/p&gt;
&lt;p&gt;TIFF格式由Aldus公司创建，最新版本（Tiff 6.0）发布于1992年。1994年Adobe Systems收购Aldus。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TIFF、PNG、JEPG是三种支持(deep-color)的图像格式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="tiff-60"&gt;Tiff 6.0 规格书&lt;/h2&gt;
&lt;p&gt;Tiff6.0 规格书包含下列部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Part1: 基线TIFF （Baseline TIFF）&lt;/li&gt;
&lt;li&gt;Part2: TIFF扩展 （TIFF Extensions）&lt;/li&gt;
&lt;li&gt;Part3: 附件 （Appendices）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tiffbaseline-tiff"&gt;基线TIFF（Baseline TIFF）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;多页面或子文件（Multiple subfiles）&lt;ul&gt;
&lt;li&gt;每个TIFF文件可以包含多页图像（multi-page images）&lt;/li&gt;
&lt;li&gt;每一个图像需要一个IFD（Image File Directory）&lt;/li&gt;
&lt;li&gt;每个IFD定义一个子文件（subfile）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;带（Strips）&lt;ul&gt;
&lt;li&gt;一个图像可以有多个带（Strip）构成。&lt;/li&gt;
&lt;li&gt;每一个带由一行或多行图像数据构成，每个带可以使用不同的压缩算法。&lt;/li&gt;
&lt;li&gt;如果没有Strip的标记，认为图像只有一个Strip构成。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;压缩（Compression）&lt;ul&gt;
&lt;li&gt;1 无压缩 （默认）&lt;/li&gt;
&lt;li&gt;2 CCITT Group 3 1（只用于二值图像）&lt;/li&gt;
&lt;li&gt;32773 PackBits Compression&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;图像类型&lt;ul&gt;
&lt;li&gt;二值图像 bilevel&lt;/li&gt;
&lt;li&gt;灰度图像 grayscale&lt;/li&gt;
&lt;li&gt;调色板 pallette-color&lt;/li&gt;
&lt;li&gt;真彩图像 RGB full-color &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;字节序&lt;ul&gt;
&lt;li&gt;"II"(Intel byte ordering)小端&lt;/li&gt;
&lt;li&gt;"MM"（Motoroia byte ordering）大端&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;其他字段（Other TIFF fields）&lt;ul&gt;
&lt;li&gt;规范中没有的字段，Reader需要能处理并忽略&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tifftiff-extensions"&gt;TIFF扩展（TIFF Extensions）&lt;/h3&gt;
&lt;p&gt;引入更多的图像类型（CMYK、YCbCr、HalftoneHints、&lt;strong&gt;Tiled&lt;/strong&gt;、CIELab）和压缩格式（CCITT T.4 bilevel、CCITT T.6 bilevel、LZW、JPEG）；引入SUBIFD标签支持图像树（Image Trees）；私有Tag。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Image Trees&lt;ul&gt;
&lt;li&gt;SUBIFD 用于标记子IFD&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tiled&lt;ul&gt;
&lt;li&gt;一个TIFF图像可以有多个大小相同的图像平铺构成，类似于Strips。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Baseline Reader&lt;/strong&gt;不要求读Tiled图像。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Private tags&lt;ul&gt;
&lt;li&gt;32768~64999和65536及以上 的Tag 是私有的，仅对个人或组织有意义，但是需要向Adobe申请，由Adobe进行分配，以避免冲突。（TIFF/EP定义的一些新标签位于该段）&lt;/li&gt;
&lt;li&gt;65000~65535的Tag，可以复用，无需注册登记&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Private IFD&lt;ul&gt;
&lt;li&gt;如果需要10个以上的私有Tag，考虑使用私有IFD&lt;/li&gt;
&lt;li&gt;定义一个类型为LONG或IFD类型的私有Tag，其值作为offset指向其他区域（该区域怎么用是完全自由的）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_1"&gt;压缩格式&lt;/h3&gt;
&lt;p&gt;关注 LZW JPEG ZIP&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LZW 之所以不再TIFF6.0 BaseLine里面，是因为当时有专利。（2003年过期）&lt;/li&gt;
&lt;li&gt;LZW 对16位深度的图像，压缩效果很不好，甚至比压缩前体积更大。&lt;/li&gt;
&lt;li&gt;JPEG: TIFF 6.0引入的 "6"(老的，libtiff对其支持也不好); &lt;code&gt;TIFF Technical Note#2&lt;/code&gt; 引入的 “7”（新的，也在TIFF/EP中使用）&lt;/li&gt;
&lt;li&gt;ZIP(Deflate/Inflate) 放气充气，值为“8”：&lt;code&gt;TIFF Technical Note#2&lt;/code&gt;引入&lt;/li&gt;
&lt;li&gt;ZIP(Deflate/Inflate)，值为32946：存在时间更早，“8”和它通用&lt;ul&gt;
&lt;li&gt;Photoshop可以读，但写时使用"8"??(Fix me!!)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="tiffep"&gt;TIFF/EP&lt;/h2&gt;
&lt;p&gt;TIFF/EP（Tag Image File Format/Electronic Photography) 是数码图像文件的国际标准 ISO 12234-2 。文件后缀名也是 .tiff 或 .tif。该标准发布于2001年。&lt;/p&gt;
&lt;p&gt;Adobe 的 DNG 格式基于 TIFF/EP 标准（兼容）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当前数码相机保存图片的工业标准是 Exif/DCF。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="tiff60exif"&gt;与TIFF6.0、EXIF的关系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;TIFF/EP遵守 TIFF6.0 的标准，并使用和TIFF6.0同样的文件头。&lt;ul&gt;
&lt;li&gt;但是它定义了一些放置到第一个IFD中的标签（TAG），并忽略了不少TIFF6.0中的标签。&lt;/li&gt;
&lt;li&gt;TIFF/EP不允许缺省值，所有的值必须显式设置。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;TIFF/EP和Exif标准有一些显著的区别。&lt;ul&gt;
&lt;li&gt;Exif标准中位于 Exif Sub-IFD 的标签现在直接位于第一个 IFD中。&lt;/li&gt;
&lt;li&gt;Exif IFD Sub-IFD，互操作的 Sub-IFD以及MakerNode都被省略。&lt;/li&gt;
&lt;li&gt;TIFF/EP 定义了一个处理缩微图的方法。该方法不同于Exif标准中的方法。&lt;/li&gt;
&lt;li&gt;TIFF/EP 重新定义了一些 Exif标准中定义的标签。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;压缩格式&lt;/h3&gt;
&lt;p&gt;TIFF/EP可以存储无压缩格式，或者JPEG基线DCT-Based有损压缩。TIFF/EP允许使用其他的格式，但不强制要求Reader能读。&lt;/p&gt;
&lt;p&gt;不同于TIFF6.0中，压缩格式默认是无压缩，可以省略Tag（259），TIFF/EP必须通过Tag来指定，不能省略。&lt;/p&gt;
&lt;p&gt;缩微图必须是无压缩的，即：IFD的Tag(259)值必须是1。（当主图像采用JPEG压缩或其他压缩格式时，必须存在缩微图，且需要在第一个IFD中，以便与TIFF6.0BaseLine Reader兼容）&lt;/p&gt;
&lt;h2 id="dngdigital-negative"&gt;DNG(Digital  Negative)&lt;/h2&gt;
&lt;p&gt;文件后缀: &lt;code&gt;.dng&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;DNG是TIFF 6.0格式的扩展，并且与TIFF/EP兼容。一个DNG文件同时遵守DNG规范和TIFF/EP标准是可行的（不强制要求）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DNG建议使用SubIFD树（见TIFF/EP中描述）。SubIFD链（chain）不被支持。&lt;/li&gt;
&lt;li&gt;DNG建议第一个IFD中包含一个低分辨率的缩微图（如TIFF/EP规范所描述），但不强制。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="readerwriter"&gt;对Reader、Writer的要求&lt;/h2&gt;
&lt;h3 id="reader"&gt;Reader&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Reader&lt;strong&gt;必须&lt;/strong&gt;能处理多页的TIFF文件，但不强制要求Baseline Reader读第一个IFD之后的任何一个IFD（换言之，大量的Baseline Reader可能只读第一个IFD）。&lt;/li&gt;
&lt;li&gt;Reader&lt;strong&gt;必须&lt;/strong&gt;支持BaseLine中的三种压缩方式（无压缩、CCITT Group3 1、PackBits Compression）。注：TIFF/EP的Reader必须支持（无压缩、JPEG压缩）。&lt;/li&gt;
&lt;li&gt;Reader&lt;strong&gt;必须&lt;/strong&gt;能读取大端和小端的TIFF图像&lt;/li&gt;
&lt;li&gt;Reader&lt;strong&gt;必须&lt;/strong&gt;准备好处理并能忽略不认识（TIFF规范中未定义）的Tag&lt;/li&gt;
&lt;li&gt;Reader&lt;strong&gt;不能拒绝&lt;/strong&gt;读取可选Field（比如Make、Model、DateTime等）不存在的TIFF文件。&lt;/li&gt;
&lt;li&gt;Reader&lt;strong&gt;必须&lt;/strong&gt;能读取缺省Field存在和不存在的情况。&lt;/li&gt;
&lt;li&gt;Reader&lt;strong&gt;应当&lt;/strong&gt;跳过不认识的字段类型（比如不排除以后会有新的类型）的Field&lt;/li&gt;
&lt;li&gt;TIFF可能包含新的Pixel类型，如果字段SampleFormat存在且其值不为1，BaseLine Reader需要结束读流程。&lt;/li&gt;
&lt;li&gt;TIFF中的单像素可能包含超出我们想象的通道，BaseLine Reader需要借助SmaplesPrePixel和BitsPreSample字段的值优雅地跳过它们。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="writer"&gt;Writer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;缺省的Field，可写可不写。&lt;/li&gt;
&lt;li&gt;TIFF6.0要求：如果TIFF中有多个页面，第一个必须是全分辨率图像，后续的图像（比如缩减分辨率图像）可以按任何顺序。对这些图像，Reader需要遍历相应的IFD来决定如何处理&lt;ul&gt;
&lt;li&gt;但是TIFF/EP 以及DNG都建议在IFD0中放置缩微图。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TIFF6.0要求：任何引用都不能在多处出现。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="tiff"&gt;TIFF格式&lt;/h2&gt;
&lt;h3 id="tiff_1"&gt;TIFF文件结构&lt;/h3&gt;
&lt;p&gt;TIFF是图像文件格式，它以一个8字节的文件头开始的，文件头指向一个IFD（Image File Directory），IFD包含图像的信息，以及一个指向真实数据的指针。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tiff File Structure" src="https://blog.debao.me/images/tools/tiff.png"&gt;&lt;/p&gt;
&lt;h3 id="_3"&gt;文件头&lt;/h3&gt;
&lt;p&gt;文件头固定占用8个字节。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;偏移(offset)&lt;/th&gt;
&lt;th&gt;数据类型(DataType)&lt;/th&gt;
&lt;th&gt;值(Value)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Word&lt;/td&gt;
&lt;td&gt;字节序指示："II"代表小端，"MM"代表大端。影响所有的16位或32位整数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Word&lt;/td&gt;
&lt;td&gt;版本号 (始终是 42)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Unsigned Long&lt;/td&gt;
&lt;td&gt;第一个 IFD 的偏移值，偏移值总是相对于TIFF文件的，本文件的第一个字节偏移值是0。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;注：TIFF/EP标准建议判断版本时使用 VERSION &amp;gt;= 42，而不是VERSION==42&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="ifdimage-file-directory"&gt;IFD(Image File Directory)&lt;/h3&gt;
&lt;p&gt;一个TIFF文件至少包含一个IFD。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;偏移(offset)&lt;/th&gt;
&lt;th&gt;数据类型(DataType)&lt;/th&gt;
&lt;th&gt;值(Value)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Word&lt;/td&gt;
&lt;td&gt;本IFD中的Tag数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2+x*12&lt;/td&gt;
&lt;td&gt;Tag structure&lt;/td&gt;
&lt;td&gt;Tag data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2+(本IFD中Tag数)*12&lt;/td&gt;
&lt;td&gt;Unsigned Long&lt;/td&gt;
&lt;td&gt;下一个IFD在文件内的偏移值, 如果没有则为0。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;一个IFD中至少包含一个DE(Directory entry)，最多包含65535个？所有的Tag需要按&lt;strong&gt;升序&lt;/strong&gt;排序。每一个Tag精确占12个字节。&lt;/p&gt;
&lt;h3 id="ifd-entrytag"&gt;IFD Entry（Tag）&lt;/h3&gt;
&lt;p&gt;TIFF field：包含Tag和其值的逻辑实体（entry）。每一个Field都有一个关联的Count，也就是说所有的Field都是一个一维的数组，即使是大多数Field只包含一个值。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;偏移(offset)&lt;/th&gt;
&lt;th&gt;数据类型(DataType)&lt;/th&gt;
&lt;th&gt;值(Value)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Word&lt;/td&gt;
&lt;td&gt;Tag标识&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Word&lt;/td&gt;
&lt;td&gt;Tag数据的数据类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Unsigned Long&lt;/td&gt;
&lt;td&gt;值的个数（注意，不是字节数，比如单个SHORT，是1不是2）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Tag数据或数据在文件内的偏移值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果 数据大小*个数 &amp;lt;=4，则可以直接存储（小于4，则左对齐，存在低位），反之则需要在其他地方存储，此处只存储偏移值。&lt;/p&gt;
&lt;p&gt;注意：
* 偏移值不能认为是LONG类型
* TIFF标准禁止在Tag数据中包含偏移值，标准中定义的(TileOffsets、StripOffsets、...)除外。&lt;/p&gt;
&lt;h4 id="_4"&gt;数据类型&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1=BYTE&lt;/td&gt;
&lt;td&gt;8位无符号数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2=ASCII&lt;/td&gt;
&lt;td&gt;7位的ASCII码，最后一个字节需要是NUL。（可以包含多个字符串，每个都以NUL结束，COUNT是指所有字节数）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3=SHORT&lt;/td&gt;
&lt;td&gt;16位无符号数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4=LONG&lt;/td&gt;
&lt;td&gt;32位无符号数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5=RATIONAL&lt;/td&gt;
&lt;td&gt;两个LONG，前者分子后者分母&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6=SBYTE&lt;/td&gt;
&lt;td&gt;8位有符号数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7=UNDEFINED&lt;/td&gt;
&lt;td&gt;8位字节，可以存储任何东西&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8=SSHORT&lt;/td&gt;
&lt;td&gt;16位有符号数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9=SLONG&lt;/td&gt;
&lt;td&gt;32位有符号数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10=SRATIONAL&lt;/td&gt;
&lt;td&gt;两个SLONG，前者分子后者分母&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11=FLOAT&lt;/td&gt;
&lt;td&gt;单精度浮点（32位）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12=DOUBLE&lt;/td&gt;
&lt;td&gt;双精度浮点（64位）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13=IFD&lt;/td&gt;
&lt;td&gt;32位无符号数，是指向IFD的offset值（Adobe Thchnology Note）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16=LONG8&lt;/td&gt;
&lt;td&gt;BigTIFF 64位无符号数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17=SLONG8&lt;/td&gt;
&lt;td&gt;BigTIFF 64位有符号数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18=IFD8&lt;/td&gt;
&lt;td&gt;BigTIFF 64位无符号数，是指向IFD的offset值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果Reader遇到不认识的TYPE，要跳过该Tag。&lt;/p&gt;
&lt;h4 id="field"&gt;一些可选Field&lt;/h4&gt;
&lt;p&gt;描述性的：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag名称&lt;/th&gt;
&lt;th&gt;Dec&lt;/th&gt;
&lt;th&gt;Hex&lt;/th&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Artist&lt;/td&gt;
&lt;td&gt;315&lt;/td&gt;
&lt;td&gt;13B&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;图像创建者（某些老TIFF用于存放版权说明）。系统登录用户&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Copyright&lt;/td&gt;
&lt;td&gt;33432&lt;/td&gt;
&lt;td&gt;8298&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;版权说明&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DateTime&lt;/td&gt;
&lt;td&gt;306&lt;/td&gt;
&lt;td&gt;132&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;&lt;code&gt;YYYY:MM:DD HH:MM:SS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;包含NUL在内，共20字节，TIFF/EP下强制存在&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HostComputer&lt;/td&gt;
&lt;td&gt;316&lt;/td&gt;
&lt;td&gt;13C&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;图像创建时的计算机或操作系统&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ImageDescription&lt;/td&gt;
&lt;td&gt;270&lt;/td&gt;
&lt;td&gt;10E&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;图像的主题，比如"1988 company picnic"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Make&lt;/td&gt;
&lt;td&gt;271&lt;/td&gt;
&lt;td&gt;10F&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;创建图像的工具（比如扫描仪）制造商。聚束SEM具体名字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Model&lt;/td&gt;
&lt;td&gt;272&lt;/td&gt;
&lt;td&gt;110&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;工具（比如扫描仪）的Model名或数字。聚束SEM型号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Software&lt;/td&gt;
&lt;td&gt;305&lt;/td&gt;
&lt;td&gt;131&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;创建图像的软件名字或版本号。聚束SEM控制软件名字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF扩展 DocumentName&lt;/td&gt;
&lt;td&gt;269&lt;/td&gt;
&lt;td&gt;10D&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;文档名，本TIFF通过扫描哪个文件得到的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF扩展 PageName&lt;/td&gt;
&lt;td&gt;285&lt;/td&gt;
&lt;td&gt;11D&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;页面名，通过扫描那个页面得到&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF扩展 PageNumber&lt;/td&gt;
&lt;td&gt;297&lt;/td&gt;
&lt;td&gt;129&lt;/td&gt;
&lt;td&gt;SHORT&lt;/td&gt;
&lt;td&gt;页号，总页数&lt;/td&gt;
&lt;td&gt;两个数字&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;有其他意义的：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag名称&lt;/th&gt;
&lt;th&gt;Dec&lt;/th&gt;
&lt;th&gt;Hex&lt;/th&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;NewSubfileType&lt;/td&gt;
&lt;td&gt;254&lt;/td&gt;
&lt;td&gt;FE&lt;/td&gt;
&lt;td&gt;LONG&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Bit0为1表示是分辨率缩减的图像，Bit1为1表示多页图像中单独1页，Bit2为1表示是另一个图像透明度掩码。默认值为0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Orientation&lt;/td&gt;
&lt;td&gt;274&lt;/td&gt;
&lt;td&gt;112&lt;/td&gt;
&lt;td&gt;SHORT&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Baseline Tiff下取值范围1~8，默认值为1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PlanarConfiguration&lt;/td&gt;
&lt;td&gt;284&lt;/td&gt;
&lt;td&gt;11C&lt;/td&gt;
&lt;td&gt;SHORT&lt;/td&gt;
&lt;td&gt;1或2&lt;/td&gt;
&lt;td&gt;像素存储格式：块（Chunky）或面(Planar)，默认1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF/EP SubIFDs&lt;/td&gt;
&lt;td&gt;330&lt;/td&gt;
&lt;td&gt;14A&lt;/td&gt;
&lt;td&gt;LONG&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;指向各个子IFD的文件偏移量，由Adobe公司定义&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF/EP TimeZoneOffset&lt;/td&gt;
&lt;td&gt;34858&lt;/td&gt;
&lt;td&gt;882A&lt;/td&gt;
&lt;td&gt;SSHORT&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;1~2个有符号short，第二个数表示是设置哪个DateTime的时区&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DNG DNGPrivateData&lt;/td&gt;
&lt;td&gt;50740&lt;/td&gt;
&lt;td&gt;C634&lt;/td&gt;
&lt;td&gt;BYTE&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;必须以一个NUL结尾的ASCII字符串（制造商名字）开头，之后的数据必须是自包含的，且需要与字节序无关。（自由写私有数据）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;不建议用：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag名称&lt;/th&gt;
&lt;th&gt;Dec&lt;/th&gt;
&lt;th&gt;Hex&lt;/th&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;SubfileType&lt;/td&gt;
&lt;td&gt;255&lt;/td&gt;
&lt;td&gt;FF&lt;/td&gt;
&lt;td&gt;LONG&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;废弃，建议使用NewSubfileType&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_5"&gt;图像数据&lt;/h3&gt;
&lt;h4 id="_6"&gt;灰度图像&lt;/h4&gt;
&lt;p&gt;对于灰度图像（Grayscale Image），以下Field是必须的&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag名称&lt;/th&gt;
&lt;th&gt;Dec&lt;/th&gt;
&lt;th&gt;Hex&lt;/th&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ImageWidth&lt;/td&gt;
&lt;td&gt;256&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;SHORT or LONG&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;图像列数，单扫描线中的像素数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ImageLength&lt;/td&gt;
&lt;td&gt;257&lt;/td&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;SHORT or LONG&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;图像行数，有时用扫描线数（scanlines）描述&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BitsPerSample&lt;/td&gt;
&lt;td&gt;258&lt;/td&gt;
&lt;td&gt;102&lt;/td&gt;
&lt;td&gt;SHORT&lt;/td&gt;
&lt;td&gt;4 or 8&lt;/td&gt;
&lt;td&gt;聚束只使用常规的8位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Compression&lt;/td&gt;
&lt;td&gt;259&lt;/td&gt;
&lt;td&gt;103&lt;/td&gt;
&lt;td&gt;SHORT&lt;/td&gt;
&lt;td&gt;1 or 32773&lt;/td&gt;
&lt;td&gt;聚束只使用无压缩的1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PhotometricInterpretation&lt;/td&gt;
&lt;td&gt;262&lt;/td&gt;
&lt;td&gt;106&lt;/td&gt;
&lt;td&gt;SHORT&lt;/td&gt;
&lt;td&gt;0 or 1&lt;/td&gt;
&lt;td&gt;0： 灰度最小值0表示白色；1：灰度最小值0表示黑色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;StripOffsets&lt;/td&gt;
&lt;td&gt;273&lt;/td&gt;
&lt;td&gt;111&lt;/td&gt;
&lt;td&gt;SHORT or LONG&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;每个带（strip）在的文件中的偏移值，各个带不一定是顺序存储，不能做顺序存储的假定！！！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RowsPerStrip&lt;/td&gt;
&lt;td&gt;278&lt;/td&gt;
&lt;td&gt;116&lt;/td&gt;
&lt;td&gt;SHORT or LONG&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;每个带（strip）中的图像行数（最后一个带除外，最后一个带可能小于该数值）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;StripByteCounts&lt;/td&gt;
&lt;td&gt;279&lt;/td&gt;
&lt;td&gt;117&lt;/td&gt;
&lt;td&gt;LONG or SHORT&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;每个带（strip）！！压缩后！！的字节数，TIFF/EP要求每个Strip压缩&lt;strong&gt;前&lt;/strong&gt;的大小不大于64k&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;XResolution&lt;/td&gt;
&lt;td&gt;282&lt;/td&gt;
&lt;td&gt;11A&lt;/td&gt;
&lt;td&gt;RATIONAL&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;ImageWidth方向（一般水平方向），单位ResolutionUnit中的像素点数，这种值对布局排版等有意义，对图像编辑程序没多大意义。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;YResolution&lt;/td&gt;
&lt;td&gt;283&lt;/td&gt;
&lt;td&gt;11B&lt;/td&gt;
&lt;td&gt;RATIONAL&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;ImageLength方向（一般竖直方向），单位ResolutionUnit中的像素点数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ResolutionUnit&lt;/td&gt;
&lt;td&gt;296&lt;/td&gt;
&lt;td&gt;128&lt;/td&gt;
&lt;td&gt;SHORT&lt;/td&gt;
&lt;td&gt;1 or 2 or 3&lt;/td&gt;
&lt;td&gt;分别：无绝对测量单位，英寸，厘米。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF/EP PlanarConfiguration&lt;/td&gt;
&lt;td&gt;284&lt;/td&gt;
&lt;td&gt;11C&lt;/td&gt;
&lt;td&gt;SHORT&lt;/td&gt;
&lt;td&gt;1或2&lt;/td&gt;
&lt;td&gt;像素存储格式：块（Chunky）或面(Planar)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF/EP NewSubfileType&lt;/td&gt;
&lt;td&gt;254&lt;/td&gt;
&lt;td&gt;FE&lt;/td&gt;
&lt;td&gt;LONG&lt;/td&gt;
&lt;td&gt;0或1&lt;/td&gt;
&lt;td&gt;1代表缩微图，否则是0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF/EP SamplesPerPixel&lt;/td&gt;
&lt;td&gt;277&lt;/td&gt;
&lt;td&gt;115&lt;/td&gt;
&lt;td&gt;SHORT&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;每个像素的通道数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF/EP StandardID&lt;/td&gt;
&lt;td&gt;37298&lt;/td&gt;
&lt;td&gt;9216&lt;/td&gt;
&lt;td&gt;BYTE&lt;/td&gt;
&lt;td&gt;1 0 0 0&lt;/td&gt;
&lt;td&gt;4个8位无符号数字&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;TIFF/EP要求，IFD0中必须存在下列Field&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag名称&lt;/th&gt;
&lt;th&gt;Dec&lt;/th&gt;
&lt;th&gt;Hex&lt;/th&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;TIFF/EP DateTime&lt;/td&gt;
&lt;td&gt;306&lt;/td&gt;
&lt;td&gt;132&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;&lt;code&gt;YYYY:MM:DD HH:MM:SS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;包含NUL在内，共20字节，文件的上次修改值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF/EP DateTimeOriginal&lt;/td&gt;
&lt;td&gt;36867&lt;/td&gt;
&lt;td&gt;9003&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;&lt;code&gt;YYYY:MM:DD HH:MM:SS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;包含NUL在内，共20字节，文件创建后不能再修改该值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF/EP Make&lt;/td&gt;
&lt;td&gt;271&lt;/td&gt;
&lt;td&gt;10F&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;创建图像的工具（比如扫描仪）制造商。聚束SEM具体名字，可以为空“”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF/EP Model&lt;/td&gt;
&lt;td&gt;272&lt;/td&gt;
&lt;td&gt;110&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;工具（比如扫描仪）的Model名或数字。聚束SEM型号，可以为空“”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF/EP Software&lt;/td&gt;
&lt;td&gt;305&lt;/td&gt;
&lt;td&gt;131&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;创建图像的软件名字或版本号。聚束SEM控制软件名字，可以为空“”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF/EP ImageDescription&lt;/td&gt;
&lt;td&gt;270&lt;/td&gt;
&lt;td&gt;10E&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;图像的主题，比如"1988 company picnic"，可以为空“”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF/EP Copyright&lt;/td&gt;
&lt;td&gt;33432&lt;/td&gt;
&lt;td&gt;8298&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;版权说明，可以为空“”&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;【Tiff扩展】如果使用Tile而不是Strip方式的话，StripOffsets、RowsPreStrip和StripByteCount被相应的Tile字段取代，Strip不是必须的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="_7"&gt;索引图像&lt;/h4&gt;
&lt;p&gt;对于调色板索引图像，和灰度图像相比，PhotometricInterpretation和SamplesPerPixel取值不一样，并多一个ColorMap。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag名称&lt;/th&gt;
&lt;th&gt;Dec&lt;/th&gt;
&lt;th&gt;Hex&lt;/th&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;PhotometricInterpretation&lt;/td&gt;
&lt;td&gt;262&lt;/td&gt;
&lt;td&gt;106&lt;/td&gt;
&lt;td&gt;SHORT&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;使用调色板颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ColorMap&lt;/td&gt;
&lt;td&gt;320&lt;/td&gt;
&lt;td&gt;140&lt;/td&gt;
&lt;td&gt;SHORT&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;对于8为深度图像，这是一个&lt;code&gt;3*(2^8)&lt;/code&gt;的数组，颜色按照R、G、B排列&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF/EP SamplesPerPixel&lt;/td&gt;
&lt;td&gt;277&lt;/td&gt;
&lt;td&gt;115&lt;/td&gt;
&lt;td&gt;SHORT&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;每个像素的通道数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id="_8"&gt;真彩图像&lt;/h4&gt;
&lt;p&gt;对于真彩色图像，和灰度图像相比，BitsPerSample、SamplesPrePixel和PhotometricInterpretation取值不一样。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag名称&lt;/th&gt;
&lt;th&gt;Dec&lt;/th&gt;
&lt;th&gt;Hex&lt;/th&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;BitsPerSample&lt;/td&gt;
&lt;td&gt;258&lt;/td&gt;
&lt;td&gt;102&lt;/td&gt;
&lt;td&gt;SHORT&lt;/td&gt;
&lt;td&gt;8，8，8&lt;/td&gt;
&lt;td&gt;每一个通道都是8位深度（Baseline Tiff）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PhotometricInterpretation&lt;/td&gt;
&lt;td&gt;262&lt;/td&gt;
&lt;td&gt;106&lt;/td&gt;
&lt;td&gt;SHORT&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;使用R G B 颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SamplesPerPixel&lt;/td&gt;
&lt;td&gt;277&lt;/td&gt;
&lt;td&gt;115&lt;/td&gt;
&lt;td&gt;SHORT&lt;/td&gt;
&lt;td&gt;3 or more&lt;/td&gt;
&lt;td&gt;每个像素的通道数，没有额外的采样通道的话，正常是3。TIFF6.0要求&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id="tile"&gt;平铺（Tile）&lt;/h4&gt;
&lt;p&gt;在Baseline Tiff 6.0中，图像数据使用Strip方式。如果支持Tiff 6.0扩展的话，图像数据可以使用Strip或Tile方式（在一个图像中，只能二选一）。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag名称&lt;/th&gt;
&lt;th&gt;Dec&lt;/th&gt;
&lt;th&gt;Hex&lt;/th&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;TIFF扩展 TileWidth&lt;/td&gt;
&lt;td&gt;322&lt;/td&gt;
&lt;td&gt;142&lt;/td&gt;
&lt;td&gt;SHORT or LONG&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Title块的宽度，如和ImageWidth不是整数倍关系，后面的数据需要填补(Padding)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF扩展 TileLengh&lt;/td&gt;
&lt;td&gt;323&lt;/td&gt;
&lt;td&gt;143&lt;/td&gt;
&lt;td&gt;SHORT or LONG&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Tile块的长度，如和ImageLength不是整数倍关系，后面的数据需要填补(Padding)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF扩展 TileOffsets&lt;/td&gt;
&lt;td&gt;324&lt;/td&gt;
&lt;td&gt;144&lt;/td&gt;
&lt;td&gt;LONG&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;各个Tile数据在文件中的偏移值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIFF扩展 TileByteCounts&lt;/td&gt;
&lt;td&gt;325&lt;/td&gt;
&lt;td&gt;145&lt;/td&gt;
&lt;td&gt;SHORT or LONG&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;一个Tile中的字节数（压缩后）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;TIff6.0要求：TileWidth和TileLength &lt;strong&gt;必须是&lt;/strong&gt;16的整数倍。Tile不一定的正方的，建议 的 TileWidth 与 TileLength 乘积位于 4K~32K。（也就是64x64,256x128,个人感觉有点小，所以不接受它的建议）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Strips模式下，Tiff6.0建议每个strip的大小不超过8K。如果单行超过8K，那么rowsperstrip建议用1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;了解术语：TilesAcross、TilesDown、TilesPerImage&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;TilesAcross&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ImageWidth&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TileWidth&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TileWidth&lt;/span&gt;
&lt;span class="n"&gt;TilesDown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ImageLength&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TileLength&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TileLength&lt;/span&gt;
&lt;span class="n"&gt;TilesPerImage&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TilesAcross&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TilesDown&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="thumbnail"&gt;缩微图（Thumbnail）&lt;/h4&gt;
&lt;p&gt;TIFF/EP 引入缩微图支持。通过SubIFDs和NewSubFileType标签，IFD变成树型（tree）结构而不再是链式（chain）结构。&lt;/p&gt;
&lt;p&gt;&lt;img alt="TIFF IFD Tree" src="https://blog.debao.me/images/tools/tiff-ifd-tree.png"&gt;&lt;/p&gt;
&lt;p&gt;对缩微图IFD，TIFF/EP要求：
* NewSubFileType 取值必须是1（DNG除了主缩微图外，允许使用替代的缩微图，取值 10001.H）。
* PhotometricInterpretation 取值仅限于1,2,6
* Compression 取值必须是1
* 缩微图大小不超过宽度和高度(256x256)，必须使用Strip方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当主图像采用JPEG压缩或其他压缩格式时，TIFF/EP 要求：必须存在缩微图，且需要在IFD0中。（以便兼容Baseline Reader）&lt;/li&gt;
&lt;li&gt;当主图像数据比较大时，TIFF/EP建议：使用缩微图，且放置在IFD0中。（以便图像快速打开）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="libtiff"&gt;LibTiff 库&lt;/h2&gt;
&lt;p&gt;官网：http://simplesystems.org/libtiff/&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;老的官网： http://www.libtiff.org/ 【被劫持】&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;包含非常老的信息，有些信息是错误的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;老的官网：http://remotesensing.org/libtiff/ 【失去控制】&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从2003年起作为官网，但2016年维护者失去控制。&lt;/p&gt;
&lt;h3 id="_9"&gt;文件打开&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;TIFFOpen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;TIFFOpenW&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;TIFFdOpen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;TIFFClientOpen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;前三个是第四个的马甲(注：Qt的Tiff插件，直接使用的第四个来对接QIODevice)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;打开模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;r:读&lt;/li&gt;
&lt;li&gt;w：写&lt;/li&gt;
&lt;li&gt;a：追加&lt;/li&gt;
&lt;li&gt;4：配合w，写传统TIFF&lt;/li&gt;
&lt;li&gt;8：配合w，写BigTIFF&lt;/li&gt;
&lt;li&gt;M：只读时启用内存映射文件&lt;/li&gt;
&lt;li&gt;m：禁用内存映射文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他选项，l、b、L、B、H、C、c 估计我们以后也不会使用的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有这么一个说法，默认写入文件时，先写传统的TIFF头，但是给BigTiff头留出空间，当后期发现文件大于4G时，将头重写为BigTiff头，其他IFD的字段根据状况也进行重写，但是数据位置不动（来自 bigtiff.ofg）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="ifd"&gt;IFD&lt;/h3&gt;
&lt;h4 id="ifd_1"&gt;读IFD&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIFFReadDirectory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIFF&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;tif&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;读文件中的下一个IFD，并将其设为当前IFD&lt;/li&gt;
&lt;li&gt;对于多页的tiff文件，只调用这一个函数就够了。&lt;/li&gt;
&lt;li&gt;‘r’模式调用TIFFOpen()打开文件时，会自动调用该函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="ifd_2"&gt;写IFD&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIFFWriteDirectory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIFF&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;tif&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIFFRewriteDirectory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIFF&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;tif&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIFFCheckpointDirectory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIFF&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;tif&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;TIFFWriteDirectory() &lt;ul&gt;
&lt;li&gt;写入当前IFD的内容到文件中，同时为创建下一个IFD做好准备【内部调用了TIFFCreateDirectory()】。&lt;/li&gt;
&lt;li&gt;正常写入多页的tiff文件时，只调用这个函数就足够了。&lt;/li&gt;
&lt;li&gt;写模式下如IFD有修改，文件关闭【TIFFClose】或刷新【TIFFFlush】时，会自动调用该函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TIFFReWriteDirectory()&lt;ul&gt;
&lt;li&gt;对于之前已经写入的IFD，将其从chain中断开。&lt;/li&gt;
&lt;li&gt;在文件尾部追加新的IFD，将其加入chian链中（效果上替换了老的IFD，但没有覆盖）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TIFFCheckpointDirectory()&lt;ul&gt;
&lt;li&gt;将当前IFD内容写入到文件中，但是不释放内存中的数据结构。这样可以持续追加Strip或Tile数据&lt;/li&gt;
&lt;li&gt;当文件完成时，调用TIFFWriteDirectory()完成写入。&lt;/li&gt;
&lt;li&gt;【尽量不要用这个东西】&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="ifd_3"&gt;切换IFD&lt;/h4&gt;
&lt;p&gt;设置当前的IFD&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIFFSetDirectory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIFF&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;tif&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tdir_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dirnum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIFFSetSubDirectory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIFF&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;tif&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;uint64&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;diroff&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;前者使用dirnum【从0开始】，后者使用偏移值【这对subIFD很有用】。&lt;/p&gt;
&lt;p&gt;前者需要从头遍历，也就是后者效率更高。&lt;/p&gt;
&lt;h4 id="ifd_4"&gt;移除IFD&lt;/h4&gt;
&lt;p&gt;将指定的IFD从chain链中移除&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIFFUnlinkDirectory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIFF&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tif&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;uint16&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dirn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="tag"&gt;Tag&lt;/h3&gt;
&lt;p&gt;获取或写入Field，通过如下2个函数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TIFFGetField()&lt;/li&gt;
&lt;li&gt;TIFFSetField()&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有些Field有默认值，通过如下成员获取&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TIFFGetFieldDefaulted()&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_10"&gt;注意事项&lt;/h4&gt;
&lt;p&gt;对XResolution 和 YResolution，其类型为Rational，但是set时需要使用一个double，get时需要使用&lt;code&gt;float*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;需要传入指针类型时，可以传入空指针，这样get内部会分配内存，在文件close时释放。&lt;/p&gt;
&lt;h4 id="tifffield"&gt;TIFFField&lt;/h4&gt;
&lt;p&gt;每一个内置的Tag/Field都有一个这样的结构体。有的Tag可以使用不同的数据类型，每一个数据类型都有这样的一个结构体。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;_TIFFField&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;uint32&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;field_tag&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="cm"&gt;/* field&amp;#39;s tag */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;short&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;field_readcount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="cm"&gt;/* read count/TIFF_VARIABLE/TIFF_SPP */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;short&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;field_writecount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="cm"&gt;/* write count/TIFF_VARIABLE */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TIFFDataType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;field_type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="cm"&gt;/* type of associated data */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;uint32&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;reserved&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="cm"&gt;/* reserved for future extension */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TIFFSetGetFieldType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;set_field_type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="cm"&gt;/* type to be passed to TIFFSetField */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TIFFSetGetFieldType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;get_field_type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="cm"&gt;/* type to be passed to TIFFGetField */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;short&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;field_bit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="cm"&gt;/* bit in fieldsset bit vector */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;field_oktochange&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="cm"&gt;/* if true, can change while writing */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;field_passcount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="cm"&gt;/* if true, pass dir count on set */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;field_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="cm"&gt;/* ASCII name */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TIFFFieldArray&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;field_subfields&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="cm"&gt;/* if field points to child ifds, child ifd field definition array */&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;注：一些老的资料可能会介绍TIFFFieldInfo，这个Info已经废弃，不建议使用。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;typedef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;ttag_t&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;field_tag&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="cm"&gt;/* field&amp;#39;s tag */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;short&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;field_readcount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;/* read count/TIFF_VARIABLE/TIFF_SPP */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;short&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;field_writecount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="cm"&gt;/* write count/TIFF_VARIABLE */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;TIFFDataType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;field_type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="cm"&gt;/* type of associated data */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;short&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;field_bit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="cm"&gt;/* bit in fieldsset bit vector */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;field_oktochange&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="cm"&gt;/* if true, can change while writing */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;field_passcount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="cm"&gt;/* if true, pass dir count on set */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;field_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="cm"&gt;/* ASCII name */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIFFFieldInfo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIFFMergeFieldInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIFF&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tif&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIFFFieldInfo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;uint32&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;；&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="tag_1"&gt;非内置的Tag&lt;/h4&gt;
&lt;p&gt;libTiff遇到位置的tag时，会自动注册这个Tag。可以通过下列函数来读取这些Tag&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIFFField&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIFFFindField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIFF&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;uint32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIFFDataType&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIFFField&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIFFFieldWithTag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIFF&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;uint32&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIFFField&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIFFFieldWithName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIFF&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;但是，如果应用程序需要定义自己的Tag来存储TIFF标准之外的信息（读和写）...&lt;/p&gt;
&lt;h3 id="_11"&gt;读写图像数据&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;高层接口：TIFFReadRGBAImage() 或 TIFFRGBAImageGet()&lt;/li&gt;
&lt;li&gt;简单接口：TIFF{Read/Write}Sanline()&lt;ul&gt;
&lt;li&gt;不能用于tile模式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Strip接口：TIFF{Read/Write}{Encoded/Raw}Strip()&lt;/li&gt;
&lt;li&gt;Tile接口：TIFF{Read/Write}Tile()、TIFF{Read/Write}{Encoded/Raw}Tile()&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;目前只考虑&lt;code&gt;PLANARCONFIG_CONTIG&lt;/code&gt;，只考虑 索引、灰度 图像&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="tile_1"&gt;Tile接口&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;TIFFWriteTile(TIFF* tif, void* buf, uint32 x, uint32 y, uint32 z, uint16 s)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;内部调用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;TIFFWriteEncodedTile(TIFF* tif, uint32 tile, void* data, tmsize_t cc)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="_12"&gt;压缩格式&lt;/h4&gt;
&lt;p&gt;我们关注 1、5、7、8&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#define TIFFTAG_COMPRESSION     259 &lt;/span&gt;&lt;span class="cm"&gt;/* data compression technique */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_NONE        1   &lt;/span&gt;&lt;span class="cm"&gt;/* dump mode */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_CCITTRLE    2   &lt;/span&gt;&lt;span class="cm"&gt;/* CCITT modified Huffman RLE */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_CCITTFAX3   3   &lt;/span&gt;&lt;span class="cm"&gt;/* CCITT Group 3 fax encoding */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_CCITT_T4        3       &lt;/span&gt;&lt;span class="cm"&gt;/* CCITT T.4 (TIFF 6 name) */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_CCITTFAX4   4   &lt;/span&gt;&lt;span class="cm"&gt;/* CCITT Group 4 fax encoding */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_CCITT_T6        4       &lt;/span&gt;&lt;span class="cm"&gt;/* CCITT T.6 (TIFF 6 name) */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_LZW     5       &lt;/span&gt;&lt;span class="cm"&gt;/* Lempel-Ziv  &amp;amp; Welch */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_OJPEG       6   &lt;/span&gt;&lt;span class="cm"&gt;/* !6.0 JPEG */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_JPEG        7   &lt;/span&gt;&lt;span class="cm"&gt;/* %JPEG DCT compression */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_T85         9   &lt;/span&gt;&lt;span class="cm"&gt;/* !TIFF/FX T.85 JBIG compression */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_T43         10  &lt;/span&gt;&lt;span class="cm"&gt;/* !TIFF/FX T.43 colour by layered JBIG compression */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_NEXT        32766   &lt;/span&gt;&lt;span class="cm"&gt;/* NeXT 2-bit RLE */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_CCITTRLEW   32771   &lt;/span&gt;&lt;span class="cm"&gt;/* #1 w/ word alignment */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_PACKBITS    32773   &lt;/span&gt;&lt;span class="cm"&gt;/* Macintosh RLE */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_THUNDERSCAN 32809   &lt;/span&gt;&lt;span class="cm"&gt;/* ThunderScan RLE */&lt;/span&gt;
&lt;span class="cm"&gt;/* codes 32895-32898 are reserved for ANSI IT8 TIFF/IT &amp;lt;dkelly@apago.com) */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_IT8CTPAD    32895   &lt;/span&gt;&lt;span class="cm"&gt;/* IT8 CT w/padding */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_IT8LW       32896   &lt;/span&gt;&lt;span class="cm"&gt;/* IT8 Linework RLE */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_IT8MP       32897   &lt;/span&gt;&lt;span class="cm"&gt;/* IT8 Monochrome picture */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_IT8BL       32898   &lt;/span&gt;&lt;span class="cm"&gt;/* IT8 Binary line art */&lt;/span&gt;
&lt;span class="cm"&gt;/* compression codes 32908-32911 are reserved for Pixar */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_PIXARFILM   32908   &lt;/span&gt;&lt;span class="cm"&gt;/* Pixar companded 10bit LZW */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_PIXARLOG    32909   &lt;/span&gt;&lt;span class="cm"&gt;/* Pixar companded 11bit ZIP */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_DEFLATE     32946   &lt;/span&gt;&lt;span class="cm"&gt;/* Deflate compression */&lt;/span&gt;
&lt;span class="cp"&gt;#define     COMPRESSION_ADOBE_DEFLATE   8       &lt;/span&gt;&lt;span class="cm"&gt;/* Deflate compression,&lt;/span&gt;
&lt;span class="cm"&gt;                           as recognized by Adobe */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="geotiff"&gt;GeoTiff&lt;/h2&gt;
&lt;p&gt;GeoTiff文件是一个标准的TIFF6.0文件，它使用了一些私有的Tag，对Tag值的含义做了新的规定（格式）。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag名称&lt;/th&gt;
&lt;th&gt;Dec&lt;/th&gt;
&lt;th&gt;Hex&lt;/th&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ModelPixelScaleTag&lt;/td&gt;
&lt;td&gt;33550&lt;/td&gt;
&lt;td&gt;830E&lt;/td&gt;
&lt;td&gt;DOUBLE&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;3个&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;INGR Packet Data Tag&lt;/td&gt;
&lt;td&gt;33918&lt;/td&gt;
&lt;td&gt;847E&lt;/td&gt;
&lt;td&gt;SHORT&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;多个&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ModelTiepointTag&lt;/td&gt;
&lt;td&gt;33922&lt;/td&gt;
&lt;td&gt;8482&lt;/td&gt;
&lt;td&gt;DOUBLE&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GeoKeyDirectoryTag&lt;/td&gt;
&lt;td&gt;34735&lt;/td&gt;
&lt;td&gt;87AF&lt;/td&gt;
&lt;td&gt;SHORT&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;4个以上，别名ProjectionInfoTag,CoordSystemInfoTag&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GeoDoubleParamsTag&lt;/td&gt;
&lt;td&gt;34736&lt;/td&gt;
&lt;td&gt;87B1&lt;/td&gt;
&lt;td&gt;DOUBLE&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GeoAsciiParamsTag&lt;/td&gt;
&lt;td&gt;34737&lt;/td&gt;
&lt;td&gt;87B2&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;p&gt;GeoAsciiParamsTag = &lt;code&gt;first_value|second_value|...|&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：33918~33922 这5个私有Tag是“Intergraph's Private TIFF Tags”，是Aldus（现在的Adobe）授权给Intergraph使用的。但是TIFF任何正式的文档中没有提这个事情。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="bigtiff"&gt;BigTiff&lt;/h2&gt;
&lt;p&gt;Tiff使用32位的偏移值，，文件最大支持到4G。BigTiff是TIFF的一个变体，它使用64位的偏移值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LibTiff4.0支持 BigTiff。&lt;/li&gt;
&lt;li&gt;Matlab支持 BigTiff。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://www.awaresystems.be/imaging/tiff/bigtiff.html&lt;/li&gt;
&lt;li&gt;http://www.bigtiff.org/&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_13"&gt;格式&lt;/h3&gt;
&lt;p&gt;如前所述，为了支持大偏移量，bigtiff引入三种新的tag类型&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;16=LONG8&lt;/td&gt;
&lt;td&gt;BigTIFF 64位无符号数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17=SLONG8&lt;/td&gt;
&lt;td&gt;BigTIFF 64位有符号数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18=IFD8&lt;/td&gt;
&lt;td&gt;BigTIFF 64位无符号数，是指向IFD的offset值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id="_14"&gt;文件头&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;偏移&lt;/th&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Word&lt;/td&gt;
&lt;td&gt;字节序指示符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Word&lt;/td&gt;
&lt;td&gt;版本（始终是43），不同于TIFF6.0的42&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Word&lt;/td&gt;
&lt;td&gt;必须是8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;Word&lt;/td&gt;
&lt;td&gt;必须是0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;Unsigned 8Byte&lt;/td&gt;
&lt;td&gt;指向IFD0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id="ifd_5"&gt;IFD&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;偏移&lt;/th&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Unsigned 8Byte&lt;/td&gt;
&lt;td&gt;Tag个数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8+x*20&lt;/td&gt;
&lt;td&gt;Tag 结构&lt;/td&gt;
&lt;td&gt;Tag数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8+(IFD中Tag数)*20&lt;/td&gt;
&lt;td&gt;LONG8&lt;/td&gt;
&lt;td&gt;指向下一个Tag的偏移值，或者0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id="tag-field"&gt;TAG Field&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;偏移&lt;/th&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Word&lt;/td&gt;
&lt;td&gt;Tag&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Word&lt;/td&gt;
&lt;td&gt;Tag数据类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Unsigned Long&lt;/td&gt;
&lt;td&gt;个数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;8字节，数据或偏移值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_15"&gt;软件&lt;/h2&gt;
&lt;h3 id="photoshop"&gt;Photoshop&lt;/h3&gt;
&lt;h4 id="pyramin"&gt;Pyramin&lt;/h4&gt;
&lt;p&gt;Photoshop 保存Tiff图像时，有一个“存储图像金字塔（Save Image Pyramin）”选项。勾选该选项，保存出来的图像会包含SUBIFDS。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Photoshop CS6 存储图像金字塔时，其指向的IFD格式和普通的IFD不一样，无法直接解析。是否是Bug??
更老的Photoshop使用过其他的方式，非SUBIFD？？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;LIBTIFF邮件列表： https://www.asmail.be/msg0055058889.html&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Photoshop实现：IFD0 的SUBIFD中包含一个offset值，指向其第一个子IFD，第一个子IFD的offset指向第二个子IFD，依次类推。（而不是通过SUBIFD一次定义多个子IFD的offset值，libtiff中是这种实现）&lt;/p&gt;
&lt;h4 id="_16"&gt;缩微图&lt;/h4&gt;
&lt;p&gt;存储在私有tag中：Photoshop（34377）&lt;/p&gt;
&lt;p&gt;https://www.awaresystems.be/imaging/tiff/tifftags/docs/photoshopthumbnail.html&lt;/p&gt;
&lt;h3 id="imagemagick"&gt;ImageMagick&lt;/h3&gt;
&lt;p&gt;ImageMagick使用 .ptif 和 .ptiff 作为 Pyramid-encoded TIFF文件的后缀。其内容是普通chain风格的多个页面，每个页面的NewSubFileType都是2。&lt;/p&gt;
&lt;h3 id="qt"&gt;Qt 图像&lt;/h3&gt;
&lt;p&gt;在Qt中， QPixmap 宽和高都不能超过32768，QImage的大小没有限制，字节数&amp;lt;INT最大值即可。QImageReader可以设置setAllocationLimit。&lt;/p&gt;
&lt;h2 id="_17"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/TIFF&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Libtiff&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/TIFF/EP&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Digital_Negative&lt;/li&gt;
&lt;li&gt;https://www.awaresystems.be/imaging/tiff/tifftags.html&lt;/li&gt;
&lt;li&gt;https://stackoverflow.com/questions/11959617/in-a-tiff-create-a-sub-ifd-with-thumbnail-libtiff&lt;/li&gt;
&lt;li&gt;http://www.simplesystems.org/libtiff/libtiff.html&lt;/li&gt;
&lt;li&gt;http://www.simplesystems.org/libtiff/addingtags.html&lt;/li&gt;
&lt;li&gt;https://www.awaresystems.be/imaging/tiff/tifftags/docs/intergraph.html&lt;/li&gt;
&lt;li&gt;http://www.bigtiff.org/&lt;/li&gt;
&lt;li&gt;https://www.awaresystems.be/imaging/tiff/tifftags/docs/photoshopthumbnail.html&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.adobe.com/devnet-apps/photoshop/fileformatashtml"&gt;Adobe Photoshop File Formats Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.asmail.be/msg0055060707.html"&gt;2012.06.06 05:05 "Custom and EXIF directory read/write", by Frank Warmerdam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;http://maptools-org.996276.n3.nabble.com/Creating-private-IFD-td13645.html&lt;/li&gt;
&lt;li&gt;http://maptools-org.996276.n3.nabble.com/Custom-and-EXIF-directory-read-write-td3290.html&lt;/li&gt;
&lt;li&gt;http://maptools-org.996276.n3.nabble.com/help-writing-thumbnails-to-TIFF-file-td3824.html&lt;/li&gt;
&lt;li&gt;https://gis.stackexchange.com/questions/206509/how-are-geotiff-pyramids-overviews-standardised&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ques10.com/p/29824/explain-image-file-formats/"&gt;Explain Image File Formats (ques10.com)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tools"></category></entry><entry><title>Pelican的theme小记</title><link href="https://blog.debao.me/2024/12/notes-on-pelican-s-theme/" rel="alternate"></link><published>2024-12-28T22:45:00+08:00</published><updated>2024-12-28T22:45:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-28:/2024/12/notes-on-pelican-s-theme/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;接前面 &lt;a href="https://blog.debao.me/2023/11/hello-pelican-again/"&gt;Hello Pelican Again&lt;/a&gt; 与 &lt;a href="https://blog.debao.me/2024/10/a-deeper-dive-into-pelican/"&gt;Pelican继续了解&lt;/a&gt;，当前blog系统已经改的有点面目全非。再简单了解一下 Pelican 的 theme，Pelican模板使用的Jinja2。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;模板结构&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;static&lt;/code&gt; 部分用于存放主题的静态资源文件，包括 CSS、图片、JavaScript 等。Pelican …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;接前面 &lt;a href="https://blog.debao.me/2023/11/hello-pelican-again/"&gt;Hello Pelican Again&lt;/a&gt; 与 &lt;a href="https://blog.debao.me/2024/10/a-deeper-dive-into-pelican/"&gt;Pelican继续了解&lt;/a&gt;，当前blog系统已经改的有点面目全非。再简单了解一下 Pelican 的 theme，Pelican模板使用的Jinja2。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;模板结构&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;static&lt;/code&gt; 部分用于存放主题的静态资源文件，包括 CSS、图片、JavaScript 等。Pelican 会将此目录中的文件复制到输出目录中，与生成的 HTML 文件一起发布。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;templates&lt;/code&gt; 目录下的Jinja2模板文件用于定义每个页面的布局和内容显示方式。Pelican 会根据内容类型（文章、标签、分类等）选择相应的模板文件来生成 HTML 页面。下面列出的这些模板必须都存在。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;├── static
│   ├── css
│   └── images
└── templates
    ├── archives.html         // to display archives
    ├── article.html          // processed for each article
    ├── author.html  // processed for each author
    ├── authors.html          // must list all the authors
    ├── categories.html       // must list all the categories
    ├── category.html         // processed for each category
    ├── index.html // the index (list all the articles)
    ├── page.html  // processed for each page
    ├── period_archives.html  // to display time-period archives
    ├── tag.html// processed for each tag
    └── tags.html  // must list all the tags. Can be a tag cloud.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_2"&gt;变量&lt;/h2&gt;
&lt;p&gt;Pelican为模板提供的一些常规变量&lt;/p&gt;
&lt;h3 id="_3"&gt;通用变量&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;变量&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;output_file&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前正在生成的文件名。例如，当 Pelican 正在渲染首页时，&lt;code&gt;output_file&lt;/code&gt; 的值为 &lt;code&gt;"index.html"&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;articles&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文章列表，按日期降序排列。所有元素都是 &lt;code&gt;Article&lt;/code&gt; 对象，可访问其属性（如标题、摘要、作者等）。有时会被覆盖（例如在标签页面中）。在这种情况下，可以在 &lt;code&gt;all_articles&lt;/code&gt; 变量中找到信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dates&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;相同的文章列表，但按日期升序排列。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hidden_articles&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;隐藏的文章列表。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;drafts&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;草稿文章列表。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;period_archives&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;一个字典，包含与时间段归档相关的元素（如果启用）。详见“Listing and Linking to Period Archives”部分的细节。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;authors&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;(作者, 文章) 元组的列表，包含所有作者及其对应的文章。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;categories&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;(分类, 文章) 元组的列表，包含所有分类及其对应的文章。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tags&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;(标签, 文章) 元组的列表，包含所有标签及其对应的文章。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;页面列表。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hidden_pages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;隐藏的页面列表。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;draft_pages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;草稿页面列表。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;另外，在配置文件 pelicanconf.py 中，可以自由定义变量（注意不要和pelian内置变量冲突），这些自定义变量，在jinja2模板中也可以直接用。&lt;/p&gt;
&lt;p&gt;每个页面有自己额外支持的变量&lt;/p&gt;
&lt;h3 id="indexhtml"&gt;index.html&lt;/h3&gt;
&lt;p&gt;主页，也支持分页（pagination），主要的变量：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;articles_paginator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文章列表的分页器对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;articles_page&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前页的文章&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;articles_previous_page&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文章的上一页（如果页面不存在则为 &lt;code&gt;None&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;articles_next_page&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文章的下一页（如果页面不存在则为 &lt;code&gt;None&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;分页机制：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pagination&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;articles_page.has_next&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;prev&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;SITEURL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;articles_next_page.url&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;larr;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Older&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;articles_page.has_previous&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;next&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;SITEURL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;articles_previous_page.url&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Newer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;rarr;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;br&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;文章列表&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;{%&lt;span class="w"&gt; &lt;/span&gt;for&lt;span class="w"&gt; &lt;/span&gt;article&lt;span class="w"&gt; &lt;/span&gt;in&lt;span class="w"&gt; &lt;/span&gt;articles_page.object_list&lt;span class="w"&gt; &lt;/span&gt;%}
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;article&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;{%&lt;span class="w"&gt; &lt;/span&gt;include&lt;span class="w"&gt; &lt;/span&gt;&amp;#39;_includes/article.html&amp;#39;&lt;span class="w"&gt; &lt;/span&gt;%}
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;{%&lt;span class="w"&gt; &lt;/span&gt;endfor&lt;span class="w"&gt; &lt;/span&gt;%}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="articlehtml"&gt;article.html&lt;/h3&gt;
&lt;p&gt;单篇文章页面&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;变量&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;article&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前显示的文章对应的article对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;category&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前文章所属类别 名称&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;变量 article 的成员主要来自头部的meta data：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Pelican的theme小记&lt;/span&gt;
&lt;span class="nt"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;2024-12-28 22:45&lt;/span&gt;
&lt;span class="nt"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;notes-on-pelican-s-theme&lt;/span&gt;
&lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Tools&lt;/span&gt;
&lt;span class="nt"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;pelican&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;span class="nt"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;published&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;可以自行定义新的字段，只要不和pelican预留字段冲突即可：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;预留字段&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;title&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;标题（Article 或 Page)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;date&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;发布日期， (&lt;code&gt;YYYY-MM-DD HH:SS&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;modified&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;修改日期 (&lt;code&gt;YYYY-MM-DD HH:SS&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tags&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;逗号分隔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;keywords&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;逗号分隔 (HTML content only)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;category&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;每个article只能指定一个类别&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;slug&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ID，当title有中文时，最好指定它（不然url中会用拼音）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;author&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;作者&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;authors&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;作者们&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;summary&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Brief description of content for index pages&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lang&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;语言 (&lt;code&gt;en&lt;/code&gt;, &lt;code&gt;fr&lt;/code&gt;, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;translation&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前article是否是另一个的翻译 (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;状态:&lt;code&gt;draft&lt;/code&gt;, &lt;code&gt;hidden&lt;/code&gt;, or &lt;code&gt;published&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;template&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Name of template to use to generate content (without extension)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;save_as&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Save content to this relative file path&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;url&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;URL to use for this article/page&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;模板中使用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;entry-content&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;article.summary&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;article.summary&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;article.content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;full-article&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;SITEURL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;article.url&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Read&lt;span class="w"&gt; &lt;/span&gt;On&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;crarr;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;entry-content&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;article.content&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_4"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://docs.getpelican.com/en/4.10.2/themes.html&lt;/li&gt;
&lt;li&gt;https://github.com/getpelican/pelican/tree/main/pelican/themes/simple/templates&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tools"></category><category term="pelican"></category></entry><entry><title>Windows下WSL小记</title><link href="https://blog.debao.me/2024/12/notes-on-wsl-for-windows/" rel="alternate"></link><published>2024-12-27T20:01:00+08:00</published><updated>2024-12-27T20:01:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-27:/2024/12/notes-on-wsl-for-windows/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;稍微梳理一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#wsl"&gt;WSL 是什么&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#wsl1"&gt;WSL1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wsl2"&gt;WSL2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;文件系统&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#linux"&gt;Linux的文件系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#linuxwindows"&gt;Linux下访问Windows文件系统&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_2"&gt;挂载？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#windowslinux"&gt;Windows访问Linux文件系统&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#wslexe"&gt;wsl.exe&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#wsl_1"&gt;启动和运行 WSL 实例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wsl_2"&gt;管理 WSL 发行版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;帮助及其他&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#wslconf"&gt;wsl.conf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vscode-wsl"&gt;VSCode 与 WSL&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_4"&gt;如何工 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;稍微梳理一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#wsl"&gt;WSL 是什么&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#wsl1"&gt;WSL1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wsl2"&gt;WSL2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;文件系统&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#linux"&gt;Linux的文件系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#linuxwindows"&gt;Linux下访问Windows文件系统&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_2"&gt;挂载？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#windowslinux"&gt;Windows访问Linux文件系统&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#wslexe"&gt;wsl.exe&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#wsl_1"&gt;启动和运行 WSL 实例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wsl_2"&gt;管理 WSL 发行版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;帮助及其他&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#wslconf"&gt;wsl.conf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vscode-wsl"&gt;VSCode 与 WSL&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_4"&gt;如何工作的？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#wslg"&gt;WSLg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="wsl"&gt;WSL 是什么&lt;/h2&gt;
&lt;p&gt;WSL，全称为Windows Subsystem for Linux，是微软在Windows操作系统中引入的一项功能，旨在使用户能够在Windows上原生运行Linux的命令行工具和应用程序。&lt;/p&gt;
&lt;h3 id="wsl1"&gt;WSL1&lt;/h3&gt;
&lt;p&gt;2016年，WSL的第一个版本在 Windows 10 周年更新中推出。它允许用户在 Windows 上运行 Linux 程序，而无需使用虚拟机或双系统。&lt;/p&gt;
&lt;p&gt;WSL1 通过一个抽象层翻译 Linux 的系统调用（syscall），将其映射到 Windows 系统调用。本质上是一个兼容层，而非完整的 Linux 内核。&lt;/p&gt;
&lt;p&gt;只支持Ubuntu，也叫过 “Bash on Ubuntu on Windows” 或 “Bash on Windows”。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由于没有原生 Linux 内核支持，某些复杂的系统调用和应用程序（例如 Docker）无法运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="wsl2"&gt;WSL2&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2019年，微软在Build 开发者大会上正式宣布 WSL2。WSL2 引入了完整的 Linux 内核，运行在 Hyper-V 虚拟机中。&lt;/li&gt;
&lt;li&gt;2020年，Docker Desktop 开始支持 WSL2。&lt;/li&gt;
&lt;li&gt;2021年，微软为 WSL 引入了 WSLg，使用户可以运行 Linux 桌面应用和 GUI 程序。同时，提供 GPU 支持（GPU Compute），专注于硬件加速。&lt;/li&gt;
&lt;li&gt;2022年，WSL 从 Windows 功能中独立出来，通过 Microsoft Store 提供更快的更新频率。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;文件系统&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;2024马上要结束了。只考虑 WSL2 下面的 Ubuntu24.04 情况&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而Windows和Linux的目录结构则通过挂载机制和特定路径关系实现互通。&lt;/p&gt;
&lt;h3 id="linux"&gt;Linux的文件系统&lt;/h3&gt;
&lt;p&gt;WSL2的Linux文件系统是运行在虚拟化的Linux内核上的，与Windows的文件系统是分开的。这个文件系统通常存储在Windows文件系统中的一个虚拟磁盘文件（VHDX格式）。&lt;/p&gt;
&lt;p&gt;每个WSL2发行版的文件系统存储在Windows文件系统中的一个特定位置，通常路径类似：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C:\Users\&amp;lt;Username&amp;gt;\AppData\Local\Packages\&amp;lt;LinuxDistro&amp;gt;\LocalState\ext4.vhdx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;注意，其中 &lt;code&gt;&amp;lt;LinuxDistro&amp;gt;&lt;/code&gt; 长这个样子：&lt;code&gt;CanonicalGroupLimited.Ubuntu_79rhkp1fndgab&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;借助后面的 wsl.exe，可以将Linux文件系统移动到其他盘符下面。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="linuxwindows"&gt;Linux下访问Windows文件系统&lt;/h3&gt;
&lt;p&gt;WSL2允许通过挂载访问Windows文件系统中的文件。可以在Linux环境下访问Windows的目录，Windows系统的文件会通过挂载点提供给WSL2。具体路径如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows的C盘通常被挂载到WSL2的 /mnt/c/ 目录下。&lt;ul&gt;
&lt;li&gt;例如，Windows中的 &lt;code&gt;C:\Users\&amp;lt;Username&amp;gt;&lt;/code&gt; 在WSL2中对应 &lt;code&gt;/mnt/c/Users/&amp;lt;Username&amp;gt;&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;其他Windows盘符（如D盘、E盘等）通过 &lt;code&gt;/mnt/d/&lt;/code&gt;、&lt;code&gt;/mnt/e/&lt;/code&gt; 等方式提供访问。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_2"&gt;挂载？&lt;/h4&gt;
&lt;p&gt;在Linux下，WSL2的文件系统（如 /mnt/c）是通过Windows的虚拟化层挂载的。
WSL2本身没有一个传统的“挂载配置文件”&lt;/p&gt;
&lt;p&gt;可以通过 &lt;code&gt;mount&lt;/code&gt; 命令查看：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;mount&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;/mnt/c
C:&lt;span class="se"&gt;\ &lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;/mnt/c&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;9p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;rw,noatime,dirsync,aname&lt;span class="o"&gt;=&lt;/span&gt;drvfs&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;C:&lt;span class="se"&gt;\;&lt;/span&gt;&lt;span class="nv"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;gid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;symlinkroot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mnt/,mmap,access&lt;span class="o"&gt;=&lt;/span&gt;client,msize&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;65536&lt;/span&gt;,trans&lt;span class="o"&gt;=&lt;/span&gt;fd,rfd&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;,wfd&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;通过 &lt;code&gt;/etc/fstab&lt;/code&gt; 看不出东西：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;/etc/fstab
&lt;span class="c1"&gt;# UNCONFIGURED FSTAB FOR BASE SYSTEM&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;如果要修改加载行为，需要使用 &lt;code&gt;/etc/wsl.conf&lt;/code&gt; 文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="windowslinux"&gt;Windows访问Linux文件系统&lt;/h3&gt;
&lt;p&gt;你可以通过Windows资源管理器访问WSL2中的文件。路径是：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;\\wsl$\&amp;lt;DistroName&amp;gt;\
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;例如对于Ubuntu来说，路径是：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;\\wsl$\Ubuntu\
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="wslexe"&gt;wsl.exe&lt;/h2&gt;
&lt;p&gt;wsl.exe 是 Windows Subsystem for Linux (WSL) 的命令行工具，用于在
Windows 上管理和与 WSL 实例交互。&lt;/p&gt;
&lt;p&gt;一些常见功能：&lt;/p&gt;
&lt;h3 id="wsl_1"&gt;启动和运行 WSL 实例&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;启动默认 WSL 实例：&lt;code&gt;wsl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;启动指定的发行版：&lt;code&gt;wsl -d &amp;lt;DistroName&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;停止所有 WSL 实例：&lt;code&gt;wsl --shutdown&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;停止指定实例：&lt;code&gt;wsl --terminate &amp;lt;DistroName&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="wsl_2"&gt;管理 WSL 发行版&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;安装发行版：&lt;code&gt;wsl --install -d &amp;lt;DistroName&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;列出已安装的发行版：&lt;code&gt;wsl --list --verbose&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置默认发行版：&lt;code&gt;wsl --setdefault &amp;lt;DistroName&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;切换 WSL 版本：&lt;code&gt;wsl --set-version &amp;lt;DistroName&amp;gt; &amp;lt;Version&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;导出发行版：&lt;code&gt;wsl --export &amp;lt;DistroName&amp;gt; &amp;lt;FilePath&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;导入发行版：&lt;code&gt;wsl --import &amp;lt;DistroName&amp;gt; &amp;lt;InstallLocation&amp;gt; &amp;lt;FilePath&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_3"&gt;帮助及其他&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;运行Linux下的命令：&lt;code&gt;wsl &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看命令帮助：&lt;code&gt;wsl --help&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="wslconf"&gt;wsl.conf&lt;/h2&gt;
&lt;p&gt;配置文件 wsl.conf 位于每个Linux的 /etc/ 目录下，路径为 &lt;code&gt;/etc/wsl.conf&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;wsl.conf 文件使用 INI 文件格式（键值对和段落格式），例如，默认情况下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[boot]&lt;/span&gt;
&lt;span class="na"&gt;systemd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;通过它可以控制自动挂载、网络设置、默认用户等关键功能。配置后：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Automatically mount Windows drive when the distribution is launched&lt;/span&gt;
&lt;span class="k"&gt;[automount]&lt;/span&gt;

&lt;span class="c1"&gt;# Set to true will automount fixed drives (C:/ or D:/) with DrvFs under the root directory set above. Set to false means drives won&amp;#39;t be mounted automatically, but need to be mounted manually or with fstab.&lt;/span&gt;
&lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;true&lt;/span&gt;

&lt;span class="c1"&gt;# Sets the directory where fixed drives will be automatically mounted. This example changes the mount location, so your C-drive would be /c, rather than the default /mnt/c. &lt;/span&gt;
&lt;span class="na"&gt;root&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;

&lt;span class="c1"&gt;# DrvFs-specific options can be specified.  &lt;/span&gt;
&lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;metadata,uid=1003,gid=1003,umask=077,fmask=11,case=off&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Sets the `/etc/fstab` file to be processed when a WSL distribution is launched.&lt;/span&gt;
&lt;span class="na"&gt;mountFsTab&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;true&lt;/span&gt;

&lt;span class="c1"&gt;# Network host settings that enable the DNS server used by WSL 2. This example changes the hostname, sets generateHosts to false, preventing WSL from the default behavior of auto-generating /etc/hosts, and sets generateResolvConf to false, preventing WSL from auto-generating /etc/resolv.conf, so that you can create your own (ie. nameserver 1.1.1.1).&lt;/span&gt;
&lt;span class="k"&gt;[network]&lt;/span&gt;
&lt;span class="na"&gt;hostname&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;DemoHost&lt;/span&gt;
&lt;span class="na"&gt;generateHosts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;false&lt;/span&gt;
&lt;span class="na"&gt;generateResolvConf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;false&lt;/span&gt;

&lt;span class="c1"&gt;# Set whether WSL supports interop processes like launching Windows apps and adding path variables. Setting these to false will block the launch of Windows processes and block adding $PATH environment variables.&lt;/span&gt;
&lt;span class="k"&gt;[interop]&lt;/span&gt;
&lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;false&lt;/span&gt;
&lt;span class="na"&gt;appendWindowsPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;false&lt;/span&gt;

&lt;span class="c1"&gt;# Set the user when launching a distribution with WSL.&lt;/span&gt;
&lt;span class="k"&gt;[user]&lt;/span&gt;
&lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;DemoUser&lt;/span&gt;

&lt;span class="c1"&gt;# Set a command to run when a new WSL instance launches. This example starts the Docker container service.&lt;/span&gt;
&lt;span class="k"&gt;[boot]&lt;/span&gt;
&lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;service docker start&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="vscode-wsl"&gt;VSCode 与 WSL&lt;/h2&gt;
&lt;p&gt;VSCode下面由WSL扩展，安装后，可以：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在Linux下，直接输入 code&lt;/li&gt;
&lt;li&gt;或，在Windows下，直接输入 wsl code&lt;/li&gt;
&lt;li&gt;或，在打开的VSCode中，Ctrl+Shift+P，中，&lt;code&gt;WSL: Connect to WSL in New Window&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后就可以使用Linux下的g++ 或 Python 等工具链了。&lt;/p&gt;
&lt;h3 id="_4"&gt;如何工作的？&lt;/h3&gt;
&lt;p&gt;当在 WSL 下的Linux中运行 code 时，实际执行的是 Windows 上的 code.exe，验证一下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;which&lt;span class="w"&gt; &lt;/span&gt;code
/mnt/c/Users/dbzha/AppData/Local/Programs/Microsoft&lt;span class="w"&gt; &lt;/span&gt;VS&lt;span class="w"&gt; &lt;/span&gt;Code/bin/code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;这是一个bash的脚本文件，它里面会调用真正的 code.exe 程序。&lt;/p&gt;
&lt;p&gt;是的，WSL下的Linux中可以启动exe，比如notepad.exe 或 calc.exe。这是通过 Windows 提供的 Interop（互操作性） 功能实现的。&lt;/p&gt;
&lt;h2 id="wslg"&gt;WSLg&lt;/h2&gt;
&lt;p&gt;WSLg（Windows Subsystem for Linux GUI）是 Windows Subsystem for Linux (WSL) 的一个扩展功能，允许你在 Windows 10 或 Windows 11 上运行 Linux 图形用户界面（GUI）应用程序，并且与 Windows 上的应用程序无缝集成。&lt;/p&gt;
&lt;p&gt;WSLg 使得我们能够在 Windows 中直接运行 Linux 图形应用程序，比如 GIMP、Firefox、KDE、X11 应用等，而不需要额外的虚拟机或复杂的配置。&lt;/p&gt;
&lt;p&gt;&lt;img alt="gvim" src="https://blog.debao.me/images/tools/wsl_gvim.png"&gt;&lt;/p&gt;
&lt;p&gt;WSLg 目前主要优化的是 运行单一应用程序 的图形界面，而不是提供完整的桌面环境。&lt;/p&gt;
&lt;h2 id="_5"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://learn.microsoft.com/en-us/windows/wsl/&lt;/li&gt;
&lt;li&gt;https://ubuntu.com/desktop/wsl&lt;/li&gt;
&lt;li&gt;https://learn.microsoft.com/en-us/windows/wsl/wsl-config&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tools"></category></entry><entry><title>开源有限元软件FEniCS小记</title><link href="https://blog.debao.me/2024/12/notes-on-the-open-source-finite-element-software-fenics/" rel="alternate"></link><published>2024-12-27T01:17:00+08:00</published><updated>2024-12-27T01:17:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-27:/2024/12/notes-on-the-open-source-finite-element-software-fenics/</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#fenics"&gt;FEniCS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;组成部分&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#fenicsx"&gt;FEniCSx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fenics_1"&gt;FEniCS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;如何使用？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_4"&gt;基本步骤&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;泊松方程求解问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;具体例子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_7"&gt;分段看看代码&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_8"&gt;创建网格和定义有限元空间&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_9"&gt;设置边 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#fenics"&gt;FEniCS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;组成部分&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#fenicsx"&gt;FEniCSx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fenics_1"&gt;FEniCS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;如何使用？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_4"&gt;基本步骤&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;泊松方程求解问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;具体例子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_7"&gt;分段看看代码&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_8"&gt;创建网格和定义有限元空间&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_9"&gt;设置边界条件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_10"&gt;定义变分问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_11"&gt;求解线性问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_12"&gt;显示&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_13"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="fenics"&gt;FEniCS&lt;/h2&gt;
&lt;p&gt;作为一项科研合作，FEniCS 项目2003年由芝加哥大学（University of Chicago）和查尔姆斯理工大学（Chalmers University of Technology）发起。&lt;/p&gt;
&lt;p&gt;注意，FEniCS 采用比较宽松的 &lt;strong&gt;LGPL&lt;/strong&gt; 协议发布！！！&lt;/p&gt;
&lt;p&gt;2019年重构后的新版本叫做FEniCSx，其重要组成部分是DOLFINx，可以在C++或Python下使用。&lt;/p&gt;
&lt;p&gt;&lt;img alt="fenics" src="https://blog.debao.me/images/simu/fenics_turor1.png"&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;组成部分&lt;/h2&gt;
&lt;p&gt;似乎很乱：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;初始版本FEniCS：包括 DOLFIN、FIAT&lt;/li&gt;
&lt;li&gt;后来FEniCS扩展成：DOLFIN、FFC、FIAT、UFL&lt;/li&gt;
&lt;li&gt;再后来（2019）FEniCSx：重构为 &lt;strong&gt;DOLFINx、FFCx、Basix、UFL&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="fenicsx"&gt;FEniCSx&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Basix&lt;/strong&gt;：一个用于生成有限元基函数（finite element basis functions）的库，支持任意阶的有限元计算。它是 FEniCSx 中的核心组件之一，负责提供灵活且高效的有限元基础功能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UFL&lt;/strong&gt;（统一形式语言，Unified Form Language）：一个嵌入在 Python 中的领域特定语言（domain-specific language），用于定义有限元变分形式（finite element variational forms）。UFL 是 FEniCSx 中描述微分方程离散化的核心语言。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FFCx&lt;/strong&gt;（FEniCSx 形式编译器，FEniCSx Form Compiler）：一个专门用于将 UFL 定义的变分形式编译成高效低级代码的工具。FFCx 是 FEniCSx 的编译引擎，生成与 Basix 和 DOLFINx 兼容的代码。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DOLFINx&lt;/strong&gt;：FEniCSx 的高性能计算核心库，基于 C++ 和 Python。它提供数据结构和算法支持，包括有限元网格（finite element meshes）、装配（assembly）、求解器（solvers），以及与线性代数工具的接口。DOLFINx 是 FEniCSx 的用户接口和计算核心。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在IO上，它涉及到&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gmsh&lt;/li&gt;
&lt;li&gt;VTK&lt;/li&gt;
&lt;li&gt;PyVista&lt;/li&gt;
&lt;li&gt;ADIOS2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线性代数后端上，它涉及到&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NumPy&lt;/li&gt;
&lt;li&gt;PETSc&lt;/li&gt;
&lt;li&gt;Trilinos&lt;/li&gt;
&lt;li&gt;Eigen&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="fenics_1"&gt;FEniCS&lt;/h3&gt;
&lt;p&gt;先看看老的FEnics&lt;/p&gt;
&lt;p&gt;&lt;img alt="fenics" src="https://blog.debao.me/images/simu/fenics_project.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UFL&lt;/strong&gt;（统一形式语言，unified form language）：一种嵌入在 Python 中的领域特定语言，用于通过有限元变分形式（finite element variational forms）描述微分方程的有限元离散化。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FIAT&lt;/strong&gt;（有限元自动生成器，finite element automatic tabulator）：FEniCS 的有限元后端，是一个 Python 模块，用于生成单纯形（simplices）上的任意阶有限元基函数（finite element basis functions）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FFC&lt;/strong&gt;（FEniCS 形式编译器，FEniCS form compiler）：一个编译器，用于将 UFL 代码作为输入并生成 UFC 输出。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UFC&lt;/strong&gt;（统一形式装配代码，unified form-assembly code）：一个 C++ 接口，由用于评估和装配有限元变分形式的低级函数组成。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Instant&lt;/strong&gt;：一个 Python 模块，用于在 Python 中内联 C 和 C++ 代码。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DOLFIN&lt;/strong&gt;：一个 C++/Python 库，提供有限元网格（finite element meshes）、自动化有限元装配（automated finite element assembly）以及数值线性代数（numerical linear algebra）的数据结构和算法。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;安装&lt;/h2&gt;
&lt;p&gt;在Ubuntu或Windows的WSL2下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;repository&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ppa&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;fenics&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;fenics&lt;/span&gt;
&lt;span class="nx"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;apt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;
&lt;span class="nx"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;apt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;fenicsx&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;另外，它还支持 conda 和 docker 方式&lt;/p&gt;
&lt;h2 id="_3"&gt;如何使用？&lt;/h2&gt;
&lt;h3 id="_4"&gt;基本步骤&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;创建网格和定义有限元空间；&lt;/li&gt;
&lt;li&gt;设置边界条件并定义变分问题；&lt;/li&gt;
&lt;li&gt;求解线性方程并输出结果；&lt;/li&gt;
&lt;li&gt;使用 pyvista 可视化计算结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体怎么做？？找个具体例子&lt;/p&gt;
&lt;h3 id="_5"&gt;泊松方程求解问题&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="math inline"&gt;\Gamma_{D}&lt;/span&gt;：Dirichlet 边界条件规定了解 &lt;span class="math inline"&gt; u &lt;/span&gt; 在边界上的值。例如，温度的值或位势的值。
&lt;span class="math inline"&gt;\Gamma_{N}&lt;/span&gt;：Neumann 边界条件规定了解的法向导数（即变化率），而不是解本身的值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于一个&lt;strong&gt;区域&lt;/strong&gt; &lt;span class="math inline"&gt;\Omega \subset \mathbb{R}^n&lt;/span&gt; ，其&lt;strong&gt;边界&lt;/strong&gt;为 &lt;span class="math inline"&gt;\partial \Omega = \Gamma_{D} \cup \Gamma_{N}&lt;/span&gt;，泊松方程在特定边界条件下的形式为：&lt;/p&gt;
&lt;div class="math display"&gt;
\begin{align}
  \nabla^{2} u &amp;amp;= f \quad {\rm in} \ \Omega, \\
   u &amp;amp;= 0 \quad {\rm on} \ \Gamma_{D}, \\
   \nabla u \cdot n &amp;amp;= g \quad {\rm on} \ \Gamma_{N}.
\end{align}
&lt;/div&gt;
&lt;p&gt;其中，&lt;span class="math inline"&gt;f&lt;/span&gt; 和 &lt;span class="math inline"&gt;g&lt;/span&gt; 是已知的输入数据，&lt;span class="math inline"&gt;n&lt;/span&gt; 表示指向外部的边界法线。变分问题可以表述为：寻找 &lt;span class="math inline"&gt;u \in V&lt;/span&gt;，使得&lt;/p&gt;
&lt;div class="math display"&gt;
a(u, v) = L(v) \quad \forall \ v \in V,
&lt;/div&gt;
&lt;p&gt;其中 &lt;span class="math inline"&gt;V&lt;/span&gt; 是一个适当的函数空间，且&lt;/p&gt;
&lt;div class="math display"&gt;
\begin{align}
   a(u, v) &amp;amp;:= \int_{\Omega} \nabla u \cdot \nabla v \, {\rm d} x, \\
   L(v)    &amp;amp;:= \int_{\Omega} f v \, {\rm d} x + \int_{\Gamma_{N}} g v \, {\rm d} s.
\end{align}
&lt;/div&gt;
&lt;p&gt;其中，&lt;span class="math inline"&gt;a(u, v)&lt;/span&gt; 是双线性形式，&lt;span class="math inline"&gt;L(v)&lt;/span&gt; 是线性形式。假设函数空间 &lt;span class="math inline"&gt;V&lt;/span&gt; 中的所有函数都满足 Dirichlet 边界条件（即 &lt;span class="math inline"&gt;u = 0 \ {\rm on} \ \Gamma_{D}&lt;/span&gt;）。&lt;/p&gt;
&lt;h3 id="_6"&gt;具体例子&lt;/h3&gt;
&lt;p&gt;考虑以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\Omega = [0,2] \times [0,1]&lt;/span&gt;（矩形区域）&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\Gamma_{D} = \{(0, y) \cup (2, y) \subset \partial \Omega\}&lt;/span&gt;（Dirichlet 边界）&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\Gamma_{N} = \{(x, 0) \cup (x, 1) \subset \partial \Omega\}&lt;/span&gt;（Neumann 边界）&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;g = \sin(5x)&lt;/span&gt;（Neumann 边界条件）&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;f = 10\exp(-((x - 0.5)^2 + (y - 0.5)^2) / 0.02)&lt;/span&gt;（源项）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最终结果：&lt;/p&gt;
&lt;p&gt;&lt;img alt="fenics" src="https://blog.debao.me/images/simu/fenics_turor1.png"&gt;&lt;/p&gt;
&lt;p&gt;对应代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ufl&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dolfinx&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;mpi4py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;petsc4py.PETSc&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ScalarType&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dolfinx.fem.petsc&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LinearProblem&lt;/span&gt;

&lt;span class="n"&gt;msh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dolfinx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_rectangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;comm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mpi4py&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MPI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;COMM_WORLD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;cell_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dolfinx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CellType&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;triangle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dolfinx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;functionspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Lagrange&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;facets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dolfinx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;locate_entities_boundary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;msh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;dim&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;topology&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dim&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;marker&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isclose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isclose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;dofs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dolfinx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;locate_dofs_topological&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;entity_dim&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;entities&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;facets&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;bc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dolfinx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirichletbc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ScalarType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;dofs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dofs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TrialFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TestFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SpatialCoordinate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;0.02&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grad&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grad&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dx&lt;/span&gt;
&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dx&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ds&lt;/span&gt;

&lt;span class="n"&gt;problem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LinearProblem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bcs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;bc&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;petsc_options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ksp_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;preonly&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pc_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;lu&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="n"&gt;uh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;problem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;solve&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;dolfinx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;XDMFFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;comm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;out_poisson/poisson.xdmf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#--------------&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyvista&lt;/span&gt;

&lt;span class="n"&gt;cells&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dolfinx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtk_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pyvista&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UnstructuredGrid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cells&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;point_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;u&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;uh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;real&lt;/span&gt;
&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_active_scalars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;u&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pyvista&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plotter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;warped&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;warp_by_scalar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;warped&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_7"&gt;分段看看代码&lt;/h3&gt;
&lt;h4 id="_8"&gt;创建网格和定义有限元空间&lt;/h4&gt;
&lt;p&gt;函数 &lt;code&gt;create_rectangle()&lt;/code&gt; 用于创建一个矩形网格，定义网格的坐标范围为 (0, 0) 到 (2, 1)，并且将其分为 32x16 格，单元类型为三角形。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;msh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dolfinx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_rectangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;comm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mpi4py&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MPI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;COMM_WORLD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;cell_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dolfinx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CellType&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;triangle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;函数 &lt;code&gt;functionspace()&lt;/code&gt; 用于创建一个Lagrange一阶有限元空间 V，用于表示离散化后的未知函数。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dolfinx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;functionspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Lagrange&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="_9"&gt;设置边界条件&lt;/h4&gt;
&lt;p&gt;函数 &lt;code&gt;locate_entities_boundary()&lt;/code&gt;用于查找网格的边界，定位在 x=0 或 x=2 处的边界，用于设置边界条件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;facets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dolfinx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;locate_entities_boundary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;msh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;dim&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;topology&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dim&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;marker&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isclose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isclose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;函数 &lt;code&gt;locate_dofs_topological()&lt;/code&gt; 根据边界上的元素位置，定位边界上的自由度（DOFs），这些自由度将用于施加边界条件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;dofs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dolfinx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;locate_dofs_topological&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;entity_dim&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;entities&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;facets&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;函数 &lt;code&gt;dirichletbc()&lt;/code&gt;设置Dirichlet边界条件，将边界自由度 dofs 上的解值设为0。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;bc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dolfinx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirichletbc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ScalarType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;dofs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dofs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="_10"&gt;定义变分问题&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;u：试函数？表示问题中的未知数，通过&lt;code&gt;TrialFunction()&lt;/code&gt;定义。&lt;/li&gt;
&lt;li&gt;v：测试函数，用于在变分问题中进行积分。通过&lt;code&gt;TestFunction()&lt;/code&gt;定义测试函数。&lt;/li&gt;
&lt;li&gt;x：网格的空间坐标，通过&lt;code&gt;SpatialCoordinate()&lt;/code&gt;获取。&lt;/li&gt;
&lt;li&gt;f：定义源项 f，这是一个高斯型函数，表示问题的右侧项。&lt;/li&gt;
&lt;li&gt;g：定义边界上的源项 g，这是一个关于 x[0] 的正弦函数。&lt;/li&gt;
&lt;li&gt;a：变分问题的左侧，表示梯度的内积，&lt;code&gt;ufl.inner(ufl.grad(u), ufl.grad(v))&lt;/code&gt; 是对解的梯度和测试函数的梯度内积，&lt;code&gt;ufl.dx&lt;/code&gt; 表示在网格区域上进行积分。&lt;/li&gt;
&lt;li&gt;L：变分问题的右侧，包括源项 f 和边界项 g。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TrialFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TestFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SpatialCoordinate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;0.02&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grad&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grad&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dx&lt;/span&gt;
&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dx&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ufl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="_11"&gt;求解线性问题&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;LinearProblem()&lt;/code&gt;定义线性问题，其中&lt;ul&gt;
&lt;li&gt;a 和 L 分别是变分问题的左侧和右侧，&lt;/li&gt;
&lt;li&gt;bcs 是边界条件，&lt;/li&gt;
&lt;li&gt;petsc_options 配置了 PETSc 求解器的参数。&lt;ul&gt;
&lt;li&gt;ksp_type 设置为 preonly，表示使用预处理器类型；&lt;/li&gt;
&lt;li&gt;pc_type 设置为 lu，表示使用直接求解器。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;solve()&lt;/code&gt;求解线性问题，得到解 uh。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;problem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LinearProblem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bcs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;bc&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;petsc_options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ksp_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;preonly&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pc_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;lu&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="n"&gt;uh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;problem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;solve&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;函数&lt;code&gt;XDMFFile()&lt;/code&gt;将解 uh 和网格 msh 输出到 XDMF 文件格式，便于后续可视化和分析。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;dolfinx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;XDMFFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;comm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;out_poisson/poisson.xdmf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="_12"&gt;显示&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;vtk_mesh: 将 dolfinx 的有限元空间转换为 pyvista 可用的网格格式。&lt;/li&gt;
&lt;li&gt;pyvista.UnstructuredGrid: 创建一个无结构的网格对象，用于可视化。&lt;/li&gt;
&lt;li&gt;grid.point_data["u"]: 将解 uh 的实部赋值给网格的点数据，表示解的数值。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;cells&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dolfinx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtk_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pyvista&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UnstructuredGrid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cells&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;point_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;u&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;uh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;real&lt;/span&gt;
&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_active_scalars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;u&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_13"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/FEniCS&lt;/li&gt;
&lt;li&gt;https://github.com/firedrakeproject/fiat&lt;/li&gt;
&lt;li&gt;https://fenicsproject.org/&lt;/li&gt;
&lt;li&gt;https://jsdokken.com/dolfinx-tutorial/&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/FEniCS_Project&lt;/li&gt;
&lt;li&gt;https://docs.fenicsproject.org/dolfinx/v0.9.0/python/demos/demo_poisson.html&lt;/li&gt;
&lt;/ul&gt;</content><category term="CAx"></category></entry><entry><title>开源有限元软件Elmer小记</title><link href="https://blog.debao.me/2024/12/notes-on-the-open-source-finite-element-software-elmer/" rel="alternate"></link><published>2024-12-26T22:48:00+08:00</published><updated>2024-12-26T22:48:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-26:/2024/12/notes-on-the-open-source-finite-element-software-elmer/</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#elmer"&gt;Elmer 是什么？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;开发环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;授权协议&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#elmer_1"&gt;Elmer架构&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#elmergui"&gt;ElmerGUI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#elmersolver"&gt;ElmerSolver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#elmergrid"&gt;ElmerGrid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#paraview"&gt;ParaView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;其他&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;源码结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="elmer"&gt;Elmer 是什么？&lt;/h2&gt;
&lt;p&gt;官网是如下介绍Elmer的：&lt;/p&gt;
&lt;p&gt;Elmer是一个开源的多物理场仿真软件，主要由CSC - IT科学中心（CSC）开发。Elmer的开发最初作为芬兰大学、研 …&lt;/p&gt;</summary><content type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#elmer"&gt;Elmer 是什么？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;开发环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;授权协议&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#elmer_1"&gt;Elmer架构&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#elmergui"&gt;ElmerGUI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#elmersolver"&gt;ElmerSolver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#elmergrid"&gt;ElmerGrid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#paraview"&gt;ParaView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;其他&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;源码结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="elmer"&gt;Elmer 是什么？&lt;/h2&gt;
&lt;p&gt;官网是如下介绍Elmer的：&lt;/p&gt;
&lt;p&gt;Elmer是一个开源的多物理场仿真软件，主要由CSC - IT科学中心（CSC）开发。Elmer的开发最初作为芬兰大学、研究机构和工业界的国家合作项目启动。自其开源发布以来，Elmer的使用和开发已成为国际化。&lt;/p&gt;
&lt;p&gt;Elmer包含流体动力学、结构力学、电磁学、热传导和声学等物理模型。这些模型通过偏微分方程来描述，Elmer通过有限元法（FEM）求解。Elmer支持并行计算，并且在许多问题中，能够在数千个核心上达到良好的可扩展性。&lt;/p&gt;
&lt;p&gt;&lt;img alt="elmer" src="https://blog.debao.me/images/simu/elmer.png"&gt;&lt;/p&gt;
&lt;h3 id="_1"&gt;历史&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;1995年，作为芬兰国家级项目启动&lt;/li&gt;
&lt;li&gt;2008年，在sf.net平台开源&lt;/li&gt;
&lt;li&gt;2015年，转移到GitHub平台&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;开发环境&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fortran90/95（核心数值计算）&lt;/li&gt;
&lt;li&gt;C/C++（外围功能和性能优化）&lt;/li&gt;
&lt;li&gt;Python（脚本和后处理）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GUI界面使用Qt(6)开发，使用ParaView，VTK等库或工具。&lt;/p&gt;
&lt;p&gt;使用CMake进行跨平台构建。&lt;/p&gt;
&lt;p&gt;它涉及到的一些开源库，如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="3rd tools" src="https://blog.debao.me/images/simu/elmer_3rd_tools.png"&gt;&lt;/p&gt;
&lt;h3 id="_3"&gt;授权协议&lt;/h3&gt;
&lt;p&gt;整个软件是开源的，具体来说&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Library parts under LGPL&lt;/li&gt;
&lt;li&gt;Modules under GPL&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;我没有仔细去看源码，不清楚它的Library 和 Modules的具体包含哪些。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="elmer_1"&gt;Elmer架构&lt;/h2&gt;
&lt;p&gt;Elmer由一系列程序组成&lt;/p&gt;
&lt;p&gt;&lt;img alt="components" src="https://blog.debao.me/images/simu/elmer_components.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ElmerGUI：界面，前处理（包含ElmerGrid，负责结构化网格和网格导入）&lt;/li&gt;
&lt;li&gt;ElmerSolver：有限元求解器，每个物理方程对应一个插件&lt;/li&gt;
&lt;li&gt;Paraview：结果展示？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="elmergui"&gt;ElmerGUI&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;用户界面：使用 Qt 开发&lt;/li&gt;
&lt;li&gt;网格生成：Tetgen，Netgen，ElmerGrid等插件。CAD界面基于 OpenCascad&lt;/li&gt;
&lt;li&gt;新的求解器可以通过GUI集成&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="elmersolver"&gt;ElmerSolver&lt;/h3&gt;
&lt;p&gt;ElmerSolver的主体部分！&lt;/p&gt;
&lt;h3 id="elmergrid"&gt;ElmerGrid&lt;/h3&gt;
&lt;p&gt;除了作为 ElmerGUI的插件使用外，也可以独立运行。&lt;/p&gt;
&lt;p&gt;支持&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2D、3D结构化网格的创建&lt;/li&gt;
&lt;li&gt;网格导入，支持Ansys，Abaqus，Fidap，Comsol，Gmsh等格式&lt;/li&gt;
&lt;li&gt;网格操作&lt;/li&gt;
&lt;li&gt;分割（Partitioning）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="paraview"&gt;ParaView&lt;/h3&gt;
&lt;p&gt;ParaView是一个独立工具，让ElmerSolver生成它可识别的格式，而后用其打开。&lt;/p&gt;
&lt;p&gt;ParaView也可以通过ElmerGUI被调用。&lt;/p&gt;
&lt;p&gt;另外，ElmerGUI内置VTK以及老的ElmerPost，也可以用于可视化。但是ParaView是ElmerSolver 推荐的方式！！&lt;/p&gt;
&lt;h3 id="_4"&gt;其他&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ElmerPost：老的后处理，已不再维护&lt;/li&gt;
&lt;li&gt;ElmerFront：老的前端界面，已不再维护&lt;/li&gt;
&lt;li&gt;Mesh2D：老的Mesh软件，供ElmerFront调用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_5"&gt;源码结构&lt;/h2&gt;
&lt;p&gt;重点关注：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;eio&lt;/strong&gt;：Elmer输入/输出库，使用C++编写，并由ElmerSolver用于一些I/O操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;elmergrid&lt;/strong&gt;：ElmerGrid源代码，使用C语言编写，包括来自Karypis实验室的Metis库。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fem&lt;/strong&gt;：ElmerSolver源代码，主要使用Fortran90编写。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hutiter&lt;/strong&gt;：主要使用Fortran90编写的迭代线性代数求解器，由ElmerSolver调用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;matc&lt;/strong&gt;：该库用于ElmerSolver命令文件解释器和ElmerPost命令窗口中，用于评估用C语言编写的数学表达式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mathlibs&lt;/strong&gt;：包括基本数学库，如Lapack、Blas、Arpack和Parpack。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ElmerGUI&lt;/strong&gt;：新的前处理器ElmerGUI的源代码。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;umfpack&lt;/strong&gt;：包括加利福尼亚大学的Umfpack（GPL版本4.4）库的源代码。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不再维护：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;front&lt;/strong&gt;&lt;br&gt;
  ElmerFront源代码，使用C++编写。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;post&lt;/strong&gt;&lt;br&gt;
  ElmerPost源代码，使用C语言编写。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;meshgen2d&lt;/strong&gt;&lt;br&gt;
  包括2D Delaunay网格生成器的源代码。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_6"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/ElmerCSC/elmerfem&lt;/li&gt;
&lt;li&gt;https://research.csc.fi/web/elmer/elmer&lt;/li&gt;
&lt;li&gt;https://www.nic.funet.fi/pub/sci/physics/elmer/&lt;/li&gt;
&lt;/ul&gt;</content><category term="CAx"></category><category term="Qt"></category><category term="vtk"></category></entry><entry><title>国内英文学习乱谈</title><link href="https://blog.debao.me/2024/12/casual-talk-on-english-learning-in-mainland-china/" rel="alternate"></link><published>2024-12-25T16:09:00+08:00</published><updated>2024-12-25T16:09:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-25:/2024/12/casual-talk-on-english-learning-in-mainland-china/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;这几年一直想胡乱写写东西，不知从何处下手。前两天，注意到孩子字母 &lt;strong&gt;C&lt;/strong&gt; 的读音，说数学老师就是这么读的，我说这个不能 …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;这几年一直想胡乱写写东西，不知从何处下手。前两天，注意到孩子字母 &lt;strong&gt;C&lt;/strong&gt; 的读音，说数学老师就是这么读的，我说这个不能听数学老师的，然后孩子告诉我，英语老师也是这么读的...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在各种音视频资料比30年前丰富多了，但是孩子英文学习还是各种挣扎。不妨简单回顾自己的踩坑过程...&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#26"&gt;26个字母&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;音标学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#liaison"&gt;初识连读（Liaison）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;字母表&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;无处不在的连读&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#initialism"&gt;首字母缩略词（Initialism）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#numeronym"&gt;数字代号（numeronym)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;数个鸡蛋&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#a-an"&gt;a 与 an&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contractions"&gt;缩略形式（contractions）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;不局限单词内部&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;节奏与重读&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_7"&gt;两种节奏&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_8"&gt;重音估计是学不会了&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_9"&gt;部分字母在单词中发音&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#ttth"&gt;字母T：[t]、[tʰ]、[ɾ]、[ʔ]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#light-l-dark-l"&gt;light l 与 dark l&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#soft-g-hard-g"&gt;soft g 与 hard g&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#soft-c-hard-c"&gt;soft c 与 hard c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="26"&gt;26个字母&lt;/h2&gt;
&lt;p&gt;不知道是否受拼音影响，要把这26个字母读对，挑战似乎非常大：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C：究竟是靠近“细”、拼音“sei”、还是“司一”&lt;/li&gt;
&lt;li&gt;G、J：怎么区分&lt;/li&gt;
&lt;li&gt;W：靠近“达不溜”，还是“double 油”&lt;/li&gt;
&lt;li&gt;L：是“艾欧”还是“艾喽”&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;或许，试图和拼音去对照的那一刻，就已经不对了。但不和拼音对照，又没有自然拼读，直接上音标的话，似乎更糟糕&lt;/p&gt;
&lt;h3 id="_1"&gt;音标学习&lt;/h3&gt;
&lt;p&gt;或许可以和汉语拼音学习进行对照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;小学时，语文老师完全不会普通话，拼音硬套山东方言。&lt;/li&gt;
&lt;li&gt;初中时，语文老师应该是懂普通话的，但是认为大家小学都学过汉语拼音了，根本不会去提这东西。&lt;/li&gt;
&lt;li&gt;高中时，依旧没有普通话环境。幸好同桌八年义务教育都是在县城上的，三言两语，教会了普通话。在这之前：&lt;strong&gt;因不懂规则，压根就听不出来普通话和方言的区别&lt;/strong&gt;；了解规则后，发现哪哪都不一样啊。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对应到音标上，似乎更坑：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;初中时，完全不讲音标，尽管书上有，全靠自己蒙。&lt;/li&gt;
&lt;li&gt;高中时，没有任何改观，不讲音标，死背单词和固定搭配，听力听不懂&lt;/li&gt;
&lt;li&gt;大学时，没有改观。还是凭感觉读&lt;/li&gt;
&lt;li&gt;毕业10多年后，偶尔碰到了赖老师的《赖世雄美语音标》，才对音标有了一点了解：&lt;a href="https://blog.debao.me/2024/12/what-the-heck-are-ipa-dj-phonetics-kk-phonetics-and-ipa/"&gt;国际音标、DJ音标、KK音标、IPA都是什么鬼？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;音标是个很自由的东西，与音标比起来，连读可能对英文学习的影响更大&lt;/p&gt;
&lt;h3 id="liaison"&gt;初识连读（Liaison）&lt;/h3&gt;
&lt;p&gt;我一直认为：在校期间，从没有学过连读。直到今天，为了写这个blog，重新翻了翻90年代初中一年级英语课本（李雷与韩梅梅版本）：&lt;/p&gt;
&lt;p&gt;&lt;img alt="liaison" src="https://blog.debao.me/images/esl/liaison_lesson112.png"&gt;&lt;/p&gt;
&lt;p&gt;记忆真的有些混乱了，这么重要的东西，当时是怎么跳过去的&lt;/p&gt;
&lt;p&gt;不过教材中的ABC字母歌，真真切切是没有任何连读的：&lt;/p&gt;
&lt;p&gt;&lt;img alt="abc song" src="https://blog.debao.me/images/esl/abc-song-0.png"&gt;&lt;/p&gt;
&lt;p&gt;这或许能解释，当毕业后的某天突然发现英文连读是从字母表开始时，是多么吃惊：这么多年的英文学习，竟然一直都没入门：&lt;/p&gt;
&lt;p&gt;&lt;img alt="abc song" src="https://blog.debao.me/images/esl/abc-song.png"&gt;&lt;/p&gt;
&lt;p&gt;LMNOP，音标 /el em en əʊ pi:/，读作 /e le me nəʊ pi:/&lt;/p&gt;
&lt;h3 id="_2"&gt;字母表&lt;/h3&gt;
&lt;p&gt;尽管英文依然还是不好，读准字母音帮助还是很大&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;A a&lt;/strong&gt;&lt;br&gt;/eɪ/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;B b&lt;/strong&gt;&lt;br&gt;/biː/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;C c&lt;/strong&gt;&lt;br&gt;/siː/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;D d&lt;/strong&gt;&lt;br&gt;/diː/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;E e&lt;/strong&gt;&lt;br&gt;/iː/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;F f&lt;/strong&gt;&lt;br&gt;/ef/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;G g&lt;/strong&gt;&lt;br&gt;/dʒiː/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;H h&lt;/strong&gt;&lt;br&gt;/eɪtʃ/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;I i&lt;/strong&gt;&lt;br&gt;/aɪ/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;J j&lt;/strong&gt;&lt;br&gt;/dʒeɪ/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;K k&lt;/strong&gt;&lt;br&gt;/keɪ/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;L l&lt;/strong&gt;&lt;br&gt;/el/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;M m&lt;/strong&gt;&lt;br&gt;/em/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;N n&lt;/strong&gt;&lt;br&gt;/en/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;O o&lt;/strong&gt;&lt;br&gt;/əʊ/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;P p&lt;/strong&gt;&lt;br&gt;/piː/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Q q&lt;/strong&gt;&lt;br&gt;/kjuː/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;R r&lt;/strong&gt;&lt;br&gt;/ɑː/, /ɑr/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;S s&lt;/strong&gt;&lt;br&gt;/es/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;T t&lt;/strong&gt;&lt;br&gt;/tiː/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;U u&lt;/strong&gt;&lt;br&gt;/juː/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;V v&lt;/strong&gt;&lt;br&gt;/viː/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;W w&lt;/strong&gt;&lt;br&gt;/ˈdʌbəl.juː/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;X x&lt;/strong&gt;&lt;br&gt;/eks/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Y y&lt;/strong&gt;&lt;br&gt;/waɪ/&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Z z&lt;/strong&gt;&lt;br&gt;/zed/, /ziː/&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;换一种组织方式：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;/eɪ/&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;/iː/&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;/aɪ/&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;/əʊ/&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;/juː/&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;/ɑː/&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;/e/&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;I&lt;/td&gt;
&lt;td&gt;O&lt;/td&gt;
&lt;td&gt;Q&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;H&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;U&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;L&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;J&lt;/td&gt;
&lt;td&gt;D&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;W&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;M&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;K&lt;/td&gt;
&lt;td&gt;E&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;G&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;S&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;P&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Z (ed)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Z (iː)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_3"&gt;无处不在的连读&lt;/h2&gt;
&lt;p&gt;网上连读的介绍很多，但是早期有困惑的可能感受才更深切&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pineapple，在n之前还是之后停顿？&lt;/li&gt;
&lt;li&gt;enable，加上前缀en后，n和谁一伙的&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这东西，压根没什么规则。就是怎么顺口怎么来&lt;/p&gt;
&lt;h3 id="initialism"&gt;首字母缩略词（Initialism）&lt;/h3&gt;
&lt;p&gt;以前，总是试图各个字符之间加个停顿，不然感觉发音会混到一块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HTML&lt;/strong&gt;： /ˌeɪtʃ tiː em ˈel/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CSS&lt;/strong&gt;： /ˌsiː es ˈes/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSL&lt;/strong&gt;： /ˌes es ˈel/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;XML&lt;/strong&gt;：/ˌeks em ˈel/&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="numeronym"&gt;数字代号（numeronym)&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;遇到这种，还是单词吗？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首字母、数字、尾字母分别读出，基本都有或强或弱的连读&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;i18n&lt;/strong&gt;：/ˌaɪ ˌeɪtˌtiːn ˈen/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;l10n&lt;/strong&gt;: /ˌel ˌten ˈen/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;k8s&lt;/strong&gt;：/keɪts/，和kates一样&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;数个鸡蛋&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;one egg&lt;/strong&gt;：/ˌwʌn ˈneɡ/，正常连读&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;two eggs&lt;/strong&gt;：/ˌtuː ˈweɡz/，插入 /w/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;three eggs&lt;/strong&gt;：/ˌθriː ˈjeɡz/，插入 /j/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;four eggs&lt;/strong&gt;：/ˌfɔː ˈreɡz/，注意 /r/&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="a-an"&gt;a 与 an&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;早期，不论元音还是辅音，前面都使用an，但是后来英国人发现，省掉辅音前面an中的n音，发音会更容易。于是演变成在辅音前面使用 a。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;an apple&lt;/strong&gt;：发音 a napple&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;an orange&lt;/strong&gt;：发音 a norange&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;an email&lt;/strong&gt;：发音 a nemail&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;细究之下，这个n还会造成单词的演变。因为读音一样，有些n开头的单词丢掉了n，而有些元音开头的单词引入了n开头。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nadder =&amp;gt; adder：蝰蛇（adder） 在 14世纪之前拼作 nadder。毕竟a nadder 和 an adder 发音完全一样。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;otch =&amp;gt; notch：刻痕（notch）在15世纪之前拼作 otch。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="contractions"&gt;缩略形式（contractions）&lt;/h3&gt;
&lt;p&gt;容易有拆开读的冲动&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;we're&lt;/strong&gt;：音标 /wɪə/，/wɪr/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;you're&lt;/strong&gt;：音标 /jʊə/，/jʊr/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;they're&lt;/strong&gt;：音标 /ðeə/，/ðer/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;he's&lt;/strong&gt;：音标 /hiz/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;she's&lt;/strong&gt;：音标 /ʃiːz/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;we've&lt;/strong&gt;：音标 /wiːv/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;they've&lt;/strong&gt;：音标 /ðeɪv/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;could've&lt;/strong&gt;：音标 /ˈkʊd əv/，/ˈkʊdəv/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;it'll&lt;/strong&gt;：音标 /ˈɪt.əl/，/ˈɪtl/&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_5"&gt;不局限单词内部&lt;/h3&gt;
&lt;p&gt;句子中连读无处不在，特别是 of、at、on、an，and...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;take it easy&lt;/strong&gt;：音标 /teɪ kɪ tˈiː.zi/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;not at all&lt;/strong&gt;：音标 /nɒ tə tˈɔːl/&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;school of art&lt;/strong&gt;：音标 /skuː ləv ˈɑːt/&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_6"&gt;节奏与重读&lt;/h2&gt;
&lt;h3 id="_7"&gt;两种节奏&lt;/h3&gt;
&lt;p&gt;普通话 和 英语，两个节奏完全不一样。英语有了重读和弱读，普通话则部分轻重&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Stress-Timed Language（重音节奏语言）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Syllable-Timed Language（音节节奏语言）&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;节奏基准&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;重读音节之间的时间均等&lt;/td&gt;
&lt;td&gt;每个音节的时间均等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;弱读音节&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;弱读音节会被压缩或模糊&lt;/td&gt;
&lt;td&gt;所有音节发音清晰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;听起来的效果&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;节奏忽快忽慢&lt;/td&gt;
&lt;td&gt;节奏平稳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;典型语言&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;英语、德语、俄语&lt;/td&gt;
&lt;td&gt;普通话、法语、西班牙语&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_8"&gt;重音估计是学不会了&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;句重音（Sentence Stress）&lt;/li&gt;
&lt;li&gt;词重音（Word Stress)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;重音音节通常具有以下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发音更响亮：比其他音节更大声。&lt;/li&gt;
&lt;li&gt;发音时间更长：重音音节的持续时间比轻音音节长。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语调更高&lt;/strong&gt;：重音音节通常发得更高或者音调上扬。&lt;/li&gt;
&lt;li&gt;发音更清晰：发音较为清晰，元音不容易弱化。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;对于五音不全的人来说，语调变化可能既听不出来了，也说不出来...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_9"&gt;部分字母在单词中发音&lt;/h2&gt;
&lt;h3 id="ttth"&gt;字母T：[t]、[tʰ]、[ɾ]、[ʔ]&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;t有时不发音。比如：listen、often、ballet、buffet、Christmas、postpone、whistle、castle
，音标中"基本都"不包含音标/t/；但有的单词音标中明明有/t/，但是还是不发音？？&lt;/li&gt;
&lt;li&gt;音标中明明写的都是/t/，但是发音时又分为了： [t]、[tʰ]、[ɾ]、[ʔ]。什么道理？&lt;/li&gt;
&lt;li&gt;重读音节中，在st中的t发/d/ ？？为什么中国有这个说法，而国外没有？？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;详见：&lt;a href="https://zhuanlan.zhihu.com/p/126331303"&gt;英文单词中字母t的发音&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;IPA&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;规则&lt;/th&gt;
&lt;th&gt;单词&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[tʰ]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;正常/t/（True /t/）&lt;/td&gt;
&lt;td&gt;t在单词开头，或者重读音节开头时，正常发音&lt;/td&gt;
&lt;td&gt;take、task、attack、attach、pretend&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[ʔ]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;声门闭锁（Glottal stop）&lt;/td&gt;
&lt;td&gt;t在/n/前时，其发音会被声门闭锁取代&lt;/td&gt;
&lt;td&gt;button、cotton、mitten、kitten、mountain、written&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[ɾ]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;[美式英语]轻音d（Flap t，soft d）&lt;/td&gt;
&lt;td&gt;在美语中，当t在两个元音之间，或在/l/之前时，/t/发类似/d/的音&lt;/td&gt;
&lt;td&gt;water、daughter、later、better、little、battle、bottle、cattle、turtle&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;不发音：(所有的变音最不正式、不标准的一个？)&lt;/td&gt;
&lt;td&gt;t在/n/之后，/t/（可以）不发音；t在两个辅音之间（[ʔ]和[ɾ]之外的单词），不发音&lt;/td&gt;
&lt;td&gt;interview、twenty、disappointing、accountable、dentist&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[t]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不送气的t，【对应汉语拼音中的d】&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;start、stop&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="light-l-dark-l"&gt;light l 与 dark l&lt;/h3&gt;
&lt;p&gt;L在单词中有类似汉语拼音的Light L，也有差异较大的 Dark L。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Light L&lt;/strong&gt;，L在单词的开头或重读音节的开头，和汉语拼音比较接近&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;light&lt;/li&gt;
&lt;li&gt;love&lt;/li&gt;
&lt;li&gt;like&lt;/li&gt;
&lt;li&gt;leaf&lt;/li&gt;
&lt;li&gt;alive&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Dark L&lt;/strong&gt;，L在单词末尾或音节末尾。对应 IPA &lt;code&gt;[ɫ]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ball&lt;/li&gt;
&lt;li&gt;tell&lt;/li&gt;
&lt;li&gt;feel&lt;/li&gt;
&lt;li&gt;help&lt;/li&gt;
&lt;li&gt;milk&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Dark L&lt;/strong&gt;要求发音时舌头前后部分同时参与（舌尖接触齿龈，舌后部抬起），而普通话的 L 音只需要舌尖参与。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在有些单词中，很容易丢掉词尾的dark L，比如 School，如果后面有其他单词可以连读的话，可以规避这种问题&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;School of art
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Dark L 此时变为容易发音的 Light L。&lt;/p&gt;
&lt;h3 id="soft-g-hard-g"&gt;soft g 与 hard g&lt;/h3&gt;
&lt;p&gt;英文单词的中 &lt;code&gt;g&lt;/code&gt; 的发音，套用拼音的习惯，似乎还是挺直观的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;get /ɡɛt/&lt;/li&gt;
&lt;li&gt;give /ɡɪv/&lt;/li&gt;
&lt;li&gt;girl /ɡɜːrl/&lt;/li&gt;
&lt;li&gt;gift /ɡɪft/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;好不容易学这几个单词，但在突然知晓这几个单词的发音都是 &lt;strong&gt;特例&lt;/strong&gt; 的时候，还是挺吃惊的&lt;/p&gt;
&lt;p&gt;一般来说：&lt;strong&gt;当g后面的字母是 &lt;code&gt;e&lt;/code&gt;、&lt;code&gt;i&lt;/code&gt;或 &lt;code&gt;y&lt;/code&gt;时，g发软音/dʒ/；其他时候发硬音/ɡ/。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.debao.me/2024/08/notes-on-pronunciation-of-g/"&gt;字母G在单词中的发音&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="soft-c-hard-c"&gt;soft c 与 hard c&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;在古典拉丁语中，C 始终表示 /k/ 音。随着拉丁语向早期罗曼语（如意大利语、法语、西班牙语）演变，字母 C 在某些环境下（如 C + E/I）开始发 /s/ 音。这种变化被称为“软化”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;C + E/I/Y → /s/（Soft C）&lt;/li&gt;
&lt;li&gt;C + A/O/U → /k/（Hard C）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;与汉语拼音不同，英语中k用的比较少，好处是它只发 /k/音，另外Q在u前面时，也发/k/音标。&lt;/p&gt;</content><category term="ESL"></category></entry><entry><title>C++与Windows下的UTF-8支持杂谈</title><link href="https://blog.debao.me/2024/12/casual-talk-on-utf-8-support-in-c++-and-windows/" rel="alternate"></link><published>2024-12-22T00:10:00+08:00</published><updated>2024-12-22T00:10:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-22:/2024/12/casual-talk-on-utf-8-support-in-c++-and-windows/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;随着C++23开始涉足UTF-8源码字符集，以及Windows开始转向UTF-8。C++总算有解决编码问题的苗头了...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;问题，由来已久&lt;/h2&gt;
&lt;p&gt;我喜欢用这个例子，因为代码中的中文的存在，要想代码 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;随着C++23开始涉足UTF-8源码字符集，以及Windows开始转向UTF-8。C++总算有解决编码问题的苗头了...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;问题，由来已久&lt;/h2&gt;
&lt;p&gt;我喜欢用这个例子，因为代码中的中文的存在，要想代码通用（跨平台），这几行代码的问题可以列一罗筐：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mystr&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;老老实实的学问，来不得半点马虎&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mystr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;西方老外明显没有中日韩群众的感同身受，不过&lt;code&gt;Beman Dawes&lt;/code&gt;指出：即使是下面这样简单的代码，C++都无法保证其通用性：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;由于个人只关注Windows和Linux两个平台，也只涉及MSVC和GCC两种编译器，也基本上被折腾的想吐：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.debao.me/2024/01/exploring-cpp-character-types/"&gt;C++中字符问题极为复杂&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/dbzhang800/article/details/7540905"&gt;Qt要实现的字符跨平台很痛苦&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="c23-utf-8"&gt;C++23 与 UTF-8&lt;/h2&gt;
&lt;p&gt;在C++11引入 &lt;code&gt;u8"...."&lt;/code&gt;字面量，C++20引入 &lt;code&gt;char8_t&lt;/code&gt; 之后&lt;/p&gt;
&lt;p&gt;C++23 开始：Support for UTF-8 as a portable source file encoding，详见&lt;a href="https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2295r6.pdf"&gt;P2295R6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;简单地说，从1998年C++标准化，直到二十五年后，才开始解决源码字符集这一基本问题。&lt;/p&gt;
&lt;h2 id="msvc-utf-8"&gt;MSVC 与 UTF-8&lt;/h2&gt;
&lt;p&gt;MSVC对UTF-8支持有两个阶段：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MSVC2010（UTF-8基本可用）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;引入了 &lt;code&gt;#pragma execution_character_set("utf-8")&lt;/code&gt; 支持执行字符集&lt;/li&gt;
&lt;li&gt;支持带BOM的 utf-8 源码字符集&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;MSVC2015 Update1（UTF-8可用）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;引入了 &lt;code&gt;/source-charset:utf-8&lt;/code&gt; 与 &lt;code&gt;/execution-charset:utf-8&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;或者更简单的 &lt;code&gt;/utf-8&lt;/code&gt; 选项&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是这也只是解决了窄字符串的执行字符集问题，Windows下API使用UTF-16，而其他平台下使用UTF-8，还是一个大问题&lt;/p&gt;
&lt;h2 id="window-api-utf-8"&gt;Window API 与 UTF-8&lt;/h2&gt;
&lt;p&gt;我们知道，Win32 API 通常同时支持 &lt;code&gt;-A&lt;/code&gt; 和 &lt;code&gt;-W&lt;/code&gt; 两种变体。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-A&lt;/code&gt; 变体识别系统上配置的 ANSI 代码页，并支持 &lt;code&gt;char*&lt;/code&gt;，而&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-W&lt;/code&gt; 变体则在 UTF-16 编码下工作，支持 WCHAR。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;长期以来，Windows 一直强调使用 "Unicode" 的 &lt;code&gt;-W&lt;/code&gt; 变体，而不是 &lt;code&gt;-A&lt;/code&gt; API。（这和其他系统下使用窄字符串UTF8不兼容，编写跨平台代码会很头疼）&lt;/p&gt;
&lt;p&gt;然而，最近的版本开始使用 ANSI 代码页和 &lt;code&gt;-A&lt;/code&gt; API 来为应用程序引入 UTF-8 支持。如果 ANSI 代码页配置为 UTF-8，那么 &lt;code&gt;-A&lt;/code&gt; API 通常会以 UTF-8 操作。这种模式的好处在于，能够支持使用 &lt;code&gt;-A&lt;/code&gt; API 构建的现有代码，无需进行代码更改。&lt;/p&gt;
&lt;p&gt;看起来，Windows以后可能推荐直接使用&lt;code&gt;-A&lt;/code&gt;的API。&lt;/p&gt;
&lt;p&gt;注意设置CodePage为 CP_UTF8，对Win32程序来说，注意设置 manifest 文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;assembly&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;manifestVersion=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;urn:schemas-microsoft-com:asm.v1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;assemblyIdentity&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;win32&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;version=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;6.0.0.0&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;application&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;windowsSettings&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;activeCodePage&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.microsoft.com/SMI/2019/WindowsSettings&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;UTF-8&lt;span class="nt"&gt;&amp;lt;/activeCodePage&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/windowsSettings&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/application&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/assembly&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="utf-8"&gt;关于UTF-8&lt;/h2&gt;
&lt;p&gt;UTF-8由肯·汤普森（Ken Thompson）和罗布·派克（Rob Pike）于1992年设计。他们的目标是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;兼容性&lt;/strong&gt;：与ASCII完全兼容（ASCII的字符直接映射为单字节的UTF-8编码）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;灵活性&lt;/strong&gt;：支持所有Unicode字符。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;效率&lt;/strong&gt;：对常用字符（如英文字母、数字）使用较少的存储空间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无字节序问题&lt;/strong&gt;：UTF-8以字节为单位编码，不依赖于字节序（大端或小端）。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字节数&lt;/th&gt;
&lt;th&gt;Unicode 范围&lt;/th&gt;
&lt;th&gt;二进制格式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1 字节&lt;/td&gt;
&lt;td&gt;U+0000 ~ U+007F&lt;/td&gt;
&lt;td&gt;0xxxxxxx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2 字节&lt;/td&gt;
&lt;td&gt;U+0080 ~ U+07FF&lt;/td&gt;
&lt;td&gt;110xxxxx 10xxxxxx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3 字节&lt;/td&gt;
&lt;td&gt;U+0800 ~ U+FFFF&lt;/td&gt;
&lt;td&gt;1110xxxx 10xxxxxx 10xxxxxx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4 字节&lt;/td&gt;
&lt;td&gt;U+10000 ~ U+10FFFF&lt;/td&gt;
&lt;td&gt;11110xxx 10xxxxxx 10xxxxxx 10xxxxxx&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注意：在UTF-8被首次定义时（RFC 2279），它的设计目标是能够编码到整个&lt;strong&gt;31位&lt;/strong&gt;的空间（即支持码点范围为 U+000000 到 U+7FFFFFFF）。因此，UTF-8最初允许最大6个字节来表示一个字符。&lt;/p&gt;
&lt;p&gt;但是 Unicode标准（从版本3.1开始）将码点范围限制在 U+0000 到 U+10FFFF（使用21位空间），这意味着最多需要4个字节就能编码所有Unicode字符。&lt;/p&gt;
&lt;p&gt;这个改动与UTF-16的设计限制密切相关（如果哪一天字符不够用了，废掉UTF-16，只保留UTF-32和UTF-8就行了，那时UTF-8可以恢复成6字节）。&lt;/p&gt;
&lt;h2 id="_2"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2295r6.pdf&lt;/li&gt;
&lt;li&gt;https://learn.microsoft.com/en-us/windows/apps/design/globalizing/use-utf8-code-page&lt;/li&gt;
&lt;li&gt;https://learn.microsoft.com/en-us/cpp/build/reference/utf-8-set-source-and-executable-character-sets-to-utf-8?view=msvc-170&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/UTF-8&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="C++"></category><category term="c++"></category><category term="qt"></category></entry><entry><title>Qt Quick Controls历史小记</title><link href="https://blog.debao.me/2024/12/notes-on-qt-quick-controls/" rel="alternate"></link><published>2024-12-21T01:32:00+08:00</published><updated>2024-12-21T01:32:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-21:/2024/12/notes-on-qt-quick-controls/</id><summary type="html">&lt;h2 id="qt-quick-controls"&gt;Qt Quick Controls 历史&lt;/h2&gt;
&lt;h3 id="qt-472010-qt-quick-components"&gt;Qt 4.7（2010 年发布）：Qt Quick Components&lt;/h3&gt;
&lt;p&gt;引入 QtQuick，主要面向手机平台。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为提供基本 UI 组件（如 Titlebar、List items、Buttons 等），推出 &lt;strong&gt;Qt Quick Components&lt;/strong&gt; 项目。&lt;/li&gt;
&lt;li&gt;同时期 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2 id="qt-quick-controls"&gt;Qt Quick Controls 历史&lt;/h2&gt;
&lt;h3 id="qt-472010-qt-quick-components"&gt;Qt 4.7（2010 年发布）：Qt Quick Components&lt;/h3&gt;
&lt;p&gt;引入 QtQuick，主要面向手机平台。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为提供基本 UI 组件（如 Titlebar、List items、Buttons 等），推出 &lt;strong&gt;Qt Quick Components&lt;/strong&gt; 项目。&lt;/li&gt;
&lt;li&gt;同时期，桌面风格的组件（ &lt;strong&gt;qml components for desktop&lt;/strong&gt; ）也起步，当时仓库地址为 http://qt.gitorious.org/qt-components/desktop。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="qt-502012-qtdesktopcomponents"&gt;Qt 5.0（2012 年发布）：qtdesktopcomponents&lt;/h3&gt;
&lt;p&gt;试验性项目 &lt;strong&gt;qtdesktopcomponents&lt;/strong&gt; 被引入，当时仓库地址为 https://git.gitorious.org/qtplayground/qtdesktopcomponents.git。&lt;/p&gt;
&lt;h3 id="qt-512013-qt-quick-controls1"&gt;Qt 5.1（2013 年发布）：Qt Quick Controls（1）&lt;/h3&gt;
&lt;p&gt;Qt Quick Controls 正式发布（后被称为 Qt Quick Controls 1）。&lt;/p&gt;
&lt;p&gt;提供了一套基于 QWidget 和 QStyle 的 UI 控件，支持桌面平台的 native 风格。&lt;/p&gt;
&lt;h3 id="qt-552015-qt-quick-extra"&gt;Qt 5.5（2015 年发布）：Qt Quick Extra&lt;/h3&gt;
&lt;p&gt;引入 Qt Quick Extra（前身为 Qt Quick Enterprise Controls），提供企业级的额外控件。&lt;/p&gt;
&lt;h3 id="qt-562016-qtlabscontrols"&gt;Qt 5.6（2016 年发布）：QtLabsControls&lt;/h3&gt;
&lt;p&gt;QtLabsControls（即 Qt Quick Controls 2 的预览版）发布。
项目初衷是为嵌入式和性能敏感的场景设计一套更轻量化、现代化的 QML 控件。&lt;/p&gt;
&lt;h3 id="qt-572016-qt-quick-controls-2"&gt;Qt 5.7（2016 年发布）：Qt Quick Controls 2&lt;/h3&gt;
&lt;p&gt;Qt Quick Controls 2 正式发布。&lt;/p&gt;
&lt;p&gt;优势：
* 彻底摆脱了 QWidget 和 QStyle，基于 Qt Quick 的场景图（Scene Graph）实现，性能更高。
* 引入了 Material、Universal 等现代化样式，轻量化且适合嵌入式设备开发。&lt;/p&gt;
&lt;h3 id="qt-5122018-qt-quick-controls1"&gt;Qt 5.12（2018 年发布）：废弃 Qt Quick Controls（1）&lt;/h3&gt;
&lt;p&gt;Qt Quick Controls 1 被标记为 废弃（Deprecated）。&lt;/p&gt;
&lt;p&gt;官方建议开发者迁移到 Qt Quick Controls 2，后者在功能、性能和样式上都已成熟。&lt;/p&gt;
&lt;h3 id="qt-602020-qt-quick-controls1"&gt;Qt 6.0（2020 年发布）：移除 Qt Quick Controls（1）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Qt Quick Controls（1）被 完全移除，不再支持。&lt;/li&gt;
&lt;li&gt;Qt Quick Controls 2 成为唯一支持的控件模块。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="qt-622021"&gt;Qt 6.2（2021 年发布）&lt;/h3&gt;
&lt;p&gt;Qt Quick Controls 2 的实现代码移入 qtdeclarative 模块，进一步简化模块依赖并优化架构。&lt;/p&gt;
&lt;h2 id="qt-quick"&gt;Qt Quick历史&lt;/h2&gt;
&lt;p&gt;顺便放上&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Qt4.7，QtDeclarative（QtQuick）被正式引入。包括基于QtScript的qml语言和在QGraphicsView之上构建的模块QtDeclarative。&lt;/li&gt;
&lt;li&gt;Qt5.0，全新的基于OpenGL的 QtQuick 被引入，qml也基于被称为v8的javascript进行了重构；该QtQuick称为QtQuick2，而Qt4.7中引入的老的QtDeclarative被称为QtQuick1。&lt;/li&gt;
&lt;li&gt;Qt5.2，由于性能原因，V8被Qt自己的V4/V4VM取代。&lt;/li&gt;
&lt;li&gt;Qt5.5，QtQuick1、QtWebkit和QtScript一块被废弃。&lt;/li&gt;
&lt;li&gt;Qt5.6中，QtQuick1被移除。&lt;/li&gt;
&lt;li&gt;Qt5.12，引入qrhi 渲染硬件接口（Rendering Hardware Interface）。&lt;/li&gt;
&lt;li&gt;Qt6.0，默认切换到qrhi&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/qt/qtquickcontrols2/tree/6.1&lt;/li&gt;
&lt;li&gt;https://blog.qt.io/blog/2010/09/10/building-the-future-reintroducing-the-qt-quick-components/&lt;/li&gt;
&lt;li&gt;https://blog.qt.io/blog/2011/03/10/qml-components-for-desktop/&lt;/li&gt;
&lt;li&gt;https://blog.qt.io/blog/2012/06/06/desktop-components-for-qt-5/&lt;/li&gt;
&lt;li&gt;http://blog.qt.io/blog/2015/03/31/qt-quick-controls-for-embedded/&lt;/li&gt;
&lt;li&gt;http://blog.qt.io/blog/2015/11/23/qt-quick-controls-re-engineered-status-update/&lt;/li&gt;
&lt;/ul&gt;</content><category term="Qt"></category><category term="qt"></category></entry><entry><title>Visual Studio版本小记</title><link href="https://blog.debao.me/2024/12/notes-on-visual-studio-versions/" rel="alternate"></link><published>2024-12-21T00:02:00+08:00</published><updated>2024-12-21T00:02:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-21:/2024/12/notes-on-visual-studio-versions/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;早期笔记太乱了，而且很多内容过时了，稍微整理一下...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#vs"&gt;区分VS版本号？？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#vs2022"&gt;VS2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;列个表&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#windows-sdk-platform-toolset"&gt;Windows SDK 与 Platform toolset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;二进制兼容性&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_3"&gt;前期不兼容&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2015"&gt;2015变化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;限制&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#msvc"&gt;定位 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;早期笔记太乱了，而且很多内容过时了，稍微整理一下...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#vs"&gt;区分VS版本号？？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#vs2022"&gt;VS2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;列个表&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#windows-sdk-platform-toolset"&gt;Windows SDK 与 Platform toolset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;二进制兼容性&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_3"&gt;前期不兼容&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2015"&gt;2015变化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;限制&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#msvc"&gt;定位MSVC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_5"&gt;平台工具集&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vcdevcmdbat-vsvars32bat"&gt;查找环境脚本（VcDevCmd.bat 和 vsvars32.bat）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#visual-studio-2015"&gt;Visual Studio 2015 及之前版本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#visual-studio-2017"&gt;Visual Studio 2017 及更高版本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#vswhereexe"&gt;vswhere.exe 的位置&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#vswhereexe_1"&gt;使用 vswhere.exe 查找安装路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;查找并执行初始化脚本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#vsdevcmdbat"&gt;VsDevCmd.bat 的使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#qt-qtenv2bat"&gt;Qt 脚本 qtenv2.bat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_7"&gt;示例小结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_8"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="vs"&gt;区分VS版本号？？&lt;/h2&gt;
&lt;p&gt;对于VS，特别是提到MSVC时，会有三个不同的版本号，相当容易混淆...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VS版本：VS+年份&lt;/li&gt;
&lt;li&gt;VC版本：VC+数字&lt;/li&gt;
&lt;li&gt;CL版本：编译器的版本，四个数字（代码中常用）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="vs2022"&gt;VS2022&lt;/h3&gt;
&lt;p&gt;比如，对于 VS2022，控制台下面，能看到下面三个版本信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2022&lt;/li&gt;
&lt;li&gt;v17.12&lt;/li&gt;
&lt;li&gt;19.42&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;**********************************************************************
** Visual Studio 2022 Developer Command Prompt v17.12.2
** Copyright (c) 2022 Microsoft Corporation
**********************************************************************

C:\Program Files\Microsoft Visual Studio\2022\Community&amp;gt;cl
用于 x86 的 Microsoft (R) C/C++ 优化编译器 19.42.34435 版
版权所有(C) Microsoft Corporation。保留所有权利。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;以上内容，对应的是 Visual Studio 2022 的第13个版本：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visual Studio 2022 version 17.12&lt;/li&gt;
&lt;li&gt;Visual Studio 2022 version 17.11&lt;/li&gt;
&lt;li&gt;Visual Studio 2022 version 17.10&lt;/li&gt;
&lt;li&gt;Visual Studio 2022 version 17.9&lt;/li&gt;
&lt;li&gt;Visual Studio 2022 version 17.8&lt;/li&gt;
&lt;li&gt;Visual Studio 2022 version 17.7&lt;/li&gt;
&lt;li&gt;Visual Studio 2022 version 17.6&lt;/li&gt;
&lt;li&gt;Visual Studio 2022 version 17.5&lt;/li&gt;
&lt;li&gt;Visual Studio 2022 version 17.4&lt;/li&gt;
&lt;li&gt;Visual Studio 2022 version 17.3&lt;/li&gt;
&lt;li&gt;Visual Studio 2022 version 17.2&lt;/li&gt;
&lt;li&gt;Visual Studio 2022 version 17.1&lt;/li&gt;
&lt;li&gt;Visual Studio 2022 version 17.0&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_1"&gt;列个表&lt;/h3&gt;
&lt;p&gt;注意：从VS2017开始，发布策略发生了改变，工具集保持兼容，小版本号开始疯狂升级。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;VS&lt;/th&gt;
&lt;th&gt;VC版本&lt;/th&gt;
&lt;th&gt;CL版本（&lt;code&gt;_MSC_VER&lt;/code&gt;)&lt;/th&gt;
&lt;th&gt;MSVC工具集&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;VS2022&lt;/td&gt;
&lt;td&gt;vc17&lt;/td&gt;
&lt;td&gt;[1930,1949]&lt;/td&gt;
&lt;td&gt;v143&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VS2019&lt;/td&gt;
&lt;td&gt;vc16&lt;/td&gt;
&lt;td&gt;[1920,1929]&lt;/td&gt;
&lt;td&gt;v142&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VS2017&lt;/td&gt;
&lt;td&gt;vc15&lt;/td&gt;
&lt;td&gt;[1910,1919]&lt;/td&gt;
&lt;td&gt;v141&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VS2015&lt;/td&gt;
&lt;td&gt;vc14&lt;/td&gt;
&lt;td&gt;1900&lt;/td&gt;
&lt;td&gt;v140&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VS2013&lt;/td&gt;
&lt;td&gt;vc12&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;td&gt;v120&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VS2012&lt;/td&gt;
&lt;td&gt;vc11&lt;/td&gt;
&lt;td&gt;1700&lt;/td&gt;
&lt;td&gt;v110&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VS2010&lt;/td&gt;
&lt;td&gt;vc10&lt;/td&gt;
&lt;td&gt;1600&lt;/td&gt;
&lt;td&gt;v100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VS2008&lt;/td&gt;
&lt;td&gt;vc9&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;v90&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VS2005&lt;/td&gt;
&lt;td&gt;vc8&lt;/td&gt;
&lt;td&gt;1400&lt;/td&gt;
&lt;td&gt;v80&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VS2003&lt;/td&gt;
&lt;td&gt;vc7.1&lt;/td&gt;
&lt;td&gt;1310&lt;/td&gt;
&lt;td&gt;v71&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VS2002&lt;/td&gt;
&lt;td&gt;vc7&lt;/td&gt;
&lt;td&gt;1300&lt;/td&gt;
&lt;td&gt;v70&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VS6.0&lt;/td&gt;
&lt;td&gt;vc6&lt;/td&gt;
&lt;td&gt;1200&lt;/td&gt;
&lt;td&gt;v60&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VS97&lt;/td&gt;
&lt;td&gt;vc5&lt;/td&gt;
&lt;td&gt;1100&lt;/td&gt;
&lt;td&gt;v50&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;cl编译器，在DOS时代就存在了，远比Visual Studio历史悠久。所以cl版本号和Visual Studio对应关系不是那么直观。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="windows-sdk-platform-toolset"&gt;Windows SDK 与 Platform toolset&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;从 Windows 8 开始，Windows SDK 的版本号与操作系统版本号保持一致。例如，Windows SDK 22000 对应 Windows 11，18362 对应 Windows 10 1903。&lt;/li&gt;
&lt;li&gt;在较早版本中（如 Windows 7 或 Vista），Windows SDK 通常以版本号（如 7.0A 或 6.0A）命名。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;整体还是很乱&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VS2022&lt;ul&gt;
&lt;li&gt;Windows SDK (22000)&lt;/li&gt;
&lt;li&gt;Windows 10 SDK (18362, 19041, 20348) (optional)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;VS2019&lt;ul&gt;
&lt;li&gt;Windows 10 SDK (17763 - 19041)&lt;/li&gt;
&lt;li&gt;Windows 8.1 SDK Spring 2015 (optional)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;VS2017&lt;ul&gt;
&lt;li&gt;Windows 10 SDK (14393, 15063, 16299, or 17763)&lt;/li&gt;
&lt;li&gt;Windows 8.1 SDK Spring 2015 (optional)&lt;/li&gt;
&lt;li&gt;Windows 7.1A SDK for v141_xp Platform Toolset&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;VS2015&lt;ul&gt;
&lt;li&gt;Windows 8.1 SDK Spring 2015&lt;/li&gt;
&lt;li&gt;Windows 10 SDK(optional)&lt;/li&gt;
&lt;li&gt;Windows 7.1A SDK for "v140_xp" Platform Toolset&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;VS 2013&lt;ul&gt;
&lt;li&gt;Windows 8.1 SDK (VS 2013 Update 3 and Update 5 contain newer versions)&lt;/li&gt;
&lt;li&gt;Windows 7.1A SDK for “v120_xp” Platform Toolset&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;VS 2012&lt;ul&gt;
&lt;li&gt;Windows 8.0 SDK&lt;/li&gt;
&lt;li&gt;Windows 7.1A SDK for “v110_xp” Platform Toolset (added in Update 1)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;VS 2010&lt;ul&gt;
&lt;li&gt;Windows SDK 7.0A&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;VS 2008&lt;ul&gt;
&lt;li&gt;Windows SDK 6.0A&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SDK和系统不是一一对应：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows 10 SDK 依赖：Windows 7 SP1、Windows 8、Windows 8.1 或 Windows 10&lt;/li&gt;
&lt;li&gt;Windows 8.1 SDK 依赖： Windows 7 SP1、Windows 8 或 Windows 8.1&lt;/li&gt;
&lt;li&gt;Windows 8.0 SDK 依赖： Windows 7 或 Windows 8.x&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SDK和VS关系也不是一一对应：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows 10 SDK (14393 或更高版本) 支持 Visual Studio 2017。&lt;/li&gt;
&lt;li&gt;Windows 10 SDK (10240、10586 或 14393) 支持 Visual Studio 2015。&lt;/li&gt;
&lt;li&gt;Windows 8.1 SDK 支持 Visual Studio 2010 或更高版本。&lt;/li&gt;
&lt;li&gt;Windows 8.0 SDK 支持 Visual Studio 2010 或更高版本。&lt;/li&gt;
&lt;li&gt;Windows 7.1 SDK 支持 Visual Studio 2005 或更高版本。&lt;/li&gt;
&lt;li&gt;Platform SDK (2003 年 2 月版) 是最后一个支持 Visual Studio 6 的发行版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;二进制兼容性&lt;/h2&gt;
&lt;p&gt;从 Visual Studio 2015 开始，MSVC 的二进制兼容性发生了显著变化，主要体现在以下几个方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;跨工具集版本的二进制兼容性&lt;/strong&gt;：v140、v141、v142 和 v143 工具集生成的二进制文件可以混合使用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;统一的可再发行包&lt;/strong&gt;：一个版本的可再发行包支持所有兼容工具集生成的应用程序。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;减少了重新编译的需求&lt;/strong&gt;：开发者可以直接复用早期版本编译的库，而无需重新构建。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_3"&gt;前期不兼容&lt;/h3&gt;
&lt;p&gt;在 Visual Studio 2013 及更早版本中，MSVC 编译器工具集没有保证主版本之间的二进制兼容性。这意味着，如果你使用不同版本的工具集（如 Visual Studio 2010 和 Visual Studio 2013）编译对象文件、静态库、动态库或可执行文件，它们无法直接链接或一起运行。&lt;/p&gt;
&lt;h3 id="2015"&gt;2015变化&lt;/h3&gt;
&lt;p&gt;在 Visual Studio 2015 及更高版本中，Microsoft 对 MSVC 编译器工具集进行了重大改进，开始支持跨版本的二进制兼容性。这一改动极大地提升了开发者的开发效率和代码复用能力。&lt;/p&gt;
&lt;p&gt;核心改进体现在：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;统一工具集主版本号&lt;/strong&gt;：自 Visual Studio 2015 起，所有工具集版本号都以 14 开头：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visual Studio 2015：工具集版本为 v140&lt;/li&gt;
&lt;li&gt;Visual Studio 2017：工具集版本为 v141&lt;/li&gt;
&lt;li&gt;Visual Studio 2019：工具集版本为 v142&lt;/li&gt;
&lt;li&gt;Visual Studio 2022：工具集版本为 v143&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种统一的版本号体系表明，工具集的 ABI 和运行时库在主版本号范围内保持兼容。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;跨版本运行时库兼容性&lt;/strong&gt;：由 Visual Studio 2015 及更高版本生成的应用程序和运行时库可以在后续版本中直接使用，无需重新编译。例如，如果你有一个用 Visual Studio 2015 构建的第三方库，你可以直接在 Visual Studio 2017、2019 或 2022 中使用它，无需重新构建。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;统一的可再发行包（Redistributable）&lt;/strong&gt;：Visual Studio 2015 及更高版本共享相同的 Microsoft Visual C++ 可再发行程序包（Redistributable）。这意味着你只需安装最新版本的可再发行包，即可运行由 Visual Studio 2015 及更高版本生成的所有应用程序。&lt;/p&gt;
&lt;h3 id="_4"&gt;限制&lt;/h3&gt;
&lt;p&gt;尽管 Visual Studio 2015 起的工具集支持二进制兼容性，但在某些情况下仍然存在限制。以下是需要注意的几点：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;工具集版本的混合使用&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;可以混合使用由不同工具集版本（如 v140 和 v141）生成的二进制文件，但必须使用新的工具集进行链接（最终生成可执行文件或动态库时）。&lt;/p&gt;
&lt;p&gt;例如，如果你有一个由 v140 编译的库和一个由 v141 编译的库，你需要用 v141 工具集链接最终的目标文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可再发行包的要求&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;虽然可再发行包是兼容的，但运行时库的加载依赖于安装的最新版本的可再发行包。如果目标机器没有安装最新的可再发行包，可能会导致应用程序运行失败。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;全程序优化（/GL）和链接时间代码生成（/LTCG）&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;如果你使用 /GL（全程序优化）编译器开关编译静态库或对象文件，或者使用 /LTCG（链接时间代码生成）进行链接，这些文件在不同工具集版本之间不兼容。&lt;/p&gt;
&lt;p&gt;这是因为 /GL 和 /LTCG 特性会将代码优化信息嵌入到二进制文件中，而这些信息在不同版本之间的格式可能并不一致。&lt;/p&gt;
&lt;h2 id="msvc"&gt;定位MSVC&lt;/h2&gt;
&lt;h3 id="_5"&gt;平台工具集&lt;/h3&gt;
&lt;p&gt;使用 MSVC 就是使用 MSVC 的平台工具集（Platform Toolset），它包含以下工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编译器&lt;/li&gt;
&lt;li&gt;链接器&lt;/li&gt;
&lt;li&gt;汇编器（ml.exe 或 ml64.exe）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;平台工具集的相关工具位于如下路径中：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;%VCToolsInstallDir%\bin\Host&amp;lt;HostArch&amp;gt;\&amp;lt;TargetArch&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\bin\Hostx64\x64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;但从 Visual Studio 2017 开始，%VSxxxCOMNTOOLS% 环境变量被移除，工具路径需要通过其他方式查找。&lt;/p&gt;
&lt;h3 id="vcdevcmdbat-vsvars32bat"&gt;查找环境脚本（VcDevCmd.bat 和 vsvars32.bat）&lt;/h3&gt;
&lt;h4 id="visual-studio-2015"&gt;Visual Studio 2015 及之前版本&lt;/h4&gt;
&lt;p&gt;在 Visual Studio 2015 及更早版本中，安装程序会定义环境变量 %VSxxxCOMNTOOLS%，可以使用该变量来定位脚本位置。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;执行 vsvars32.bat 初始化开发环境：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;\&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%VS100COMNTOOLS%&lt;/span&gt;&lt;span class="se"&gt;\v&lt;/span&gt;&lt;span class="s2"&gt;svars32.bat&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;执行 vsdevcmd.bat 初始化开发环境：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C:\&amp;gt; &amp;quot;%VS140COMNTOOLS%\vsdevcmd.bat&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;这些脚本的作用是配置开发环境所需的环境变量（如 PATH、INCLUDE、LIB 等）。&lt;/p&gt;
&lt;h4 id="visual-studio-2017"&gt;Visual Studio 2017 及更高版本&lt;/h4&gt;
&lt;p&gt;从 Visual Studio 2017 开始，%VSxxxCOMNTOOLS% 环境变量被移除，微软引入了新的工具 &lt;strong&gt;vswhere.exe&lt;/strong&gt;，用于查找 Visual Studio 的安装路径。&lt;/p&gt;
&lt;h3 id="vswhereexe"&gt;vswhere.exe 的位置&lt;/h3&gt;
&lt;p&gt;默认情况下，vswhere.exe 位于：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;quot;%programfiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="vswhereexe_1"&gt;使用 vswhere.exe 查找安装路径&lt;/h4&gt;
&lt;p&gt;运行以下命令可以获取当前最新版本的 Visual Studio 的安装路径：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C:\&amp;gt; &amp;quot;%programfiles(x86)%\Microsoft Visual Studio\Installer\vswhere&amp;quot; -latest -property installationPath
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;示例输出：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C:\Program Files (x86)\Microsoft Visual Studio\2019\Community
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="_6"&gt;查找并执行初始化脚本&lt;/h4&gt;
&lt;p&gt;可以通过以下命令调用 VsDevCmd.bat 初始化开发环境：&lt;/p&gt;
&lt;p&gt;for /f "usebackq delims=#" %a in (&lt;code&gt;"%programfiles(x86)%\Microsoft Visual Studio\Installer\vswhere" -latest -property installationPath&lt;/code&gt;) do "%a\Common7\Tools\VsDevCmd.bat" -arch=amd64&lt;/p&gt;
&lt;h3 id="vsdevcmdbat"&gt;VsDevCmd.bat 的使用&lt;/h3&gt;
&lt;p&gt;VsDevCmd.bat 是从 Visual Studio 2017 开始引入的新脚本，替代了 vsvars32.bat，用于配置开发环境。&lt;/p&gt;
&lt;p&gt;VsDevCmd.bat 支持 &lt;code&gt;-arch=&amp;lt;架构&amp;gt;&lt;/code&gt; 设置目标架构，支持的选项包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;x86：32 位目标架构。&lt;/li&gt;
&lt;li&gt;amd64：64 位目标架构。&lt;/li&gt;
&lt;li&gt;其他选项如 arm 和 arm64（如果安装了相关工具集）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;VsDevCmd.bat -arch=amd64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="qt-qtenv2bat"&gt;Qt 脚本 qtenv2.bat&lt;/h3&gt;
&lt;p&gt;如果使用 Qt，可以通过 Qt 提供的脚本 qtenv2.bat 配置 Qt 环境变量。该脚本通常位于 Qt 的安装目录下，例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;D:\Qt\Online\6.5.0\msvc2019_64\bin\qtenv2.bat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：在运行 qtenv2.bat 之前，必须先运行 VsDevCmd.bat，以确保 MSVC 的环境变量已经正确配置。&lt;/p&gt;
&lt;h3 id="_7"&gt;示例小结&lt;/h3&gt;
&lt;p&gt;命令行下流程&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 vswhere.exe 查找 Visual Studio 的安装路径：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;quot;%programfiles(x86)%\Microsoft Visual Studio\Installer\vswhere&amp;quot; -latest -property installationPath
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;调用 VsDevCmd.bat 初始化开发环境：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;usebackq delims=#&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;`&lt;span class="s2"&gt;&amp;quot;%programfiles(x86)%\Microsoft Visual Studio\Installer\vswhere&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;latest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;property&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;installationPath&lt;/span&gt;`&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%a\Common7\Tools\VsDevCmd.bat&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;arch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;amd64&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;（可选）运行 Qt 的 qtenv2.bat 初始化 Qt 环境：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;D:\Qt\Online\6.5.0\msvc2019_64\bin\qtenv2.bat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_8"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Visual_Studio&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Microsoft_Visual_C%2B%2B&lt;/li&gt;
&lt;li&gt;https://marcofoco.com/blog/2015/02/25/microsoft-visual-c-version-map/&lt;/li&gt;
&lt;li&gt;https://walbourn.github.io/a-brief-history-of-windows-sdks/&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/zh-cn/cpp/porting/binary-compat-2015-2017?view=msvc-170&amp;amp;viewFallbackFrom=vs-2019"&gt;C++ 二进制兼容性 2015-2022 | Microsoft Learn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cmake.org/cmake/help/latest/variable/MSVC_TOOLSET_VERSION.html"&gt;MSVC_TOOLSET_VERSION — CMake 3.27.5 Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/cpp/preprocessor/predefined-macros?view=msvc-160"&gt;Predefined macros | Microsoft Learn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://renenyffenegger.ch/notes/Windows/development/Visual-Studio/environment-variables/index"&gt;Visual Studio: environment variables (renenyffenegger.ch)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://renenyffenegger.ch/notes/Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/Common7/Tools/VsDevCmd_bat"&gt;VsDevCmd.bat (renenyffenegger.ch)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="C++"></category></entry><entry><title>国际音标、DJ音标、KK音标、IPA都是什么鬼？</title><link href="https://blog.debao.me/2024/12/what-the-heck-are-ipa-dj-phonetics-kk-phonetics-and-ipa/" rel="alternate"></link><published>2024-12-20T12:28:00+08:00</published><updated>2024-12-20T12:28:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-20:/2024/12/what-the-heck-are-ipa-dj-phonetics-kk-phonetics-and-ipa/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;原文几年前发在&lt;a href="https://zhuanlan.zhihu.com/p/112652598"&gt;知乎&lt;/a&gt;上，重新整理一下...&lt;/p&gt;
&lt;p&gt;背景：上学时没学会音标，现在尽管好多了，但还是查查资料，大致捋一捋，记录一下，以 …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;原文几年前发在&lt;a href="https://zhuanlan.zhihu.com/p/112652598"&gt;知乎&lt;/a&gt;上，重新整理一下...&lt;/p&gt;
&lt;p&gt;背景：上学时没学会音标，现在尽管好多了，但还是查查资料，大致捋一捋，记录一下，以免给孩子科普时再忘了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#ipa"&gt;IPA？国际音标？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;英语国际音标？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#djepd"&gt;DJ音标，EPD音标？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#dj-gimson"&gt;DJ音标（新）？ Gimson 音标？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dj-44"&gt;DJ音标中有多少个音标符号？ 44个？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_2"&gt;元音&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;辅音&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#i-i"&gt;混乱的 /i/ /i:/ /ɪ/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ipa63ipa88"&gt;IPA63？IPA88？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#epd"&gt;EPD版本历史&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#epdipa"&gt;EPD作者与IPA渊源&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#kk"&gt;KK音标&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#kkdj"&gt;KK音标与DJ音标差异&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;没有结论的小结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="ipa"&gt;IPA？国际音标？&lt;/h2&gt;
&lt;p&gt;IPA（International Phonetic Alphabet），这个应该翻译成国际音标吧？ 另外IPA也是其组织国际语音协会(International Phonetic Association)的缩写。截止2007年，国际音标共有107个单独字母，以及56个变音符号和超音段成分。&lt;/p&gt;
&lt;p&gt;IPA 是针对所有语言的，而不仅仅是英语。&lt;/p&gt;
&lt;h2 id="_1"&gt;英语国际音标？&lt;/h2&gt;
&lt;p&gt;和个人想象的完全不一样，英语中似乎压根就不存在一个公认的国际音标，随便翻了几个名头比较大的在线词典：Longman、Cambridge、Merriam-Webster、Oxford。发现注音符号&lt;/p&gt;
&lt;p&gt;不光写法差异很大，连符号个数也完全不同：45个，46,个，50个等等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ldoceonline.com/howtouse.html"&gt;https://www.ldoceonline.com/howtouse.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dictionary.cambridge.org/help/phonetics.html"&gt;https://dictionary.cambridge.org/help/phonetics.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.merriam-webster.com/help/pronunciation-key"&gt;https://www.merriam-webster.com/help/pronunciation-key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.oxfordlearnersdictionaries.com/about/english/pronunciation_english"&gt;https://www.oxfordlearnersdictionaries.com/about/english/pronunciation_english&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;每个词典都是各自为政。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其实，不光在线词典，每本书都可以有自己的注音体系，只要作者原意。&lt;/p&gt;
&lt;p&gt;而一旦这本书的认可度高了，其使用的注音体系也就关注度高了。似乎也就是 仅此而已&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《English Pronouncing Dictionary》使用的注音字符，取这本书作者的首字符缩写： &lt;strong&gt;DJ音标&lt;/strong&gt; 。或取书名缩写： &lt;strong&gt;EPD音标&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;《A Pronouncing Dictionary of American English》使用的注音字符，取两个作者中各一个字符： &lt;strong&gt;KK音标&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;《American Heritage Dictionary of the English Language》使用的注音字符，取书名缩写： &lt;strong&gt;AHD音标&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;《The Oxford Dictionary of Pronunciation for Current English》使用的注音符号，取作者名字： &lt;strong&gt;Upton音标&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="ipa" src="https://blog.debao.me/images/esl/ipa_epd_kk.png"&gt;&lt;/p&gt;
&lt;h2 id="djepd"&gt;DJ音标，EPD音标？&lt;/h2&gt;
&lt;p&gt;1917年 Daniel Jones 出版了一本名为《英语发音词典》（《English Pronouncing Dictionary》以下简称 EPD）的书。&lt;/p&gt;
&lt;p&gt;这本书中使用的注音符号，被称为 DJ音标、Jones音标或EPD音标。&lt;/p&gt;
&lt;p&gt;EPD这本书从1917年的第一版，到1977年第十四版，再到2011年的第十八版，其所用的注音符号并不是一成不变的。这也就有了老版、新版、更新版...&lt;/p&gt;
&lt;p&gt;这本书中使用的注音符号，是国内教材中普遍可见的音标，也就是中文网络上所谓的“（英文）国际音标”。&lt;/p&gt;
&lt;h3 id="dj-gimson"&gt;DJ音标（新）？ Gimson 音标？&lt;/h3&gt;
&lt;p&gt;严格说来，国内现在用的DJ音标是 Daniel Jones的学生兼同事Alfred C. Gimson 在 EPD第14版中引入的注音符号。这时 Daniel Jones已经去世10年了，应该叫 Gimson 音标更合适。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;EPD&lt;/th&gt;
&lt;th&gt;别名&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;EPD(1-13版)&lt;/td&gt;
&lt;td&gt;Jones&lt;/td&gt;
&lt;td&gt;i&lt;/td&gt;
&lt;td&gt;ɔ&lt;/td&gt;
&lt;td&gt;u&lt;/td&gt;
&lt;td&gt;ə:&lt;/td&gt;
&lt;td&gt;ei&lt;/td&gt;
&lt;td&gt;ai&lt;/td&gt;
&lt;td&gt;ɔi&lt;/td&gt;
&lt;td&gt;au&lt;/td&gt;
&lt;td&gt;əu&lt;/td&gt;
&lt;td&gt;iə&lt;/td&gt;
&lt;td&gt;ɛə&lt;/td&gt;
&lt;td&gt;uə&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;EPD(14-)&lt;/td&gt;
&lt;td&gt;Gimson&lt;/td&gt;
&lt;td&gt;ɪ&lt;/td&gt;
&lt;td&gt;ɒ&lt;/td&gt;
&lt;td&gt;ʊ&lt;/td&gt;
&lt;td&gt;ɜ:&lt;/td&gt;
&lt;td&gt;eɪ&lt;/td&gt;
&lt;td&gt;aɪ&lt;/td&gt;
&lt;td&gt;ɔɪ&lt;/td&gt;
&lt;td&gt;aʊ&lt;/td&gt;
&lt;td&gt;əʊ&lt;/td&gt;
&lt;td&gt;ɪə&lt;/td&gt;
&lt;td&gt;eə&lt;/td&gt;
&lt;td&gt;ʊə&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;EPD(15起) 在14版基础上增加（重新引入）了/i/ /u/（注意和13版及之前版本发音不同），引入带尾巴的 /ɝ/ /ɚ/ （以支持GA）等。&lt;/p&gt;
&lt;h3 id="dj-44"&gt;DJ音标中有多少个音标符号？ 44个？&lt;/h3&gt;
&lt;p&gt;翻开EPD第18版，统计一下，数一数。数的结果是：元音20、22、27、33个，辅音24、25个。都取保守数字的话，那么 20+24 共44个。&lt;/p&gt;
&lt;h4 id="_2"&gt;元音&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;元音部分有些乱，EPD书中是英音（ BBC 发音）部分和美音（ GA） 部分分开介绍的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们将BBC和GA对比整理，相同的符号放置到同一行中，BBC或GA中不使用的音标，对应部分留空，以便统计数目。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;元音粗算有33个，&lt;/li&gt;
&lt;li&gt;如果去掉用于标注GA的6个，还有27个，&lt;/li&gt;
&lt;li&gt;如果去掉5个三元音，还有22个，&lt;/li&gt;
&lt;li&gt;如果再去掉i和u，就是经典的20个。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="vowels 1" src="https://blog.debao.me/images/esl/epd_vowels_1.png"&gt;
&lt;img alt="vowels 2" src="https://blog.debao.me/images/esl/epd_vowels_2.png"&gt;&lt;/p&gt;
&lt;h4 id="_3"&gt;辅音&lt;/h4&gt;
&lt;p&gt;辅音比较简单，基本上各大词典或各个音标体系，对此异议不大。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一般来说，辅音有24个。&lt;/li&gt;
&lt;li&gt;如果加上 /x/ 的话，辅音有25个。&lt;/li&gt;
&lt;li&gt;如果 /ʔ/ 也算的话，辅音有26个。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="consonant" src="https://blog.debao.me/images/esl/epd_consonant.png"&gt;&lt;/p&gt;
&lt;h3 id="i-i"&gt;混乱的 /i/ /i:/ /ɪ/&lt;/h3&gt;
&lt;p&gt;&lt;img alt="i" src="https://blog.debao.me/images/esl/i_i_i_0.png"&gt;&lt;/p&gt;
&lt;p&gt;描述起来太绕口，先通过具体例子放两张表&lt;/p&gt;
&lt;p&gt;EPD18版中同时存在三个/i/ /i:/ /ɪ/：&lt;/p&gt;
&lt;p&gt;&lt;img alt="i" src="https://blog.debao.me/images/esl/i_i_i.png"&gt;&lt;/p&gt;
&lt;p&gt;同时存在三个/u/ /u:/ /ʊ/：&lt;/p&gt;
&lt;p&gt;&lt;img alt="u" src="https://blog.debao.me/images/esl/u_u_u.png"&gt;&lt;/p&gt;
&lt;h3 id="ipa63ipa88"&gt;IPA63？IPA88？&lt;/h3&gt;
&lt;p&gt;没查到这两个名词是怎么被创造出来的，只能硬着头皮去牵强附会了。&lt;/p&gt;
&lt;p&gt;既然 DJ音标在国内被称为“（英文）国际”，那么再给他取一个现代的IPA的名字，也算说的过去吧？那么再根据 EPD 这本书出版年份不同，给IPA加个两位数年份，也不过分吧？？&lt;/p&gt;
&lt;p&gt;问题是（中文资料怎么这么乱，是错误的信息被放大了吗？）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为什么就选中了1963年的第12版 和 1988年的第14版的修订版？&lt;/li&gt;
&lt;li&gt;为什么网上说 Daniel Jones发布的最后一版是1963年的EPD第12版？&lt;/li&gt;
&lt;li&gt;Gimson 在1985年已经去世了，为什么说他在1988年发布了EPD第14版？&lt;/li&gt;
&lt;li&gt;...?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;翻墙看一看，捋一捋，弄个表格看看，不想再纠结...&lt;/p&gt;
&lt;h2 id="epd"&gt;EPD版本历史&lt;/h2&gt;
&lt;p&gt;&lt;img alt="epd history" src="https://blog.debao.me/images/esl/epd_history.png"&gt;&lt;/p&gt;
&lt;p&gt;EPD第15版沿用第14版的符号，只是又增加了一些新的符号，以便于标注美音(GA)。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：国内有人将 EPD第15版使用的音标 叫做 IPA第15版（感觉还是有点误认子弟）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="epdipa"&gt;EPD作者与IPA渊源&lt;/h3&gt;
&lt;p&gt;Daniel Jones从1906年开始就是IPA组织（International Phonetic Association）的活跃成员，而且他和他的学生Alfred C. Gimson都还做过该组织的主席。（而且从时间上看，两位在IPA都是干到去世）。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;时期&lt;/th&gt;
&lt;th&gt;IPA 主席 (President)&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2011-2015&lt;/td&gt;
&lt;td&gt;John Esling&lt;/td&gt;
&lt;td&gt;EPD(18) GA 作者&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1984-1985&lt;/td&gt;
&lt;td&gt;A. C. Gimson&lt;/td&gt;
&lt;td&gt;EPD(14) 作者&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1950-1967&lt;/td&gt;
&lt;td&gt;Daniel Jones&lt;/td&gt;
&lt;td&gt;EPD(1-13) 作者&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;IPA中的符号也不是一成不变的，查了一下，变更非常的乱。下面列出ɪ、ʊ变迁随IPA版本的变迁：&lt;/p&gt;
&lt;p&gt;&lt;img alt="ipa" src="https://blog.debao.me/images/esl/ipa_history.png"&gt;&lt;/p&gt;
&lt;p&gt;从年份上看，它和国内偶见提及的IPA63、IPA88也没什么直接关联。&lt;/p&gt;
&lt;h2 id="kk"&gt;KK音标&lt;/h2&gt;
&lt;p&gt;1944年，Kenyon, John S. 与 Thomas A. Knott. 编写了《美式英语发音词典》( 《A Pronouncing Dictionary of American English》)一书。该书中使用的注音方式被称为 KK音标（因为两位作者名字中都含有K）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="kk" src="https://blog.debao.me/images/esl/kk.png"&gt;&lt;/p&gt;
&lt;p&gt;《美式英语发音词典》音标表（1949年版）&lt;/p&gt;
&lt;p&gt;由于中国台湾地区的英文教材中使用KK音标，所以网上的中文资料相对也比较多（中国台湾籍 赖世雄老师 的书中普遍使用KK音标）。&lt;/p&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中文的很多资料中，将KK音标 称为美语音标。遇到这种过于随意的说法，大家解就好。&lt;/li&gt;
&lt;li&gt;KK音标已经比较过时。网上各个词典中标注美音时很少用（几乎不用）KK音标。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="kkdj"&gt;KK音标与DJ音标差异&lt;/h2&gt;
&lt;p&gt;要判断音标是KK还是DJ，从符号上，可以关注：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用":"表示长元音（紧元音）的不是KK音标。KK音标不使用符号":"，DJ音标使用。&lt;/li&gt;
&lt;li&gt;使用/ɛ/、/ᴜ/的不是DJ音标。KK音标使用这两个符号，而DJ音标使用/e/、/ʊ/。&lt;/li&gt;
&lt;li&gt;使用g (opentail G)的不是KK音标。KK音标使用looptail G。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="g" src="https://blog.debao.me/images/esl/looltail_opentail_g.png"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DJ与KK 辅音 g 区别（图片来自&lt;a href="https://en.wikipedia.org/wiki/G"&gt;wikipeida&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以上3点是明确符号差异，至于看到具体音标时，从符号组合上，判断方式会更多。比如单词boat，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DJ音标（英音）：/bəʊt/&lt;/li&gt;
&lt;li&gt;DJ音标（美音）： /boʊt/&lt;/li&gt;
&lt;li&gt;KK音标（美音）： /bot/&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_4"&gt;没有结论的小结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;国内学校教材用的音标是 和 EPD书中所用音标(DJ音标)一致。国内称其为“（英文）国际音标”&lt;/li&gt;
&lt;li&gt;“（英文）国际音标”分新老版本，分别对应EPD 14版之后和之前所使用的注音符号。&lt;/li&gt;
&lt;li&gt;台湾地区教材使用的音标 和 《美式英语发音词典》所用音标（KK音标）一致。&lt;/li&gt;
&lt;li&gt;KK音标用于标注美音（GA），DJ音标（EPD15版）可以标注英音（RP）和美音（GA）。&lt;/li&gt;
&lt;li&gt;国内教材标注的基本都是英音（RP），但音频资料往往是美音（GA）&lt;/li&gt;
&lt;/ul&gt;</content><category term="ESL"></category></entry><entry><title>Mesh网格生成小记</title><link href="https://blog.debao.me/2024/12/notes-on-mesh-generation/" rel="alternate"></link><published>2024-12-19T18:23:00+08:00</published><updated>2024-12-19T18:23:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-19:/2024/12/notes-on-mesh-generation/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;网格（Mesh）用于计算机屏幕渲染和物理模拟，如有限元分析（Finite Element Analysis, FEA）和计算流体力学（Computational Fluid Dynamics, CFD）。通过将复杂形状（如桥梁）分解 …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;网格（Mesh）用于计算机屏幕渲染和物理模拟，如有限元分析（Finite Element Analysis, FEA）和计算流体力学（Computational Fluid Dynamics, CFD）。通过将复杂形状（如桥梁）分解为简单单元（如三角形），我们可以对每个单元进行计算并模拟其相互作用，从而实现模拟和可视化。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;术语&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_2"&gt;网格生成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;网格单元命名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;常见单元&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;网格类型&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_6"&gt;按几何结构分类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_7"&gt;按网格结构分类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_8"&gt;按网格类型分类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_9"&gt;按网格的适应性分类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_10"&gt;按网格的质量分类&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_11"&gt;生成方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_12"&gt;开源软件&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#gmsh"&gt;gmsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tetgen"&gt;tetgen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#meshfix"&gt;MeshFix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#gmsh_1"&gt;gmsh例子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_13"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;网格生成（Mesh Generation）是指将连续的几何空间划分为离散的几何单元和拓扑单元的过程。&lt;/p&gt;
&lt;p&gt;这一过程通常通过计算机算法完成，必要时可结合人工干预。网格生成的目标是创建一个既能准确反映输入域几何特征，又具有高质量（形状良好）单元的网格。同时，需要避免生成过多的单元，以免增加后续计算的难度。在对后续计算至关重要的区域，网格应更为精细（单元尺寸较小），以提高计算精度。&lt;/p&gt;
&lt;h2 id="_1"&gt;术语&lt;/h2&gt;
&lt;h3 id="_2"&gt;网格生成&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Mesh generation / Meshing&lt;/strong&gt;（网格生成/网格划分）：指生成网格的过程。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Grid generation / Gridding&lt;/strong&gt;（网格生成/网格布置）：范围更广？？包含网格优化，即通过调整网格以提高数值计算的速度或精度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tessellation&lt;/strong&gt;（镶嵌/铺砖）：在计算机图形学和数学中，有时用作网格的同义词。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_3"&gt;网格单元命名&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Nodes / Points&lt;/strong&gt;（节点）：表示0维单元，在计算几何中通常称为Vertices（顶点）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Edges&lt;/strong&gt;（边）：表示1维单元。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Faces / Cells / Entities&lt;/strong&gt;（面/单元/实体）：2维或更高维的单元，具体名称视应用而定。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Elements&lt;/strong&gt;（单元）：在有限元中，表示最高维的网格单元。
例如，3D网格中最高维单元是Elements，其2D子单元称为Faces。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;常见单元&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Triangles (Tris)&lt;/strong&gt;（三角形）：二维三角形单元。简单，灵活&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Quadrilaterals (Quads)&lt;/strong&gt;（四边形）：二维四边形区域。对于规则几何区域比较高校，精度优于三角形网格&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tetrahedra (Tets)&lt;/strong&gt;（四面体）：三维四面体单元。易于生成&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hexahedra (Hexes)&lt;/strong&gt;（六面体/拓扑立方体）：六面体单元。较难生成，具有良好的数值性能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_5"&gt;网格类型&lt;/h2&gt;
&lt;h3 id="_6"&gt;按几何结构分类&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;二维网格（2D Mesh）&lt;/strong&gt;：主要用于二维问题，常见网格类型有三角形（Triangles）和四边形（Quadrilaterals）。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;三维网格（3D Mesh）&lt;/strong&gt;：主要用于三维问题，常见网格类型有四面体（Tetrahedra）、六面体（Hexahedra）、棱柱体（Prisms）和金字塔（Pyramids）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_7"&gt;按网格结构分类&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;结构化网格（Structured Mesh）&lt;/strong&gt;：网格单元按规则排列，适用于规则几何体，计算效率高。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;非结构化网格（Unstructured Mesh）&lt;/strong&gt;：网格单元没有固定连接规则，适用于复杂几何形状，灵活性高。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;混合网格（Hybrid Mesh）&lt;/strong&gt;：结合结构化和非结构化网格的优点，适用于规则和复杂区域。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="mesh" src="https://blog.debao.me/images/python/structured_unstructured_mesh.png"&gt;&lt;/p&gt;
&lt;p&gt;图片取自：Metal Forming Formability, Simulation, and Tool Design (Chris V. Nielsen, Paulo A.F. Martins)&lt;/p&gt;
&lt;h3 id="_8"&gt;按网格类型分类&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;点集网格（Point Set Mesh）&lt;/strong&gt;：由离散点组成，通常不包含连接信息，适用于点云数据处理。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;面片网格（Surface Mesh）&lt;/strong&gt;：网格单元仅限物体表面，常见类型有三角形面片网格和四边形面片网格。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;体积网格（Volume Mesh）&lt;/strong&gt;：由三维单元组成，适用于三维问题，常见类型有四面体网格和六面体网格。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_9"&gt;按网格的适应性分类&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;均匀网格（Uniform Mesh）&lt;/strong&gt;：网格单元大小一致，适用于简单几何问题。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自适应网格（Adaptive Mesh）&lt;/strong&gt;：网格密度根据计算需求动态调整，适用于精细模拟高梯度区域。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_10"&gt;按网格的质量分类&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;高质量网格（High-Quality Mesh）&lt;/strong&gt;：网格单元形状规整，适用于高精度仿真。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;低质量网格（Low-Quality Mesh）&lt;/strong&gt;：网格单元可能畸形，适用于快速仿真或低精度要求。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_11"&gt;生成方法&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;chatgpt结果，先列上&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;网格生成算法&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;应用场景&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;特点&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Delaunay 三角剖分&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;适用于二维空间的不规则区域&lt;/td&gt;
&lt;td&gt;优化三角形形状，避免长而细的单元，生成高质量网格。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Voronoi 图&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;点集划分，常与Delaunay三角剖分结合使用&lt;/td&gt;
&lt;td&gt;将空间分割为Voronoi区域，用于定义网格单元。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;前沿推进法（Advancing Front）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;生成不规则区域网格&lt;/td&gt;
&lt;td&gt;从边界开始逐步生成单元，覆盖整个域。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;八叉树/四叉树（Octree / Quadtree）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;大规模计算、自适应网格生成&lt;/td&gt;
&lt;td&gt;递归划分空间，适应复杂几何形状和动态变化。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;拉普拉斯平滑（Laplacian Smoothing）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;优化现有网格，改善网格质量&lt;/td&gt;
&lt;td&gt;平滑节点位置，减少畸形单元，优化网格形状。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;网格重构算法（Mesh Refinement）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;自适应网格、网格细化或粗化&lt;/td&gt;
&lt;td&gt;动态调整网格精度，特别适用于自适应网格。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;多边形剖分（Polygonal Mesh Generation）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;复杂几何形状的网格生成&lt;/td&gt;
&lt;td&gt;生成多边形单元，适应更复杂的形状。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;结构化网格生成（Structured Mesh Generation）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;规则几何区域（如矩形、正方形）&lt;/td&gt;
&lt;td&gt;生成规则网格单元，计算效率高，适用于简单几何问题。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;自适应网格生成（Adaptive Mesh Refinement, AMR）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;需要精细模拟高梯度区域或重要区域&lt;/td&gt;
&lt;td&gt;根据精度要求动态调整网格密度，适合复杂现象模拟。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;混合网格生成（Hybrid Mesh Generation）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;同时处理规则和复杂区域的应用&lt;/td&gt;
&lt;td&gt;结合结构化和非结构化网格的优点，适应多种几何形状。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;六面体网格生成（Hexahedral Mesh Generation）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;规则三维几何区域（如矩形、立方体）&lt;/td&gt;
&lt;td&gt;生成六面体单元，适用于流体力学或结构分析中的高精度计算。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;混合元素网格生成（Mixed-Element Mesh Generation）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;复杂几何或多物理场仿真&lt;/td&gt;
&lt;td&gt;结合多种网格元素（四面体、六面体、棱柱等），适应复杂场景。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;网格划分法（Grid Generation by Partitioning）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;将复杂几何域分割为多个规则子域&lt;/td&gt;
&lt;td&gt;常用于流体动力学、热传导等领域，稳定且高效。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_12"&gt;开源软件&lt;/h2&gt;
&lt;h3 id="gmsh"&gt;gmsh&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://gmsh.info/&lt;/li&gt;
&lt;li&gt;https://pypi.org/project/gmsh/&lt;/li&gt;
&lt;li&gt;https://github.com/pyvista/scikit-gmsh&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意: 采用GPL协议&lt;/p&gt;
&lt;h3 id="tetgen"&gt;tetgen&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://wias-berlin.de/software/index.jsp?id=TetGen&lt;/li&gt;
&lt;li&gt;https://github.com/ufz/tetgen&lt;/li&gt;
&lt;li&gt;https://github.com/pyvista/tetgen&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：采用 AGPL 协议！！&lt;/p&gt;
&lt;h3 id="meshfix"&gt;MeshFix&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/MarcoAttene/MeshFix-V2.1&lt;/li&gt;
&lt;li&gt;https://github.com/pyvista/pymeshfix&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：采用 GPL 协议&lt;/p&gt;
&lt;h2 id="gmsh_1"&gt;gmsh例子&lt;/h2&gt;
&lt;p&gt;&lt;img alt="gmsh" src="https://blog.debao.me/images/python/gmsh_1.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gmsh&lt;/span&gt;

&lt;span class="c1"&gt;# 初始化 GMSH&lt;/span&gt;
&lt;span class="n"&gt;gmsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# 创建一个 2D 矩形&lt;/span&gt;
&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;10.0&lt;/span&gt;
&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;5.0&lt;/span&gt;

&lt;span class="c1"&gt;# 创建四个顶点&lt;/span&gt;
&lt;span class="n"&gt;p1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gmsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addPoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;p2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gmsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addPoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;p3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gmsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addPoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;p4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gmsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addPoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建四条边&lt;/span&gt;
&lt;span class="n"&gt;l1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gmsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;l2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gmsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;l3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gmsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;l4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gmsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建一个封闭的曲线环&lt;/span&gt;
&lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gmsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addCurveLoop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# 创建一个面&lt;/span&gt;
&lt;span class="n"&gt;surface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gmsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addPlaneSurface&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# 生成网格&lt;/span&gt;
&lt;span class="n"&gt;gmsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;synchronize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;gmsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 保存网格为 .msh 文件&lt;/span&gt;
&lt;span class="n"&gt;gmsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rectangle.msh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 结束 GMSH&lt;/span&gt;
&lt;span class="n"&gt;gmsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;finalize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mesh generation finished!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;可以用pyvista显示（可能不太对，太复杂了）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;meshio&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyvista&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pv&lt;/span&gt;

&lt;span class="c1"&gt;# 使用 meshio 读取 GMSH 生成的网格文件&lt;/span&gt;
&lt;span class="n"&gt;mesh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;meshio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rectangle.msh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 提取点（vertices）和三角形单元（triangles）&lt;/span&gt;
&lt;span class="n"&gt;points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;points&lt;/span&gt;
&lt;span class="n"&gt;cells&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cells_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;triangle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;cells_flat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cells&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c1"&gt;# 展平为一维数组&lt;/span&gt;
&lt;span class="n"&gt;n_cells&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cells_flat&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="c1"&gt;# 计算三角形单元的数量&lt;/span&gt;

&lt;span class="c1"&gt;# 构建单元数组：每个元素包含一个整数 3（表示每个单元为三角形），后跟三个顶点索引&lt;/span&gt;
&lt;span class="n"&gt;cell_array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cells_flat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cells_flat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cells_flat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_cells&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;span class="c1"&gt;# 将点和单元传递给 PyVista 的 PolyData 对象&lt;/span&gt;
&lt;span class="n"&gt;grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PolyData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cell_array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 可视化网格&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plotter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lightblue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_13"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Mesh_generation&lt;/li&gt;
&lt;li&gt;https://www.robertschneiders.de/meshgeneration/meshgeneration.html&lt;/li&gt;
&lt;li&gt;https://github.com/nschloe/meshio&lt;/li&gt;
&lt;/ul&gt;</content><category term="CAx"></category></entry><entry><title>PyVista使用小记（二）</title><link href="https://blog.debao.me/2024/12/notes-on-pyvista-usage-part-2/" rel="alternate"></link><published>2024-12-18T00:48:00+08:00</published><updated>2024-12-18T00:48:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-18:/2024/12/notes-on-pyvista-usage-part-2/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/12/notes-on-pyvista-usage-part-1/"&gt;PyVista使用小记（一）&lt;/a&gt;，继续了解PyVista 的基本用法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#pyvista-filter"&gt;PyVista 支持的 Filter&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#filters"&gt;基础几何处理 Filters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#filters_1"&gt;模型生成 Filters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#filters_2"&gt;布尔操作 Filters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#filters_3"&gt;数据处理 Filters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#filters_4"&gt;变换 Filters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#filters_5"&gt;特殊用途 Filters …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/12/notes-on-pyvista-usage-part-1/"&gt;PyVista使用小记（一）&lt;/a&gt;，继续了解PyVista 的基本用法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#pyvista-filter"&gt;PyVista 支持的 Filter&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#filters"&gt;基础几何处理 Filters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#filters_1"&gt;模型生成 Filters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#filters_2"&gt;布尔操作 Filters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#filters_3"&gt;数据处理 Filters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#filters_4"&gt;变换 Filters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#filters_5"&gt;特殊用途 Filters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;简单例子&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#extrude"&gt;Extrude（挤压、拉伸）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#extrude-rotate"&gt;Extrude Rotate（拉伸旋转）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#extrude-trim"&gt;Extrude Trim（拉伸裁剪）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;交、差、并&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#8"&gt;生成8瓣空心圆柱体（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#8_1"&gt;生成8瓣空心圆柱体（二）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="pyvista-filter"&gt;PyVista 支持的 Filter&lt;/h2&gt;
&lt;p&gt;不同的数据集支持不同的Filter，考虑如下数据集：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dataset：所有数据类型的基类&lt;/li&gt;
&lt;li&gt;PolyData：适合表示表面网格&lt;/li&gt;
&lt;li&gt;UnstructuredGrid：适合表示体网格&lt;/li&gt;
&lt;li&gt;ImageData：适合表示规则网格数据&lt;/li&gt;
&lt;li&gt;Composite：用于组织多个数据集&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单列一下&lt;/p&gt;
&lt;h3 id="filters"&gt;基础几何处理 Filters&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Filter名称&lt;/th&gt;
&lt;th&gt;Dataset&lt;/th&gt;
&lt;th&gt;PolyData&lt;/th&gt;
&lt;th&gt;UnstructuredGrid&lt;/th&gt;
&lt;th&gt;ImageData&lt;/th&gt;
&lt;th&gt;Composite&lt;/th&gt;
&lt;th&gt;用途描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;clip&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;使用平面或函数切割模型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;slice&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;创建截面，可支持多平面切割&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;threshold&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;基于标量数值范围筛选数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;extract_edges&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;提取模型边缘线框&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;decimate&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;简化网格，减少面数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;smooth&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;平滑网格表面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;compute_normals&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;计算表面法向量&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="filters_1"&gt;模型生成 Filters&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Filter名称&lt;/th&gt;
&lt;th&gt;Dataset&lt;/th&gt;
&lt;th&gt;PolyData&lt;/th&gt;
&lt;th&gt;UnstructuredGrid&lt;/th&gt;
&lt;th&gt;ImageData&lt;/th&gt;
&lt;th&gt;Composite&lt;/th&gt;
&lt;th&gt;用途描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;extrude&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;将 2D 形状沿方向向量拉伸成 3D&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ribbon&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;将线段转换为带状几何体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;tube&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;将线段转换为管状几何体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;delaunay_2d&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;从点云生成 2D 三角网格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;delaunay_3d&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;从点云生成 3D 四面体网格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;reconstruct_surface&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;从点云重建 3D 表面&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="filters_2"&gt;布尔操作 Filters&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Filter名称&lt;/th&gt;
&lt;th&gt;Dataset&lt;/th&gt;
&lt;th&gt;PolyData&lt;/th&gt;
&lt;th&gt;UnstructuredGrid&lt;/th&gt;
&lt;th&gt;ImageData&lt;/th&gt;
&lt;th&gt;Composite&lt;/th&gt;
&lt;th&gt;用途描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;boolean_difference&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;计算两几何体的差集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;boolean_intersection&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;计算两几何体的交集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;boolean_union&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;计算两几何体的并集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;merge&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;合并多个几何体，不移除重叠部分&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="filters_3"&gt;数据处理 Filters&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Filter名称&lt;/th&gt;
&lt;th&gt;Dataset&lt;/th&gt;
&lt;th&gt;PolyData&lt;/th&gt;
&lt;th&gt;UnstructuredGrid&lt;/th&gt;
&lt;th&gt;ImageData&lt;/th&gt;
&lt;th&gt;Composite&lt;/th&gt;
&lt;th&gt;用途描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;cell_centers&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;计算网格单元的中心点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;compute_gradient&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;计算标量场的梯度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;contour&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;生成等值线/等值面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;sample&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;在指定点位置采样数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;probe&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;使用一个数据集探测另一个数据集&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="filters_4"&gt;变换 Filters&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Filter名称&lt;/th&gt;
&lt;th&gt;Dataset&lt;/th&gt;
&lt;th&gt;PolyData&lt;/th&gt;
&lt;th&gt;UnstructuredGrid&lt;/th&gt;
&lt;th&gt;ImageData&lt;/th&gt;
&lt;th&gt;Composite&lt;/th&gt;
&lt;th&gt;用途描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;translate&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;对几何体进行平移变换&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;rotate&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;对几何体进行旋转变换&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;scale&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;对几何体进行缩放变换&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;transform&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;使用 4x4 矩阵进行线性变换&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="filters_5"&gt;特殊用途 Filters&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Filter名称&lt;/th&gt;
&lt;th&gt;Dataset&lt;/th&gt;
&lt;th&gt;PolyData&lt;/th&gt;
&lt;th&gt;UnstructuredGrid&lt;/th&gt;
&lt;th&gt;ImageData&lt;/th&gt;
&lt;th&gt;Composite&lt;/th&gt;
&lt;th&gt;用途描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;warp_by_scalar&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;根据标量场对几何体进行变形&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;warp_by_vector&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;根据向量场对几何体进行变形&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;streamlines&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;生成流线用于可视化矢量场&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;extract_surface&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;提取体数据的表面&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_1"&gt;简单例子&lt;/h2&gt;
&lt;p&gt;几个简单例子&lt;/p&gt;
&lt;h3 id="extrude"&gt;Extrude（挤压、拉伸）&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;PolyDataFilters&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extrude&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;capping&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;progress_bar&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vector：Direction and length to extrude the mesh in.&lt;/li&gt;
&lt;li&gt;capping：Control if the sweep of a 2D object is capped. The default is False, which differs from VTK’s default.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;p&gt;&lt;img alt="extrude" src="https://blog.debao.me/images/python/pyvista_filter_extrude.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;曲线拉伸成曲面&lt;/li&gt;
&lt;li&gt;面拉伸成体&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyvista&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_plotter_grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;window_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plotter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;window_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;window_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pl&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;demo_extrudes&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_plotter_grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;# 圆弧及其拉伸&lt;/span&gt;
    &lt;span class="n"&gt;arc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CircularArc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
                        &lt;span class="n"&gt;pointa&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
                        &lt;span class="n"&gt;pointb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lightblue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;arc_surface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extrude&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;capping&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arc_surface&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lightblue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 空心圆盘及其拉伸&lt;/span&gt;
    &lt;span class="n"&gt;hollow_disk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Disc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;outer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inner&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hollow_disk&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lightgreen&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;hollow_cylinder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hollow_disk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extrude&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;capping&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hollow_cylinder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lightgreen&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 相机位置&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;camera_position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;iso&amp;#39;&lt;/span&gt;
            &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;camera&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 显示所有子图&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link_views&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;demo_extrudes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="extrude-rotate"&gt;Extrude Rotate（拉伸旋转）&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;PolyDataFilters&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extrude_rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;translation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;dradius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;angle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;360.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;capping&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;rotation_axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;progress_bar&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;resolution：Number of pieces to divide line into.&lt;/li&gt;
&lt;li&gt;translation：Total amount of translation along the axis.&lt;/li&gt;
&lt;li&gt;dradius：Change in radius during sweep process.&lt;/li&gt;
&lt;li&gt;angle：The angle of rotation in degrees.&lt;/li&gt;
&lt;li&gt;capping：Control if the sweep of a 2D object is capped. The default is False, which differs from VTK’s default.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;p&gt;&lt;img alt="extrude" src="https://blog.debao.me/images/python/pyvista_filter_extrude_rotate.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直线旋转拉伸成圆/圆锥&lt;/li&gt;
&lt;li&gt;折线旋转拉伸成体&lt;/li&gt;
&lt;li&gt;面旋转拉伸（旋转对称，或者螺旋）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;
&lt;span class="normal"&gt;63&lt;/span&gt;
&lt;span class="normal"&gt;64&lt;/span&gt;
&lt;span class="normal"&gt;65&lt;/span&gt;
&lt;span class="normal"&gt;66&lt;/span&gt;
&lt;span class="normal"&gt;67&lt;/span&gt;
&lt;span class="normal"&gt;68&lt;/span&gt;
&lt;span class="normal"&gt;69&lt;/span&gt;
&lt;span class="normal"&gt;70&lt;/span&gt;
&lt;span class="normal"&gt;71&lt;/span&gt;
&lt;span class="normal"&gt;72&lt;/span&gt;
&lt;span class="normal"&gt;73&lt;/span&gt;
&lt;span class="normal"&gt;74&lt;/span&gt;
&lt;span class="normal"&gt;75&lt;/span&gt;
&lt;span class="normal"&gt;76&lt;/span&gt;
&lt;span class="normal"&gt;77&lt;/span&gt;
&lt;span class="normal"&gt;78&lt;/span&gt;
&lt;span class="normal"&gt;79&lt;/span&gt;
&lt;span class="normal"&gt;80&lt;/span&gt;
&lt;span class="normal"&gt;81&lt;/span&gt;
&lt;span class="normal"&gt;82&lt;/span&gt;
&lt;span class="normal"&gt;83&lt;/span&gt;
&lt;span class="normal"&gt;84&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyvista&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_plotter_grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;window_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1600&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plotter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;window_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;window_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pl&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_c_shape&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="c1"&gt;# 顶点（轴在x=0处，图形在x&amp;gt;0区域，开口朝下）&lt;/span&gt;
    &lt;span class="n"&gt;points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;  &lt;span class="c1"&gt;# 0 左下&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;  &lt;span class="c1"&gt;# 1 右下&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;  &lt;span class="c1"&gt;# 2 右上&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;  &lt;span class="c1"&gt;# 3 左上&lt;/span&gt;
        &lt;span class="c1"&gt;# 内部轮廓&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;  &lt;span class="c1"&gt;# 4 内左下&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;  &lt;span class="c1"&gt;# 5 内右下&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;  &lt;span class="c1"&gt;# 6 内右上&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;  &lt;span class="c1"&gt;# 7 内左上&lt;/span&gt;
    &lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="n"&gt;faces&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
        &lt;span class="c1"&gt;# 左侧竖边&lt;/span&gt;
        &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="c1"&gt;# 上方横边&lt;/span&gt;
        &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="c1"&gt;# 右侧竖边&lt;/span&gt;
        &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
    &lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="c1"&gt;# 创建PolyData&lt;/span&gt;
    &lt;span class="n"&gt;poly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PolyData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;faces&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;poly&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;demo_rotate_extrudes&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_plotter_grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;# 直线旋转成圆盘&lt;/span&gt;
    &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Line&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;disk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extrude_rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;disk&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lightblue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# L形线旋转成容器&lt;/span&gt;
    &lt;span class="n"&gt;points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;l_shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PolyData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;l_shape&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lines&lt;/span&gt;

    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l_shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;vessel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;l_shape&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extrude_rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vessel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lightgreen&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 开口向下矩形旋转&lt;/span&gt;
    &lt;span class="n"&gt;c_shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_c_shape&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c_shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;core_body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c_shape&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extrude_rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;core_body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;coral&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 相机位置&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;camera_position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;iso&amp;#39;&lt;/span&gt;
            &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;camera&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link_views&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;demo_rotate_extrudes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="extrude-trim"&gt;Extrude Trim（拉伸裁剪）&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;PolyDataFilters&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extrude_trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;trim_surface&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;extrusion&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;boundary_edges&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;capping&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;intersection&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;progress_bar&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;direction：Direction vector to extrude.&lt;/li&gt;
&lt;li&gt;trim_surface：Surface which trims the surface.&lt;/li&gt;
&lt;li&gt;extrusion：Control the strategy of extrusion. One of the following: &lt;ul&gt;
&lt;li&gt;"boundary_edges"&lt;/li&gt;
&lt;li&gt;"all_edges"&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;capping：Control the strategy of capping. One of the following:&lt;ul&gt;
&lt;li&gt;"intersection"&lt;/li&gt;
&lt;li&gt;"minimum_distance"&lt;/li&gt;
&lt;li&gt;"maximum_distance"&lt;/li&gt;
&lt;li&gt;"average_distance"&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;p&gt;&lt;img alt="extrude trim" src="https://blog.debao.me/images/python/pyvista_filter_extrude_trim.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyvista&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pv&lt;/span&gt; 
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_plotter_grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;window_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plotter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;window_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;window_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pl&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;demo_extrude_trim&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_plotter_grid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# Demo1&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;disc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Disc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;c_res&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plane&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plane&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;direction&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;disc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plane&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;extruded_disc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;disc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extrude_trim&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;plane&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extruded_disc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;#extruded_disc.plot(smooth_shading=True, split_sharp_edges=True)&lt;/span&gt;

    &lt;span class="c1"&gt;# Demo2&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;hills&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricRandomHills&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random_seed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;hills_plane&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plane&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hills&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;hills&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;direction&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;i_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;j_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hills_plane&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hills&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# Perform the extrude trim&lt;/span&gt;
    &lt;span class="n"&gt;extruded_hills&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hills&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extrude_trim&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;hills_plane&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extruded_hills&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 设置视角&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;camera_position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;iso&amp;#39;&lt;/span&gt;  &lt;span class="c1"&gt;# 视角设置为等距视图&lt;/span&gt;
            &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;camera&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;#pl.link_views()&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;demo_extrude_trim&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_2"&gt;交、差、并&lt;/h3&gt;
&lt;p&gt;分为布尔操作和普通的操作：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作类型&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;th&gt;结果&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;使用场景&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;布尔差集（boolean_difference）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;从第一个几何体中去除与第二个几何体相交的部分&lt;/td&gt;
&lt;td&gt;返回不相交的部分&lt;/td&gt;
&lt;td&gt;由球体1减去与球体2的重叠部分&lt;/td&gt;
&lt;td&gt;物体差集，去除交叠部分&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;布尔交集（boolean_intersection）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;返回两个几何体的交叠部分&lt;/td&gt;
&lt;td&gt;返回相交的部分&lt;/td&gt;
&lt;td&gt;仅返回两个球体的交集部分&lt;/td&gt;
&lt;td&gt;提取交集区域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;布尔并集（boolean_union）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;合并两个几何体，返回它们的并集&lt;/td&gt;
&lt;td&gt;返回两个几何体合并后的部分&lt;/td&gt;
&lt;td&gt;合并两个球体得到一个新的物体&lt;/td&gt;
&lt;td&gt;合并物体，得到完整区域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;普通合并（merge）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;将两个几何体合并成一个，保留其所有部分&lt;/td&gt;
&lt;td&gt;返回包含两个几何体的集合体&lt;/td&gt;
&lt;td&gt;直接合并两个球体，包含重叠部分&lt;/td&gt;
&lt;td&gt;合并物体为一个大物体，不改变形状&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;交集（intersection）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;返回两个几何体的交叠部分（交集区域）&lt;/td&gt;
&lt;td&gt;返回交集区域，通常为PolyData对象&lt;/td&gt;
&lt;td&gt;提取两个球体的交集部分&lt;/td&gt;
&lt;td&gt;提取交集区域，适用于提取重叠区域&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img alt="filter" src="https://blog.debao.me/images/python/pyvista_filter_merge.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyvista&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_plotter_grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;window_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plotter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;window_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;window_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pl&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;demo_sphere_operations&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_plotter_grid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# 创建两个球体&lt;/span&gt;
    &lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sphere&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;triangulate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sphere&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;triangulate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# 原始形状&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opacity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opacity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;origin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 布尔差集&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;difference&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;boolean_difference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;difference&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cyan&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;boolean_difference&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 布尔交集&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;intersection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;boolean_intersection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intersection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;boolean_intersection&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 布尔并集&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;union&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;boolean_union&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;union&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yellow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;boolean_union&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 交集&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;intersection_filter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s1_split&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s2_split&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;intersection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intersection_filter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;orange&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opacity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;intersection&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 合并&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;merge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;magenta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;merge&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 设置每个子图的视角&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;camera_position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;iso&amp;#39;&lt;/span&gt;
            &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;camera&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_axes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;demo_sphere_operations&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="8"&gt;生成8瓣空心圆柱体（一）&lt;/h3&gt;
&lt;p&gt;有前面的准备，可以做些简单的事情&lt;/p&gt;
&lt;p&gt;&lt;img alt="demo" src="https://blog.debao.me/images/python/pyvista_demo_deflector_1.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;
&lt;span class="normal"&gt;63&lt;/span&gt;
&lt;span class="normal"&gt;64&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyvista&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_hollow_cylinder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius_outer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius_inner&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;outer_cylinder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cylinder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;direction&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                                 &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;radius_outer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;triangulate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;inner_cylinder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cylinder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;direction&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                                 &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;radius_inner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;triangulate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;outer_cylinder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;boolean_difference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inner_cylinder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_eight_sector_deflector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius_outer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius_inner&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    param gap: 扇形之间的间隙角度（以弧度为单位）&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="c1"&gt;# 创建空心圆筒&lt;/span&gt;
    &lt;span class="n"&gt;hollow_cylinder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_hollow_cylinder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius_outer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius_inner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;sectors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;sector_angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# 计算当前瓣的起止角度&lt;/span&gt;
        &lt;span class="n"&gt;start_angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sector_angle&lt;/span&gt;
        &lt;span class="n"&gt;end_angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;start_angle&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sector_angle&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;gap&lt;/span&gt;

        &lt;span class="c1"&gt;# 切割扇形&lt;/span&gt;
        &lt;span class="n"&gt;clipped_cylinder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hollow_cylinder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;normal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start_angle&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start_angle&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                                                &lt;span class="n"&gt;origin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;clipped_cylinder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;clipped_cylinder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;normal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end_angle&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end_angle&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                                                  &lt;span class="n"&gt;origin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;sectors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clipped_cylinder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 合并所有扇形&lt;/span&gt;
    &lt;span class="n"&gt;deflector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sectors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;sector&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sectors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]:&lt;/span&gt;
        &lt;span class="n"&gt;deflector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;deflector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;deflector&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;plot_deflector_with_subplots&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;hollow_cylinder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_hollow_cylinder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius_outer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius_inner&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;deflector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_eight_sector_deflector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius_outer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius_inner&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;pl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plotter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 左侧：空心圆筒&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hollow Cylinder&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;upper_left&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hollow_cylinder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lightblue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opacity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 右侧：八瓣偏转器&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Eight-Sector Deflector&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;upper_left&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;deflector&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cyan&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opacity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 显示&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link_views&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;plot_deflector_with_subplots&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="8_1"&gt;生成8瓣空心圆柱体（二）&lt;/h3&gt;
&lt;p&gt;换一种方式&lt;/p&gt;
&lt;p&gt;&lt;img alt="demo" src="https://blog.debao.me/images/python/pyvista_demo_deflector_2.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;  1&lt;/span&gt;
&lt;span class="normal"&gt;  2&lt;/span&gt;
&lt;span class="normal"&gt;  3&lt;/span&gt;
&lt;span class="normal"&gt;  4&lt;/span&gt;
&lt;span class="normal"&gt;  5&lt;/span&gt;
&lt;span class="normal"&gt;  6&lt;/span&gt;
&lt;span class="normal"&gt;  7&lt;/span&gt;
&lt;span class="normal"&gt;  8&lt;/span&gt;
&lt;span class="normal"&gt;  9&lt;/span&gt;
&lt;span class="normal"&gt; 10&lt;/span&gt;
&lt;span class="normal"&gt; 11&lt;/span&gt;
&lt;span class="normal"&gt; 12&lt;/span&gt;
&lt;span class="normal"&gt; 13&lt;/span&gt;
&lt;span class="normal"&gt; 14&lt;/span&gt;
&lt;span class="normal"&gt; 15&lt;/span&gt;
&lt;span class="normal"&gt; 16&lt;/span&gt;
&lt;span class="normal"&gt; 17&lt;/span&gt;
&lt;span class="normal"&gt; 18&lt;/span&gt;
&lt;span class="normal"&gt; 19&lt;/span&gt;
&lt;span class="normal"&gt; 20&lt;/span&gt;
&lt;span class="normal"&gt; 21&lt;/span&gt;
&lt;span class="normal"&gt; 22&lt;/span&gt;
&lt;span class="normal"&gt; 23&lt;/span&gt;
&lt;span class="normal"&gt; 24&lt;/span&gt;
&lt;span class="normal"&gt; 25&lt;/span&gt;
&lt;span class="normal"&gt; 26&lt;/span&gt;
&lt;span class="normal"&gt; 27&lt;/span&gt;
&lt;span class="normal"&gt; 28&lt;/span&gt;
&lt;span class="normal"&gt; 29&lt;/span&gt;
&lt;span class="normal"&gt; 30&lt;/span&gt;
&lt;span class="normal"&gt; 31&lt;/span&gt;
&lt;span class="normal"&gt; 32&lt;/span&gt;
&lt;span class="normal"&gt; 33&lt;/span&gt;
&lt;span class="normal"&gt; 34&lt;/span&gt;
&lt;span class="normal"&gt; 35&lt;/span&gt;
&lt;span class="normal"&gt; 36&lt;/span&gt;
&lt;span class="normal"&gt; 37&lt;/span&gt;
&lt;span class="normal"&gt; 38&lt;/span&gt;
&lt;span class="normal"&gt; 39&lt;/span&gt;
&lt;span class="normal"&gt; 40&lt;/span&gt;
&lt;span class="normal"&gt; 41&lt;/span&gt;
&lt;span class="normal"&gt; 42&lt;/span&gt;
&lt;span class="normal"&gt; 43&lt;/span&gt;
&lt;span class="normal"&gt; 44&lt;/span&gt;
&lt;span class="normal"&gt; 45&lt;/span&gt;
&lt;span class="normal"&gt; 46&lt;/span&gt;
&lt;span class="normal"&gt; 47&lt;/span&gt;
&lt;span class="normal"&gt; 48&lt;/span&gt;
&lt;span class="normal"&gt; 49&lt;/span&gt;
&lt;span class="normal"&gt; 50&lt;/span&gt;
&lt;span class="normal"&gt; 51&lt;/span&gt;
&lt;span class="normal"&gt; 52&lt;/span&gt;
&lt;span class="normal"&gt; 53&lt;/span&gt;
&lt;span class="normal"&gt; 54&lt;/span&gt;
&lt;span class="normal"&gt; 55&lt;/span&gt;
&lt;span class="normal"&gt; 56&lt;/span&gt;
&lt;span class="normal"&gt; 57&lt;/span&gt;
&lt;span class="normal"&gt; 58&lt;/span&gt;
&lt;span class="normal"&gt; 59&lt;/span&gt;
&lt;span class="normal"&gt; 60&lt;/span&gt;
&lt;span class="normal"&gt; 61&lt;/span&gt;
&lt;span class="normal"&gt; 62&lt;/span&gt;
&lt;span class="normal"&gt; 63&lt;/span&gt;
&lt;span class="normal"&gt; 64&lt;/span&gt;
&lt;span class="normal"&gt; 65&lt;/span&gt;
&lt;span class="normal"&gt; 66&lt;/span&gt;
&lt;span class="normal"&gt; 67&lt;/span&gt;
&lt;span class="normal"&gt; 68&lt;/span&gt;
&lt;span class="normal"&gt; 69&lt;/span&gt;
&lt;span class="normal"&gt; 70&lt;/span&gt;
&lt;span class="normal"&gt; 71&lt;/span&gt;
&lt;span class="normal"&gt; 72&lt;/span&gt;
&lt;span class="normal"&gt; 73&lt;/span&gt;
&lt;span class="normal"&gt; 74&lt;/span&gt;
&lt;span class="normal"&gt; 75&lt;/span&gt;
&lt;span class="normal"&gt; 76&lt;/span&gt;
&lt;span class="normal"&gt; 77&lt;/span&gt;
&lt;span class="normal"&gt; 78&lt;/span&gt;
&lt;span class="normal"&gt; 79&lt;/span&gt;
&lt;span class="normal"&gt; 80&lt;/span&gt;
&lt;span class="normal"&gt; 81&lt;/span&gt;
&lt;span class="normal"&gt; 82&lt;/span&gt;
&lt;span class="normal"&gt; 83&lt;/span&gt;
&lt;span class="normal"&gt; 84&lt;/span&gt;
&lt;span class="normal"&gt; 85&lt;/span&gt;
&lt;span class="normal"&gt; 86&lt;/span&gt;
&lt;span class="normal"&gt; 87&lt;/span&gt;
&lt;span class="normal"&gt; 88&lt;/span&gt;
&lt;span class="normal"&gt; 89&lt;/span&gt;
&lt;span class="normal"&gt; 90&lt;/span&gt;
&lt;span class="normal"&gt; 91&lt;/span&gt;
&lt;span class="normal"&gt; 92&lt;/span&gt;
&lt;span class="normal"&gt; 93&lt;/span&gt;
&lt;span class="normal"&gt; 94&lt;/span&gt;
&lt;span class="normal"&gt; 95&lt;/span&gt;
&lt;span class="normal"&gt; 96&lt;/span&gt;
&lt;span class="normal"&gt; 97&lt;/span&gt;
&lt;span class="normal"&gt; 98&lt;/span&gt;
&lt;span class="normal"&gt; 99&lt;/span&gt;
&lt;span class="normal"&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyvista&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_arc_points&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start_angle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end_angle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_points&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    创建圆弧上的点&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;angles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start_angle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end_angle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;n_points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;angles&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;angles&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;points&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_2d_eight_sector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius_outer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius_inner&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    创建二维的八瓣截面，每个扇形是实心的圆环段&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;sectors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;sector_angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="c1"&gt;# 45度&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# 计算当前扇形的起止角度&lt;/span&gt;
        &lt;span class="n"&gt;start_angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sector_angle&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;gap&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
        &lt;span class="n"&gt;end_angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sector_angle&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;gap&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;

        &lt;span class="c1"&gt;# 创建外圆弧和内圆弧的点&lt;/span&gt;
        &lt;span class="n"&gt;n_points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;  &lt;span class="c1"&gt;# 每个圆弧的点数&lt;/span&gt;
        &lt;span class="n"&gt;outer_arc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_arc_points&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius_outer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start_angle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end_angle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;inner_arc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_arc_points&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius_inner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start_angle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end_angle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# 组合所有点，按照顺时针顺序排列&lt;/span&gt;
        &lt;span class="n"&gt;all_points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vstack&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
            &lt;span class="n"&gt;outer_arc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;          &lt;span class="c1"&gt;# 外圆弧点&lt;/span&gt;
            &lt;span class="n"&gt;inner_arc&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="c1"&gt;# 内圆弧点（反转顺序）&lt;/span&gt;
        &lt;span class="p"&gt;])&lt;/span&gt;

        &lt;span class="c1"&gt;# 创建面片&lt;/span&gt;
        &lt;span class="n"&gt;n_points_per_arc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;outer_arc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;faces&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

        &lt;span class="c1"&gt;# 创建一个大面片连接所有点&lt;/span&gt;
        &lt;span class="n"&gt;n_total_points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;all_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;face&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n_total_points&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_total_points&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;faces&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;face&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# 创建扇形&lt;/span&gt;
        &lt;span class="n"&gt;sector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PolyData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;all_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;faces&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;faces&lt;/span&gt;
        &lt;span class="n"&gt;sectors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 合并所有扇形&lt;/span&gt;
    &lt;span class="n"&gt;eight_sector_2d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sectors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;sector&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sectors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]:&lt;/span&gt;
        &lt;span class="n"&gt;eight_sector_2d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;eight_sector_2d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;eight_sector_2d&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_3d_eight_sector_deflector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius_outer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius_inner&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# 创建2D底面&lt;/span&gt;
    &lt;span class="n"&gt;bottom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_2d_eight_sector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius_outer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius_inner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 拉伸&lt;/span&gt;
    &lt;span class="n"&gt;vectors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt; 
    &lt;span class="n"&gt;eight_sector_3d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bottom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extrude&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vectors&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;capping&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;eight_sector_3d&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;plot_deflector_with_subplots&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    绘制八瓣静电偏转器的2D和3D视图&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="c1"&gt;# 创建plotter&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plotter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;window_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;# 创建2D和3D模型&lt;/span&gt;
    &lt;span class="n"&gt;eight_sector_2d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_2d_eight_sector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius_outer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius_inner&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;eight_sector_3d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_3d_eight_sector_deflector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius_outer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius_inner&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 2D视图&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eight_sector_2d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cyan&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;camera_position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;xy&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2D Eight Sector&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 3D视图&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eight_sector_3d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cyan&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opacity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;camera_position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;iso&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3D Eight Sector&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 为每个视图添加坐标轴&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_axes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;camera&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;plot_deflector_with_subplots&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_3"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://docs.pyvista.org/api/core/filters&lt;/li&gt;
&lt;li&gt;https://docs.pyvista.org/examples/01-filter/&lt;/li&gt;
&lt;/ul&gt;</content><category term="Python"></category><category term="python"></category></entry><entry><title>PyVista使用小记（一）</title><link href="https://blog.debao.me/2024/12/notes-on-pyvista-usage-part-1/" rel="alternate"></link><published>2024-12-17T19:02:00+08:00</published><updated>2024-12-17T19:02:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-17:/2024/12/notes-on-pyvista-usage-part-1/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/12/notes-on-pyvista-with-pyside6/"&gt;PySide6下PyVista小记&lt;/a&gt;，简单看看PyVista的用法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#geometric-objects"&gt;简单几何对象（Geometric Objects）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;二维对象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;三维对象&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#geometric-sources"&gt;几何源（Geometric Sources）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#parametric-geometric-objects"&gt;参数化几何对象（Parametric Geometric Objects）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-model"&gt;数据模型（Data Model）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_3"&gt;术语&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-sets"&gt;数据 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/12/notes-on-pyvista-with-pyside6/"&gt;PySide6下PyVista小记&lt;/a&gt;，简单看看PyVista的用法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#geometric-objects"&gt;简单几何对象（Geometric Objects）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;二维对象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;三维对象&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#geometric-sources"&gt;几何源（Geometric Sources）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#parametric-geometric-objects"&gt;参数化几何对象（Parametric Geometric Objects）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-model"&gt;数据模型（Data Model）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_3"&gt;术语&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-sets"&gt;数据集类（Data Sets）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#attributes"&gt;属性（Attributes）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="geometric-objects"&gt;简单几何对象（Geometric Objects）&lt;/h2&gt;
&lt;p&gt;对于常见了简单几何对象，PyVista提供了高层次封装的方法。&lt;/p&gt;
&lt;h3 id="_1"&gt;二维对象&lt;/h3&gt;
&lt;p&gt;对于2D形状：圆弧、圆盘、圆、线、折线、多边形、平面&lt;/p&gt;
&lt;p&gt;&lt;img alt="pyvista 2d geometries" src="https://blog.debao.me/images/python/pyvista_2d_geometries.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Circle([radius, resolution])&lt;/code&gt;: 创建一个平面上的圆形。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CircularArc(pointa, pointb, center[, ...])&lt;/code&gt;: 创建一个由两个端点和中心定义的圆弧。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CircularArcFromNormal(center[, resolution, ...])&lt;/code&gt;: 创建一个与法线平面相切的圆弧。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Disc([center, inner, outer, normal, r_res, ...])&lt;/code&gt;: 创建一个带孔的二维圆盘。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Line([pointa, pointb, resolution])&lt;/code&gt;: 创建一条线段。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Plane([center, direction, i_size, j_size, ...])&lt;/code&gt;: 创建一个平面，尽管是3D空间中的对象，但通常在二维几何中处理，定义了一个无限平面。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Triangle([[points]])&lt;/code&gt;: 创建三级形&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Rectangle([[points]])&lt;/code&gt;: 创建矩形&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MultipleLines([points])&lt;/code&gt;: 创建多条线，属于二维。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Polygon([center, radius, normal, n_sides, fill])&lt;/code&gt;: 创建一个多边形。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;
&lt;span class="normal"&gt;63&lt;/span&gt;
&lt;span class="normal"&gt;64&lt;/span&gt;
&lt;span class="normal"&gt;65&lt;/span&gt;
&lt;span class="normal"&gt;66&lt;/span&gt;
&lt;span class="normal"&gt;67&lt;/span&gt;
&lt;span class="normal"&gt;68&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyvista&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="n"&gt;plotter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plotter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  &lt;span class="c1"&gt;# 定义一个3行4列的布局&lt;/span&gt;

&lt;span class="c1"&gt;# Circle - 创建一个圆&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;circle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Circle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cyan&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# CircularArc - 创建一个圆弧&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;arc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CircularArc&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Circular Arc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# CircularArcFromNormal - 创建一个圆弧&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;arc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CircularArcFromNormal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;normal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;angle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Circular Arc From Normal&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cyan&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Disc - 创建一个圆盘&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;disc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Disc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;inner&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r_res&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c_res&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Disc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;disc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Line - 创建一条线段&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pointa&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;pointb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Line&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# MultipleLines - 创建多条线&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MultipleLines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Multiple Lines&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Plane - 创建一个平面&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plane&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plane&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;direction&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;i_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Plane&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plane&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lightblue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Polygon - 创建一个多边形&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;polygon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Polygon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_sides&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Polygon&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;purple&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Triangle - 创建一个三角形&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;triangle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Triangle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Triangle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;triangle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Rectangle - 创建一个矩形&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;rectangle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Rectangle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Rectangle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rectangle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 展示所有形状&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Demo for 2D Geometries&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_2"&gt;三维对象&lt;/h3&gt;
&lt;p&gt;有点多，分成两部分：&lt;/p&gt;
&lt;p&gt;&lt;img alt="3d_geometries" src="https://blog.debao.me/images/python/pyvista_3d_geometries_1.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Arrow([start, direction, tip_length, ...])&lt;/code&gt;: 创建一个箭头&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Box([bounds, level, quads])&lt;/code&gt;: 创建一个具有固体面的盒子&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Capsule([center, direction, radius, ...])&lt;/code&gt;: 创建胶囊体&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cone([center, direction, height, radius, ...])&lt;/code&gt;: 创建一个圆锥体&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cube([center, x_length, y_length, z_length, ...])&lt;/code&gt;: 创建一个立方体&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cylinder([center, direction, radius, ...])&lt;/code&gt;: 创建一个圆柱体的表面&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CylinderStructured([radius, height, center, ...])&lt;/code&gt;: 创建一个圆柱体网* `格，属于三维。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Dodecahedron([radius, center])&lt;/code&gt;: 创建一个十二面体&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Icosahedron([radius, center])&lt;/code&gt;: 创建一个二十面体&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Icosphere([radius, center, nsub])&lt;/code&gt;: 创建一个二十面体球&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Tetrahedron([radius, center])&lt;/code&gt;: 创建一个四面体&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Octahedron([radius, center])&lt;/code&gt;: 创建一个八面体&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Superquadric([center, scale, size, ...])&lt;/code&gt;: 创建一个超二次体&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Sphere([radius, center, direction, ...])&lt;/code&gt;: 创建一个球体&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;
&lt;span class="normal"&gt;63&lt;/span&gt;
&lt;span class="normal"&gt;64&lt;/span&gt;
&lt;span class="normal"&gt;65&lt;/span&gt;
&lt;span class="normal"&gt;66&lt;/span&gt;
&lt;span class="normal"&gt;67&lt;/span&gt;
&lt;span class="normal"&gt;68&lt;/span&gt;
&lt;span class="normal"&gt;69&lt;/span&gt;
&lt;span class="normal"&gt;70&lt;/span&gt;
&lt;span class="normal"&gt;71&lt;/span&gt;
&lt;span class="normal"&gt;72&lt;/span&gt;
&lt;span class="normal"&gt;73&lt;/span&gt;
&lt;span class="normal"&gt;74&lt;/span&gt;
&lt;span class="normal"&gt;75&lt;/span&gt;
&lt;span class="normal"&gt;76&lt;/span&gt;
&lt;span class="normal"&gt;77&lt;/span&gt;
&lt;span class="normal"&gt;78&lt;/span&gt;
&lt;span class="normal"&gt;79&lt;/span&gt;
&lt;span class="normal"&gt;80&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyvista&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="c1"&gt;# 创建一个 Plotter 实例，设置布局为 3x4&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plotter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# 创建箭头&lt;/span&gt;
&lt;span class="n"&gt;arrow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Arrow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;direction&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;tip_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Arrow&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arrow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cyan&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建盒子&lt;/span&gt;
&lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Box&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;magenta&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建胶囊体&lt;/span&gt;
&lt;span class="n"&gt;capsule&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Capsule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;direction&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cylinder_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Capsule&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;capsule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建圆锥体&lt;/span&gt;
&lt;span class="n"&gt;cone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;direction&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cone&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cone&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建立方体&lt;/span&gt;
&lt;span class="n"&gt;cube&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cube&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;x_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cube&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cube&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建圆柱体&lt;/span&gt;
&lt;span class="n"&gt;cylinder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cylinder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;direction&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cylinder&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cylinder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建十二面体&lt;/span&gt;
&lt;span class="n"&gt;dodecahedron&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dodecahedron&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Dodecahedron&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dodecahedron&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建二十面体&lt;/span&gt;
&lt;span class="n"&gt;icosahedron&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Icosahedron&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Icosahedron&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;icosahedron&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;purple&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建四面体&lt;/span&gt;
&lt;span class="n"&gt;tetrahedron&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tetrahedron&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Tetrahedron&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tetrahedron&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pink&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建八面体&lt;/span&gt;
&lt;span class="n"&gt;octahedron&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Octahedron&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Octahedron&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;octahedron&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建超二次体&lt;/span&gt;
&lt;span class="n"&gt;superquadric&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Superquadric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Superquadric&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;superquadric&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cyan&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建球体&lt;/span&gt;
&lt;span class="n"&gt;sphere&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sphere&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Sphere&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sphere&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;grey&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 展示所有绘图&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="3d" src="https://blog.debao.me/images/python/pyvista_3d_geometries_2.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PlatonicSolid([kind, radius, center])&lt;/code&gt;: 创建一个柏拉图立体（正四、六、八、十二、二十）面体  &lt;ul&gt;
&lt;li&gt;'tetrahedron'&lt;/li&gt;
&lt;li&gt;'cube'&lt;/li&gt;
&lt;li&gt;'octahedron'&lt;/li&gt;
&lt;li&gt;'icosahedron'&lt;/li&gt;
&lt;li&gt;'dodecahedron'&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Pyramid([points])&lt;/code&gt;: 创建一个金字塔&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SolidSphere([outer_radius, inner_radius, ...])&lt;/code&gt;: 创建一个实心球&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SolidSphereGeneric([radius, theta, phi, ...])&lt;/code&gt;: 创建一个灵活采样的实心球
，属于三维。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Text3D(string[, depth, width, height, ...])&lt;/code&gt;: 创建三维文字&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Tube([pointa, pointb, resolution, radius, ...])&lt;/code&gt;: 创建一个管道&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Wavelet([extent, center, maximum, x_freq, ...])&lt;/code&gt;: 创建一个波形，有些复杂...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;
&lt;span class="normal"&gt;63&lt;/span&gt;
&lt;span class="normal"&gt;64&lt;/span&gt;
&lt;span class="normal"&gt;65&lt;/span&gt;
&lt;span class="normal"&gt;66&lt;/span&gt;
&lt;span class="normal"&gt;67&lt;/span&gt;
&lt;span class="normal"&gt;68&lt;/span&gt;
&lt;span class="normal"&gt;69&lt;/span&gt;
&lt;span class="normal"&gt;70&lt;/span&gt;
&lt;span class="normal"&gt;71&lt;/span&gt;
&lt;span class="normal"&gt;72&lt;/span&gt;
&lt;span class="normal"&gt;73&lt;/span&gt;
&lt;span class="normal"&gt;74&lt;/span&gt;
&lt;span class="normal"&gt;75&lt;/span&gt;
&lt;span class="normal"&gt;76&lt;/span&gt;
&lt;span class="normal"&gt;77&lt;/span&gt;
&lt;span class="normal"&gt;78&lt;/span&gt;
&lt;span class="normal"&gt;79&lt;/span&gt;
&lt;span class="normal"&gt;80&lt;/span&gt;
&lt;span class="normal"&gt;81&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyvista&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="n"&gt;plotter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plotter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# 创建柏拉图立体&lt;/span&gt;
&lt;span class="n"&gt;platonic_solid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PlatonicSolid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kind&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tetrahedron&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Platonic Solid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;platonic_solid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cyan&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建金字塔&lt;/span&gt;
&lt;span class="n"&gt;pyramid_points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;pyramid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Pyramid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pyramid_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Pyramid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pyramid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;magenta&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建实心球&lt;/span&gt;
&lt;span class="n"&gt;solid_sphere&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SolidSphere&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;outer_radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inner_radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Solid Sphere&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;solid_sphere&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建灵活采样的实心球&lt;/span&gt;
&lt;span class="n"&gt;solid_sphere_generic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SolidSphereGeneric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Solid Sphere Generic&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;solid_sphere_generic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建三维文字&lt;/span&gt;
&lt;span class="n"&gt;text3d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text3D&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3D Text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;depth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Text3D&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text3d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建管道&lt;/span&gt;
&lt;span class="n"&gt;tube&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tube&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Tube&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tube&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建波形&lt;/span&gt;
&lt;span class="n"&gt;wavelet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Wavelet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;extent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;x_freq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;y_freq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;z_freq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;x_mag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;y_mag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;z_mag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Wavelet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wavelet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建多个线段 (MultipleLines)&lt;/span&gt;
&lt;span class="n"&gt;lines_points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;multiple_lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MultipleLines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lines_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Multiple Lines&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;multiple_lines&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;purple&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 展示所有绘图&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="geometric-sources"&gt;几何源（Geometric Sources）&lt;/h2&gt;
&lt;p&gt;几何源（Geometric Sources）更接近实际的 VTK 管道。它们在 VTK 管道中充当“源”节点，生成特定类型的几何体。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;管道集成：这些源旨在集成到 VTK 管道中，其输出可以直接连接到其他管道阶段，如过滤器、映射器等。&lt;/li&gt;
&lt;li&gt;精细控制：它们通常提供更多参数来控制几何体，更适用于需要对生成几何体进行细粒度控制的场景。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="sources" src="https://blog.debao.me/images/python/pyvista_sources.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ArrowSource([tip_length, tip_radius, ...])&lt;/code&gt;：创建一个箭头源。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AxesGeometrySource([[, shaft_type, ...]])&lt;/code&gt;：创建坐标轴几何源。注意和其他source的类型不同，需要调用 output。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BoxSource([bounds, level, quads])&lt;/code&gt;：创建一个盒子源。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ConeSource([center, direction, height, ...])&lt;/code&gt;：圆锥源算法类。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CubeSource([center, x_length, y_length, ...])&lt;/code&gt;：立方体源算法类。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CylinderSource([center, direction, radius, ...])&lt;/code&gt;：圆柱源算法类。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DiscSource([center, inner, outer, r_res, c_res])&lt;/code&gt;：圆盘源算法类。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LineSource([pointa, pointb, resolution])&lt;/code&gt;：创建一条线。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MultipleLinesSource([points])&lt;/code&gt;：多条线源算法类。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PlaneSource([i_resolution, j_resolution])&lt;/code&gt;：创建一个平面源。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PlatonicSolidSource([kind])&lt;/code&gt;：柏拉图立体源算法类。（正四、六、八、十二、二十面体）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PolygonSource([center, radius, normal, ...])&lt;/code&gt;：多边形源算法类。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SphereSource([radius, center, ...])&lt;/code&gt;：球体源算法类。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SuperquadricSource([center, scale, size, ...])&lt;/code&gt;：创建超二次曲面源。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Text3DSource([string, depth, width, height, ...])&lt;/code&gt;：从字符串创建 3D 文字。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;
&lt;span class="normal"&gt;63&lt;/span&gt;
&lt;span class="normal"&gt;64&lt;/span&gt;
&lt;span class="normal"&gt;65&lt;/span&gt;
&lt;span class="normal"&gt;66&lt;/span&gt;
&lt;span class="normal"&gt;67&lt;/span&gt;
&lt;span class="normal"&gt;68&lt;/span&gt;
&lt;span class="normal"&gt;69&lt;/span&gt;
&lt;span class="normal"&gt;70&lt;/span&gt;
&lt;span class="normal"&gt;71&lt;/span&gt;
&lt;span class="normal"&gt;72&lt;/span&gt;
&lt;span class="normal"&gt;73&lt;/span&gt;
&lt;span class="normal"&gt;74&lt;/span&gt;
&lt;span class="normal"&gt;75&lt;/span&gt;
&lt;span class="normal"&gt;76&lt;/span&gt;
&lt;span class="normal"&gt;77&lt;/span&gt;
&lt;span class="normal"&gt;78&lt;/span&gt;
&lt;span class="normal"&gt;79&lt;/span&gt;
&lt;span class="normal"&gt;80&lt;/span&gt;
&lt;span class="normal"&gt;81&lt;/span&gt;
&lt;span class="normal"&gt;82&lt;/span&gt;
&lt;span class="normal"&gt;83&lt;/span&gt;
&lt;span class="normal"&gt;84&lt;/span&gt;
&lt;span class="normal"&gt;85&lt;/span&gt;
&lt;span class="normal"&gt;86&lt;/span&gt;
&lt;span class="normal"&gt;87&lt;/span&gt;
&lt;span class="normal"&gt;88&lt;/span&gt;
&lt;span class="normal"&gt;89&lt;/span&gt;
&lt;span class="normal"&gt;90&lt;/span&gt;
&lt;span class="normal"&gt;91&lt;/span&gt;
&lt;span class="normal"&gt;92&lt;/span&gt;
&lt;span class="normal"&gt;93&lt;/span&gt;
&lt;span class="normal"&gt;94&lt;/span&gt;
&lt;span class="normal"&gt;95&lt;/span&gt;
&lt;span class="normal"&gt;96&lt;/span&gt;
&lt;span class="normal"&gt;97&lt;/span&gt;
&lt;span class="normal"&gt;98&lt;/span&gt;
&lt;span class="normal"&gt;99&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyvista&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="c1"&gt;# 创建一个 Plotter 实例，设置网格布局&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plotter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  &lt;span class="c1"&gt;# 4x4布局&lt;/span&gt;

&lt;span class="c1"&gt;# ArrowSource - 箭头&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;arrow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArrowSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tip_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tip_radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shaft_radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Arrow Source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arrow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cyan&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# AxesGeometrySource - 坐标轴&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;axes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AxesGeometrySource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shaft_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cylinder&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Axes Geometry Source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;axes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# BoxSource - 盒子&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BoxSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Box Source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;magenta&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ConeSource - 圆锥&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConeSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;direction&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cone Source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cone&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# CubeSource - 立方体&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cube&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CubeSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;x_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cube Source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cube&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# CylinderSource - 圆柱&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cylinder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CylinderSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cylinder Source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cylinder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# DiscSource - 圆盘&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;disc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DiscSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;inner&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r_res&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c_res&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Disc Source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;disc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lightblue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# LineSource - 线段&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LineSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pointa&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;pointb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Line Source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;purple&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# MultipleLinesSource - 多条线&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MultipleLinesSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Multiple Lines Source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# PlaneSource - 平面&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plane&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PlaneSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i_resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j_resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Plane Source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plane&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pink&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# PlatonicSolidSource - 柏拉图立体&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;platonic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PlatonicSolidSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kind&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dodecahedron&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Platonic Solid Source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;platonic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;grey&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# PolygonSource - 多边形&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;polygon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PolygonSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;normal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;n_sides&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Polygon Source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;brown&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# SphereSource - 球体&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sphere&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SphereSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Sphere Source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sphere&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cyan&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# SuperquadricSource - 超二次曲面&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;superquadric&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SuperquadricSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Superquadric Source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;superquadric&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Text3DSource - 3D文字&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;text3d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text3DSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PyVista&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;depth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Text 3D Source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text3d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;gold&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 展示所有形状&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="parametric-geometric-objects"&gt;参数化几何对象（Parametric Geometric Objects）&lt;/h2&gt;
&lt;p&gt;&lt;img alt="parametric surfaces" src="https://blog.debao.me/images/python/pyvista_parametric_surfaces.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ParametricBohemianDome([a, b, c])&lt;/code&gt;: 生成波希米亚穹顶表面。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricBour(**kwargs)&lt;/code&gt;: 生成布尔最小曲面。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricBoy([zscale])&lt;/code&gt;: 生成博伊曲面。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricDini([a, b])&lt;/code&gt;: 生成迪尼曲面。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricCatalanMinimal(**kwargs)&lt;/code&gt;: 生成卡塔兰最小曲面。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricConicSpiral([a, b, c, n])&lt;/code&gt;: 生成类似海贝壳的圆锥螺旋曲面。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricCrossCap(**kwargs)&lt;/code&gt;: 生成交叉帽。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricEllipsoid([xradius, yradius, zradius])&lt;/code&gt;: 生成椭圆体。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricEnneper(**kwargs)&lt;/code&gt;: 生成恩内珀曲面。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricFigure8Klein([radius])&lt;/code&gt;: 生成8字型克莱因瓶。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricHenneberg(**kwargs)&lt;/code&gt;: 生成亨内贝格最小曲面。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricKlein(**kwargs)&lt;/code&gt;: 生成经典克莱因瓶表示。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricKuen([deltav0])&lt;/code&gt;: 生成库恩曲面。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricMobius([radius])&lt;/code&gt;: 生成莫比乌斯带。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricPluckerConoid([n])&lt;/code&gt;: 生成普吕克圆锥面。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricPseudosphere(**kwargs)&lt;/code&gt;: 生成假球面。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricRandomHills([numberofhills, ...])&lt;/code&gt;: 生成覆盖随机山丘的曲面。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricRoman([radius])&lt;/code&gt;: 生成斯坦纳的罗马曲面。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricSuperEllipsoid([xradius, yradius, ...])&lt;/code&gt;: 生成超椭圆体。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricSuperToroid([ringradius, ...])&lt;/code&gt;: 生成超圆环。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ParametricTorus([ringradius, crosssectionradius])&lt;/code&gt;: 生成圆环面。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;  1&lt;/span&gt;
&lt;span class="normal"&gt;  2&lt;/span&gt;
&lt;span class="normal"&gt;  3&lt;/span&gt;
&lt;span class="normal"&gt;  4&lt;/span&gt;
&lt;span class="normal"&gt;  5&lt;/span&gt;
&lt;span class="normal"&gt;  6&lt;/span&gt;
&lt;span class="normal"&gt;  7&lt;/span&gt;
&lt;span class="normal"&gt;  8&lt;/span&gt;
&lt;span class="normal"&gt;  9&lt;/span&gt;
&lt;span class="normal"&gt; 10&lt;/span&gt;
&lt;span class="normal"&gt; 11&lt;/span&gt;
&lt;span class="normal"&gt; 12&lt;/span&gt;
&lt;span class="normal"&gt; 13&lt;/span&gt;
&lt;span class="normal"&gt; 14&lt;/span&gt;
&lt;span class="normal"&gt; 15&lt;/span&gt;
&lt;span class="normal"&gt; 16&lt;/span&gt;
&lt;span class="normal"&gt; 17&lt;/span&gt;
&lt;span class="normal"&gt; 18&lt;/span&gt;
&lt;span class="normal"&gt; 19&lt;/span&gt;
&lt;span class="normal"&gt; 20&lt;/span&gt;
&lt;span class="normal"&gt; 21&lt;/span&gt;
&lt;span class="normal"&gt; 22&lt;/span&gt;
&lt;span class="normal"&gt; 23&lt;/span&gt;
&lt;span class="normal"&gt; 24&lt;/span&gt;
&lt;span class="normal"&gt; 25&lt;/span&gt;
&lt;span class="normal"&gt; 26&lt;/span&gt;
&lt;span class="normal"&gt; 27&lt;/span&gt;
&lt;span class="normal"&gt; 28&lt;/span&gt;
&lt;span class="normal"&gt; 29&lt;/span&gt;
&lt;span class="normal"&gt; 30&lt;/span&gt;
&lt;span class="normal"&gt; 31&lt;/span&gt;
&lt;span class="normal"&gt; 32&lt;/span&gt;
&lt;span class="normal"&gt; 33&lt;/span&gt;
&lt;span class="normal"&gt; 34&lt;/span&gt;
&lt;span class="normal"&gt; 35&lt;/span&gt;
&lt;span class="normal"&gt; 36&lt;/span&gt;
&lt;span class="normal"&gt; 37&lt;/span&gt;
&lt;span class="normal"&gt; 38&lt;/span&gt;
&lt;span class="normal"&gt; 39&lt;/span&gt;
&lt;span class="normal"&gt; 40&lt;/span&gt;
&lt;span class="normal"&gt; 41&lt;/span&gt;
&lt;span class="normal"&gt; 42&lt;/span&gt;
&lt;span class="normal"&gt; 43&lt;/span&gt;
&lt;span class="normal"&gt; 44&lt;/span&gt;
&lt;span class="normal"&gt; 45&lt;/span&gt;
&lt;span class="normal"&gt; 46&lt;/span&gt;
&lt;span class="normal"&gt; 47&lt;/span&gt;
&lt;span class="normal"&gt; 48&lt;/span&gt;
&lt;span class="normal"&gt; 49&lt;/span&gt;
&lt;span class="normal"&gt; 50&lt;/span&gt;
&lt;span class="normal"&gt; 51&lt;/span&gt;
&lt;span class="normal"&gt; 52&lt;/span&gt;
&lt;span class="normal"&gt; 53&lt;/span&gt;
&lt;span class="normal"&gt; 54&lt;/span&gt;
&lt;span class="normal"&gt; 55&lt;/span&gt;
&lt;span class="normal"&gt; 56&lt;/span&gt;
&lt;span class="normal"&gt; 57&lt;/span&gt;
&lt;span class="normal"&gt; 58&lt;/span&gt;
&lt;span class="normal"&gt; 59&lt;/span&gt;
&lt;span class="normal"&gt; 60&lt;/span&gt;
&lt;span class="normal"&gt; 61&lt;/span&gt;
&lt;span class="normal"&gt; 62&lt;/span&gt;
&lt;span class="normal"&gt; 63&lt;/span&gt;
&lt;span class="normal"&gt; 64&lt;/span&gt;
&lt;span class="normal"&gt; 65&lt;/span&gt;
&lt;span class="normal"&gt; 66&lt;/span&gt;
&lt;span class="normal"&gt; 67&lt;/span&gt;
&lt;span class="normal"&gt; 68&lt;/span&gt;
&lt;span class="normal"&gt; 69&lt;/span&gt;
&lt;span class="normal"&gt; 70&lt;/span&gt;
&lt;span class="normal"&gt; 71&lt;/span&gt;
&lt;span class="normal"&gt; 72&lt;/span&gt;
&lt;span class="normal"&gt; 73&lt;/span&gt;
&lt;span class="normal"&gt; 74&lt;/span&gt;
&lt;span class="normal"&gt; 75&lt;/span&gt;
&lt;span class="normal"&gt; 76&lt;/span&gt;
&lt;span class="normal"&gt; 77&lt;/span&gt;
&lt;span class="normal"&gt; 78&lt;/span&gt;
&lt;span class="normal"&gt; 79&lt;/span&gt;
&lt;span class="normal"&gt; 80&lt;/span&gt;
&lt;span class="normal"&gt; 81&lt;/span&gt;
&lt;span class="normal"&gt; 82&lt;/span&gt;
&lt;span class="normal"&gt; 83&lt;/span&gt;
&lt;span class="normal"&gt; 84&lt;/span&gt;
&lt;span class="normal"&gt; 85&lt;/span&gt;
&lt;span class="normal"&gt; 86&lt;/span&gt;
&lt;span class="normal"&gt; 87&lt;/span&gt;
&lt;span class="normal"&gt; 88&lt;/span&gt;
&lt;span class="normal"&gt; 89&lt;/span&gt;
&lt;span class="normal"&gt; 90&lt;/span&gt;
&lt;span class="normal"&gt; 91&lt;/span&gt;
&lt;span class="normal"&gt; 92&lt;/span&gt;
&lt;span class="normal"&gt; 93&lt;/span&gt;
&lt;span class="normal"&gt; 94&lt;/span&gt;
&lt;span class="normal"&gt; 95&lt;/span&gt;
&lt;span class="normal"&gt; 96&lt;/span&gt;
&lt;span class="normal"&gt; 97&lt;/span&gt;
&lt;span class="normal"&gt; 98&lt;/span&gt;
&lt;span class="normal"&gt; 99&lt;/span&gt;
&lt;span class="normal"&gt;100&lt;/span&gt;
&lt;span class="normal"&gt;101&lt;/span&gt;
&lt;span class="normal"&gt;102&lt;/span&gt;
&lt;span class="normal"&gt;103&lt;/span&gt;
&lt;span class="normal"&gt;104&lt;/span&gt;
&lt;span class="normal"&gt;105&lt;/span&gt;
&lt;span class="normal"&gt;106&lt;/span&gt;
&lt;span class="normal"&gt;107&lt;/span&gt;
&lt;span class="normal"&gt;108&lt;/span&gt;
&lt;span class="normal"&gt;109&lt;/span&gt;
&lt;span class="normal"&gt;110&lt;/span&gt;
&lt;span class="normal"&gt;111&lt;/span&gt;
&lt;span class="normal"&gt;112&lt;/span&gt;
&lt;span class="normal"&gt;113&lt;/span&gt;
&lt;span class="normal"&gt;114&lt;/span&gt;
&lt;span class="normal"&gt;115&lt;/span&gt;
&lt;span class="normal"&gt;116&lt;/span&gt;
&lt;span class="normal"&gt;117&lt;/span&gt;
&lt;span class="normal"&gt;118&lt;/span&gt;
&lt;span class="normal"&gt;119&lt;/span&gt;
&lt;span class="normal"&gt;120&lt;/span&gt;
&lt;span class="normal"&gt;121&lt;/span&gt;
&lt;span class="normal"&gt;122&lt;/span&gt;
&lt;span class="normal"&gt;123&lt;/span&gt;
&lt;span class="normal"&gt;124&lt;/span&gt;
&lt;span class="normal"&gt;125&lt;/span&gt;
&lt;span class="normal"&gt;126&lt;/span&gt;
&lt;span class="normal"&gt;127&lt;/span&gt;
&lt;span class="normal"&gt;128&lt;/span&gt;
&lt;span class="normal"&gt;129&lt;/span&gt;
&lt;span class="normal"&gt;130&lt;/span&gt;
&lt;span class="normal"&gt;131&lt;/span&gt;
&lt;span class="normal"&gt;132&lt;/span&gt;
&lt;span class="normal"&gt;133&lt;/span&gt;
&lt;span class="normal"&gt;134&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyvista&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="c1"&gt;# 初始化 Plotter&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plotter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricBohemianDome - 生成一个波希米亚穹顶&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;bohemian_dome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricBohemianDome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Bohemian Dome&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bohemian_dome&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cyan&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricBour - 生成 Bour 的最小曲面&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;bour_surface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricBour&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Bour&amp;#39;s Surface&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bour_surface&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;magenta&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricBoy - 生成 Boy 的曲面，可以通过 zscale 调整高度&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;boy_surface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricBoy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zscale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Boy&amp;#39;s Surface&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;boy_surface&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricDini - 生成 Dini 的曲面&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;dini_surface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricDini&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Dini&amp;#39;s Surface&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dini_surface&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricCatalanMinimal - 生成 Catalan 的最小曲面&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;catalan_surface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricCatalanMinimal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Catalan&amp;#39;s Minimal Surface&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;catalan_surface&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricConicSpiral - 生成类似海螺的圆锥螺旋面&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;conic_spiral&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricConicSpiral&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Conic Spiral&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conic_spiral&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricCrossCap - 生成交叉帽 (一种非定向曲面)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cross_cap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricCrossCap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cross Cap&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cross_cap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricEllipsoid - 生成椭球面，支持 x, y, z 三个轴的半径调整&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ellipsoid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricEllipsoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xradius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yradius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;zradius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Ellipsoid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ellipsoid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;purple&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricEnneper - 生成 Enneper 曲面&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;enneper_surface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricEnneper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Enneper&amp;#39;s Surface&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;enneper_surface&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pink&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricFigure8Klein - 生成一个类似数字8形状的克莱因瓶&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;figure8_klein&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricFigure8Klein&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Figure-8 Klein&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figure8_klein&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;grey&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricHenneberg - 生成 Henneberg 的最小曲面&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;henneberg_surface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricHenneberg&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Henneberg&amp;#39;s Minimal Surface&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;henneberg_surface&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;brown&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricKlein - 生成经典的克莱因瓶&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;klein_surface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricKlein&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Klein Bottle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;klein_surface&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;violet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricKuen - 生成 Kuens 的曲面&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;kuen_surface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricKuen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;deltav0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Kuen&amp;#39;s Surface&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kuen_surface&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lightblue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricMobius - 生成 Möbius 带&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mobius_strip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricMobius&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mobius Strip&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mobius_strip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;darkgreen&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricPluckerConoid - 生成 Plucker 的锥面&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plucker_conoid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricPluckerConoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Plucker&amp;#39;s Conoid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plucker_conoid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;darkblue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricPseudosphere - 生成假球面&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pseudosphere&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricPseudosphere&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Pseudosphere&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pseudosphere&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lightgreen&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricRandomHills - 生成随机丘陵的表面&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;random_hills&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricRandomHills&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numberofhills&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Random Hills&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random_hills&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lightyellow&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricRoman - 生成罗马表面（斯坦纳的曲面）&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;roman_surface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricRoman&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Roman Surface&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;roman_surface&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;brown&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricSuperEllipsoid - 生成超椭球面&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;super_ellipsoid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricSuperEllipsoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xradius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yradius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;zradius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Super Ellipsoid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;super_ellipsoid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pink&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricSuperToroid - 生成超环面&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;super_toroid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricSuperToroid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ringradius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;crosssectionradius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Super Toroid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;super_toroid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ParametricTorus - 生成环面，指定环半径和截面半径&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;torus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParametricTorus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ringradius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;crosssectionradius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Torus&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 展示所有的形状&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Parametric Surfaces&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="data-model"&gt;数据模型（Data Model）&lt;/h2&gt;
&lt;h3 id="_3"&gt;术语&lt;/h3&gt;
&lt;p&gt;似乎很乱！！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DataObject：PyVista中所有数据集的 &lt;strong&gt;基类&lt;/strong&gt;，负责提供内存管理、元数据管理和基本的操作接口，所有具体的数据集类型（如PolyData、ImageData等）都继承自DataObject。&lt;/li&gt;
&lt;li&gt;Data Sets：指的是PyVista中具体的几种数据类型，包括PolyData、StructuredGrid、UnstructuredGrid等，这些数据集包含点、单元格、拓扑等元素，表示不同的数据结构，用于存储几何信息。&lt;/li&gt;
&lt;li&gt;Point Sets：指的是包含离散点（例如顶点）的数据类型，通常用于表示几何物体的离散位置。PolyData是常见的点集数据集，它包含了点、线和面，可以表示复杂的三维几何形状。&lt;/li&gt;
&lt;li&gt;Gridded Data：指规则或非规则网格的数据集，包含在一个规则或不规则的网格上的数值。StructuredGrid、RectilinearGrid和ImageData都属于此类，适用于数据在一定范围内均匀或非均匀分布的情况，通常用于表示体积数据或网格计算结果。&lt;/li&gt;
&lt;li&gt;Composite Datasets：指由多个数据集组成的复合数据类型，允许存储多种不同数据集（如PolyData、ImageData等）并能够将它们组织成层次结构，MultiBlockDataSet是PyVista中常见的复合数据集类型，适用于复杂的多阶段数据分析。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="data-sets"&gt;数据集类（Data Sets）&lt;/h3&gt;
&lt;p&gt;&lt;img alt="data model" src="https://blog.debao.me/images/python/pyvista_data_model.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ImageData：用于表示规则的数据，如医学图像或科学计算中的体积数据，适合存储像素或体素值。&lt;/li&gt;
&lt;li&gt;RectilinearGrid：用于规则网格，但每个维度的坐标可以不同，适用于不均匀坐标分布的网格。&lt;/li&gt;
&lt;li&gt;StructuredGrid：用于规则的网格数据，常用于科学计算，如气象和地质数据。&lt;/li&gt;
&lt;li&gt;PolyData：用于表示 &lt;strong&gt;二维&lt;/strong&gt; 多边形数据，如点云、线段、面等，适合表示曲面模型。Poly是多边形的意思。&lt;/li&gt;
&lt;li&gt;UnstructuredGrid：用于表示不规则网格，支持任意类型的单元，适合复杂计算和仿真应用。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;以上数据集按复杂度从低到高（1到5）排序。也就是说，每个数据集都可以表示为一个UnstructuredGrid，但UnstructuredGrid类需要最多的内存来存储，因为它必须考虑每个单独的点和单元。另一方面，由于vtkImageData（ImageData）是均匀间隔的，几个整数和浮点数就可以描述其形状，因此它需要最少的内存来存储。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="attributes"&gt;属性（Attributes）&lt;/h3&gt;
&lt;p&gt;首先，区分点和单元的概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点 (Points) 表示位置或坐标，是单独的空间元素。&lt;/li&gt;
&lt;li&gt;单元 (Cells) 是由多个点组合而成的几何单元，定义了网格的拓扑结构。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="model" src="https://blog.debao.me/images/python/pyvista_data_model_point_cell.png"&gt;&lt;/p&gt;
&lt;p&gt;而后，引入不同的属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;point_data：包含与数据集中的每个点相关的标量或向量数据，常用于存储点的属性（如温度、速度、密度等），通常用于流场模拟等应用。&lt;/li&gt;
&lt;li&gt;cell_data：包含与数据集中的每个单元格相关的数据，通常用于存储单元格的属性（如应力、体积、标量场值等），适用于有限元分析或网格基准计算。&lt;/li&gt;
&lt;li&gt;field_data：存储与整个数据集相关的全局数据，通常用于存储标量值、数组或其他描述全域特性的信息，例如仿真设置、网格大小或模拟时长等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个使用 point data的例子：&lt;/p&gt;
&lt;p&gt;&lt;img alt="point data" src="https://blog.debao.me/images/python/pyvista_point_data_demo.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyvista&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="c1"&gt;# 创建一个简单的立方体网格&lt;/span&gt;
&lt;span class="n"&gt;mesh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cube&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# 为点数据 (point_data) 分配一个标量值（例如：温度）&lt;/span&gt;
&lt;span class="c1"&gt;# 通过 `point_data` 属性设置数据，值将应用到每个点上&lt;/span&gt;
&lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;point_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;temperature&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建一个 plotter 对象来显示这些数据&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plotter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# 可视化点数据 &amp;quot;temperature&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scalars&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;temperature&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;coolwarm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Point Data: Temperature&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;upper_edge&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_4"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://docs.pyvista.org/api/utilities/geometric&lt;/li&gt;
&lt;li&gt;https://docs.pyvista.org/api/utilities/parametric&lt;/li&gt;
&lt;li&gt;https://docs.pyvista.org/user-guide/data_model&lt;/li&gt;
&lt;li&gt;https://docs.pyvista.org/user-guide/what-is-a-mesh&lt;/li&gt;
&lt;/ul&gt;</content><category term="Python"></category><category term="python"></category></entry><entry><title>PySide6下PyVista小记</title><link href="https://blog.debao.me/2024/12/notes-on-pyvista-with-pyside6/" rel="alternate"></link><published>2024-12-15T20:01:00+08:00</published><updated>2024-12-15T20:01:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-15:/2024/12/notes-on-pyvista-with-pyside6/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/11/a-review-of-the-history-of-qt-and-python-bindings/"&gt;Qt与Python的绑定历史回顾&lt;/a&gt;、&lt;a href="https://blog.debao.me/2024/12/notes-on-matplotlib-with-pyside6/"&gt;PySide6下Matplotlib小记&lt;/a&gt;以及&lt;a href="https://blog.debao.me/2024/12/notes-on-vtk-with-pyside6/"&gt;PySide6下VTK小记&lt;/a&gt;，继续梳理一点点...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="pyvista"&gt;PyVista&lt;/h2&gt;
&lt;p&gt;PyVista 是基于 VTK 的高级封装库，简化了 VTK 的使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高效简洁：PyVista 封装了 VTK 的常用操作，只需 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/11/a-review-of-the-history-of-qt-and-python-bindings/"&gt;Qt与Python的绑定历史回顾&lt;/a&gt;、&lt;a href="https://blog.debao.me/2024/12/notes-on-matplotlib-with-pyside6/"&gt;PySide6下Matplotlib小记&lt;/a&gt;以及&lt;a href="https://blog.debao.me/2024/12/notes-on-vtk-with-pyside6/"&gt;PySide6下VTK小记&lt;/a&gt;，继续梳理一点点...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="pyvista"&gt;PyVista&lt;/h2&gt;
&lt;p&gt;PyVista 是基于 VTK 的高级封装库，简化了 VTK 的使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高效简洁：PyVista 封装了 VTK 的常用操作，只需少量代码即可完成复杂的任务。&lt;/li&gt;
&lt;li&gt;易用性：PyVista 提供了更直观的 API，降低了 VTK 的学习曲线。&lt;/li&gt;
&lt;li&gt;与 Python 生态的集成：PyVista 更加 Pythonic，可以直接与 NumPy、Matplotlib 等库结合使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_1"&gt;例子&lt;/h3&gt;
&lt;p&gt;画个圆锥出来（是比前面直接用vtk要简洁很多）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyvista&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pv&lt;/span&gt;

&lt;span class="n"&gt;cone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plotter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plotter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;window_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background_color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cone&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tan&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;主要用到了Plotter类&lt;/p&gt;
&lt;h3 id="plotter"&gt;Plotter类&lt;/h3&gt;
&lt;p&gt;一些基本用法&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创建 Plotter 对象&lt;/strong&gt;：创建 &lt;code&gt;Plotter&lt;/code&gt; 实例并配置窗口属性：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyvista&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pv&lt;/span&gt;

&lt;span class="n"&gt;plotter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plotter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;window_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background_color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;white&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;添加网格&lt;/strong&gt;：通过 &lt;code&gt;add_mesh&lt;/code&gt; 添加几何体或数据：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;sphere&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sphere&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sphere&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;显示场景&lt;/strong&gt;：通过 show 方法渲染并显示场景：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;设置相机视角&lt;/strong&gt;：控制相机的视角、焦点和位置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;camera_position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;xy&amp;#39;&lt;/span&gt;  &lt;span class="c1"&gt;# 设置相机视角为 XY 平面&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sphere&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;导出渲染&lt;/strong&gt;：将渲染结果保存为文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# 导出为 HTML 交互式文件&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;export_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;interactive_scene.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;多视图布局&lt;/strong&gt;：创建多子图并分别渲染不同数据：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;plotter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Plotter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  &lt;span class="c1"&gt;# 1 行 2 列布局&lt;/span&gt;

&lt;span class="c1"&gt;# 在第一个子图中添加几何体&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sphere&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 在第二个子图中添加几何体&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cube&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_2"&gt;网格类型&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;In PyVista, a mesh is any spatially referenced information and usually consists of geometrical representations of a surface or volume in 3D space.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="data model" src="https://blog.debao.me/images/python/pyvista_data_model.png"&gt;&lt;/p&gt;
&lt;p&gt;所有 PyVista 网格类型都继承自 DataSet 类，表示不同几何类型和数据集类型。以下是 PyVista 的主要网格类型：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;类名&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;适用场景&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;基类&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PointSet&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;表示一组点的数据集，使用显式的“点”数组定义几何。&lt;/td&gt;
&lt;td&gt;仅包含点的几何数据集。&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtk.vtkPointSet&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PolyData&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;表示 1D 和 2D 几何（例如线、多边形、三角形），主要用于表面数据。&lt;/td&gt;
&lt;td&gt;创建表面网格或点云。&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtk.vtkPolyData&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UnstructuredGrid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;支持任意 1D、2D 和 3D 单元的非结构化网格，可包含体单元。&lt;/td&gt;
&lt;td&gt;体数据、复杂几何，或处理生成的子集数据。&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtk.vtkUnstructuredGrid&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;StructuredGrid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;规则排列的点网格，点按坐标轴对齐，单元为 2D 四边形或 3D 六面体。&lt;/td&gt;
&lt;td&gt;使用 &lt;code&gt;numpy.meshgrid&lt;/code&gt; 生成有序网格。&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtk.vtkStructuredGrid&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;RectilinearGrid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;矩形网格，点沿轴对齐但间距不均匀，具有隐式几何。&lt;/td&gt;
&lt;td&gt;轴对齐的规则但间距不均的网格数据。&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtk.vtkRectilinearGrid&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ImageData&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;均匀网格（影像数据），点间距均匀，基于原点和单元大小生成几何。&lt;/td&gt;
&lt;td&gt;影像数据（如 CT/MRI 扫描）。&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtk.vtkImageData&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;MultiBlock&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;多块数据集的容器，可存储多个网格或数据集。&lt;/td&gt;
&lt;td&gt;管理多个数据集作为单一对象。&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtk.vtkMultiBlockDataSet&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PartitionedDataSet&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用于分区管理的复合数据集，封装多个分区。&lt;/td&gt;
&lt;td&gt;处理分区化的数据集。&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtk.vtkPartitionedDataSet&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="pyvistaqt"&gt;pyvistaqt&lt;/h2&gt;
&lt;p&gt;pyvistaqt 专门为Qt的Python绑定提供支持（通过模块pyvistaqt），这样一来，比直接用vtk简单不少：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QtInteractor：PyVista 提供的 QtInteractor 用作 Qt 控件，替换了 VTK 的 QVTKRenderWindowInteractor。&lt;/li&gt;
&lt;li&gt;简化 API：PyVista 的 add_mesh 方法直接处理颜色和网格显示设置，而无需手动设置映射器和演员。&lt;/li&gt;
&lt;li&gt;背景设置：使用 PyVista 的 set_background 设置背景颜色，提升代码可读性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_3"&gt;例子&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PySide6.QtCore&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Qt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PySide6.QtWidgets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QMainWindow&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyvistaqt&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QtInteractor&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyvista&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pv&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PyVistaWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QMainWindow&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setWindowTitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PyVista in PySide6&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setGeometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# 创建 PyVista 对应的 QWidget 控件&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plotter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtInteractor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setCentralWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# 创建锥体并添加到渲染器&lt;/span&gt;
        &lt;span class="n"&gt;cone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cone&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_edges&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# 设置背景颜色&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plotter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_background&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;midnightblue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# 显示窗口&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PyVistaWindow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="qt"&gt;Qt绑定？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;pyvistaqt 借助于pyqt来支持不同的Qt绑定。如果只安装了一种，直接使用，如果装了多个，则需要手动指定。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过环境变量来选择所期望的绑定：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;QT_API&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pyside6&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;可用选项（默认pyqt5)：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pyqt5&lt;/li&gt;
&lt;li&gt;pyside2&lt;/li&gt;
&lt;li&gt;pyqt6&lt;/li&gt;
&lt;li&gt;pyside6&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_4"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://docs.pyvista.org/examples/&lt;/li&gt;
&lt;li&gt;https://docs.pyvista.org/user-guide/what-is-a-mesh&lt;/li&gt;
&lt;li&gt;https://qtdocs.pyvista.org/&lt;/li&gt;
&lt;li&gt;https://qtdocs.pyvista.org/usage.html&lt;/li&gt;
&lt;/ul&gt;</content><category term="Qt"></category><category term="python"></category><category term="pyside"></category><category term="vtk"></category></entry><entry><title>PySide6下VTK小记</title><link href="https://blog.debao.me/2024/12/notes-on-vtk-with-pyside6/" rel="alternate"></link><published>2024-12-15T01:19:00+08:00</published><updated>2024-12-15T01:19:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-15:/2024/12/notes-on-vtk-with-pyside6/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/11/a-review-of-the-history-of-qt-and-python-bindings/"&gt;Qt与Python的绑定历史回顾&lt;/a&gt;与&lt;a href="https://blog.debao.me/2024/12/notes-on-matplotlib-with-pyside6/"&gt;PySide6下Matplotlib小记&lt;/a&gt;，继续梳理一点点...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#vtk"&gt;vtk 是什么&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-vtk"&gt;例子1：使用 vtk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-vtkmodules"&gt;例子2：使用 vtkmodules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#vtk_1"&gt;vtk类&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#vtkwindow"&gt;vtkWindow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vtkrender"&gt;vtkRender&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#qt"&gt;Qt控件？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#pyside"&gt;PySide等绑定的支持？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#qt-qvtkrenderwindowinteractor"&gt;Qt控件 QVTKRenderWindowInteractor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pyside6"&gt;PySide6下使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="vtk"&gt;vtk 是什么&lt;/h2&gt;
&lt;p&gt;VTK（Visualization Toolkit） 是一个开 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/11/a-review-of-the-history-of-qt-and-python-bindings/"&gt;Qt与Python的绑定历史回顾&lt;/a&gt;与&lt;a href="https://blog.debao.me/2024/12/notes-on-matplotlib-with-pyside6/"&gt;PySide6下Matplotlib小记&lt;/a&gt;，继续梳理一点点...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#vtk"&gt;vtk 是什么&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-vtk"&gt;例子1：使用 vtk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-vtkmodules"&gt;例子2：使用 vtkmodules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#vtk_1"&gt;vtk类&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#vtkwindow"&gt;vtkWindow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vtkrender"&gt;vtkRender&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#qt"&gt;Qt控件？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#pyside"&gt;PySide等绑定的支持？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#qt-qvtkrenderwindowinteractor"&gt;Qt控件 QVTKRenderWindowInteractor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pyside6"&gt;PySide6下使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="vtk"&gt;vtk 是什么&lt;/h2&gt;
&lt;p&gt;VTK（Visualization Toolkit） 是一个开源的跨平台库，用于 3D 计算机图形学、图像处理 和 科学数据可视化。它由 Kitware 开发和维护，支持从简单的 2D/3D 图形渲染到复杂的可视化算法应用。它支持多种格式文件：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;格式&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;文件扩展名&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;用途&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;VTK 支持的类&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;特点&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;VTK&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*.vtk&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;VTK 原生格式，用于网格和几何数据&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtkDataSetReader&lt;/code&gt; / &lt;code&gt;vtkDataSetWriter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;支持结构化、非结构化网格及几何；ASCII 和二进制两种模式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;VTU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*.vtu&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;XML 格式的非结构化网格&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtkXMLUnstructuredGridReader&lt;/code&gt; / &lt;code&gt;vtkXMLUnstructuredGridWriter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;XML 格式，支持大数据和并行处理。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;STL&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*.stl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;表面几何模型，常用于 3D 打印&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtkSTLReader&lt;/code&gt; / &lt;code&gt;vtkSTLWriter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;支持 ASCII 和二进制格式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;PLY&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*.ply&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;多边形网格和点云&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtkPLYReader&lt;/code&gt; / &lt;code&gt;vtkPLYWriter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;支持点、边、面以及附加属性（如颜色、法线）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;OBJ&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*.obj&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;表面几何和纹理数据&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtkOBJReader&lt;/code&gt; / &lt;code&gt;vtkOBJExporter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;可存储顶点、面、法线和纹理数据，与 MTL 文件结合支持材质。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;3DS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*.3ds&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;3D Studio 模型&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtk3DSImporter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;早期的三维模型格式，支持材质和几何。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GLTF/GLB&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*.gltf&lt;/code&gt;, &lt;code&gt;*.glb&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;高效传输和渲染的现代格式&lt;/td&gt;
&lt;td&gt;外部库支持（如 PyVista 或 vtk.js）&lt;/td&gt;
&lt;td&gt;支持几何、材质、纹理和动画；GLB 为二进制格式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ExodusII&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*.exo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;有限元分析的科学数据&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtkExodusIIReader&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存储网格、模拟结果和元数据，常用于工程仿真。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;XDMF&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*.xdmf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;高性能科学数据格式&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtkXdmfReader&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;通常与 HDF5 结合使用，支持大规模并行处理。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;NetCDF&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*.nc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;气象和海洋科学网格数据&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtkNetCDFReader&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;存储多维数组数据，支持高效存储和访问。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Ensight&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*.case&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;流体力学和有限元分析数据&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtkEnsightReader&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;支持科学可视化，专为流体仿真设计。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;HDF5&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*.h5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;高性能科学数据格式&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtkHDFReader&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;支持多维数据，提供快速存储和访问。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ParaView State&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*.pvd&lt;/code&gt;, &lt;code&gt;*.pvtu&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;并行科学数据可视化&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vtkPVDReader&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ParaView 支持的格式，适用于并行处理的网格数据。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;LAS/LAZ&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*.las&lt;/code&gt;, &lt;code&gt;*.laz&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;激光雷达点云数据&lt;/td&gt;
&lt;td&gt;外部工具转换后支持&lt;/td&gt;
&lt;td&gt;存储点云数据，包含高度、颜色和反射强度等信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;东西太多，找个最简单的例子，先看看python下如何使用，找找感觉&lt;/p&gt;
&lt;h3 id="1-vtk"&gt;例子1：使用 vtk&lt;/h3&gt;
&lt;p&gt;传统方式，直接导入 &lt;code&gt;vtk&lt;/code&gt; 模块&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;vtk&lt;/span&gt;

&lt;span class="n"&gt;cone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtkConeSource&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;cone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetResolution&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建一个 Mapper，将几何数据映射到图形&lt;/span&gt;
&lt;span class="n"&gt;mapper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtkPolyDataMapper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mapper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetInputConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetOutputPort&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="c1"&gt;# 创建一个 Actor，表示绘制到屏幕上的对象&lt;/span&gt;
&lt;span class="n"&gt;actor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtkActor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;actor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetMapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mapper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建一个 Renderer，负责渲染场景&lt;/span&gt;
&lt;span class="n"&gt;renderer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtkRenderer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;renderer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 设置背景色&lt;/span&gt;

&lt;span class="c1"&gt;# 创建一个 RenderWindow 和 RenderWindowInteractor&lt;/span&gt;
&lt;span class="n"&gt;render_window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtkRenderWindow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;render_window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddRenderer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;render_window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;interactor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtkRenderWindowInteractor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;interactor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetRenderWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;render_window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 将 Actor 添加到 Renderer 中&lt;/span&gt;
&lt;span class="n"&gt;renderer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddActor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;actor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 开始渲染&lt;/span&gt;
&lt;span class="n"&gt;render_window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;interactor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;注，&lt;code&gt;vtk.py&lt;/code&gt;文件内部长这样：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;This is the vtk module&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# this module has the same contents as vtkmodules.all&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkCommonCore&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkWebCore&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkCommonMath&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkCommonTransforms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkCommonDataModel&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkCommonExecutionModel&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkIOCore&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkImagingCore&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkIOImage&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkIOXMLParser&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkIOXML&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkCommonMisc&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkFiltersCore&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkRenderingCore&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkRenderingContext2D&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkRenderingFreeType&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="2-vtkmodules"&gt;例子2：使用 vtkmodules&lt;/h3&gt;
&lt;p&gt;使用 模块化导入方式，理论上更快，但是细节...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例子中前两行代码中没有直接用到，但是必须导入，否则窗口中没有任何内容！？？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkInteractionStyle&lt;/span&gt;  &lt;span class="c1"&gt;# 渲染交互器&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkRenderingOpenGL2&lt;/span&gt;  &lt;span class="c1"&gt;# 渲染窗口&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkFiltersSources&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;vtkConeSource&lt;/span&gt;  &lt;span class="c1"&gt;# 圆锥体源&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkRenderingCore&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;vtkActor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;vtkPolyDataMapper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;vtkRenderer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;vtkRenderWindow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;vtkRenderWindowInteractor&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;# 渲染相关类&lt;/span&gt;

&lt;span class="c1"&gt;# 创建一个圆锥体&lt;/span&gt;
&lt;span class="n"&gt;cone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtkConeSource&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;cone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetResolution&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建一个 Mapper，将几何数据映射到图形&lt;/span&gt;
&lt;span class="n"&gt;mapper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtkPolyDataMapper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mapper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetInputConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetOutputPort&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; 

&lt;span class="c1"&gt;# 创建一个 Actor，表示绘制到屏幕上的对象&lt;/span&gt;
&lt;span class="n"&gt;actor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtkActor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;actor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetMapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mapper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;

&lt;span class="c1"&gt;# 创建一个 Renderer，负责渲染场景&lt;/span&gt;
&lt;span class="n"&gt;renderer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtkRenderer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;renderer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddActor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;actor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;renderer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 创建一个 RenderWindow 和 RenderWindowInteractor&lt;/span&gt;
&lt;span class="n"&gt;render_window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtkRenderWindow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;render_window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddRenderer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;render_window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;interactor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtkRenderWindowInteractor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;interactor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetRenderWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;render_window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 开始渲染&lt;/span&gt;
&lt;span class="n"&gt;render_window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;interactor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="vtk_1"&gt;vtk类&lt;/h2&gt;
&lt;p&gt;和渲染直接相关的类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vtkRenderer   渲染器，负责绘制一个场景。&lt;/li&gt;
&lt;li&gt;vtkRenderWindow   渲染窗口，负责在屏幕上显示内容。&lt;/li&gt;
&lt;li&gt;vtkRenderWindowInteractor 提供与用户的交互功能（缩放、旋转、平移等）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://vtk.org/doc/nightly/html/classvtkRenderer.html"&gt;vtkRenderer&lt;/a&gt; 和 &lt;a href="https://vtk.org/doc/nightly/html/classvtkRenderWindow.html"&gt;vtkRenderWindow&lt;/a&gt;都很复杂。&lt;/p&gt;
&lt;h3 id="vtkwindow"&gt;vtkWindow&lt;/h3&gt;
&lt;p&gt;vtkWindow 类有点多，特别关注：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vtkXOpenGLRenderWindow (Linux默认)&lt;/li&gt;
&lt;li&gt;vtkWin32OpenGLRenderWindow (Windows默认)&lt;/li&gt;
&lt;li&gt;vtkEGLRenderWindow （&lt;code&gt;VTK_OPENGL_HAS_EGL&lt;/code&gt;启用时的默认）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;详细的类继承关系：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vtkWindow
   ├── vtkRenderWindow
   │      ├── vtkOpenGLRenderWindow
   │      │      ├── vtkCocoaOpenGLRenderWindow
   │      │      ├── vtkEGLRenderWindow
   │      │      ├── vtkGenericOpenGLRenderWindow
   │      │      │      ├── vtkExternalOpenGLRenderWindow
   │      │      │      ├── vtkZSpaceGenericRenderWindow
   │      │      ├── vtkIOSRenderWindow
   │      │      ├── vtkOSOpenGLRenderWindow
   │      │      ├── vtkSDL2OpenGLRenderWindow
   │      │      ├── vtkVRRenderWindow
   │      │      │      ├── vtkOpenVRRenderWindow
   │      │      │      ├── vtkOpenXRRenderWindow
   │      │      ├── vtkWebAssemblyOpenGLRenderWindow
   │      │      ├── vtkWin32OpenGLRenderWindow
   │      │      │      ├── vtkWin32OpenGLDXRenderWindo
   │      │      │      ├── vtkZSpaceWin32RenderWindo
   │      │      ├── vtkXOpenGLRenderWindow
   │      ├── vtkWebGPURenderWindow
   │      │      ├── vtkSDL2WebGPURenderWindow
   │      │      ├── vtkWebAssemblyWebGPURenderWindow
   │      │      ├── vtkXWebGPURenderWindow
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="vtkrender"&gt;vtkRender&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vtkViewport
   ├── vtkRender
   │      ├── vtkOpenGLRender
   │      │      ├── vtkExternalOpenGLRender
   │      │      ├── vtkVRRender
   │      │      │      ├── vtkOpenVRRender
   │      │      │      ├── vtkOpenXRRender
   │      │      ├── vtkZSpaceRender
   │      ├── vtkWebGPURender
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="qt"&gt;Qt控件？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;尽管这部分和PySide无关，但由于其对C++ Qt有用，简单列一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;源码目录&lt;code&gt;vtk/GUISupport/Qt&lt;/code&gt;中有一些C++的类，用于提供和Qt的集成。其中有几个和QWidget/QWindow直接相关。&lt;/p&gt;
&lt;p&gt;QVTKOpenGLNativeWidget&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;别名：QVTKRenderWidget &lt;/li&gt;
&lt;li&gt;派生自：&lt;strong&gt;QOpenGLWidget&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;内部使用 vtkGenericOpenGLRenderWindow&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;QVTKOpenGLStereoWidget&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;派生自：&lt;strong&gt;QWidget&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;内部使用 vtkGenericOpenGLRenderWindow 或 vtkRenderWindow&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;QVTKOpenGLWindow&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;派生自：&lt;strong&gt;QOpenGLWindow&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;内部使用 vtkGenericOpenGLRenderWindow 或 vtkRenderWindow&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;手册中说，一般来说，QVTKOpenGLNativeWidget 可能是更好的选择，但对于需要四缓冲（quad-buffer）立体显示的应用程序，基于 QVTKOpenGLWindow 的 QVTKOpenGLStereoWidget 可能是更好的选择。需要注意，QVTKOpenGLStereoWidget 有所有 Qt 中 QWidget::createWindowContainer 造成的缺陷。&lt;/p&gt;
&lt;h2 id="pyside"&gt;PySide等绑定的支持？&lt;/h2&gt;
&lt;p&gt;vtk是一个C++的库，它并没有使用sip或shiboken创建PyQt或PySide的绑定。而是直接尝试找到并使用（这个顺序比matplotlib采用的顺序更符合我的认知/喜好）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PySide6&lt;/li&gt;
&lt;li&gt;PyQt6&lt;/li&gt;
&lt;li&gt;PyQt5&lt;/li&gt;
&lt;li&gt;PySide2&lt;/li&gt;
&lt;li&gt;PyQt4&lt;/li&gt;
&lt;li&gt;PySide&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其 &lt;code&gt;Python/vtkmodules/qt/__init__.py&lt;/code&gt; 源码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;importlib&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="c1"&gt;# PyQtImpl can be set by the user&lt;/span&gt;
&lt;span class="n"&gt;PyQtImpl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;

&lt;span class="c1"&gt;# Has an implementation has been imported yet?&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;impl&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PySide6&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PyQt6&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PyQt5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PySide2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PyQt4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PySide&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;impl&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# Sometimes an attempted import can be crufty (e.g., unclean&lt;/span&gt;
        &lt;span class="c1"&gt;# uninstalls of PyQt5), so let&amp;#39;s try to import the actual functionality&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;importlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;import_module&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;impl&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.QtCore&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;pass&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;PyQtImpl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;impl&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="qt-qvtkrenderwindowinteractor"&gt;Qt控件 QVTKRenderWindowInteractor&lt;/h2&gt;
&lt;p&gt;vtk提供了一个 名为 QVTKRenderWindowInteractor 的类：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;QVTKRenderWindowInteractor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QVTKRWIBaseClass&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;它是从QWidget（或者QOpenGLWidget，或者QGLWidet）派生出来的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Define types for base class, based on string&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;QVTKRWIBase&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;QWidget&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;QVTKRWIBaseClass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QWidget&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;QVTKRWIBase&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;QGLWidget&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;QVTKRWIBaseClass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QGLWidget&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;QVTKRWIBase&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;QOpenGLWidget&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;QVTKRWIBaseClass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QOpenGLWidget&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ImportError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Unknown base class for QVTKRenderWindowInteractor &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;QVTKRWIBase&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;有了这个Widget，和Qt程序集成就不是问题了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与Qt窗口集成&lt;/li&gt;
&lt;li&gt;事件交互&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="pyside6"&gt;PySide6下使用&lt;/h2&gt;
&lt;p&gt;&lt;img alt="pyside6 vtk" src="https://blog.debao.me/images/qt/pyside6_vtk.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PySide6.QtCore&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Qt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PySide6.QtWidgets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QMainWindow&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkFiltersSources&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;vtkConeSource&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkRenderingCore&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;vtkActor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vtkPolyDataMapper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vtkRenderer&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.qt.QVTKRenderWindowInteractor&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QVTKRenderWindowInteractor&lt;/span&gt;

&lt;span class="c1"&gt;# load implementations for rendering and interaction factory classes&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkInteractionStyle&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;vtkmodules.vtkRenderingOpenGL2&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;VTKWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QMainWindow&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setWindowTitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;VTK in PySide6 from 1+1=10&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setGeometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# 创建VTK对应的 QWidget 控件&lt;/span&gt;
        &lt;span class="n"&gt;widget&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QVTKRenderWindowInteractor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setCentralWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# 应用渲染器&lt;/span&gt;
        &lt;span class="n"&gt;ren&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtkRenderer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetRenderWindow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddRenderer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ren&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# 创建 3D 锥体&lt;/span&gt;
        &lt;span class="n"&gt;cone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtkConeSource&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;cone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetResolution&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# 创建映射器并设置输入&lt;/span&gt;
        &lt;span class="n"&gt;coneMapper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtkPolyDataMapper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;coneMapper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetInputConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetOutputPort&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

        &lt;span class="c1"&gt;# 创建演员并设置映射器&lt;/span&gt;
        &lt;span class="n"&gt;coneActor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vtkActor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;coneActor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetMapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coneMapper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# 将演员添加到渲染器&lt;/span&gt;
        &lt;span class="n"&gt;ren&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddActor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coneActor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# 设置渲染器背景颜色&lt;/span&gt;
        &lt;span class="n"&gt;ren&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 深蓝色背景&lt;/span&gt;

        &lt;span class="c1"&gt;# 显示窗口&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="c1"&gt;# 初始化并开始交互&lt;/span&gt;
        &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Initialize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;VTKWindow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_1"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://gitlab.kitware.com/vtk/vtk/-/blob/master/Wrapping/Python/vtkmodules/qt/QVTKRenderWindowInteractor.py&lt;/li&gt;
&lt;li&gt;https://gitlab.kitware.com/vtk/vtk/-/blob/master/Examples/GUI/Qt/MinimalQtVTKApp/&lt;/li&gt;
&lt;li&gt;https://examples.vtk.org/site/Python/&lt;/li&gt;
&lt;li&gt;https://docs.vtk.org/en/latest/build_instructions/index.html&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Qt"></category><category term="python"></category><category term="pyside"></category><category term="vtk"></category></entry><entry><title>PySide6下Matplotlib小记</title><link href="https://blog.debao.me/2024/12/notes-on-matplotlib-with-pyside6/" rel="alternate"></link><published>2024-12-14T12:24:00+08:00</published><updated>2024-12-14T12:24:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-14:/2024/12/notes-on-matplotlib-with-pyside6/</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#8qt"&gt;8种Qt后端&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#qt"&gt;选择Qt绑定的规则&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#qtagg-qtcairo"&gt;QtAgg 与 QtCairo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#qt_1"&gt;Qt 控件对接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#matplotlib"&gt;Matplotlib 基本概念&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#matplotlibapi"&gt;Matplotlib三种API接口（使用层次）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#scriptingpyplot"&gt;Scripting层/隐式pyplot接口&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#artistaxes"&gt;Artist层/显式Axes接口&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#backend"&gt;Backend层&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#matplotlib_1"&gt;Matplotlib 做什么？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;数据可视化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;键鼠事件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;动画支持&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;参考 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#8qt"&gt;8种Qt后端&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#qt"&gt;选择Qt绑定的规则&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#qtagg-qtcairo"&gt;QtAgg 与 QtCairo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#qt_1"&gt;Qt 控件对接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#matplotlib"&gt;Matplotlib 基本概念&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#matplotlibapi"&gt;Matplotlib三种API接口（使用层次）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#scriptingpyplot"&gt;Scripting层/隐式pyplot接口&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#artistaxes"&gt;Artist层/显式Axes接口&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#backend"&gt;Backend层&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#matplotlib_1"&gt;Matplotlib 做什么？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;数据可视化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;键鼠事件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;动画支持&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;突然发现，上次正儿八经使用Matplotlib还是17年在前，除代码还可查外，当时的笔记已不复存在。重新了解一下...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: UTF-8 -*-&lt;/span&gt;

&lt;span class="c1"&gt;#2007.10.1&lt;/span&gt;
&lt;span class="c1"&gt;#--------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;shutil&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;ConfigParser&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SafeConfigParser&lt;/span&gt;
&lt;span class="c1"&gt;#import subprocess&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;threading&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;webbrowser&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;wx&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;wx.stc&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;wx.combo&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt;
&lt;span class="n"&gt;matplotlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;wxAgg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.backends.backend_wxagg&lt;/span&gt; &lt;span class="c1"&gt;# for py2exe&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="8qt"&gt;8种Qt后端&lt;/h2&gt;
&lt;p&gt;在Python下，编写Qt程序，目前有4个绑定选项存在：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PyQt6&lt;/li&gt;
&lt;li&gt;PySide6&lt;/li&gt;
&lt;li&gt;PyQt5&lt;/li&gt;
&lt;li&gt;PySide2&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;老版本的matplotlib还支持 PyQt和PySide，由于其对应的Qt4在2015年就停止支持，应该无需考虑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而每个绑定，又有2个渲染后端可选择：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Agg&lt;/li&gt;
&lt;li&gt;Cairo&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="qt"&gt;选择Qt绑定的规则&lt;/h3&gt;
&lt;p&gt;Matplotlib是如何同时支持这四个的？？官方手册是这么说的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If a binding's QtCore subpackage is already imported, that binding is selected (the order for the check is PyQt6, PySide6, PyQt5, PySide2).&lt;/li&gt;
&lt;li&gt;If the QT_API environment variable is set to one of "PyQt6", "PySide6", "PyQt5", "PySide2" (case-insensitive), that binding is selected. (See also the documentation on Environment variables.)&lt;/li&gt;
&lt;li&gt;Otherwise, the first available backend in the order PyQt6, PySide6, PyQt5, PySide2 is selected.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;挺啰嗦，不如看代码直观：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;QT_API_ENV&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;QT_API&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;QT_API_ENV&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;QT_API_ENV&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QT_API_ENV&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;_ETS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="c1"&gt;# Mapping of QT_API_ENV to requested binding.&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;pyqt6&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;QT_API_PYQT6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pyside6&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;QT_API_PYSIDE6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;pyqt5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;QT_API_PYQT5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pyside2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;QT_API_PYSIDE2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;# First, check if anything is already imported.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;modules&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PyQt6.QtCore&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;QT_API&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QT_API_PYQT6&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;modules&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PySide6.QtCore&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;QT_API&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QT_API_PYSIDE6&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;modules&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PyQt5.QtCore&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;QT_API&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QT_API_PYQT5&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;modules&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PySide2.QtCore&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;QT_API&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QT_API_PYSIDE2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;考虑到Qt5生命周期明年就结束了，我们可以只考虑PyQt6和 PySide6两兄弟，同时我也不喜欢设置环境变量&lt;code&gt;QT_API&lt;/code&gt;，那么可以这么简单理解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果Python中只安装PyQt6或PySide6中一个，装哪个用哪个&lt;/li&gt;
&lt;li&gt;如果同时装了2个，默认使用PyQt6，除非使用matplotlib前&lt;code&gt;import PySide6.QtCore&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;由于PyQt不支持LGPL协议，原则上，不管是否商用，只考虑PySide6就够了。如果要支持Windows7，可以考虑PySide2。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="qtagg-qtcairo"&gt;QtAgg 与 QtCairo&lt;/h3&gt;
&lt;p&gt;除了不同的Qt绑定外，它还有不同的渲染后端支持&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QtAgg：使用 Anti-Grain Geometry 这一个 C++ 库来渲染，适合需要快速渲染和交互的应用。&lt;/li&gt;
&lt;li&gt;QtCairo：使用  Cairo 库来渲染，提供更高质量的图形渲染，尤其在文本和矢量图形方面。速度慢。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;默认使用的QtAgg后端，同样它有多种方式可以用来指定：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;rcParams["backend"]&lt;/code&gt; 参数，通过代码，或者matplotlibrc文件&lt;/li&gt;
&lt;li&gt;使用环境变量 &lt;code&gt;MPLBACKEND&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;使用函数 &lt;code&gt;matplotlib.use()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="qt_1"&gt;Qt 控件对接&lt;/h2&gt;
&lt;p&gt;要在PySide6中使用 matplotlib，首要就是找到matplotlib提供的QWidget在哪里：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.backends.backend_qtagg&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FigureCanvas&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.backends.backend_qtagg&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;NavigationToolbar2QT&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;NavigationToolbar&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;上面两个都是QWidget的派生类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FigureCanvas 派生自 QWidget：源码 &lt;code&gt;class FigureCanvasQT(FigureCanvasBase, QtWidgets.QWidget):&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;NavigationToolbar2QT 派生自 QToolBar：源码 &lt;code&gt;class NavigationToolbar2QT(NavigationToolbar2, QtWidgets.QToolBar):&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外，不少matplotlib为主的例子中，会这么写：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.backends.qt_compat&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QtWidgets&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;只是为了隐藏不同的Qt绑定的细节，对于库通用性有意义，应用程序中使用它意义不大。&lt;/p&gt;
&lt;h2 id="matplotlib"&gt;Matplotlib 基本概念&lt;/h2&gt;
&lt;p&gt;先看一张图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="matplotlib with pyside6" src="https://blog.debao.me/images/qt/matplotlib_pyside6.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;图中有四个图表，每个叫做一个 Axes&lt;/li&gt;
&lt;li&gt;四个 Axes 都位于同一个 Figure 中（Figure 是顶层容器）&lt;/li&gt;
&lt;li&gt;Figure 渲染到一个 QWidget 中（这个QWidget就是 FigureCanvas）&lt;/li&gt;
&lt;li&gt;PySide6 将这个 QWidget作为窗口显示出来&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;抛开FigureCanvas这种底层细节不说，Matplotlib中东西也挺多，一些主要的概念如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;概念&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;作用&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Figure&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Figure&lt;/code&gt; 是顶级容器，承载整个图形的所有元素，类似于空白画布，用来绘制可视化内容。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Axes&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Axes&lt;/code&gt; 是 &lt;code&gt;Figure&lt;/code&gt; 中的矩形区域，提供坐标系，是绘制数据的地方，一个 &lt;code&gt;Figure&lt;/code&gt; 可以包含多个 &lt;code&gt;Axes&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Axis&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Axis&lt;/code&gt; 代表 x 轴和 y 轴，定义数据范围、刻度位置、刻度标签和坐标轴标签，控制刻度间距和定位。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Marker&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Marker&lt;/code&gt; 是表示单个数据点的符号，常用于散点图中区分不同的数据点，形状如圆形、方形、三角形等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Lines&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Lines&lt;/code&gt; 连接数据点，通常用于折线图、带连接点的散点图等，表示数据点之间的关系或趋势。可自定义样式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Title&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Title&lt;/code&gt; 是图形的描述性文本，通常显示在顶部，为可视化提供背景信息或数据描述。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Axis Labels&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Axis Labels&lt;/code&gt; 是描述 x 轴和 y 轴的文本，帮助理解数据及其单位或其他相关信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Ticks&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ticks&lt;/code&gt; 是沿坐标轴的刻度标记，帮助用户理解图形的比例和数据位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Tick Labels&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Tick Labels&lt;/code&gt; 是刻度上的文本，显示与刻度对应的数据值，可以进行格式化或单位显示。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Legend&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Legend&lt;/code&gt; 是图例，解释图形中的符号或颜色，帮助用户理解不同数据系列或类别的含义。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Grid Lines&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Grid Lines&lt;/code&gt; 是辅助的横纵线，帮助用户更容易识别数据的模式或趋势。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Spines&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Spines&lt;/code&gt; 是围绕绘图区域的边框线，分隔图形区域与外部空间，可以进行自定义以改变边框的外观。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;另外，关注 Artist 和 Patch，手册中有个&lt;a href="https://matplotlib.org/stable/api/artist_api.html#matplotlib.artist.Artist"&gt;类图&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="matplotlibapi"&gt;Matplotlib三种API接口（使用层次）&lt;/h2&gt;
&lt;p&gt;从易到难，Matplotlib 有三个使用层次：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;接口层次&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;作用&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;特点&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;适用场景&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Scripting Layer&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;提供简单的绘图接口，适合快速绘制常见图形，类似 MATLAB 风格。&lt;/td&gt;
&lt;td&gt;简单、自动管理，快速绘图。&lt;/td&gt;
&lt;td&gt;快速原型、常见绘图任务、日常数据可视化。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Artist Layer&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;提供对图形元素的精细控制，可以自定义图形的所有细节。&lt;/td&gt;
&lt;td&gt;高度定制、灵活，直接控制图形对象的外观和行为。&lt;/td&gt;
&lt;td&gt;复杂可视化任务、高度定制的绘图。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Backend Layer&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;控制图形的渲染和输出，决定如何显示或保存图形。&lt;/td&gt;
&lt;td&gt;渲染图形到屏幕或文件，支持不同的图形工具包和设备。&lt;/td&gt;
&lt;td&gt;图形文件输出、非交互式渲染、与图形工具包交互。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="scriptingpyplot"&gt;Scripting层/隐式pyplot接口&lt;/h3&gt;
&lt;p&gt;类似Matlab风格（好吧，因为太贵，我从没用过matlab），叫做octave风格？&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;X Axis&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y Axis&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Debao&amp;#39;s Simple Plot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="artistaxes"&gt;Artist层/显式Axes接口&lt;/h3&gt;
&lt;p&gt;按部就班，一层层构建&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;

&lt;span class="c1"&gt;# 创建Figure和Axes对象&lt;/span&gt;
&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# 使用Axes对象绘制数据&lt;/span&gt;
&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# 修改线条属性&lt;/span&gt;
&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_linewidth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 设置坐标轴标签和标题&lt;/span&gt;
&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;X Axis&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y Axis&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Debao&amp;#39;s Artist Layer Example&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 显示图形&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="backend"&gt;Backend层&lt;/h3&gt;
&lt;p&gt;这个是我们最关注的，使用PySide6时，将Figure装进 FigureCanvas（一个QWidget）中，而后和Qt程序对接上了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PySide6.QtWidgets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QMainWindow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QVBoxLayout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QWidget&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.backends.backend_qtagg&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FigureCanvasQTAgg&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;FigureCanvas&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PlotWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QMainWindow&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setWindowTitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Debao&amp;#39;s Matplotlib with PySide6&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# 创建Matplotlib图形&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;X Axis&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y Axis&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Simple Plot&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# 创建画布，并将其添加到窗口&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;canvas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FigureCanvas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;layout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QVBoxLayout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;container&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QWidget&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setLayout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setCentralWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PlotWindow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="matplotlib_1"&gt;Matplotlib 做什么？&lt;/h2&gt;
&lt;h3 id="_1"&gt;数据可视化&lt;/h3&gt;
&lt;p&gt;Matplotlib 支持多种数据类型的可视化，包括但不限于：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;配对数据 (Pairwise Data)&lt;/strong&gt;：使用散点图、成对关系图等展示数据点间的关系。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;统计分布 (Statistical Distributions)&lt;/strong&gt;：通过直方图、密度图等展示数据的分布特性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网格数据 (Gridded Data)&lt;/strong&gt;：使用热图、等高线图等展示规则网格上的数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;非规则网格数据 (Irregularly Gridded Data)&lt;/strong&gt;：通过散点图、三角网格图等展示不规则网格数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;三维和体积数据 (3D and Volumetric Data)&lt;/strong&gt;：通过 3D 图、体积图等展示空间数据。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;手册中有很直观的 &lt;a href="https://matplotlib.org/stable/gallery/index.html"&gt;Gallery&lt;/a&gt; 可以参考。&lt;/p&gt;
&lt;p&gt;试着放个简单的例子，一组数据，应该是姿势不对，两种方式结果不同（似乎各有各的不准）：&lt;/p&gt;
&lt;p&gt;&lt;img alt="contour" src="https://blog.debao.me/images/qt/matplotlib_grid_contour.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;

&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;span class="n"&gt;Y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;

&lt;span class="n"&gt;Z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contour&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;viridis&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Data Points&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Contour Plot&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tricontour&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;viridis&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Data Points&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Tricontour Plot&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tight_layout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_2"&gt;键鼠事件&lt;/h3&gt;
&lt;p&gt;对于Qt后端，可以处理一些鼠标事件（尽管不强）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://matplotlib.org/stable/users/explain/figure/event_handling.html&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_3"&gt;动画支持&lt;/h3&gt;
&lt;p&gt;还有简单的动画支持&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://matplotlib.org/stable/users/explain/animations/animations.html&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_4"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://matplotlib.org/stable/api/backend_qt_api.html&lt;/li&gt;
&lt;li&gt;https://matplotlib.org/stable/users/explain/figure/api_interfaces.html&lt;/li&gt;
&lt;li&gt;https://doc.qt.io/qtforpython-6/examples/example_external_matplotlib_widget_gaussian.html&lt;/li&gt;
&lt;li&gt;https://ajaytech.co/matplotlib/&lt;/li&gt;
&lt;li&gt;https://www.geeksforgeeks.org/python-introduction-matplotlib/&lt;/li&gt;
&lt;li&gt;https://matplotlib.org/stable/gallery/images_contours_and_fields/irregulardatagrid.html&lt;/li&gt;
&lt;/ul&gt;</content><category term="Qt"></category><category term="python"></category><category term="pyside"></category></entry><entry><title>静电吸盘E-Chuck小记</title><link href="https://blog.debao.me/2024/12/notes-on-electrostatic-chuck/" rel="alternate"></link><published>2024-12-13T19:13:00+08:00</published><updated>2024-12-13T19:13:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-13:/2024/12/notes-on-electrostatic-chuck/</id><summary type="html">&lt;p&gt;静电吸盘/静电夹具（electrostatic chuck，E-Chuck，ESC）是一种利用人为地产生静电力来夹持、固定和拾取工件（workpiece）的夹具。&lt;/p&gt;
&lt;p&gt;&lt;img alt="echuck" src="https://blog.debao.me/images/sem/struct_echuck_ct.png"&gt;&lt;/p&gt;
&lt;p&gt;图片来源：&lt;a href="https://creative-technology.co.jp/esc-e/"&gt;creative-technology&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;与机械夹具相 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;静电吸盘/静电夹具（electrostatic chuck，E-Chuck，ESC）是一种利用人为地产生静电力来夹持、固定和拾取工件（workpiece）的夹具。&lt;/p&gt;
&lt;p&gt;&lt;img alt="echuck" src="https://blog.debao.me/images/sem/struct_echuck_ct.png"&gt;&lt;/p&gt;
&lt;p&gt;图片来源：&lt;a href="https://creative-technology.co.jp/esc-e/"&gt;creative-technology&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;与机械夹具相比，它有如下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非机械夹持：通过静电力固定物体，避免了传统夹具的物理压力，保护精密材料并节省空间。&lt;/li&gt;
&lt;li&gt;均匀夹持力：提供一致的夹持力，确保物体稳定并保持平整，优于真空夹具。&lt;/li&gt;
&lt;li&gt;温度控制：通过电力调节基板温度，确保最佳加工条件，减少热应力。&lt;/li&gt;
&lt;li&gt;多功能性：适用于各种材料、形状和尺寸，提供灵活的夹持解决方案。&lt;/li&gt;
&lt;li&gt;减少粒子污染：避免物理接触，降低洁净室中的粒子污染风险，关键于半导体制造。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;结构&lt;/h2&gt;
&lt;p&gt;&lt;img alt="struct" src="https://blog.debao.me/images/sem/struct_echuck.png"&gt;&lt;/p&gt;
&lt;p&gt;图片来源：&lt;a href="https://www.shinko.co.jp/english/product/equipment/esc.php"&gt;shinko&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ceramic Disk（陶瓷盘）：晶圆直接与之接触并被吸附&lt;/li&gt;
&lt;li&gt;Electrode（电极）：施加电压产生电场，从而使物体吸附在盘上。&lt;/li&gt;
&lt;li&gt;Heater（加热器）：用于控制静电吸盘的温度&lt;/li&gt;
&lt;li&gt;Baseplate（底板）：提供结构支撑&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;类型&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;库仑型&lt;/strong&gt; (Coulombic)&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;约翰森-拉布克型&lt;/strong&gt; (Johnsen-Rahbek)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;工作原理&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;基于库仑定律，电荷间的吸引力；施加直流电压，诱发物体表面相反电荷。&lt;/td&gt;
&lt;td&gt;使用交流电压在电介质表面产生高导电状态，依靠电流流动夹持物体。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;电源&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;直流&lt;/td&gt;
&lt;td&gt;交流&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;介电层&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;绝缘材料&lt;/td&gt;
&lt;td&gt;具有导电性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;接触要求&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;不依赖物理接触，电场作用即可。&lt;/td&gt;
&lt;td&gt;需要物体表面与电介质有接触，表面不平整时可能无法有效夹持。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;夹持力&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;夹持力较为均匀，适合精确夹持。&lt;/td&gt;
&lt;td&gt;在接触区域产生较强的夹持力，但如果接触不良，夹持力较弱。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_3"&gt;加热/水冷&lt;/h3&gt;
&lt;p&gt;保持温度均一性很重要&lt;/p&gt;
&lt;p&gt;&lt;img alt="header" src="https://blog.debao.me/images/sem/struct_of_echuck_with_heater.png"&gt;&lt;/p&gt;
&lt;p&gt;图片来源：&lt;a href="https://upt-co.com/en/product-technology/metal-foil-heaters-for-electrostatic-chucks/"&gt;upt-co&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="dechuck"&gt;Dechuck&lt;/h3&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;h3 id="ceramics"&gt;陶瓷（Ceramics）&lt;/h3&gt;
&lt;p&gt;一般用到氧化铝或氮化铝陶瓷。什么是陶瓷？先看一下材料分类：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;材料类型&lt;/strong&gt; (Material Type)&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;主要特点&lt;/strong&gt; (Key Characteristics)&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;典型材料&lt;/strong&gt; (Typical Materials)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;金属材料&lt;/strong&gt; (Metals)&lt;/td&gt;
&lt;td&gt;- 导电性和导热性好&lt;br&gt;- 延展性强&lt;br&gt;- 高强度&lt;/td&gt;
&lt;td&gt;铁 (Iron), 铜 (Copper), 铝 (Aluminum), 钢 (Steel)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;陶瓷材料&lt;/strong&gt; (Ceramics)&lt;/td&gt;
&lt;td&gt;- 高硬度、耐高温&lt;br&gt;- 良好的耐腐蚀性&lt;br&gt;- 脆性较大&lt;/td&gt;
&lt;td&gt;氧化铝 (Aluminum Oxide), 氮化硅 (Silicon Nitride), 陶瓷 (Ceramics)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;聚合物材料&lt;/strong&gt; (Polymers)&lt;/td&gt;
&lt;td&gt;- 轻质&lt;br&gt;- 柔韧性强&lt;br&gt;- 良好的耐化学腐蚀性&lt;br&gt;- 可塑性强&lt;/td&gt;
&lt;td&gt;塑料 (Plastic), 橡胶 (Rubber), 纤维 (Fibers), 尼龙 (Nylon)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;复合材料&lt;/strong&gt; (Composites)&lt;/td&gt;
&lt;td&gt;- 轻质高强&lt;br&gt;- 耐腐蚀、耐高温&lt;br&gt;- 设计灵活、性能可定制&lt;/td&gt;
&lt;td&gt;玻璃钢 (Fiberglass), 碳纤维复合材料 (Carbon Fiber Composites), 木材复合材料 (Wood Composites)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;半导体材料&lt;/strong&gt; (Semiconductors)&lt;/td&gt;
&lt;td&gt;- 可控电导性&lt;br&gt;- 对外界环境敏感&lt;/td&gt;
&lt;td&gt;硅 (Silicon), 锗 (Germanium), 氮化镓 (Gallium Nitride)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;“Ceramics” 这个词来源于希腊语“keramos”，意思是“陶土”或“粘土”。它指的是通过高温烧制的无机非金属材料，通常由粘土、石英、长石和其他天然矿物质组成。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_4"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://www.shinko.co.jp/english/product/equipment/esc.php&lt;/li&gt;
&lt;li&gt;https://creative-technology.co.jp/esc-e/&lt;/li&gt;
&lt;li&gt;https://creative-technology.co.jp/esc-e/genri-e/&lt;/li&gt;
&lt;li&gt;https://www.electrogrip.com/egrip2023/support/assets/Principles7_3faq.pdf&lt;/li&gt;
&lt;li&gt;https://www.spellmanhv.com/en/high-voltage-power-supplies/Industries/Applications/E-Chuck&lt;/li&gt;
&lt;li&gt;https://www.advancedenergy.com/en-us/products/high-voltage-power-supplies/e-chuck/&lt;/li&gt;
&lt;li&gt;https://www.matsusada.com/application/ps/electrostatic_chuck/&lt;/li&gt;
&lt;li&gt;https://patents.google.com/patent/CN102160167B/zh&lt;/li&gt;
&lt;li&gt;https://www.jstage.jst.go.jp/article/pfr/3/0/3_0_051/_pdf&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tools"></category><category term="SEM"></category></entry><entry><title>电子显微镜SEM、TEM、STEM小记</title><link href="https://blog.debao.me/2024/12/notes-on-electron-microscopy-sem-tem-and-stem/" rel="alternate"></link><published>2024-12-12T20:35:00+08:00</published><updated>2024-12-12T20:35:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-12:/2024/12/notes-on-electron-microscopy-sem-tem-and-stem/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;简单罗列一下，后面慢慢完善。只涉及仪器类，不涉及半导体ebeam设备&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;术语&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;发展历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;商业公司？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_4"&gt;境外公司&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#zeiss"&gt;Zeiss（蔡司）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hitachi"&gt;Hitachi（日立）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#jeol"&gt;JEOL（日本电子 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;简单罗列一下，后面慢慢完善。只涉及仪器类，不涉及半导体ebeam设备&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;术语&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;发展历史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;商业公司？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_4"&gt;境外公司&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#zeiss"&gt;Zeiss（蔡司）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hitachi"&gt;Hitachi（日立）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#jeol"&gt;JEOL（日本电子，捷欧路）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#thermo-fisher-scientific"&gt;Thermo Fisher Scientific（赛默飞世尔科技）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tescan"&gt;TESCAN（泰斯肯）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coxem"&gt;COXEM（库赛姆）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#delong-instruments"&gt;Delong Instruments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#temic"&gt;TEMIC（台湾电镜仪器）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nanoimages"&gt;NanoImages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#modulesci"&gt;ModuleSci&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;曾经涉足&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#siemens"&gt;Siemens（西门子）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fei-company"&gt;FEI Company&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#phenom-world"&gt;Phenom-World（飞纳电镜）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#philips"&gt;Philips（飞利浦）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cambridge-instruments"&gt;Cambridge Instruments（剑桥仪器公司）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#amray"&gt;Amray（阿姆雷）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;中国大陆&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_7"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;术语&lt;/h2&gt;
&lt;p&gt;&lt;img alt="TEM SEM STEM" src="https://blog.debao.me/images/sem/tem_sem_stem.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;【TEM】透射电子显微镜（Transmission Electron Microscope）：是最早发展出来的电子显微镜，为了和后面STEM区分，有时也叫做常规透射电子显微镜（Conventional Transmission Electron Microscope，CTEM）&lt;/li&gt;
&lt;li&gt;【SEM】扫描电子显微镜 (Scanning Electron Microscope) &lt;/li&gt;
&lt;li&gt;【STEM】扫描透射电子显微镜（Scanning Transmission Electron Microscope）：结合了TEM和SEM的技术特点，通过电子束扫描样品并在透射模式下成像。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;发展历史&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1924 年，法国物理学家路易·德布罗意（Louis de Broglie）提出电子具有波粒二象性的假设。该理论表明电子的波长远小于可见光波长，也就预示着可以突破光学显微镜的分辨率极限，为电子显微镜的发明奠定了理论基础。德布罗意获得1929年诺贝尔物理学奖。&lt;/li&gt;
&lt;li&gt;1926 年，德国物理学家布许（H. Brush）发现磁场或静电场可以用作“电子透镜”，用于聚焦电子束，提出了电子在磁场中的运动理论。这一发现为构建电子光学系统提供了可能性，开启了电子光学研究的领域。&lt;/li&gt;
&lt;li&gt;【TEM】1932 年，德国科学家马克斯·克诺尔（Max Knoll）和恩斯特·鲁斯卡（Ernst Ruska）发明了第一台透射电子显微镜（TEM）。这台显微镜能够成像电子源，并证明了电子显微镜的可行性，标志着电子显微镜的诞生。Ernst Ruska 因此获得 1986 年诺贝尔物理学奖。&lt;/li&gt;
&lt;li&gt;【TEM】1933 年，恩斯特·鲁斯卡改进了透射电子显微镜，使其可以成像样品，而不仅是电子源。此后，电子显微镜的分辨率逐渐超过光学显微镜。&lt;/li&gt;
&lt;li&gt;【SEM】1935 年，马克斯·克诺尔生成了固体表面的电子扫描图像。这一实验验证了使用电子束扫描表面来获取图像的可能性，为扫描电子显微镜（SEM）的发展奠定了实验基础。&lt;/li&gt;
&lt;li&gt;【SEM】1940 年，德国物理学家冯·阿登纳（Manfred von Ardenne）在其研究中正式提出了扫描电子显微镜（SEM）的概念，并对其理论框架进行了总结。奠定了现代 SEM 的基础。&lt;/li&gt;
&lt;li&gt;1946 年，第二次世界大战后，电子显微镜的建设和发展得到重新推动。同年，像散校正器（stigmator）的发明解决了物镜像差问题，大幅提高了显微镜的成像质量。&lt;/li&gt;
&lt;li&gt;1950 年代，透射电子显微镜（TEM）逐步实现商业化应用，分辨率达到当时的亚纳米级水平。&lt;/li&gt;
&lt;li&gt;【STEM】1965 年，扫描透射电子显微镜（STEM）概念提出，结合了 TEM 和 SEM 的工作原理，使透射和扫描成像功能合二为一。&lt;/li&gt;
&lt;li&gt;【Cryo-EM】1970 年代，瑞士科学家 Jacques Dubochet 提出了冷冻电镜的概念。他尝试通过快速冷冻样品并使用低温条件下的电子显微镜观察样品，以避免样品因电子束轰击而受损。同时，Joachim Frank 开发了单颗粒分析方法，为 Cryo-EM 的发展奠定了重要基础。&lt;/li&gt;
&lt;li&gt;【Cryo-EM】1980 年代，Jacques Dubochet 和团队在快速冷冻技术（vitrification）的基础上，开发了冷冻样品制备的方法。他们首次成功在冷冻电镜中观察到了生物样品的结构。同时，Richard Henderson 利用冷冻电镜解析了蛋白质的三维结构。冷冻电镜成为生物样品研究的重要工具。Jacques Dubochet、Joachim Frank 和 Richard Henderson 因此获得 2017 年诺贝尔化学奖。&lt;/li&gt;
&lt;li&gt;1987年，环扫电镜面世&lt;/li&gt;
&lt;li&gt;1990年，飞利浦发布由PC控制的XL电镜，扫描电镜开始数字化&lt;/li&gt;
&lt;li&gt;1990 年代，场发射扫描电子显微镜（FESEM）问世，显著提高了表面成像的分辨率和对比度。&lt;/li&gt;
&lt;li&gt;1993年，双束电镜面世&lt;/li&gt;
&lt;li&gt;1997 年：德国科学家 Max Haider 等人开发了第一个实用化的球差矫正器，用于透射电子显微镜（TEM）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;h2 id="_3"&gt;商业公司？&lt;/h2&gt;
&lt;p&gt;主要玩家、历史玩家&lt;/p&gt;
&lt;h3 id="_4"&gt;境外公司&lt;/h3&gt;
&lt;p&gt;Zeiss、Thermo Fisher、JEOL、Hitachi、TeScan，...&lt;/p&gt;
&lt;h4 id="zeiss"&gt;Zeiss（蔡司）&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Zeiss，德语，注意发音 /zaɪs/。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;成立于 1846 年  &lt;/li&gt;
&lt;li&gt;1950 年代进入电子显微镜市场，专注于高端扫描电子显微镜（SEM）和透射电子显微镜（TEM）。  &lt;/li&gt;
&lt;li&gt;并购历史  &lt;ul&gt;
&lt;li&gt;1995 年，与 Cambridge Instruments 合并成立 LEO Electron Microscopy，整合 SEM 和 TEM 技术  &lt;/li&gt;
&lt;li&gt;2001 年，全面收购 LEO，将其整合为蔡司显微镜部门，推出 Ultra 和 Gemini 系列高端 SEM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="hitachi"&gt;Hitachi（日立）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;成立于 1910 年  &lt;/li&gt;
&lt;li&gt;1942 年制造日本第一台 TEM，1964 年推出商用 SEM  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="jeol"&gt;JEOL（日本电子，捷欧路）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;成立于 1949 年  &lt;/li&gt;
&lt;li&gt;1950 年代推出首台商用 TEM，并扩展到 SEM 和 STEM  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="thermo-fisher-scientific"&gt;Thermo Fisher Scientific（赛默飞世尔科技）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;成立于 2006 年（由 Thermo Electron 和 Fisher Scientific 合并）  &lt;/li&gt;
&lt;li&gt;并购历史  &lt;ul&gt;
&lt;li&gt;2016 年，收购 FEI 后，成为电子显微镜市场的领导者  &lt;/li&gt;
&lt;li&gt;2017 年，收购 Phenom-World，扩展了在桌面 SEM 市场的覆盖范围  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="tescan"&gt;TESCAN（泰斯肯）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;成立于 1991 年  &lt;/li&gt;
&lt;li&gt;专注于中低端 SEM 和定制化显微镜，以高性价比迅速占据市场  &lt;/li&gt;
&lt;li&gt;并购历史  &lt;ul&gt;
&lt;li&gt;2013 年，收购 Orsay Physics，一家专注于 FIB 和电子束技术的法国公司  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="coxem"&gt;COXEM（库赛姆）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;成立于 2007 年  &lt;/li&gt;
&lt;li&gt;专注于小型扫描电子显微镜（SEM），提供高性价比产品  &lt;/li&gt;
&lt;li&gt;产品主要面向工业质量控制、教育市场和中小型实验室  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="delong-instruments"&gt;Delong Instruments&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;成立于1992年？总部在捷克  &lt;/li&gt;
&lt;li&gt;专注于低能量透射电子显微镜（LVEM），适用于生物材料、聚合物和其他敏感样品研究  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="temic"&gt;TEMIC（台湾电镜仪器）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;成立于2013年&lt;/li&gt;
&lt;li&gt;桌面型电镜&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="nanoimages"&gt;NanoImages&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;总部在韩国&lt;/li&gt;
&lt;li&gt;专注于扫描电子显微镜（SEM），提供高性价比的工业和教育解决方案  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="modulesci"&gt;ModuleSci&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;成立于2017年，韩国&lt;/li&gt;
&lt;li&gt;桌面电镜&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_5"&gt;曾经涉足&lt;/h3&gt;
&lt;h4 id="siemens"&gt;Siemens（西门子）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;成立于 1847 年  &lt;/li&gt;
&lt;li&gt;1939 年推出世界上第一台商用透射电子显微镜（TEM），名为 Siemens "Übermikroskop"  &lt;/li&gt;
&lt;li&gt;1970 年代退出电子显微镜市场  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="fei-company"&gt;FEI Company&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;成立于 1971 年  &lt;/li&gt;
&lt;li&gt;最初专注于离子束技术，1990 年代进入 SEM 和 TEM 市场  &lt;/li&gt;
&lt;li&gt;并购历史  &lt;ul&gt;
&lt;li&gt;1997 年，收购 Philips 的电子显微镜部门，扩展产品线  &lt;/li&gt;
&lt;li&gt;2016 年，被 Thermo Fisher Scientific 以 42 亿美元收购  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="phenom-world"&gt;Phenom-World（飞纳电镜）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;成立于 2006 年，原为 FEI 的一个部门，专注于桌面扫描电子显微镜（Desktop SEM）的研发  &lt;/li&gt;
&lt;li&gt;并购历史  &lt;ul&gt;
&lt;li&gt;2017 年，被 Thermo Fisher Scientific 收购  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="philips"&gt;Philips（飞利浦）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;成立于 1891 年  &lt;/li&gt;
&lt;li&gt;1950 年代推出高性能 TEM，并成为 STEM 技术先驱之一  &lt;/li&gt;
&lt;li&gt;并购历史  &lt;ul&gt;
&lt;li&gt;1997 年，电子显微镜部门被 FEI 收购，退出电子显微镜市场  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="cambridge-instruments"&gt;Cambridge Instruments（剑桥仪器公司）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;成立于 1881 年  &lt;/li&gt;
&lt;li&gt;1960 年代开发了世界上第一台商用 SEM，推动表面科学与材料分析的发展  &lt;/li&gt;
&lt;li&gt;并购历史  &lt;ul&gt;
&lt;li&gt;1995 年，与蔡司电子光学部门合并成立 LEO Electron Microscopy  &lt;/li&gt;
&lt;li&gt;2001 年，被蔡司全面收购  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="amray"&gt;Amray（阿姆雷）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;成立于 1963 年  &lt;/li&gt;
&lt;li&gt;扫描电子显微镜（SEM）的早期开发者之一 &lt;/li&gt;
&lt;li&gt;并购历史 &lt;ul&gt;
&lt;li&gt;1997 年，被 KLA-Tencor 收购。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_6"&gt;中国大陆&lt;/h3&gt;
&lt;p&gt;大陆的电子显微镜研发从1950年代就开始了，长春、上海、南京、北京、云南各地一度开发都很活跃；1980年代中科科仪引入的Amray的电镜技术似乎成了国产电镜独苗；直到2010年代后期国内电镜市场再次“繁荣起来”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中科科仪&lt;/li&gt;
&lt;li&gt;聚束科技【x】&lt;/li&gt;
&lt;li&gt;纳克微束&lt;/li&gt;
&lt;li&gt;惠然科技&lt;/li&gt;
&lt;li&gt;伯锐锶&lt;/li&gt;
&lt;li&gt;国仪量子&lt;/li&gt;
&lt;li&gt;慧炬科技（广州生物岛）&lt;/li&gt;
&lt;li&gt;屹东光学（苏州医工所）&lt;/li&gt;
&lt;li&gt;泽攸科技&lt;/li&gt;
&lt;li&gt;深圳善时&lt;/li&gt;
&lt;li&gt;博众仪器&lt;/li&gt;
&lt;li&gt;国镜仪器&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上公司中，半数都可以追溯到成立于2006年的北京威孚物理科技（后更名为汉民微测科技，最后被ASML收购）或成立于2009年北京东方塞姆科技（威孚物理+电工所）：&lt;/p&gt;
&lt;p&gt;通过公开的工商历史信息，还能从网上拉出当时研发人员名单出来：&lt;/p&gt;
&lt;p&gt;&lt;img alt="history" src="https://blog.debao.me/images/sem/histroy_info_of_dfsm.png"&gt;&lt;/p&gt;
&lt;h2 id="_7"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://www.thermofisher.com/blog/materials/the-history-of-the-electron-microscope/&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Scanning_transmission_electron_microscopy&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Transmission_electron_microscopy#History&lt;/li&gt;
&lt;li&gt;https://wayback.archive-it.org/9060/20230418185309/https://authors.library.caltech.edu/5456/1/hrst.mit.edu///hrs/materials/public/ElectronMicroscope/EM_HistOverview.htm&lt;/li&gt;
&lt;li&gt;https://vaccoat.com/blog/electron-microscope-invention-historical-overview/&lt;/li&gt;
&lt;li&gt;https://www.microscopemaster.com/electron-microscope.html&lt;/li&gt;
&lt;/ul&gt;</content><category term="SEM"></category><category term="SEM"></category></entry><entry><title>电子束斑（探针）直径小记</title><link href="https://blog.debao.me/2024/12/notes-on-electron-probe-diameter-aka-spot-size/" rel="alternate"></link><published>2024-12-10T11:36:00+08:00</published><updated>2024-12-10T11:36:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-10:/2024/12/notes-on-electron-probe-diameter-aka-spot-size/</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;几何与电子光学成像&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#aberration"&gt;像差（aberration）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#geometrical-aberrations"&gt;几何像差（Geometrical aberrations）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chromatic-aberration"&gt;色差（Chromatic Aberration）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#diffraction"&gt;衍射（Diffraction）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#spot-size"&gt;束斑大小（Spot Size）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_2"&gt;半张角&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;几何与电子光学成像&lt;/h2&gt;
&lt;p&gt;在几何光学 …&lt;/p&gt;</summary><content type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;几何与电子光学成像&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#aberration"&gt;像差（aberration）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#geometrical-aberrations"&gt;几何像差（Geometrical aberrations）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chromatic-aberration"&gt;色差（Chromatic Aberration）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#diffraction"&gt;衍射（Diffraction）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#spot-size"&gt;束斑大小（Spot Size）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_2"&gt;半张角&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;几何与电子光学成像&lt;/h2&gt;
&lt;p&gt;在几何光学中，我们中学都做过透镜成像的试验（将蜡烛成像到像平面上）：&lt;/p&gt;
&lt;p&gt;&lt;img alt="imaging" src="https://blog.debao.me/images/sem/optical_imaging.png"&gt;&lt;/p&gt;
&lt;p&gt;而在电子光学中，概念是类似的，通过各个静电透镜或/和磁透镜，将光源（电子枪枪尖）成像到样品表面上。&lt;/p&gt;
&lt;p&gt;&lt;img alt="imaging" src="https://blog.debao.me/images/sem/electron_optical_imaging.png"&gt;&lt;/p&gt;
&lt;p&gt;理想情况下，第一个汇聚透镜（枪镜）负责把物缩小，而第二个透镜（物镜）负责聚焦到样品表面（也承担也物缩小任务）。&lt;/p&gt;
&lt;p&gt;但由于各种像差的存在，像的尺寸（Spot size，Probe diameter）比理想的高斯像要大。&lt;/p&gt;
&lt;p&gt;为了让像点尽可能小（以提升分辨力），一方面追求更小的光源（枪尖直径），一方面致力于消除各种像差。&lt;/p&gt;
&lt;p&gt;&lt;img alt="spot size" src="https://blog.debao.me/images/sem/spot_size.png"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;除了束斑大小（Spot Size，Probe Diameter）之外，一般还会关注：落点能量(Landing Energy，Accelerating Voltage)，束流大小(Probe Current，Beam Current)，半张角（Convergence Angle）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="aberration"&gt;像差（aberration）&lt;/h2&gt;
&lt;p&gt;像差（aberration）是电子光学系统中偏离理想成像的现象。在理想成像的情况下，从物体平面上某一点发出的所有电子束通过透镜后会在图像平面上汇聚到一个点。然而，在实际透镜中，这些电子束不会汇聚到单一的点，而是形成一个模糊的图像。像差可分为“几何像差”（geometrical aberrations）和“色差”（chromatic aberrations）。&lt;/p&gt;
&lt;p&gt;几何像差取决于从物体平面发出的电子束的位置和角度，并可以表示为电子束与光轴的距离 𝑟 和电子束与光轴之间的角度 𝛼 的函数。在这些像差中，仅依赖于角度 
𝛼 的像差被称为轴向几何像差（axial geometrical aberrations），而依赖于距离 
𝑟 的像差则被称为非轴向几何像差（off-axial geometrical aberrations）。&lt;/p&gt;
&lt;p&gt;色差（Chromatic Aberration）是在电子束没有单一能量而存在能量分布时产生的。也就是说，具有不同能量的电子束在通过电磁透镜时会发生不同角度的偏折，从而导致色差。&lt;/p&gt;
&lt;h3 id="geometrical-aberrations"&gt;几何像差（Geometrical aberrations）&lt;/h3&gt;
&lt;p&gt;几何像差大致可分：赛德尔像差（Seidel Aberrations）和 寄生像差（Parasitic Aberrations）。一般只关注赛德尔像差（Seidel Aberrations）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;赛德尔像差（Seidel Aberrations）&lt;/strong&gt; 是指在几何光学中，由于透镜或光学系统的缺陷或不理想设计，导致的几种基础像差。这些像差是由德国物理学家 Karl Seidel 在19世纪提出的，用以描述透镜的光学误差。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;像差类型&lt;/th&gt;
&lt;th&gt;定义&lt;/th&gt;
&lt;th&gt;影响&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;球差 (Spherical Aberration)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;由于透镜形状不理想，光线聚焦点不同，导致模糊。&lt;/td&gt;
&lt;td&gt;近轴和远轴光线聚焦位置不同，成像模糊。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;彗差 (Coma)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;离光轴较远的光线偏折过大，形成彗星尾状的模糊。&lt;/td&gt;
&lt;td&gt;图像边缘模糊，并呈现“尾巴”状的拉伸。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;像散 (Astigmatism)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;透镜非对称导致在不同方向聚焦位置不同，产生变形。&lt;/td&gt;
&lt;td&gt;图像沿某方向聚焦良好，另一方向则模糊，形状扭曲。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;场曲 (Field Curvature)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;焦平面呈曲面状，非平坦，导致图像不均匀。&lt;/td&gt;
&lt;td&gt;离焦点较远的区域变形，成像不均匀。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;桶形畸变 (Barrel Distortion)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;图像边缘拉伸成桶形，中央正常。&lt;/td&gt;
&lt;td&gt;边缘变形，视野边缘拉伸，尤其在大视野下明显。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;枕形畸变 (Pincushion Distortion)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;图像边缘向中心收缩，中央正常。&lt;/td&gt;
&lt;td&gt;图像边缘拉拢，尤其在大视野放大时产生畸变。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这些像差中，球差是唯一轴上不等于零的几何像差，也就是轴向几何像差（axial geometrical aberrations），特别关注一下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="spherical_aberration" src="https://blog.debao.me/images/sem/aber_spherical_aberration.png"&gt;&lt;/p&gt;
&lt;h3 id="chromatic-aberration"&gt;色差（Chromatic Aberration）&lt;/h3&gt;
&lt;p&gt;电子光学系统中的电子束具有不同的能量（即色散），在透镜中不同的电子能量会发生不同程度的偏折，导致不同能量的电子聚焦在不同的地方。&lt;/p&gt;
&lt;p&gt;&lt;img alt="chromatic_aberration" src="https://blog.debao.me/images/sem/aber_chromatic_aberration.png"&gt;&lt;/p&gt;
&lt;h3 id="diffraction"&gt;衍射（Diffraction）&lt;/h3&gt;
&lt;p&gt;衍射像差（Diffraction Aberration）是指由衍射效应引起的图像失真。它与透镜设计缺陷不同，衍射像差是由于电子的波动性质导致的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="diffraction_aberration" src="https://blog.debao.me/images/sem/aber_diffraction_aberration.png"&gt;&lt;/p&gt;
&lt;h2 id="spot-size"&gt;束斑大小（Spot Size）&lt;/h2&gt;
&lt;p&gt;束斑大小（Spot Size）是指聚焦到样品表面的入射电子探针的直径。以下方程广泛用于定义束斑直径：&lt;/p&gt;
&lt;div class="math display"&gt;
d = \sqrt{d_0^2 + d_d^2 + d_s^2 + d_c^2}
&lt;/div&gt;
&lt;p&gt;上述方程表示，在样品表面，束斑直径 &lt;span class="math inline"&gt; d &lt;/span&gt; 由四个项的均方根值计算得出，即：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt; d_0 &lt;/span&gt;：没有像差时由电子源获得的束斑直径&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; d_d &lt;/span&gt;：由衍射像差决定的束斑直径&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; d_s &lt;/span&gt;：由球差决定的最小模糊圆的束斑直径&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; d_c &lt;/span&gt;：由色差决定的最小模糊圆的束斑直径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下方的方程则给出了 &lt;span class="math inline"&gt; d_0 &lt;/span&gt;、&lt;span class="math inline"&gt; d_d &lt;/span&gt;、&lt;span class="math inline"&gt; d_s &lt;/span&gt; 和 &lt;span class="math inline"&gt; d_c &lt;/span&gt; 的具体描述：&lt;/p&gt;
&lt;div class="math display"&gt;
d_0 = \bigg(\frac{2}{\pi\alpha}\sqrt{\frac{I_p}{\beta}}\,\bigg)
\\
d_d = \frac{0.61\lambda}{\sin\alpha}
\\
d_s = 0.5C_s\alpha^3
\\
d_c = C_c\frac{\Delta E}{E}\alpha
&lt;/div&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt; I_p &lt;/span&gt; 是探针电流&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; \beta &lt;/span&gt; 是电子枪的亮度&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; \alpha &lt;/span&gt; 是电子探针的聚焦半角&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; \lambda &lt;/span&gt; 是电子波长&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; C_s &lt;/span&gt; 是物镜的球差系数&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; C_c &lt;/span&gt; 是物镜的色差系数&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; E &lt;/span&gt; 是电子束的能量&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; \Delta E &lt;/span&gt; 是电子束的能量分布&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;半张角&lt;/h3&gt;
&lt;p&gt;上面方程表明，束斑大小 &lt;span class="math inline"&gt; d &lt;/span&gt; 是半张角 &lt;span class="math inline"&gt; \alpha &lt;/span&gt; 的函数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt; d_0 &lt;/span&gt;、&lt;span class="math inline"&gt; d_d &lt;/span&gt;：随 &lt;span class="math inline"&gt; \alpha &lt;/span&gt; 增加而 &lt;strong&gt;减小&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; d_s &lt;/span&gt;、&lt;span class="math inline"&gt; d_c &lt;/span&gt;：随 &lt;span class="math inline"&gt; \alpha &lt;/span&gt; 增加而 &lt;strong&gt;增加&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样一来，一味增大或一味地缩小都是有问题的。为了找到最佳的半张角，经常看到下面这样的图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="semi angle" src="https://blog.debao.me/images/sem/beam_convergence_semi_angle.jpg"&gt;&lt;/p&gt;
&lt;p&gt;图片来源：globalsino.com&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：&lt;span class="math inline"&gt; \alpha &lt;/span&gt; 的定义，不同资料给出的不同，有的强调是物点对透镜所张的孔径角，有的是像点到透镜的孔径角。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_3"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://www.jeol.com/words/semterms/20121024.063858.php&lt;/li&gt;
&lt;li&gt;https://www.thermofisher.com/us/en/home/global/forms/industrial/spot-size-sem.html&lt;/li&gt;
&lt;li&gt;https://www.jeol.com/words/emterms/20231204.php&lt;/li&gt;
&lt;li&gt;https://www.jeol.com/words/emterms/20121023.035259.php&lt;/li&gt;
&lt;li&gt;https://www.jeol.com/applications/pdf/sm/sem_atoz_all.pdf&lt;/li&gt;
&lt;li&gt;https://www.globalsino.com/EM/page2749.html&lt;/li&gt;
&lt;/ul&gt;</content><category term="SEM"></category><category term="SEM"></category></entry><entry><title>电子源小记</title><link href="https://blog.debao.me/2024/12/notes-on-electron-gun/" rel="alternate"></link><published>2024-12-07T23:13:00+08:00</published><updated>2024-12-07T23:13:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-07:/2024/12/notes-on-electron-gun/</id><summary type="html">&lt;p&gt;电子源，一般叫做电子枪（Electron Gun），是一个电子光学系统，用于产生一定形状，往一定方向投射的电子束。&lt;/p&gt;
&lt;h2 id="_1"&gt;三种电子源&lt;/h2&gt;
&lt;p&gt;在SEM中，根据发 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;电子源，一般叫做电子枪（Electron Gun），是一个电子光学系统，用于产生一定形状，往一定方向投射的电子束。&lt;/p&gt;
&lt;h2 id="_1"&gt;三种电子源&lt;/h2&gt;
&lt;p&gt;在SEM中，根据发射方式不同，常用的电子源有三种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;热发射电子源 (Thermionic Emission, TE)：利用热能克服材料表面的逸出功（work function），使得电子从加热的金属材料中逸出。&lt;/li&gt;
&lt;li&gt;热场发射电子源（Thermally assisted Field Emission，TFE）：也称为肖特基发射电子源 (Schottky Emission, SE)，它结合了热发射和场发射的特性。电子源表面加热至较高温度，同时加上外部电场来增强电子的逸出能力。&lt;/li&gt;
&lt;li&gt;冷场发射电子源（Cold Field Emission，CFE）：通常简称场发射电子源(Field Emission, FE)，它基于场发射效应，通过施加非常强的电场（几千伏/厘米）来拉伸材料表面的电子，促使它们逸出。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="electron" src="https://blog.debao.me/images/sem/electron_gun.png"&gt;&lt;/p&gt;
&lt;p&gt;特性比较：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;热发射（钨）&lt;/th&gt;
&lt;th&gt;热发射（LaB6）&lt;/th&gt;
&lt;th&gt;肖特基（热场）发射&lt;/th&gt;
&lt;th&gt;冷场发射&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;发射面（&lt;span class="math inline"&gt;um^2&lt;/span&gt;）&lt;/td&gt;
&lt;td&gt;&amp;gt;&amp;gt;1&lt;/td&gt;
&lt;td&gt;&amp;gt; 1&lt;/td&gt;
&lt;td&gt;0.2&lt;/td&gt;
&lt;td&gt;0.02&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(虚)源直径&lt;/td&gt;
&lt;td&gt;15~20um&lt;/td&gt;
&lt;td&gt;10um&lt;/td&gt;
&lt;td&gt;15~20nm&lt;/td&gt;
&lt;td&gt;5-10nm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;亮度（&lt;span class="math inline"&gt;A cm^{-2}rad^{-2}&lt;/span&gt;）&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;10^5&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;10^6&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;10^8&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;10^8&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;能散（eV）&lt;/td&gt;
&lt;td&gt;3-4&lt;/td&gt;
&lt;td&gt;2-3&lt;/td&gt;
&lt;td&gt;0.7~1&lt;/td&gt;
&lt;td&gt;0.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;逸出功（eV）&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;td&gt;2.6&lt;/td&gt;
&lt;td&gt;2.8&lt;/td&gt;
&lt;td&gt;4.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;阴极温度（K）&lt;/td&gt;
&lt;td&gt;2800&lt;/td&gt;
&lt;td&gt;1900&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;真空度（Pa）&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;10^{-4}&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;10^{-6}&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;10^{-8}- 10^{-9}&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;10^{-9} - 10^{-11}&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;生命期&lt;/td&gt;
&lt;td&gt;50h&lt;/td&gt;
&lt;td&gt;500h&lt;/td&gt;
&lt;td&gt;y&lt;/td&gt;
&lt;td&gt;1-2y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;束流波动性（每小时）&lt;/td&gt;
&lt;td&gt;&amp;lt;1%&lt;/td&gt;
&lt;td&gt;&amp;lt;2%&lt;/td&gt;
&lt;td&gt;&amp;lt;1%&lt;/td&gt;
&lt;td&gt;&amp;gt;10%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注：亮度值在20kV下获得。&lt;/p&gt;
&lt;h2 id="_2"&gt;概念&lt;/h2&gt;
&lt;h3 id="crossover-virtual-source"&gt;Crossover 与 Virtual source&lt;/h3&gt;
&lt;p&gt;对于场发射电子源，电子束的行为就像是从一个直径为5至10纳米的源点发出，这个点被称为虚拟源（Virtual source，或者 Virtual Crossover）。注意区分其不同于热发射时的Real Crossover，Corssover处会有比较强的空间电荷效应。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Virtual Source" src="https://blog.debao.me/images/sem/electron_gun_virtual_source.png"&gt;&lt;/p&gt;
&lt;p&gt;基于这个，电子源可以分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;交叉枪&lt;/li&gt;
&lt;li&gt;层流枪&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="flashing"&gt;Flashing&lt;/h3&gt;
&lt;p&gt;对于冷场发射电子枪，其枪尖通常由钨单晶制成（尖端半径仅几个纳米），在使用过程中，尖端表面容易被残留气体分子或其他污染物覆盖，这会降低发射稳定性。&lt;/p&gt;
&lt;p&gt;通过Flashing（闪烁）过程，可将尖端瞬时加热到较高温度（通常为1800–2500 K），以烧掉或挥发掉附着在表面的污染物。清洁后的尖端能够恢复其高效的电子发射性能。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Flashing" src="https://blog.debao.me/images/sem/electron_gun_flashing.png"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;根据设备使用频率和环境条件，Flashing 的频率可从几小时到几天不等。Flashing的温度和时间控制也比较关键：温度过高可能导致尖端形状改变或熔化，影响发射性能；温度过低或时间过短可能无法完全清除污染（冷场发射电镜提供专门的Flashing操作，需要关闭HV的情况下进行）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="ta"&gt;TA&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;TA值（tip-anode）&lt;/strong&gt; TA值指的是电子源尖端（如钨灯丝或肖特基源）与阳极之间的距离。 在场发射电子枪和肖特基电子枪中，非常关键，对电子束的形成、加速和最终的成像质量有显著影响。&lt;/p&gt;
&lt;p&gt;&lt;img alt="TA" src="https://blog.debao.me/images/sem/electron_gun_ta.png"&gt;&lt;/p&gt;
&lt;h3 id="brightness"&gt;亮度（Brightness）&lt;/h3&gt;
&lt;p&gt;电子枪的亮度是指单位时间内，从电子枪发射的电子束通过单位面积并朝特定方向传播的电子数量。&lt;/p&gt;
&lt;p&gt;亮度的单位用“A/cm²·sr”表示，表示单位立体角下的电流密度。&lt;/p&gt;
&lt;div class="math display"&gt;
L = \frac{I}{A \cdot \Omega}
&lt;/div&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;I&lt;/span&gt;：通过电子枪的电流（单位：安培），&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;A&lt;/span&gt;：电子束通过的面积（单位：平方厘米），&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\Omega&lt;/span&gt;：电子束的固角（单位：球面度，sr），即电子束在空间中占据的角度范围。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;其他&lt;/h2&gt;
&lt;p&gt;从材料考虑，一个理想阴极（Cathode），追求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;材料逸出功低&lt;/li&gt;
&lt;li&gt;发射电流密度大&lt;/li&gt;
&lt;li&gt;工作温度低&lt;/li&gt;
&lt;li&gt;在阴极工作温度下材料蒸发小&lt;/li&gt;
&lt;li&gt;抗离子轰击及抗中毒性好&lt;/li&gt;
&lt;li&gt;寿命长&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从电子光学系统：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;虚源尽可能小&lt;/li&gt;
&lt;li&gt;亮度高&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_4"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Jon Orloff,《Handbook of Charged Particle Optics》&lt;/li&gt;
&lt;li&gt;JEOL,《Scanning Electron MicroScope A to Z, Basic Knowledge for Using The SEM》&lt;/li&gt;
&lt;li&gt;https://www.thermofisher.com/blog/materials/electron-source-fundamentals/&lt;/li&gt;
&lt;li&gt;https://iubemcenter.indiana.edu/doc/williams-and-carter/transmission-electron-microscopy-chapter-05.pdf&lt;/li&gt;
&lt;li&gt;https://www.jeol.com/words/semterms/20121024.021759.php&lt;/li&gt;
&lt;li&gt;https://ediss.uni-goettingen.de/bitstream/11858/00-1735-0000-0028-867D-4/1/release-version_20151216.pdf&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Field_electron_emission&lt;/li&gt;
&lt;/ul&gt;</content><category term="SEM"></category><category term="SEM"></category></entry><entry><title>电子光学基础：电子光学与光线光学相似性</title><link href="https://blog.debao.me/2024/12/fundamentals-of-electron-optics-similarities-between-electron-optics-and-ray-optics/" rel="alternate"></link><published>2024-12-05T00:42:00+08:00</published><updated>2024-12-05T00:42:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-05:/2024/12/fundamentals-of-electron-optics-similarities-between-electron-optics-and-ray-optics/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;接前面 &lt;a href="https://blog.debao.me/2024/11/fundamentals-of-electron-optics-electron-velocity-and-wavelength/"&gt;电子光学基础：电子的速度与波长&lt;/a&gt;，继续看看...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;电子光学折射定律&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;费马原理与哈密顿原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;透镜术语与概念&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;与几何光 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;接前面 &lt;a href="https://blog.debao.me/2024/11/fundamentals-of-electron-optics-electron-velocity-and-wavelength/"&gt;电子光学基础：电子的速度与波长&lt;/a&gt;，继续看看...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;电子光学折射定律&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;费马原理与哈密顿原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;透镜术语与概念&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;与几何光学主要差异&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;和光子一样，电子也具有波粒二象性，而且电子的德布罗意波长一般很短，较少涉及到衍射、干涉等波动光学的内容，所以可以和光线光学（几何光学）的光线传播类比。&lt;/p&gt;
&lt;h2 id="_1"&gt;电子光学折射定律&lt;/h2&gt;
&lt;p&gt;几何光学是描述光束行程的。光线通过均匀的、各向同性的透明介质时是沿直线传播的，而当通过不均匀处，比如两种介质的交界面时，会产生反射和折射现象。如果我们把真空中的折射率取为1，则可以用相对折射率来表征光线通过的介质。&lt;/p&gt;
&lt;p&gt;假设光线由折射率为 &lt;span class="math inline"&gt;n_1&lt;/span&gt; 的介质通过交界面进入折射率为 &lt;span class="math inline"&gt;n_2&lt;/span&gt; 的介质，按照斯涅尔定律（Snell's Law），有：&lt;/p&gt;
&lt;div class="math display"&gt;
\frac{\sin \alpha_1}{\sin \alpha_2} = \frac{n_2}{n_1}
&lt;/div&gt;
&lt;p&gt;式中 &lt;span class="math inline"&gt;\alpha_1&lt;/span&gt; 和 &lt;span class="math inline"&gt;\alpha_2&lt;/span&gt; 分别是光线的入射角和折射角。&lt;span class="math inline"&gt;n_1&lt;/span&gt; 和 &lt;span class="math inline"&gt;n_2&lt;/span&gt; 则分别是对应介质的折射率。&lt;/p&gt;
&lt;p&gt;&lt;img alt="光线与电子的折射" src="https://blog.debao.me/images/sem/snell_law.png"&gt;&lt;/p&gt;
&lt;p&gt;现在考虑电子进入两个不同电位 &lt;span class="math inline"&gt;U_1&lt;/span&gt; 和 &lt;span class="math inline"&gt;U_2&lt;/span&gt; 空间的交界面 &lt;span class="math inline"&gt;S_1 S_2&lt;/span&gt; 时的行为。设等电位区 &lt;span class="math inline"&gt;I&lt;/span&gt; 和 等电位区 &lt;span class="math inline"&gt;II&lt;/span&gt; 的电位分别为 &lt;span class="math inline"&gt;U_1&lt;/span&gt; 和 &lt;span class="math inline"&gt;U_2&lt;/span&gt;，且 &lt;span class="math inline"&gt;U_1 &amp;gt; U_2&lt;/span&gt;，平面 &lt;span class="math inline"&gt;S_1&lt;/span&gt; 和 &lt;span class="math inline"&gt;S_2&lt;/span&gt; 之间的距离为 &lt;span class="math inline"&gt;d&lt;/span&gt;，则平面间的电场强度为：&lt;/p&gt;
&lt;div class="math display"&gt;
\mathbf{E} = \frac{U_2 - U_1}{d}
&lt;/div&gt;
&lt;p&gt;在等位空间 &lt;span class="math inline"&gt;I&lt;/span&gt; 和 &lt;span class="math inline"&gt;II&lt;/span&gt; 中，电位梯度为零；而在交界面  &lt;span class="math inline"&gt;S_1&lt;/span&gt; 和 &lt;span class="math inline"&gt;S_2&lt;/span&gt; 之间存在电场，且垂直于界面。因此，电子穿过这一空间时，其速度会收到影响。由于电场力垂直界面，所以电子只在界面的额法向方向上加速（或减速），而切向速度保持不变，即：&lt;/p&gt;
&lt;div class="math display"&gt;
v_1\sin \alpha_1 = v_2 \sin \alpha_2
&lt;/div&gt;
&lt;p&gt;因而：&lt;/p&gt;
&lt;div class="math display"&gt;
\frac{\sin \alpha_1}{\sin \alpha_2} = \frac{v_2}{v_1}
&lt;/div&gt;
&lt;p&gt;在非相对论情况下，当电子从初速、电位均为零的点开始运动，到达电位 &lt;span class="math inline"&gt;U&lt;/span&gt; 处时，我们已知：&lt;/p&gt;
&lt;div class="math display"&gt;
v = \sqrt{\frac{2 \lvert e \rvert U}{m_0}}
&lt;/div&gt;
&lt;p&gt;可得&lt;/p&gt;
&lt;div class="math display"&gt;
\frac{\sin \alpha_1}{\sin \alpha_2} = \frac{\sqrt{U_2}}{\sqrt{U_1}}
&lt;/div&gt;
&lt;p&gt;与斯涅尔定律相比较，可知 &lt;span class="math inline"&gt;\sqrt{U}&lt;/span&gt; 在电子光学中对应于几何光学中的折射率 &lt;span class="math inline"&gt;n&lt;/span&gt;。该式子反映了电子在电场中的折射规律，称为 &lt;strong&gt;电子光学的折射定律&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;研究表明，电子穿越磁场时，也发生折射。这时折射率和入射角有关，和磁场等效的折射率不仅是不均匀的，还是各向异性的。在电磁场存在时，非相对论下 &lt;strong&gt;折射率&lt;/strong&gt; 具有下面的形式：&lt;/p&gt;
&lt;div class="math display"&gt;
n = \sqrt{\frac{2 \lvert e \rvert U}{m_0}} + \frac{e}{m_0}\mathbf{A}\cdot\mathbf{s^0}
&lt;/div&gt;
&lt;p&gt;式中 &lt;span class="math inline"&gt;\mathbf{A}&lt;/span&gt; 是矢量磁位，&lt;span class="math inline"&gt;\mathbf{s^0}&lt;/span&gt; 是与轨迹相切的单位矢量。&lt;/p&gt;
&lt;p&gt;其实，这个式子是通过对比电子在电磁场中运动的最小作用量原理（哈密顿原理）与几何光学中的费马原理的相似性得出。&lt;/p&gt;
&lt;h2 id="_2"&gt;费马原理与哈密顿原理&lt;/h2&gt;
&lt;p&gt;费马由于提出了光线传播的费马原理而称为现代几何光学的奠基人之一。费马原理从光程的观点来描述光传播的规律。它具有普遍的意义。&lt;/p&gt;
&lt;p&gt;所谓光程（optical path)，是指光在介质中所经过的几何路程 &lt;span class="math inline"&gt;l&lt;/span&gt; 与该介质折射率 &lt;span class="math inline"&gt;n&lt;/span&gt; 乘积，相当于光在介质中走过 &lt;span class="math inline"&gt;l&lt;/span&gt; 这段路程的时间 &lt;span class="math inline"&gt;t&lt;/span&gt; 内，在真空中所走过的路程。&lt;/p&gt;
&lt;p&gt;费马原理（Fermat's principle）：光从一点到另一点是沿光程（optical path）为极值的路径传播的。即光沿着光程为极小、极大或常量的路径传播。其数学表达式如下：&lt;/p&gt;
&lt;div class="math display"&gt;
\delta \int_{P_0}^{P_1} n \mathrm{d}s = 0
&lt;/div&gt;
&lt;p&gt;受费马原理的最小化思想启发，莫培督、拉格朗日和哈密顿等路径最小化的思想逐步扩展到力学和到更广泛的物理学中，提出了哈密顿原理。&lt;/p&gt;
&lt;p&gt;哈密顿原理（Hamilton's Principle）是经典力学中的一个基本变分原理。其核心是，物理系统从一个状态演化到另一个状态时，总是沿着使得作用量（action）极值的路径进行运动。  其数学表述为：&lt;/p&gt;
&lt;div class="math display"&gt;
\delta S = \delta \int_{t_0}^{t_1} L \mathrm{d}t = 0
&lt;/div&gt;
&lt;p&gt;在经典力学中，作用量 &lt;span class="math inline"&gt;S&lt;/span&gt; 被定义为拉格朗日量 &lt;span class="math inline"&gt;L=T-V&lt;/span&gt; 在时间 &lt;span class="math inline"&gt;t&lt;/span&gt; 上的积分，其中 &lt;span class="math inline"&gt;T&lt;/span&gt; 为动能，&lt;span class="math inline"&gt;V&lt;/span&gt; 为势能。在磁场与静电场存在境况下，对于以非相对论速度运动的粒子，其拉格朗日函数：&lt;/p&gt;
&lt;div class="math display"&gt;
L = \frac{m_0v^2}{2} -e U + e\mathbf{A} \cdot v
&lt;/div&gt;
&lt;p&gt;尽管上面哈密顿原理的式子在力学中如此基本与简洁，但是在电子光学中直接应用并不多。因为带电粒子光学关系的是粒子运动的轨迹，各坐标随时间的变化关系尚属次要问题。所以，希望泛函积分中以空间坐标而不是以时间坐标为自变量。&lt;/p&gt;
&lt;div class="math display"&gt;
\delta \int_{P_0}^{P_1}\bigg[\sqrt{\frac{2 \lvert e \rvert U}{m_0}} + \frac{e}{m_0}\mathbf{A}\cdot\mathbf{s^0}\bigg]\mathrm{d}s = 0
&lt;/div&gt;
&lt;p&gt;式中 &lt;span class="math inline"&gt;P_0&lt;/span&gt; 及 &lt;span class="math inline"&gt;P_1&lt;/span&gt; 为粒子开始 &lt;span class="math inline"&gt;t_0&lt;/span&gt; 及结束 &lt;span class="math inline"&gt;t_1&lt;/span&gt; 的坐标，&lt;span class="math inline"&gt;\mathbf{s}^0&lt;/span&gt; 是与轨迹相切的单位矢量，即速度方向的单位矢量。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个式子和费马原理就比较对称了。进而得到上一节提到的存在磁场时的电子光学折射率。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_3"&gt;透镜术语与概念&lt;/h2&gt;
&lt;p&gt;电子光学从几何光学中借鉴的了大量的术语，所以也有透镜、焦面、主面、焦点、焦距、像差等概念。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Image relationship" src="https://blog.debao.me/images/sem/optical_imaging_relationship.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基点 (Cardinal point)：光学系统中关键的几何点，通常包括主点、焦点等，用来描述物体与图像之间的关系。&lt;ul&gt;
&lt;li&gt;主点 (Principal point)：光学系统的一个参考点，通常位于透镜的光轴上，代表光学系统的虚拟或实际光源。&lt;/li&gt;
&lt;li&gt;焦点 (Focal point)：光学系统中的一个关键点，所有平行入射的光线会聚集或发散至焦点。&lt;/li&gt;
&lt;li&gt;节点 (Nodal point)：光学系统中一对特殊点，通过这些点的光线不会改变其方向，经过光学系统后，物体和图像位置保持几何相似。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;基面 (Cardinal plane)：与基点对应的平面，通常是主面和焦面等，用于描述光学系统的成像性质。&lt;ul&gt;
&lt;li&gt;主面 (Principal plane)：光学系统中的参考平面，包含光轴和主点，通常用于透镜系统的几何描述。&lt;/li&gt;
&lt;li&gt;焦面 (Focal plane)：与焦点平行并通过焦点的平面，所有聚焦的光线都位于此平面上。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于旋转对称的薄透镜，先关注一下其焦距&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;静电透镜聚焦能力&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img alt="thin lens" src="https://blog.debao.me/images/sem/elens_thin_lens.png"&gt;&lt;/p&gt;
&lt;p&gt;轴对称电场对电子轨迹有聚焦成像的作用，成为之静电透镜。当透镜厚度（透镜场的作用范围）比焦距小的多时，可以近似看作物主面与像主面在透镜中心处重合，称为薄透镜。&lt;/p&gt;
&lt;div class="math display"&gt;
\frac{1}{f_b} = \frac{1}{4}\frac{1}{\sqrt{U_0(z_b)}}\int_{z_a}^{z_b}\frac{U''_0(z)}{\sqrt{U_0(z)}}\mathrm{d}z
&lt;/div&gt;
&lt;p&gt;静电透镜的聚焦能力与带电粒子的电荷和质量无关，通用性强。不过考虑到强电场时容易引发击穿和放电等问题，对真空以及电极间绝缘要求高一些。&lt;/p&gt;
&lt;p&gt;对上式，借助分部积分，小区二阶导，还可以写作：&lt;/p&gt;
&lt;div class="math display"&gt;
\frac{1}{f_b} = \frac{1}{8}\frac{1}{\sqrt{U_0(z_b)}}\int_{z_a}^{z_b}\frac{U'^2_0(z)}{{U_0(z)}^{\frac{3}{2}}}\mathrm{d}z
&lt;/div&gt;
&lt;p&gt;注意：加速电压很大时，由于电极间电压受击穿限制又不能很大，静电透镜聚焦本领会急剧降低。所以对于高能带电粒子束，会使用非旋转对称的四极透镜。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;磁透镜聚焦能力&lt;/strong&gt;：&lt;/p&gt;
&lt;div class="math display"&gt;
\frac{1}{f} = \frac{e}{m}\frac{1}{8U}\int_{-\infty}^{+\infty}\boldsymbol{B}_{0z}^2(z)\mathrm{d}z
&lt;/div&gt;
&lt;p&gt;带电粒子在磁场中受洛伦兹力下运动，远不如在电场下直观，所以磁透镜比较复杂：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;磁透镜是聚焦透镜，无论线圈中电流方向如何&lt;/li&gt;
&lt;li&gt;磁透镜会聚能力与轴上磁场积分成正比，磁场越强，会聚能力越强&lt;/li&gt;
&lt;li&gt;磁透镜的聚焦能力与电压成反比，带电粒子轴向速度越快，受力时间越短，聚焦能力越弱&lt;/li&gt;
&lt;li&gt;磁透镜的聚焦能力与带电粒子的荷质比有关。&lt;strong&gt;质量越大，聚焦力越弱&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;磁透镜存在像转角，它与线圈中电流方向有关。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;正由于磁透镜这种性质，使得其对于远比电子质量重的离子，聚焦能力变得很弱。所以&lt;strong&gt;离子光学&lt;/strong&gt;中，不使用磁透镜。&lt;/p&gt;
&lt;p&gt;另外，注意到&lt;span class="math inline"&gt;U&lt;/span&gt;增大时，其聚焦本领也会迅速变小，而轴上磁场受磁饱和限制也不能很大，所以对于高能带电粒子束，磁透镜也不好使。&lt;/p&gt;
&lt;h2 id="_4"&gt;与几何光学主要差异&lt;/h2&gt;
&lt;p&gt;尽管有电子与光线有一定的相似性，但是，也有很大不同&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电位 &lt;span class="math inline"&gt;U&lt;/span&gt; 空间中是连续的，不同于几何光学可以在交界面上突变。&lt;/li&gt;
&lt;li&gt;电位 &lt;span class="math inline"&gt;U&lt;/span&gt; 分布符合泊松方程，等位面到处相关，不同于几何光学可以对透镜表面进行局部修正或任意组合以减少像差。&lt;/li&gt;
&lt;li&gt;电位 &lt;span class="math inline"&gt;\sqrt{U}&lt;/span&gt; 的数值可以自由调节，且调整范围很大，不同于几何光学中折射率由材料决定，且受介质天然性质限制（可见光段不超过2.5，红外段不超过5）。&lt;/li&gt;
&lt;li&gt;有磁场存在时，电子光学折射率是非均匀的和各向异性的，不同于几何光学中的光线可逆。&lt;/li&gt;
&lt;li&gt;电子之间存在相互作用的排斥力（空间电荷效应），在强流是必须考虑，这在几何光学中的光子中是不存在的。&lt;/li&gt;
&lt;/ul&gt;</content><category term="SEM"></category></entry><entry><title>Python Import机制乱谈（一）</title><link href="https://blog.debao.me/2024/12/an-exploration-of-python-s-import-mechanism-part-1/" rel="alternate"></link><published>2024-12-04T13:06:00+08:00</published><updated>2024-12-04T13:06:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-04:/2024/12/an-exploration-of-python-s-import-mechanism-part-1/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;在 Python 的发展历程中，import 机制经历了多次重要的变更和演进。各种细节复杂无比，让人倍感头疼...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;例子&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#1"&gt;例子1：先认识一下关键 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;在 Python 的发展历程中，import 机制经历了多次重要的变更和演进。各种细节复杂无比，让人倍感头疼...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;例子&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#1"&gt;例子1：先认识一下关键词&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2"&gt;例子2：简单模组导入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3"&gt;例子3：简单的包导入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4"&gt;例子4：简单的命名空间包导入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5"&gt;例子5：包内相对导入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#6"&gt;例子6：模组作为脚本执行&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#module-package"&gt;模块（module）与 package（包）概念&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#module"&gt;模块（module）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#package"&gt;包（package）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#pycpydso"&gt;模块文件名称.pyc、.pyd(.so)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#pyc"&gt;.pyc 缓存&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pydso"&gt;.pyd/.so 文件&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#abi3"&gt;abi3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;例子&lt;/h2&gt;
&lt;p&gt;通过一些小例子梳理一下？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，本文所用环境：Windows 下 Python3.12。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="1"&gt;例子1：先认识一下关键词&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;import&lt;/li&gt;
&lt;li&gt;from&lt;/li&gt;
&lt;li&gt;as&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;随便导入一个标准库：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os.path&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os.path&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;op1&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;op2&lt;/span&gt;
&lt;span class="c1"&gt;# from os import *&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;op1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;op2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;文件保存在 a1.py，四种方式均导入同一个Module，直接执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python&lt;span class="w"&gt; &lt;/span&gt;a1.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;结果如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;module &amp;#39;ntpath&amp;#39; (frozen)&amp;gt;
&amp;lt;module &amp;#39;ntpath&amp;#39; (frozen)&amp;gt;
&amp;lt;module &amp;#39;ntpath&amp;#39; (frozen)&amp;gt;
&amp;lt;module &amp;#39;ntpath&amp;#39; (frozen)&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;除了 &lt;code&gt;from xxx import *&lt;/code&gt; 一般不建议使用之外，其他可以灵活使用。&lt;/p&gt;
&lt;p&gt;每个模块都有 &lt;code&gt;__file__&lt;/code&gt; 和 &lt;code&gt;__package__&lt;/code&gt; 两个属性，可以输出：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__package__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;结果类似下面：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C:\Python312\Lib\ntpath.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;嗯，&lt;code&gt;__package__&lt;/code&gt; 可以为空。&lt;/p&gt;
&lt;h3 id="2"&gt;例子2：简单模组导入&lt;/h3&gt;
&lt;p&gt;文件系统结构：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;a2.py
m1.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;定义一个 Module &lt;code&gt;m1.py&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;同目录下的应用程序 &lt;code&gt;a2.py&lt;/code&gt; 中导入并使用它：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;m1&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;m1&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;M1&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;m1&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;m1&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;add2&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;M1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;注意：&lt;strong&gt;不是相对路径&lt;/strong&gt;导入！！之所以能找到 &lt;code&gt;m1.py&lt;/code&gt;，是因为 &lt;code&gt;a2.py&lt;/code&gt; 执行时其所在路径被加入到了 &lt;code&gt;sys.path&lt;/code&gt; 路径中，可以输出看看：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;结果类似下面这样：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;E&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;tt&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;mypythontests&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;python312&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zip&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;DLLs&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Lib&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Python312&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;Lib&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;当然，如果愿意，也可以把m1.py丢到上面列出的其他文件夹中，或者直接放到哪个zip文件里面。&lt;/p&gt;
&lt;h3 id="3"&gt;例子3：简单的包导入&lt;/h3&gt;
&lt;p&gt;文件系统结构：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;a3.py
p1/__init__.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;创建文件夹&lt;code&gt;p1&lt;/code&gt;并定义一个包文件 &lt;code&gt;p1/__init__.py&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在p1的同级目录下的应用程序 &lt;code&gt;a3.py&lt;/code&gt; 中导入并使用它：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;p1&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;p1&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__path__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;和前面的使用没有差异，只不过它 &lt;strong&gt;多&lt;/strong&gt; 了一个属性&lt;code&gt;__path__&lt;/code&gt;，用于定位包内的子包或模块。&lt;/p&gt;
&lt;h3 id="4"&gt;例子4：简单的命名空间包导入&lt;/h3&gt;
&lt;p&gt;文件系统结构：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;a4.py
d1_1/p2/addition.py
d1_2/p2/subtraction.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在两个不同的位置下的p2文件夹中，分别创建&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;p2/addition.py&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;p2/subtraction.py&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;subtract&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;b&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在d1、d2的同级目录下的应用程序 &lt;code&gt;a4.py&lt;/code&gt; 中导入并使用它：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d1_1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d1_2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;p2.addition&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;p2.subtraction&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__path__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addition&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subtraction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subtract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;注意，p2包的所有路径都需要添加的sys.path中。&lt;/p&gt;
&lt;p&gt;输出结果（注意看这种情况下的其&lt;code&gt;__path__&lt;/code&gt;属性）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;_NamespacePath([&amp;#39;E:\\tt\\mypythontests\\d1_1\\p2&amp;#39;, &amp;#39;E:\\tt\\mypythontests\\d1_2\\p2&amp;#39;])
2
1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="5"&gt;例子5：包内相对导入&lt;/h3&gt;
&lt;p&gt;文件系统结构：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;a5.py
p3/addition.py
p3/do_addition.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在 &lt;code&gt;p3/do_addition.py&lt;/code&gt; 中实现加法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;do_add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在 &lt;code&gt;p3/addition.py&lt;/code&gt; 中调用它来实现加法接口：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.do_addition&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;do_add&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;do_add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或者&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;do_addition&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;do_addition&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在包外的应用程序&lt;code&gt;a5.py&lt;/code&gt;中，正常使用它：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;p3.addition&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addition&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;相对导入只能使用&lt;code&gt;from .xxx import yyy&lt;/code&gt; 这种带有from的形式（根据层级可以有2个或3个点），而不能用 &lt;code&gt;import .xxx&lt;/code&gt;。特别的，它不能在执行脚本中使用，比如在&lt;code&gt;a5.py&lt;/code&gt;中不能使用相对导入，因为执行时其 &lt;code&gt;__name__&lt;/code&gt; 不是一个路径。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;相对导入的背景，见 &lt;a href="https://peps.python.org/pep-0328/"&gt;PEP328&lt;/a&gt;。这个变化在将python代码从python2移植到到python3还真的头疼。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="6"&gt;例子6：模组作为脚本执行&lt;/h3&gt;
&lt;p&gt;文件系统结构：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;p4/m2.py
p4/m3.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;其中，&lt;code&gt;p4/m2.py&lt;/code&gt;定义一个函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在&lt;code&gt;p4/m3.py&lt;/code&gt;中使用它：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.m2&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;此时，由于存在相对导入，如果试图直接运行它：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python p4/m3.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;将直接遇到异常&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;recent&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;E:&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;t\mypythontests\p4\m3.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;.m2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;
&lt;span class="n"&gt;ImportError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;attempted&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;relative&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;known&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;要正常运行它，需要作为模块运行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python -m p4.m3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;当然，此时，其&lt;code&gt;__name__&lt;/code&gt;也不再是 &lt;code&gt;__main__&lt;/code&gt;，输出结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;__main__&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;如果将 &lt;code&gt;p4/m3.py&lt;/code&gt; 重命名为 &lt;code&gt;p4/__main__.py&lt;/code&gt;，执行会更简单：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python -m p4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="module-package"&gt;模块（module）与 package（包）概念&lt;/h2&gt;
&lt;p&gt;import 用于导入一个 module，多个 module 组织成 package。&lt;/p&gt;
&lt;h3 id="module"&gt;模块（module）&lt;/h3&gt;
&lt;p&gt;关于 Module，手册中&lt;a href="https://docs.python.org/3/glossary.html#term-module"&gt;如是说&lt;/a&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An object that serves as an organizational unit of Python code. Modules have a namespace containing arbitrary Python objects. Modules are loaded into Python by the process of importing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;是Pyton代码的组织单元&lt;/li&gt;
&lt;li&gt;有一个可包含任何Python对象的命名空间&lt;/li&gt;
&lt;li&gt;通过import机制导入&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Module的常见形式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;debao.py&lt;/li&gt;
&lt;li&gt;debao.pyc&lt;/li&gt;
&lt;li&gt;debao.pyd【Windows only】&lt;/li&gt;
&lt;li&gt;debao.so 【unix/linux/MacOS】&lt;/li&gt;
&lt;li&gt;&lt;code&gt;debao/__init__.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;debao.zip&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;曾经有过 debao.pyo 这种带优化的pyc文件，现在已经统一到 .pyc文件中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;按位置，大致可以分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内置库（Builtin Libraries）：编译进解释器&lt;/li&gt;
&lt;li&gt;标准库（Standard Libraries）：位于Lib&lt;/li&gt;
&lt;li&gt;Site库（Site-specific Libraries）：位于Lib/site-packages&lt;/li&gt;
&lt;li&gt;其他：PYTHONPATH 或 sys.path 路径下&lt;/li&gt;
&lt;li&gt;用户自定义模块&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="package"&gt;包（package）&lt;/h3&gt;
&lt;p&gt;关于 Package，手册中&lt;a href="https://docs.python.org/3/glossary.html#term-package"&gt;如是说&lt;/a&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A Python module which can contain submodules or recursively, subpackages. Technically, a package is a Python module with a &lt;strong&gt;path&lt;/strong&gt; attribute.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;是一个Module（一个包含 &lt;code&gt;__path__&lt;/code&gt; 属性的Module）&lt;/li&gt;
&lt;li&gt;包含其他子Module和子Package&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Package 又分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常规包（regular package）：也叫&lt;a href="https://docs.python.org/3/glossary.html#term-regular-package"&gt;传统包（traditional package）&lt;/a&gt;，比如，包含&lt;code&gt;__init__.py&lt;/code&gt;文件的文件夹就是一个常规包。【Python1.5 正式引入Pakcage】&lt;/li&gt;
&lt;li&gt;命名空间包（namespace package）：作为子package的容器存在，不包含&lt;code&gt;__init__.py&lt;/code&gt;文件。详见PEP420。【Python3.3 正式引入命名空间Package】&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="pycpydso"&gt;模块文件名称.pyc、.pyd(.so)&lt;/h2&gt;
&lt;h3 id="pyc"&gt;.pyc 缓存&lt;/h3&gt;
&lt;p&gt;.pyc 文件是 Python 编译后的字节码文件，它包含了 Python 解释器可以直接执行的字节码。在 Python 程序首次导入一个模块时，Python 会自动将该模块编译成 .pyc 文件，并将其存储在一个特定的目录下（如 &lt;code&gt;__pycache__&lt;/code&gt; 目录）&lt;/p&gt;
&lt;p&gt;比如：在前面的例子中，会生成如下缓存文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;__pycache__/m2.cpython-312.pyc
__pycache__/m2.cpython-312.pyc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;而在python早期时，.pyc 都是都是和 .py 文件肩并肩的，且没有&lt;code&gt;.cpython-312&lt;/code&gt;这样的东西存在。&lt;/p&gt;
&lt;p&gt;在 &lt;a href="https://peps.python.org/pep-3147/"&gt;PEP3147： PYC Repository Directories&lt;/a&gt;中，详细描述了.pyc 文件为什么放置到__历史。&lt;/p&gt;
&lt;p&gt;格式&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;模块名&amp;gt;.&amp;lt;版本信息&amp;gt;.pyc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;有助于不同版本python的缓存信息可以共存。&lt;/p&gt;
&lt;h3 id="pydso"&gt;.pyd/.so 文件&lt;/h3&gt;
&lt;p&gt;在Windows下，一个pyd模块，完整的文件名到底怎么命名？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;debao.pyd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;debao.abi3.pyd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;debao.cp312-win_amd64.pyd&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;后缀到底应该是什么？参考&lt;a href="https://peps.python.org/pep-0720/"&gt;PEP0720&lt;/a&gt;通过&lt;code&gt;EXTENSION_SUFFIXES&lt;/code&gt;可以看出端倪：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;importlib&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;importlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;machinery&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EXTENSION_SUFFIXES&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.cp312-win_amd64.pyd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.pyd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;Linux下结果：&lt;code&gt;['.cpython-312-x86_64-linux-gnu.so', '.abi3.so', '.so']&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;更完整的一些列表？&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; importlib.machinery.all_suffixes()
[&amp;#39;.py&amp;#39;, &amp;#39;.pyw&amp;#39;, &amp;#39;.pyc&amp;#39;, &amp;#39;.cp312-win_amd64.pyd&amp;#39;, &amp;#39;.pyd&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;Linux下结果：&lt;code&gt;['.py', '.pyc', '.cpython-312-x86_64-linux-gnu.so', '.abi3.so', '.so']&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="abi3"&gt;abi3&lt;/h4&gt;
&lt;p&gt;比较奇怪，Linux下面出现 abi3 字样，而Windows下面却没有。这个和Python&lt;a href="https://docs.python.org/3/c-api/stable.html#stable-abi"&gt;C API 稳定性&lt;/a&gt; 相关：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stable API&lt;/li&gt;
&lt;li&gt;UnStable API：从Python3.12到Python3.12可能会变化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对稳定API，在Windows下使用时，需要连接到 Python3.dll 而不是 Python312.dll。&lt;/p&gt;
&lt;h2 id="_2"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/reference/import.html"&gt;https://docs.python.org/3/reference/import.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/importlib.html"&gt;https://docs.python.org/3/library/importlib.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/tutorial/modules.html"&gt;https://docs.python.org/3/tutorial/modules.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/zipimport.html"&gt;https://docs.python.org/3/library/zipimport.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://peps.python.org/pep-0328/"&gt;https://peps.python.org/pep-0328/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://peps.python.org/pep-0420/"&gt;https://peps.python.org/pep-0420/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://peps.python.org/pep-0402/"&gt;https://peps.python.org/pep-0402/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/using/windows.html#windows-finding-modules"&gt;https://docs.python.org/3/using/windows.html#windows-finding-modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ref.readthedocs.io/en/latest/understanding_python/imports/"&gt;https://ref.readthedocs.io/en/latest/understanding_python/imports/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://realpython.com/python-import/"&gt;https://realpython.com/python-import/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Python"></category></entry><entry><title>半导体中的22,14nm,7nm等技术节点都是什么鬼？</title><link href="https://blog.debao.me/2024/12/what-the-heck-are-the-22nm-14nm-and-7nm-technology-nodes-in-semiconductors/" rel="alternate"></link><published>2024-12-03T13:17:00+08:00</published><updated>2024-12-03T13:17:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-03:/2024/12/what-the-heck-are-the-22nm-14nm-and-7nm-technology-nodes-in-semiconductors/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;简单搜集整理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在半导体制造领域，技术节点（Technology Node 或 Process Node）是指集成电路（IC）制造工艺的一个阶段性发展指标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;早期，技术节点 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;简单搜集整理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在半导体制造领域，技术节点（Technology Node 或 Process Node）是指集成电路（IC）制造工艺的一个阶段性发展指标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;早期，技术节点与晶体管的物理尺寸直接相关，比如栅极长度（Gate Length）或M1层间距的半间距（M1 Half-Pitch）；&lt;/li&gt;
&lt;li&gt;现代，技术节点更多是行业中描述工艺先进性的一种标识符，而不再直接对应某个物理尺寸。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="gate length" src="https://blog.debao.me/images/science/gate_length_half_pitch.png"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;自2017年起，节点名称几乎完全被营销策略所主导。一些顶尖晶圆厂模糊地使用节点名称来代表稍加修改的工艺技术。
此外，各晶圆厂间晶体管的尺寸、密度和性能也不再具有直接的可比性。例如，Intel的10nm节点在性能和密度上与其他厂商的7nm节点相当，而Intel的7nm节点则与其他厂商的5nm节点相当。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="tech nodes" src="https://blog.debao.me/images/science/TSMC_Process-Technology-Nodes_20230220.webp"&gt;
图片来源: &lt;a href="https://www.tsmc.com/english/dedicatedFoundry/technology/logic/l_7nm"&gt;TSMC&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;术语&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Gate Length（栅极长度）：控制晶体管开关的区域长度，是技术节点的早期定义基础。&lt;/li&gt;
&lt;li&gt;Transistor Density（晶体管密度）：单位面积内集成的晶体管数量，影响芯片性能和效率。&lt;/li&gt;
&lt;li&gt;Fin Field-Effect Transistor（FinFET晶体管架构）：一种三维晶体管设计，提高性能并降低功耗。&lt;/li&gt;
&lt;li&gt;Extreme Ultraviolet Lithography（极紫外光刻，EUV），用于制造小于7nm节点的核心光刻技术。&lt;/li&gt;
&lt;li&gt;High-k Dielectrics（高k介质）：用于减少漏电流并提升晶体管性能的新型绝缘材料。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;命名法&lt;/h2&gt;
&lt;p&gt;推动工艺节点缩小的核心动力是摩尔定律（Moore's Law）。为了实现晶体管密度的翻倍，每个节点的接触栅极间距（Contacted Poly Pitch, CPP）和最小金属间距（Minimum Metal Pitch, MMP）需要大约按0.7倍的比例缩小。&lt;/p&gt;
&lt;p&gt;&lt;img alt="tech node" src="https://blog.debao.me/images/science/1322px-tech_node_naming.svg.webp"&gt;&lt;/p&gt;
&lt;p&gt;图片来源：&lt;a href="https://en.wikichip.org/wiki/technology_node"&gt;wikichip&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;发展&lt;/h2&gt;
&lt;h3 id="_4"&gt;早期技术节点：尺寸驱动&lt;/h3&gt;
&lt;p&gt;技术节点的名称最初直接与晶体管的物理尺寸相关，例如栅极长度或源极/漏极之间的距离（Channel Length）。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;10µm节点（1970年代）：晶体管栅极长度约为10微米。&lt;/li&gt;
&lt;li&gt;1µm节点（1980年代）：栅极长度缩小至1微米。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;晶体管尺寸缩小（Scaling）是摩尔定律（Moore's Law）的核心驱动力，即每隔约两年，单位面积内的晶体管数量会翻倍，从而提升计算能力。&lt;/p&gt;
&lt;h3 id="_5"&gt;从微米到纳米：密度为王&lt;/h3&gt;
&lt;p&gt;随着尺寸逐渐进入纳米级别（nanometer scale），技术节点不仅表示物理尺寸，还与以下指标挂钩：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;晶体管密度：每平方毫米的晶体管数量。&lt;/li&gt;
&lt;li&gt;功耗降低（例如更小的漏电流）。&lt;/li&gt;
&lt;li&gt;性能提升（更快的开关速度）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;90nm节点（2004年）：仍以晶体管物理尺寸为参考。&lt;/li&gt;
&lt;li&gt;45nm节点（2007年）：引入了高k介质（High-k Dielectrics）和金属栅极（Metal Gate）。&lt;/li&gt;
&lt;li&gt;22nm节点（2011年）：Intel首次使用FinFET晶体管架构（Fin Field-Effect Transistor）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_6"&gt;现代节点虚拟化（等效？）&lt;/h3&gt;
&lt;p&gt;现代技术节点（如14nm、7nm）不再严格对应晶体管的物理尺寸，而是代表制造工艺的整体进步。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;14nm节点：栅极长度可能为20nm以上，但它指代晶体管密度和性能的一个工艺水平。&lt;/li&gt;
&lt;li&gt;7nm节点：代表了更高的晶体管密度，但实际尺寸可能远大于7nm。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;涉及以下东西：&lt;/p&gt;
&lt;h4 id="transistor-architecture"&gt;晶体管架构（Transistor Architecture）：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;FinFET（鳍式场效应晶体管）：用于22nm及后续工艺。&lt;/li&gt;
&lt;li&gt;GAA（Gate-All-Around）：3nm节点引入的下一代晶体管架构。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="lithography-technology"&gt;光刻技术（Lithography Technology）：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;深紫外光刻（DUV）：用于28nm到14nm节点。&lt;/li&gt;
&lt;li&gt;极紫外光刻（EUV）：用于7nm及更小节点。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_7"&gt;材料创新：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;使用高k/金属栅极（High-k/Metal Gate）提升性能。&lt;/li&gt;
&lt;li&gt;新的低介电常数材料（Low-k Dielectrics）降低功耗。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_8"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Semiconductor_device_fabrication&lt;/li&gt;
&lt;li&gt;https://en.wikichip.org/wiki/technology_node&lt;/li&gt;
&lt;li&gt;https://zhuanlan.zhihu.com/p/680163027&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mp.weixin.qq.com/s?__biz=MzI1OTExNzkzNw==&amp;amp;mid=2650467886&amp;amp;idx=1&amp;amp;sn=ab19c1f299d9dadd6e748a2293366d35&amp;amp;chksm=f2738830c504012618c3a74ee123bceef05bc81ebb0d78d9e9b1316ee91ab80543c4c818aef9&amp;amp;scene=27"&gt;关于芯片的7nm到底是个啥&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Science"></category><category term="SEM"></category></entry><entry><title>半导体术语小记</title><link href="https://blog.debao.me/2024/12/a-brief-note-on-semiconductor-terminology/" rel="alternate"></link><published>2024-12-02T19:42:00+08:00</published><updated>2024-12-02T19:42:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-12-02:/2024/12/a-brief-note-on-semiconductor-terminology/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;简单梳理一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;前道、后道？？ 前段（端）、后段（端）？？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#idm-fablessfoundryosat"&gt;IDM 与 Fabless、Foundry、OSAT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#die-chip"&gt;Die 与 Chip&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#die-bonding-eutectic-bonding"&gt;Die Bonding 与 Eutectic Bonding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#ingot"&gt;Ingot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_2"&gt;生产方式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#flat-notch"&gt;Flat 与 Notch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;换个角度&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#wafer-manufacturing"&gt;晶圆制造（Wafer Manufacturing）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#front-end-of-line-feol"&gt;前道工 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;简单梳理一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;前道、后道？？ 前段（端）、后段（端）？？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#idm-fablessfoundryosat"&gt;IDM 与 Fabless、Foundry、OSAT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#die-chip"&gt;Die 与 Chip&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#die-bonding-eutectic-bonding"&gt;Die Bonding 与 Eutectic Bonding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#ingot"&gt;Ingot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_2"&gt;生产方式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#flat-notch"&gt;Flat 与 Notch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;换个角度&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#wafer-manufacturing"&gt;晶圆制造（Wafer Manufacturing）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#front-end-of-line-feol"&gt;前道工艺（Front-End of Line, FEOL）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#middle-end-of-line-meol"&gt;中道工艺（Middle-End of Line, MEOL）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#back-end-of-line-beol"&gt;后道工艺（Back-End of Line, BEOL）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wafer-testing"&gt;晶圆测试（Wafer Testing）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#packaging-final-testing"&gt;封装与测试（Packaging &amp;amp; Final Testing）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;其他&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#opc"&gt;OPC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#metrology-inspection"&gt;Metrology 与 Inspection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#logic-memory-analog"&gt;Logic, Memory 与 Analog 芯片&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;前道、后道？？ 前段（端）、后段（端）？？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;这几个术语在中文语境中似乎用的很乱。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="cmos_chip_structure_in2000s" src="https://blog.debao.me/images/science/cmos_chip_structure_in2000s.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;【前道工艺】FEOL（Front end of line）：集成电路制造的第一阶段，在半导体基底上会被加工出各种单个元件（如晶体管、电容、电阻等）的图案。通常涵盖从工艺开始到金属互连层沉积之前的所有步骤（不包括金属互连层的沉积）&lt;sup id="fnref:feol"&gt;&lt;a class="footnote-ref" href="#fn:feol"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;sup id="fnref:usjpc"&gt;&lt;a class="footnote-ref" href="#fn:usjpc"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;【后道工艺】BEOL（Back end of line）：集成电路制造的第二阶段，主要在已经完成器件图案化的晶圆上沉积金属互连层（将单个器件（如晶体管、电容、电阻等）互连起来，形成完整的电路）。&lt;sup id="fnref:beol"&gt;&lt;a class="footnote-ref" href="#fn:beol"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;sup id="fnref2:usjpc"&gt;&lt;a class="footnote-ref" href="#fn:usjpc"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;【前端工艺】Front end process：包括FEOL和EBOL。在晶圆厂（fab）的洁净室内完成。&lt;/li&gt;
&lt;li&gt;【后端工艺】Back end process：在EBOL之后，也叫后制造工艺（post-fab），通常不在洁净室内完成，且往往由不同的公司负责。后端工艺包括晶圆测试、晶圆背面研磨、芯片分离、芯片测试、IC封装以及最终测试。&lt;sup id="fnref2:beol"&gt;&lt;a class="footnote-ref" href="#fn:beol"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="pd" src="https://blog.debao.me/images/science/pd_chap1_fig.png"&gt;&lt;/p&gt;
&lt;p&gt;图片来源：&lt;a href="https://www.ifte.de/books/pd/index.html"&gt; Fundamentals of Layout Design for Electronic Circuits
&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;【中道工艺】MEOL（Middle End of Line）：随着工艺节点的缩小，制造流程变得更加复杂，将FEOL和BEOL中某些工艺独立出来。主要任务是连接 FEOL 阶段中制造完成的器件（如晶体管）与 BEOL 阶段中的金属互连层，为信号传输和电路连接打下基础。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="idm-fablessfoundryosat"&gt;IDM 与 Fabless、Foundry、OSAT&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;IDM（Integrated Device Manufacturer）：设计和制造都在公司内部完成。早期的半导体公司（如英特尔、德州仪器）采用该模式&lt;/li&gt;
&lt;li&gt;Fabless：指专注于集成电路设计的公司，不拥有自己的晶圆制造工厂（fab），而是将芯片的制造外包给第三方晶圆代工厂（Foundry）。&lt;sup id="fnref:febless"&gt;&lt;a class="footnote-ref" href="#fn:febless"&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;Foundry：指专门提供芯片制造服务的公司。拥有自己的晶圆制造工厂，并为Fabless公司提供芯片代工服务。&lt;sup id="fnref:foundry"&gt;&lt;a class="footnote-ref" href="#fn:foundry"&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;OSAT（Outsourced Semiconductor Assembly and Test）：外包半导体封装与测试服务商。OSAT 公司专门为半导体设计公司（Fabless）和晶圆代工厂（Foundry）提供芯片的封装（Assembly）和测试（Test）服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;【流片】Tapeout：指代芯片设计完成后，正式将设计数据（通常是 GDSII 或 OASIS 格式文件）交付给晶圆代工厂（Foundry）进行制造的过程。&lt;sup id="fnref:tapeout"&gt;&lt;a class="footnote-ref" href="#fn:tapeout"&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;由来：在早期，芯片设计完成后，设计文件会被物理记录在磁带（tape）上，然后交付给代工厂。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="die-chip"&gt;Die 与 Chip&lt;/h2&gt;
&lt;p&gt;在晶圆（Wafer）上制造完成的电路单元称为 Die。将晶圆切割成单个 Die。对 Die 进行封装和测试，成为成品 Chip。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Die：是芯片的核心部分，通常由晶体管、电阻、电容等组成，完成了设计所需的全部电路功能。它是晶圆（Wafer）制造完成后，通过切割（Dicing）得到的最小功能单元。&lt;/li&gt;
&lt;li&gt;Chip：对 Die 进行封装（Packaging）和测试（Testing）后的最终产品。它还包括引脚（Pins）或焊球（Balls），用于与外部电路（如 PCB）连接。一个Chip中可以封装多个Die。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="die-bonding-eutectic-bonding"&gt;Die Bonding 与 Eutectic Bonding&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;【共晶】Eutectic Bonding：一种利用 共晶合金 的熔点特性，将芯片（Die）通过焊料（例如金锡合金）与基板连接的工艺。在这个过程中，共晶材料在特定的温度下熔化并形成牢固的金属结合。&lt;/li&gt;
&lt;li&gt;【固晶】Die Attach, Die Bonding：将芯片（Die）通过非金属粘接材料（如导电银胶或绝缘环氧树脂）固定到封装基板或支架上的工艺。与共晶不同，固晶主要使用胶体而非金属作为粘接材料。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Eutectic  /juːˈtɛktɪk/ 是一个来自希腊语的术语，意为“容易熔化”（希腊语中 eu- 表示“好”或“容易”，tectos 表示“熔化”）。在材料科学和半导体领域，Eutectic 通常翻译为 “共晶”，具体是指一种 多组分合金或混合物，它在某一特定比例下具有最低的熔点，并能以液相直接凝固为固相，而不经历其他中间相的生成。例如，金锡合金（Au-Sn）的共晶点是 280°C。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="ingot"&gt;Ingot&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Ingot from wikipedia" src="https://blog.debao.me/images/science/Monokristalines_Silizium_fur_die_Waferherstellung.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Ingot（硅单晶锭） 是通过半导体工艺生产的高纯度硅单晶棒。通常是直拉法或区熔法。上图来自wikipedia&lt;sup id="fnref:cz"&gt;&lt;a class="footnote-ref" href="#fn:cz"&gt;7&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;h3 id="_2"&gt;生产方式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;直拉法（Czochralski, CZ）&lt;/strong&gt;：最常见的硅单晶生长工艺。通过将种子晶体浸入熔融硅中，然后缓慢旋转和拉升，形成单晶硅锭。适用于大尺寸晶圆（如 200mm、300mm）。&lt;sup id="fnref2:cz"&gt;&lt;a class="footnote-ref" href="#fn:cz"&gt;7&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;区熔法（Float Zone, FZ）&lt;/strong&gt;：通过电磁感应将硅棒局部加热至熔化，逐段移动熔区以提纯并生长单晶。纯度更高。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;直拉法由波兰科学家 Jan Czochralski 于 1916 年发明。在波兰语中，Czochralski 的标准发音为 /tʂɔˈxral.ski/，类似于“楚克拉尔斯基”或“乔克拉尔斯基”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="flat-notch"&gt;Flat 与 Notch&lt;/h3&gt;
&lt;p&gt;Flat 和 Notch 是半导体制造中用于标识和定位晶圆（Wafer）方向和晶体取向的特定结构。早期晶圆（6寸及以下）用Flat，但随着晶圆尺寸的增大和自动化设备的普及，Notch 已成为主流标识方式。&lt;/p&gt;
&lt;p&gt;&lt;img alt="flat notch" src="https://blog.debao.me/images/science/ingot_flat_notch.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Flat（平边）：是指在晶圆边缘切去的一段平直的部分。位于晶圆的边缘，占据一段相对较长的直线。&lt;/li&gt;
&lt;li&gt;Notch（凹槽）：是指在晶圆边缘刻出的一个小的 V 型缺口或凹槽。位于晶圆的边缘，占据很小的区域。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;换个角度&lt;/h2&gt;
&lt;p&gt;半导体 FAB 工艺包括从 晶圆制造 到 晶圆加工（FEOL/MEOL/BEOL） 再到 封装与测试 的完整流程。关键环节包括 光刻（Photolithography）、刻蚀（Etching）、薄膜沉积（Deposition） 和 金属互连（Interconnects），这些工艺共同支持芯片的高性能和高集成度。&lt;/p&gt;
&lt;p&gt;&lt;img alt="process" src="https://blog.debao.me/images/science/wafer_feol_beol.png"&gt;&lt;/p&gt;
&lt;p&gt;图片来源：&lt;a href="https://news.skhynix.com/semiconductor-front-end-process-episode-2/"&gt;Semiconductor Front-End Process Episode 2&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="wafer-manufacturing"&gt;晶圆制造（Wafer Manufacturing）&lt;/h3&gt;
&lt;p&gt;将高纯度 多晶硅（Polysilicon） 制备成 单晶硅锭（Ingot），然后切割成 晶圆（Wafer）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Czochralski Method (CZ)：直拉法，用于生长单晶硅。&lt;/li&gt;
&lt;li&gt;Wafer Polishing：晶圆抛光，确保表面平整。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="front-end-of-line-feol"&gt;前道工艺（Front-End of Line, FEOL）&lt;/h3&gt;
&lt;p&gt;在晶圆上制造晶体管（Transistor）等基本器件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;氧化（Oxidation）：在晶圆表面生长一层氧化硅（SiO₂）作为绝缘层。&lt;/li&gt;
&lt;li&gt;光刻（Photolithography）：使用光刻胶（Photoresist）和掩膜版（Mask）将电路图案转移到晶圆上。&lt;/li&gt;
&lt;li&gt;刻蚀（Etching）：去除不需要的材料，形成所需的图案。包括&lt;ul&gt;
&lt;li&gt;Dry Etching：干法刻蚀（等离子刻蚀）。&lt;/li&gt;
&lt;li&gt;Wet Etching：湿法刻蚀（化学溶液刻蚀）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;离子注入（Ion Implantation）：注入掺杂剂（如硼或磷）调节硅的电学特性。掺杂（Doping）。&lt;/li&gt;
&lt;li&gt;薄膜沉积（Thin Film Deposition）：在晶圆表面沉积导电或绝缘薄膜。&lt;ul&gt;
&lt;li&gt;CVD (Chemical Vapor Deposition)：化学气相沉积。&lt;/li&gt;
&lt;li&gt;PVD (Physical Vapor Deposition)：物理气相沉积。&lt;/li&gt;
&lt;li&gt;Epitaxial Growth：外延生长。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;退火（Annealing）：通过加热修复晶体结构，激活掺杂剂。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="middle-end-of-line-meol"&gt;中道工艺（Middle-End of Line, MEOL）&lt;/h3&gt;
&lt;p&gt;连接晶体管的源极、漏极和栅极，形成基本电路单元。&lt;/p&gt;
&lt;p&gt;术语：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contact Formation：接触孔制作。&lt;/li&gt;
&lt;li&gt;Local Interconnects：局部互连。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="back-end-of-line-beol"&gt;后道工艺（Back-End of Line, BEOL）&lt;/h3&gt;
&lt;p&gt;构建多层金属互连网络，将器件连接成完整电路。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;金属沉积（Metal Deposition）：在晶圆上沉积金属层（如铜或铝）作为导电路径。铜互连（Copper Interconnects）。&lt;/li&gt;
&lt;li&gt;化学机械平坦化（CMP）：Chemical Mechanical Polishing，平整金属层和介电层，确保多层结构均匀。&lt;/li&gt;
&lt;li&gt;通孔制作（Via Formation）：在金属层之间刻蚀通孔并填充金属实现垂直连接。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="wafer-testing"&gt;晶圆测试（Wafer Testing）&lt;/h3&gt;
&lt;p&gt;在晶圆阶段对每个芯片（Die）进行电学测试。&lt;/p&gt;
&lt;p&gt;术语：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Probe Test：探针测试。&lt;/li&gt;
&lt;li&gt;Yield：良品率。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="packaging-final-testing"&gt;封装与测试（Packaging &amp;amp; Final Testing）&lt;/h3&gt;
&lt;p&gt;将切割后的芯片（Die）封装为可用的成品。&lt;/p&gt;
&lt;p&gt;术语：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dicing：晶圆切割。&lt;/li&gt;
&lt;li&gt;Wire Bonding：焊线。&lt;/li&gt;
&lt;li&gt;Micro-Bump：微凸点。&lt;/li&gt;
&lt;li&gt;Flip-Chip：倒装芯片。&lt;/li&gt;
&lt;li&gt;Final Test：最终测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_4"&gt;其他&lt;/h2&gt;
&lt;h3 id="opc"&gt;OPC&lt;/h3&gt;
&lt;p&gt;光学临近效应（Optical Proximity Correction，OPC）是一种基于模型的数学技术，用于修正光刻过程中由于光学效应（如衍射、干涉）和工艺效应（如刻蚀、抗蚀剂行为）导致的图形失真。&lt;/p&gt;
&lt;p&gt;&lt;img alt="pd" src="https://blog.debao.me/images/science/pd_chap2_fig.png"&gt;&lt;/p&gt;
&lt;p&gt;图片来源：&lt;a href="https://www.ifte.de/books/pd/index.html"&gt; Fundamentals of Layout Design for Electronic Circuits
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OPC 有两种类型：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Rule-Based OPC（基于规则的 OPC）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基于一组预定义规则（如线宽调整、边缘偏移）进行简单的修正。快速且计算需求低。适用于早期工艺节点或简单图案。但是对复杂图形的修正能力有限，精度较低。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Model-Based OPC（基于模型的 OPC）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用光学仿真工具，基于光学模型和刻蚀模型对掩膜版图案进行优化。精度高，可处理复杂图形，是现代先进工艺（如 7nm、5nm）中主流的 OPC 方法。但是计算复杂度高，耗时较长。&lt;/p&gt;
&lt;h3 id="metrology-inspection"&gt;Metrology 与 Inspection&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Metrology: 指量测（Measurement）的科学和技术，用于测量半导体制造过程中关键参数（如尺寸、厚度、形貌等）。&lt;/li&gt;
&lt;li&gt;Inspection: 指检测（Inspection）设备，用于发现和识别晶圆或掩膜版上的缺陷（Defects）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Metrology inspection" src="https://blog.debao.me/images/science/metrology_inspection_in_semi.png"&gt;&lt;/p&gt;
&lt;p&gt;量检测设备在FAB中的应用（加黑的属于SEM）：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;产品&lt;/th&gt;
&lt;th&gt;薄膜沉积&lt;/th&gt;
&lt;th&gt;光刻&lt;/th&gt;
&lt;th&gt;掩膜&lt;/th&gt;
&lt;th&gt;刻蚀&lt;/th&gt;
&lt;th&gt;离子注入&lt;/th&gt;
&lt;th&gt;CMP&lt;/th&gt;
&lt;th&gt;清洗&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;掩膜版缺陷检测设备&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;无图形晶圆缺陷检测设备&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;图形晶圆缺陷检测设备&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;EBI&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;DR-SEM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;关键尺寸量测设备&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;CD-SEM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;套刻精度量测设备&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;晶圆介质薄膜量测设备&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X光量测设备&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;掩膜版关键尺寸量测设备&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;三维形貌量测设备&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;晶圆金属薄膜量测设备&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="logic-memory-analog"&gt;Logic, Memory 与 Analog 芯片&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;逻辑芯片（Logic Chips）：处理数字信号，执行布尔逻辑（Boolean Logic）运算，如CPU、GPU等。&lt;/li&gt;
&lt;li&gt;存储芯片（Memory Chips）：存储和检索数据，包括DRAM（动态内存）和NAND（闪存）。&lt;/li&gt;
&lt;li&gt;模拟芯片（Analog Chips）：处理连续信号，如电压和电流，应用于音频设备和传感器。&lt;/li&gt;
&lt;li&gt;数字-模拟混合芯片（Mixed-Signal Chips）：实现数字信号和模拟信号间的转换，如ADC和DAC。&lt;/li&gt;
&lt;li&gt;专用集成电路（ASIC）：为特定用途设计的高效定制芯片，如加密挖矿芯片。&lt;/li&gt;
&lt;li&gt;现场可编程门阵列（FPGA）：可重配置芯片，适用于测试和灵活应用开发。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="logic memory analog" src="https://blog.debao.me/images/science/logic_memory_analog_chips.png"&gt;&lt;/p&gt;
&lt;p&gt;图片来源: https://techovedas.com/13-semiconductor-terms-everyone-must-know/&lt;/p&gt;
&lt;h2 id="_5"&gt;参考&lt;/h2&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:feol"&gt;
&lt;p&gt;https://en.wikipedia.org/wiki/Front_end_of_line&amp;#160;&lt;a class="footnote-backref" href="#fnref:feol" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:beol"&gt;
&lt;p&gt;https://en.wikipedia.org/wiki/Back_end_of_line&amp;#160;&lt;a class="footnote-backref" href="#fnref:beol" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref2:beol" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:usjpc"&gt;
&lt;p&gt;https://www.usjpc.com/en/column/&amp;#160;&lt;a class="footnote-backref" href="#fnref:usjpc" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref2:usjpc" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:febless"&gt;
&lt;p&gt;https://en.wikipedia.org/wiki/Fabless_manufacturing&amp;#160;&lt;a class="footnote-backref" href="#fnref:febless" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:foundry"&gt;
&lt;p&gt;https://en.wikipedia.org/wiki/Foundry_model&amp;#160;&lt;a class="footnote-backref" href="#fnref:foundry" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:tapeout"&gt;
&lt;p&gt;https://en.wikipedia.org/wiki/Tape-out&amp;#160;&lt;a class="footnote-backref" href="#fnref:tapeout" title="Jump back to footnote 6 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:cz"&gt;
&lt;p&gt;https://en.wikipedia.org/wiki/Czochralski_method&amp;#160;&lt;a class="footnote-backref" href="#fnref:cz" title="Jump back to footnote 7 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref2:cz" title="Jump back to footnote 7 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:waferpro"&gt;
&lt;p&gt;https://waferpro.com/what-do-silicon-wafers-have-flats-or-notch/&amp;#160;&lt;a class="footnote-backref" href="#fnref:waferpro" title="Jump back to footnote 8 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Science"></category><category term="SEM"></category></entry><entry><title>电子束技术网络资源小记</title><link href="https://blog.debao.me/2024/11/notes-on-online-resources-for-electron-beam-technology/" rel="alternate"></link><published>2024-11-30T23:27:00+08:00</published><updated>2024-11-30T23:27:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-30:/2024/11/notes-on-online-resources-for-electron-beam-technology/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/11/sem-knowledge-base-a-collection-of-online-video-and-article-resources/"&gt;SEM相关网络视频与文章资源&lt;/a&gt;，记录ebeam相关的网络链接，大杂烩&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;产品&lt;/h2&gt;
&lt;p&gt;抛开仪器类的 SEM、TEM、STEM 等产品，电子束在半导体行业的应用主要体现在：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EBI&lt;/li&gt;
&lt;li&gt;DR-SEM&lt;/li&gt;
&lt;li&gt;CD-SEM&lt;/li&gt;
&lt;li&gt;EBL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;国内相关的 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/11/sem-knowledge-base-a-collection-of-online-video-and-article-resources/"&gt;SEM相关网络视频与文章资源&lt;/a&gt;，记录ebeam相关的网络链接，大杂烩&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;产品&lt;/h2&gt;
&lt;p&gt;抛开仪器类的 SEM、TEM、STEM 等产品，电子束在半导体行业的应用主要体现在：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EBI&lt;/li&gt;
&lt;li&gt;DR-SEM&lt;/li&gt;
&lt;li&gt;CD-SEM&lt;/li&gt;
&lt;li&gt;EBL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;国内相关的公司和单位有：东方晶源、上海精测、苏州矽视、惠然科技、无锡亘芯悦、
金竟科技、中电科48所、上海大尘微影、...&lt;/p&gt;
&lt;p&gt;先接单罗列一下大致产品清单（国外）：&lt;/p&gt;
&lt;h3 id="ebi"&gt;EBI&lt;/h3&gt;
&lt;h4 id="_2"&gt;单束&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.asml.com/en/products/metrology-and-inspection-systems"&gt;ASML-HMI&lt;/a&gt;：eScan600，eP5，...&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.appliedmaterials.com/in/en/product-library/provision-3e-ebeam-metrology.html"&gt;AMAT&lt;/a&gt;：ProVision 3E&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kla.com/products/chip-manufacturing/defect-inspection-review"&gt;KLA&lt;/a&gt;：eSL10&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有些已经淡出这个市场：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.hitachi-hightech.com/global/en/products/semiconductor-manufacturing/cd-sem/inspection-solution/"&gt;Hitachi&lt;/a&gt;：GS1000&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_3"&gt;多束&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.asml.com/en/products/metrology-and-inspection-systems"&gt;ASML-HMI&lt;/a&gt;：eScan1100，eScan1000&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="dr-sem"&gt;DR-SEM&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.appliedmaterials.com/us/en/product-library/semvision-defect-analysis.html"&gt;AMAT&lt;/a&gt;：SEMVision G10，SEMVision G7，SEMVisoin CX300&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kla.com/products/chip-manufacturing/defect-inspection-review"&gt;KLA&lt;/a&gt;：eDR&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hitachi-hightech.com/global/en/products/semiconductor-manufacturing/cd-sem/dr-sem/"&gt;Hitachi&lt;/a&gt;：CT1000，CR7300&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.advantest.com/en/products/cd-sem/drsem/"&gt;Advantest&lt;/a&gt;：E5620（MASK)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.holon-ltd.co.jp/english/product/lexa.html"&gt;Holon&lt;/a&gt;：LEXa-20（MASK）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="cd-sem"&gt;CD-SEM&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.hitachi-hightech.com/global/en/products/semiconductor-manufacturing/cd-sem/metrology-solution/"&gt;Hitachi&lt;/a&gt;：GT2000，CG7300，CS4800，CV6300，S9380，...&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.appliedmaterials.com/il/en/product-library/veritysem-10-cd-metrology.html"&gt;AMAT&lt;/a&gt;：VeritySEM 10，VeritySEM 6C&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.advantest.com/en/products/cd-sem/msem/e3650/"&gt;Advantest&lt;/a&gt;：E3650(MASK)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.holon-ltd.co.jp/english/product/about.html"&gt;Holon&lt;/a&gt;：ZX-D（MASK)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;淡出市场：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.kla.com"&gt;KLA&lt;/a&gt;：8450，8100&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ebl"&gt;EBL&lt;/h3&gt;
&lt;h4 id="_4"&gt;单束（高斯束，变型束）：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raith.com/"&gt;Raith&lt;/a&gt;：EBPG5200，EBPG5000，Voyager，Raith150 Two，Raith150，E-Line，Pioneer&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jeol.com/products/semiconductor/ebx/"&gt;JEOL&lt;/a&gt;：JBX9500FS，JBX-8100FS G3，JBX-8100FS，JBX-A9，JBX3200MVS，JBX-3050MVS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sts-elionix.com/"&gt;ELIONIX&lt;/a&gt;：ELS-BODEN Σ，ELS-BODEN，ELS-HAYATE，ELS-ORCA，&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nuflare.co.jp/english/"&gt;Nuflare&lt;/a&gt;：EBM-9500PLUS，EBM-8000P&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.crestec8.co.jp"&gt;Crestec&lt;/a&gt;：CABL-UH，CABL-AP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.vistec-semi.com/"&gt;Vistec&lt;/a&gt;：VISTEC SB3050-2 &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.nanobeam.co.uk"&gt;NanoBeam&lt;/a&gt;：nB5&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;淡出市场：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.advantest.com"&gt;Advantest&lt;/a&gt;：F7000&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="multi-beammulti-column"&gt;多束（Multi-beam，Multi-column）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nuflare.co.jp/english/"&gt;Nuflare&lt;/a&gt;：MBM2000，MBM2000Plus&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ims.co.at/en/products/"&gt;IMS（Intel）&lt;/a&gt;：MBMW-101&lt;/li&gt;
&lt;li&gt;&lt;a href="https://multibeamcorp.com/"&gt;MultiBeam&lt;/a&gt;：MB300，MB200&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;曾经很有名的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mapper（ASML）：FLX 1200&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_5"&gt;网络知识链接&lt;/h2&gt;
&lt;h3 id="ebl_1"&gt;EBL&lt;/h3&gt;
&lt;h4 id="youtube"&gt;youtube视频&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Raith Group &lt;a href="https://www.youtube.com/watch?v=PWV9pvdRBNY"&gt;Electron Beam Lithography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MIT.nano &lt;a href="https://www.youtube.com/watch?v=yJF9s2MJLLM"&gt;A brief introduction to e-beam lithography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Duke university - SMIF &lt;a href="https://www.youtube.com/watch?v=Q4-HsS4eyOU"&gt;Introduction to EBL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_6"&gt;链接&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;KNI Lab at Caltech &lt;a href="https://lab.kni.caltech.edu/EBPG_5000%2B:_100_kV_Electron_Beam_Lithography"&gt;EBPG 5000+: 100 kV Electron Beam Lithography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;KNI Lab at Caltech &lt;a href="https://lab.kni.caltech.edu/EBPG_5200:_100_kV_Electron_Beam_Lithography"&gt;EBPG 5200: 100 kV Electron Beam Lithography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Yale University &lt;a href="https://nano.yale.edu/electron-beam-lithography-training"&gt;Electron-Beam Lithography Training&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Stanford University &lt;a href="https://drive.google.com/a/stanford.edu/file/d/1QefNaVA8mRoXeRkXaiWEuVK5TIaO3ECp/view?usp=sharing"&gt;EBL – A Practical Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;University of Washington &lt;a href="https://ebeam.wnf.uw.edu/ebeamweb/doc/exp/exposure.html"&gt;The E-Beam Exposure Process - Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://snsf.stanford.edu/facilities/fab/npc/ebl"&gt;https://snsf.stanford.edu/facilities/fab/npc/ebl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://confluence.cornell.edu/display/CNFUserWiki/GDSII+Scripting+for+Lithography"&gt;GDSII Scripting for Lithography&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Electron-beam_lithography"&gt;https://en.wikipedia.org/wiki/Electron-beam_lithography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Photolithography"&gt;https://en.wikipedia.org/wiki/Photolithography&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.epfl.ch/about/campus/wp-content/uploads/2018/05/RAITH150-Software-Operation-Manual.pdf"&gt;Software Operation Manual RAITH150 Version 4.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.nano.pitt.edu/sites/default/files/Equipment-SOP/CR-Raith_Eline_EBL_Users_Guide_2020.pdf"&gt;Raith e-LINE EBL SOP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/536229559?utm_psn=1846636135729721345"&gt;https://zhuanlan.zhihu.com/p/536229559?utm_psn=1846636135729721345&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="cd-sem_1"&gt;CD-SEM&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Hitachi &lt;a href="https://www.hitachi-hightech.com/global/en/knowledge/semiconductor/room/manufacturing/cd-sem.html"&gt;CD-SEM - What is a Critical Dimension SEM? &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://averroes.ai/blog/what-is-critical-dimension-sem"&gt;https://averroes.ai/blog/what-is-critical-dimension-sem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="SEM"></category></entry><entry><title>如何在Python中使用C++库</title><link href="https://blog.debao.me/2024/11/how-to-use-c++-libraries-in-python/" rel="alternate"></link><published>2024-11-28T23:50:00+08:00</published><updated>2024-11-28T23:50:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-28:/2024/11/how-to-use-c++-libraries-in-python/</id><summary type="html">&lt;p&gt;假定我有一个用 C++ 创建一个的动态库，该如何在 Python 下调用它。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ctypes？&lt;/li&gt;
&lt;li&gt;cffi？&lt;/li&gt;
&lt;li&gt;pybind11？&lt;/li&gt;
&lt;li&gt;sip?&lt;/li&gt;
&lt;li&gt;shiboken?&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每一个东西都有复杂的细节，我们用最简单的例 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;假定我有一个用 C++ 创建一个的动态库，该如何在 Python 下调用它。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ctypes？&lt;/li&gt;
&lt;li&gt;cffi？&lt;/li&gt;
&lt;li&gt;pybind11？&lt;/li&gt;
&lt;li&gt;sip?&lt;/li&gt;
&lt;li&gt;shiboken?&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每一个东西都有复杂的细节，我们用最简单的例子，简单过一下，不发散。&lt;/p&gt;
&lt;p&gt;为保证例子在 Windows、Linux 和 MacOS 下都能工作，
C++部分统一使用了cmake，并借助 GitHub 的 CI 功能进行自动化测试。本文涉及到的完整源码均位于 &lt;a href="https://github.com/dbzhang800/python-cpp-binding-examples"&gt;github仓库&lt;/a&gt;。&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;准备工作&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#c-c"&gt;c++ 动态库（C接口）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#c-c_1"&gt;c++ 动态库（C++接口）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;直接使用动态库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#ctypes"&gt;通过 ctypes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cffi"&gt;通过 cffi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;通过创建绑定使用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#python-api"&gt;直接使用Python API&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_4"&gt;测试用例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;创建绑定&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#pybind11"&gt;使用 pybind11&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#pybind11_1"&gt;pybind11 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pybind11_2"&gt;创建 pybind11 绑定&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#sip"&gt;使用 SIP&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_6"&gt;创建绑定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_7"&gt;单元测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#shiboken"&gt;使用 Shiboken&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_8"&gt;准备绑定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_9"&gt;构建&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_10"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;准备工作&lt;/h2&gt;
&lt;p&gt;先准备一下目录结构：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;cpp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;CMakeLists&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;txt&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;lib1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;lib1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cpp&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;lib1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;CMakeLists&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;txt&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;lib2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;bindings&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;lib2_pythonapi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;lib2_pybind11&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;lib2_sip&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;lib2_shiboken&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;pythontests&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;test_lib1_ctypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;test_lib1_cffi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;test_lib2_pythonapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;test_lib2_pybind11&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;test_lib2_sip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;test_lib2_shiboken&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;workflows&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ci&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;yml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;为了简单起见，通过配置&lt;code&gt;cpp/CMakeLists.txt&lt;/code&gt;，将所有动态库统一放置到构建目录下的bin或lib目录下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cmake_minimum_required&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;VERSION&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;3.22&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;project&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;CppLibs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;WIN32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;CMAKE_RUNTIME_OUTPUT_DIRECTORY&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CMAKE_BINARY_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/bin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c"&gt;# For .dll&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CMAKE_BINARY_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/bin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;CMAKE_ARCHIVE_OUTPUT_DIRECTORY&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CMAKE_BINARY_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/lib&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c"&gt;# For .lib&lt;/span&gt;
&lt;span class="nb"&gt;else&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;CMAKE_LIBRARY_OUTPUT_DIRECTORY&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CMAKE_BINARY_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/lib&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c"&gt;# For .so/.dylib&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;CMAKE_ARCHIVE_OUTPUT_DIRECTORY&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CMAKE_BINARY_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/lib&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c"&gt;# For .a&lt;/span&gt;
&lt;span class="nb"&gt;endif&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;add_subdirectory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;lib1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;#add_subdirectory(lib2)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="c-c"&gt;c++ 动态库（C接口）&lt;/h3&gt;
&lt;p&gt;动态库内容，就定一个简单的加法函数吧：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;quot;lib1.h&amp;quot;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;头文件&lt;code&gt;cpp\lib1\lib1.h&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#pragma once&lt;/span&gt;

&lt;span class="cp"&gt;#ifdef _WIN32&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;#ifdef BUILD_LIB1_DLL&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="cp"&gt;#define LIB1_DLL_EXPORT __declspec(dllexport)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;#else&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="cp"&gt;#define LIB1_DLL_EXPORT __declspec(dllimport)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;span class="cp"&gt;#else&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;#define LIB1_DLL_EXPORT&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;

&lt;span class="k"&gt;extern&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;C&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;LIB1_DLL_EXPORT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;工程文件&lt;code&gt;cpp/lib1/CMakeLists.txt&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;add_library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;lib1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;SHARED&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;lib1.cpp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;WIN32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;target_compile_definitions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;lib1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;PRIVATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;BUILD_LIB1_DLL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;endif&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="c-c_1"&gt;c++ 动态库（C++接口）&lt;/h3&gt;
&lt;p&gt;lib2的定义和前面lib1基本完全一样，只是没有用 &lt;code&gt;extern "C"&lt;/code&gt;，头文件如下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#pragma once&lt;/span&gt;

&lt;span class="c1"&gt;#ifdef _WIN32&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;#ifdef BUILD_LIB2_DLL&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;#define LIB2_DLL_EXPORT __declspec(dllexport)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;#else&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;#define LIB2_DLL_EXPORT __declspec(dllimport)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;#endif&lt;/span&gt;
&lt;span class="c1"&gt;#else&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;#define LIB2_DLL_EXPORT&lt;/span&gt;
&lt;span class="c1"&gt;#endif&lt;/span&gt;

&lt;span class="n"&gt;LIB2_DLL_EXPORT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb nb-Type"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb nb-Type"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb nb-Type"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_2"&gt;直接使用动态库&lt;/h2&gt;
&lt;p&gt;如果动态库导出的是C接口（比如lib1），可以直接使用动态库。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于lib2，由于C++有名字改编的问题，尽管只要我们知道改编后的名字，也是可以这么用的。但不同C++编译器名字改编规则也不同，偶尔应急用一下还行，折腾下去意义不大。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="ctypes"&gt;通过 ctypes&lt;/h3&gt;
&lt;p&gt;对于C接口的lib1，可以直接使用Pythoni标准库中的ctypes。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ctypes&lt;/span&gt;

&lt;span class="c1"&gt;# Load the shared library&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;lib1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ctypes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CDLL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lib_full_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Successfully loaded library from &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;lib_full_path&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;OSError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Failed to load library: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Specify the function signature&lt;/span&gt;
&lt;span class="n"&gt;lib1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argtypes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ctypes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c_int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ctypes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c_int&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;lib1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;restype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ctypes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c_int&lt;/span&gt;

&lt;span class="c1"&gt;# Test the function&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_lib1_add&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lib1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lib1.add(1,1) = &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;test_lib1_add&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;本身ctypes使用还算好，不过不同平台下名字不一样，还是需要注意的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Determine the shared library name&lt;/span&gt;
&lt;span class="n"&gt;lib_base_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;lib1&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;platform&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;win32&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;lib_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bin/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;lib_base_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.dll&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;platform&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;darwin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;lib_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lib/lib&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;lib_base_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.dylib&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;lib_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lib/lib&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;lib_base_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.so&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;lib_full_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abspath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;../build&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lib_path&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="cffi"&gt;通过 cffi&lt;/h3&gt;
&lt;p&gt;对C接口的lib1，使用cffi也简单，&lt;code&gt;test_lib1_cffi.py&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;cffi&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FFI&lt;/span&gt;

&lt;span class="c1"&gt;# Create an FFI instance&lt;/span&gt;
&lt;span class="n"&gt;ffi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FFI&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Define the C function signature&lt;/span&gt;
&lt;span class="n"&gt;ffi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cdef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;         int add(int a, int b);&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;lib1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ffi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lib_full_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Test the function&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_lib1_add&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lib1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lib1.add(1,1) = &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;test_lib1_add&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_3"&gt;通过创建绑定使用&lt;/h2&gt;
&lt;p&gt;这个方式就比较多了，可以直接根据Python的扩展要求手撸出来一个（针对简单例子）。更多还是借助其他工具方便&lt;/p&gt;
&lt;h3 id="python-api"&gt;直接使用Python API&lt;/h3&gt;
&lt;p&gt;最直接的方式，但写起来也最繁琐&lt;/p&gt;
&lt;h4 id="_4"&gt;测试用例&lt;/h4&gt;
&lt;p&gt;都封装成模块了，用例简单：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mycommon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_module_path&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;lib2_pythonapi&lt;/span&gt;

&lt;span class="c1"&gt;# Test the function&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_lib2_add&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lib2_pythonapi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lib2_pythonapi.add(1,1) = &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;test_lib2_add&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="_5"&gt;创建绑定&lt;/h4&gt;
&lt;p&gt;直接定义一个模块&lt;code&gt;lib2_pythonapi&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#define PY_SSIZE_T_CLEAN&lt;/span&gt;
&lt;span class="c1"&gt;#include &amp;lt;Python.h&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;#include &amp;quot;../../cpp/lib2/lib2.h&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;static&lt;/span&gt; &lt;span class="n"&gt;PyObject&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;py_add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PyObject&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PyObject&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="n"&gt;PyArg_ParseTuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ii&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;functions&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;lib2&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;PyLong_FromLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;static&lt;/span&gt; &lt;span class="n"&gt;PyMethodDef&lt;/span&gt; &lt;span class="n"&gt;ModuleMethods&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;add&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;py_add&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;METH_VARARGS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Add two numbers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="n"&gt;static&lt;/span&gt; &lt;span class="n"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;PyModuleDef&lt;/span&gt; &lt;span class="n"&gt;moduledef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;PyModuleDef_HEAD_INIT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;lib2_pythonapi&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;A Python module that links to lib2.dll/liblib2.so&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;ModuleMethods&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="n"&gt;PyMODINIT_FUNC&lt;/span&gt; &lt;span class="n"&gt;PyInit_lib2_pythonapi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;PyModule_Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;moduledef&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;工程文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;find_package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;Python3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;REQUIRED&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;COMPONENTS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Interpreter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Development&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;add_library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;lib2_pythonapi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;MODULE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;lib2_pythonapi.cpp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;target_link_libraries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;lib2_pythonapi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;PRIVATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;lib2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Python3::Python&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;WIN32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;set_target_properties&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;lib2_pythonapi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;PROPERTIES&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;SUFFIX&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.pyd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c"&gt;# Windows generate .pyd&lt;/span&gt;
&lt;span class="nb"&gt;endif&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;set_target_properties&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;lib2_pythonapi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;PROPERTIES&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;PREFIX&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c"&gt;# Remove prefix&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="pybind11"&gt;使用 pybind11&lt;/h3&gt;
&lt;p&gt;先看看测试用例，由于是将lib2封装成了lib2_pybind11，可以直接导入：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mycommon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_module_path&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;lib2_pybind11&lt;/span&gt;

&lt;span class="c1"&gt;# Test the function&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_lib2_add&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lib2_pybind11&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lib2_pybind11.add(1,1) = &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;test_lib2_add&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="pybind11_1"&gt;pybind11 安装&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;pybind11 是受 Boost.Python 启发创建的，但没有Boost那么笨重。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;pybind11仅有头文件构成，可以将其包含在项目中，或者通过pip安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install pybind11
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;安装后需要配置环境变量让cmake能够能找到它，它的路径在：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python -m pybind11 --cmakedir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="pybind11_2"&gt;创建 pybind11 绑定&lt;/h4&gt;
&lt;p&gt;源文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;pybind11/pybind11.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;quot;../../cpp/lib2/lib2.h&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;PYBIND11_MODULE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lib2_pybind11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;A simple example&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;def&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;add&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;A function that adds two numbers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;工程文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;PYBIND11_FINDPYTHON&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;ON&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;find_package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;pybind11&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;REQUIRED&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;pybind11_add_module&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;lib2_pybind11&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;lib2_pybind11.cpp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;target_link_libraries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;lib2_pybind11&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;PRIVATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;lib2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;pybind11::module&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="sip"&gt;使用 SIP&lt;/h3&gt;
&lt;p&gt;SIP 是 PyQt使用的绑定工具，开发始于1998年。不用于PyQt采用GPL和商业双授权，SIP采用BSD协议，无需担心协议问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在 SIP 6.x 中，传统的 sip 命令被替换为 sip-build、sip-module 等一组命令集合。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install sip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;这是一个重量级的东西。不过这东西20多年了，可参考的文档实在太少。可能学习能力退化了，感觉比其10年前的老版本难用！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="_6"&gt;创建绑定&lt;/h4&gt;
&lt;p&gt;准备一个&lt;code&gt;.sip&lt;/code&gt;文件，取名&lt;code&gt;lib_sip.sip&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;%Module(name=lib2_sip, language=&amp;quot;C++&amp;quot;)&lt;/span&gt;

&lt;span class="c"&gt;%ModuleHeaderCode&lt;/span&gt;
#&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;lib2.h&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;%End&lt;/span&gt;

&lt;span class="n"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;add(int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;a,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;b)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;创建一个工程文件&lt;code&gt;pyproject.toml&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[build-system]&lt;/span&gt;
&lt;span class="n"&gt;requires&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sip &amp;gt;=6, &amp;lt;7&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;build-backend&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sipbuild.api&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;[project]&lt;/span&gt;
&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lib2_sip&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;[tool.sip.bindings.lib2_sip]&lt;/span&gt;
&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;../../cpp/lib2/lib2.h&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;include-dirs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;../../cpp/lib2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;libraries&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lib2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;library-dirs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;../../build/lib&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;../../build/lib/Release&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;直接执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sip-build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;如果有疑难杂症，记得加上选项 &lt;code&gt;--verbose&lt;/code&gt;以便于排查。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即可生成绑定模块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows下: &lt;code&gt;build\lib2_sip\build\lib.win-amd64-cpython-312\lib2_sip.cp312-win_amd64.pyd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Ubuntu下：&lt;code&gt;build/lib.linux-x86_64-cpython-312/lib2_sip.cpython-312-x86_64-linux-gnu.so&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;MacOS下：&lt;code&gt;build/lib.macosx-10.13-universal2-cpython-312/lib2_sip.cpython-312-darwin.so&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_7"&gt;单元测试&lt;/h4&gt;
&lt;p&gt;测试代码本身简单，不过找到这个模块，需要操作一下。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;lib2_sip&lt;/span&gt;

&lt;span class="c1"&gt;# Test the function&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_lib2_add&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lib2_sip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lib2_sip.add(1,1) = &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;test_lib2_add&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="shiboken"&gt;使用 Shiboken&lt;/h3&gt;
&lt;p&gt;Shiboken是PySide使用的为C++Qt库创建绑定的工具。开发始于2008年的Nokia，2016年复活，当前版本是其复活后的Shiboken6。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PySide项目最开始阶段使用的是 Boost.Python，因为性能问题，才决定自行开发Shiboken。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意，可执行程序Shiboken位于软件包 &lt;code&gt;shiboken6-generator&lt;/code&gt; 中，软件包&lt;code&gt;shiboken6&lt;/code&gt; 只是其运行库。&lt;/p&gt;
&lt;p&gt;安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install shiboken6  shiboken6-generator
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;另外，这个东西还依赖&lt;a href="https://download.qt.io/development_releases/prebuilt/libclang/"&gt;libclang&lt;/a&gt;，（shiboken6需要libclang10。）需要手动安装。环境变量 &lt;code&gt;CLANG_INSTALL_DIR&lt;/code&gt; 也需要指向它。&lt;/p&gt;
&lt;h4 id="_8"&gt;准备绑定&lt;/h4&gt;
&lt;p&gt;它需要一个类型系统文件，取名 &lt;code&gt;lib2_shiboken.xml&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;typesystem&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;package=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;lib2_shiboken&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;primitive-type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;int&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;signature=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;add(int, int)&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/typesystem&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;此时，执行shiboken6即可生成所需的cpp文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;shiboken6 ..\..\cpp\lib2\lib2.h .\lib2_shiboken.xml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;生成文件位于&lt;code&gt;.\out\lib2_shiboken\lib2_shiboken_module_wrapper.cpp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;由于 Shiboken没有提供CMake支持，如果不跨平台的话，直接编译这个文件可能是最简单的。不然，它仓库中最简单的例子&lt;a href="https://github.com/qtproject/pyside-pyside-setup/blob/dev/examples/samplebinding/CMakeLists.txt"&gt;samplebinding&lt;/a&gt;也足以劝退大多数人。&lt;/p&gt;
&lt;h4 id="_9"&gt;构建&lt;/h4&gt;
&lt;p&gt;准备工程文件CMakeLists.txt：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;
&lt;span class="normal"&gt;63&lt;/span&gt;
&lt;span class="normal"&gt;64&lt;/span&gt;
&lt;span class="normal"&gt;65&lt;/span&gt;
&lt;span class="normal"&gt;66&lt;/span&gt;
&lt;span class="normal"&gt;67&lt;/span&gt;
&lt;span class="normal"&gt;68&lt;/span&gt;
&lt;span class="normal"&gt;69&lt;/span&gt;
&lt;span class="normal"&gt;70&lt;/span&gt;
&lt;span class="normal"&gt;71&lt;/span&gt;
&lt;span class="normal"&gt;72&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;CMAKE_CXX_STANDARD&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;17&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;CMAKE_CXX_STANDARD_REQUIRED&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;ON&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Find Python3 interpreter and development components&lt;/span&gt;
&lt;span class="nb"&gt;find_package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;Python3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;COMPONENTS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Interpreter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Development&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;REQUIRED&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Debug: Print Python3 executable path&lt;/span&gt;
&lt;span class="nb"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Python3_EXECUTABLE: ${Python3_EXECUTABLE}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Attempt to retrieve the Shiboken6 installation path dynamically&lt;/span&gt;
&lt;span class="nb"&gt;execute_process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;COMMAND&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;python&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;-c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;import shiboken6; print(shiboken6.__path__[0])&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;OUTPUT_VARIABLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;SHIBOKEN6_PATH&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;ERROR_VARIABLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;SHIBOKEN6_ERROR&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;OUTPUT_STRIP_TRAILING_WHITESPACE&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Debug: Print the result of execute_process&lt;/span&gt;
&lt;span class="nb"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SHIBOKEN6_PATH: ${SHIBOKEN6_PATH}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SHIBOKEN6_ERROR: ${SHIBOKEN6_ERROR}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Set paths for Shiboken6 tool, headers, and library&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;shiboken_include_dir&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SHIBOKEN6_PATH&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/../shiboken6_generator/include&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;shiboken include path: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;shiboken_include_dir&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Configure platform-specific library settings&lt;/span&gt;
&lt;span class="nb"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;WIN32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;shiboken_library&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SHIBOKEN6_PATH&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/shiboken6.abi3.lib&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;module_suffix&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.pyd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;elseif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;APPLE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;shiboken_library&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SHIBOKEN6_PATH&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/libshiboken6.abi3.dylib&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;module_suffix&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.so&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;else&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;shiboken_library&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SHIBOKEN6_PATH&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/libshiboken6.abi3.so&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;module_suffix&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.so&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;endif&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c"&gt;# Specify the C++ header and typesystem file for the binding&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;wrapped_header&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/../../cpp/lib2/lib2.h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;typesystem_file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/lib2_shiboken.xml&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Use Shiboken6 to generate the binding source code&lt;/span&gt;
&lt;span class="nb"&gt;add_custom_command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;OUTPUT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CMAKE_CURRENT_BINARY_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/lib2_shiboken/lib2_shiboken_module_wrapper.cpp&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;COMMAND&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;shiboken6&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;--output-directory=&lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CMAKE_CURRENT_BINARY_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;--include-paths=&lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/../../cpp/lib2&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;--typesystem-paths=&lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;shiboken_include_dir&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;wrapped_header&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;typesystem_file&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;DEPENDS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;lib2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;wrapped_header&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;typesystem_file&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;WORKING_DIRECTORY&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Create the Python module&lt;/span&gt;
&lt;span class="nb"&gt;add_library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;lib2_shiboken&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;MODULE&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CMAKE_CURRENT_BINARY_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/lib2_shiboken/lib2_shiboken_module_wrapper.cpp&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Link the Shiboken6 runtime library and include the headers&lt;/span&gt;
&lt;span class="nb"&gt;target_include_directories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;lib2_shiboken&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;PRIVATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/../../cpp/lib2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;shiboken_include_dir&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;target_link_libraries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;lib2_shiboken&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;PRIVATE&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;lib2&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;shiboken_library&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;Python3::Python&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Set the module properties&lt;/span&gt;
&lt;span class="nb"&gt;set_target_properties&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;lib2_shiboken&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;PROPERTIES&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;PREFIX&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c"&gt;# Remove default &amp;#39;lib&amp;#39; prefix&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;SUFFIX&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;module_suffix&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c"&gt;# Use platform-specific suffix&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_10"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://docs.python.org/3/library/ctypes.html&lt;/li&gt;
&lt;li&gt;https://docs.python.org/3/extending/extending.html&lt;/li&gt;
&lt;li&gt;https://cffi.readthedocs.io/en/stable/&lt;/li&gt;
&lt;li&gt;https://pybind11.readthedocs.io/en/latest/&lt;/li&gt;
&lt;li&gt;https://pypi.org/project/sip/&lt;/li&gt;
&lt;li&gt;https://doc.qt.io/qtforpython-6/shiboken6/gettingstarted.html&lt;/li&gt;
&lt;li&gt;https://www.kdab.com/creating-python-bindings-for-qt-libraries/&lt;/li&gt;
&lt;li&gt;https://github.com/qtproject/pyside-pyside-setup&lt;/li&gt;
&lt;/ul&gt;</content><category term="Python"></category><category term="c++"></category></entry><entry><title>电子光学基础：电子的速度与波长</title><link href="https://blog.debao.me/2024/11/fundamentals-of-electron-optics-electron-velocity-and-wavelength/" rel="alternate"></link><published>2024-11-28T18:41:00+08:00</published><updated>2024-11-28T18:41:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-28:/2024/11/fundamentals-of-electron-optics-electron-velocity-and-wavelength/</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;先列个表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;电子的质量与电荷量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;电子速度与加速电压&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;电子波长与加速电压&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;先列个表&lt;/h2&gt;
&lt;p&gt;不同加速电压下电子速度、质量 …&lt;/p&gt;</summary><content type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;先列个表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;电子的质量与电荷量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;电子速度与加速电压&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;电子波长与加速电压&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;先列个表&lt;/h2&gt;
&lt;p&gt;不同加速电压下电子速度、质量比与波长&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;加速电压 (kV)&lt;/th&gt;
&lt;th&gt;速度 (&lt;span class="math inline"&gt;\times10^8&lt;/span&gt; m/s)&lt;/th&gt;
&lt;th&gt;质量/静止质量&lt;/th&gt;
&lt;th&gt;波长 (nm)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0.10&lt;/td&gt;
&lt;td&gt;0.059301&lt;/td&gt;
&lt;td&gt;1.000196&lt;/td&gt;
&lt;td&gt;0.122637&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.00&lt;/td&gt;
&lt;td&gt;0.187279&lt;/td&gt;
&lt;td&gt;1.001957&lt;/td&gt;
&lt;td&gt;0.038764&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.00&lt;/td&gt;
&lt;td&gt;0.416334&lt;/td&gt;
&lt;td&gt;1.009785&lt;/td&gt;
&lt;td&gt;0.017302&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10.00&lt;/td&gt;
&lt;td&gt;0.584552&lt;/td&gt;
&lt;td&gt;1.019570&lt;/td&gt;
&lt;td&gt;0.012205&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15.00&lt;/td&gt;
&lt;td&gt;0.710838&lt;/td&gt;
&lt;td&gt;1.029354&lt;/td&gt;
&lt;td&gt;0.009941&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20.00&lt;/td&gt;
&lt;td&gt;0.815034&lt;/td&gt;
&lt;td&gt;1.039139&lt;/td&gt;
&lt;td&gt;0.008589&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30.00&lt;/td&gt;
&lt;td&gt;0.984447&lt;/td&gt;
&lt;td&gt;1.058709&lt;/td&gt;
&lt;td&gt;0.006979&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;40.00&lt;/td&gt;
&lt;td&gt;1.121403&lt;/td&gt;
&lt;td&gt;1.078278&lt;/td&gt;
&lt;td&gt;0.006016&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;50.00&lt;/td&gt;
&lt;td&gt;1.237202&lt;/td&gt;
&lt;td&gt;1.097848&lt;/td&gt;
&lt;td&gt;0.005355&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;60.00&lt;/td&gt;
&lt;td&gt;1.337748&lt;/td&gt;
&lt;td&gt;1.117417&lt;/td&gt;
&lt;td&gt;0.004866&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;80.00&lt;/td&gt;
&lt;td&gt;1.506154&lt;/td&gt;
&lt;td&gt;1.156556&lt;/td&gt;
&lt;td&gt;0.004176&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100.00&lt;/td&gt;
&lt;td&gt;1.643525&lt;/td&gt;
&lt;td&gt;1.195695&lt;/td&gt;
&lt;td&gt;0.003701&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;120.00&lt;/td&gt;
&lt;td&gt;1.758795&lt;/td&gt;
&lt;td&gt;1.234834&lt;/td&gt;
&lt;td&gt;0.003349&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;160.00&lt;/td&gt;
&lt;td&gt;1.942975&lt;/td&gt;
&lt;td&gt;1.313112&lt;/td&gt;
&lt;td&gt;0.002851&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2000.00&lt;/td&gt;
&lt;td&gt;2.935190&lt;/td&gt;
&lt;td&gt;4.913902&lt;/td&gt;
&lt;td&gt;0.000504&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5000.00&lt;/td&gt;
&lt;td&gt;2.985009&lt;/td&gt;
&lt;td&gt;10.784756&lt;/td&gt;
&lt;td&gt;0.000226&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10000.00&lt;/td&gt;
&lt;td&gt;2.994380&lt;/td&gt;
&lt;td&gt;20.569512&lt;/td&gt;
&lt;td&gt;0.000118&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;可以看出，电子质量相对其静止质量的比值，在 &lt;span class="math inline"&gt;U=10^4&lt;/span&gt; V 时，增大不到2%。所以在真空器件中，当 &lt;span class="math inline"&gt;U&amp;lt;10^4&lt;/span&gt; V 时，一般可不考虑相对论效应。在同样的加速电压下，对于离子来说，速度比电子慢很多，相对论修正会更小，需要在更高电压下才考虑相对论效应。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如上表格容易通过一段简单的python脚本生成&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;

&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.602176634e-19&lt;/span&gt;
&lt;span class="n"&gt;m0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;9.10938356e-31&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;2.99792458e8&lt;/span&gt;
&lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;6.62607015e-34&lt;/span&gt;

&lt;span class="n"&gt;voltages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1e3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5e3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1e4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.5e4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2e4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3e4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4e4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5e4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;6e4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="mf"&gt;8e4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1e5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.2e5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.6e5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2e6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5e6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1e7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;voltages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m0&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;me_m0_ratio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;me&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;me_m0_ratio&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m0&lt;/span&gt;
    &lt;span class="n"&gt;wavelength&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;me&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;1e-3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;1e-8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;me_m0_ratio&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wavelength&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;1e9&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;加速电压（kV）&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt; 速度（×10^8 m/s）&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt; 质量比, 波长（nm）&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;.2f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;.6f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;.6f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;.6f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;简单看看公式是怎么来的...&lt;/p&gt;
&lt;h2 id="_2"&gt;电子的质量与电荷量&lt;/h2&gt;
&lt;p&gt;1897年，汤姆孙（J. J. Thomson）通过带电粒子在电磁场中的偏转，设计实验测得了阴极射线的荷质比为 &lt;span class="math inline"&gt;e/m = 7.6 \times 10^{10}\, \text{C/kg}&lt;/span&gt;。稍后，密立根（R. A. Millikan）通过油滴实验测定了这种粒子的电荷量 &lt;span class="math inline"&gt;e \approx 1.602 \times 10^{-19}\, \text{C}&lt;/span&gt;，从而也就确定这种粒子的质量。阴极射线中这种带电量与氢离子相同但符号相反、质量大约为氢离子千分之一的粒子，被称为电子（Electron）。&lt;/p&gt;
&lt;p&gt;电子的电荷量是自然界中电荷的最小单位，通常被称为“基本电荷”。根据国际单位制（SI）2019年的修订，基本电荷的数值固定为：&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class="math display"&gt;
e = 1.602176634 \times 10^{-19} \, \text{C}
&lt;/div&gt;
&lt;p&gt;电子的质量（静止质量）约为：&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class="math display"&gt;
m_0 \approx 9.1093837139 \times 10^{-31} \, \text{kg}
&lt;/div&gt;
&lt;p&gt;根据狭义相对论，电子与其他物质粒子一样，其质量随运动速度的变化而变量。运动中的电子质量 &lt;span class="math inline"&gt;m_v&lt;/span&gt; 与其静止质量 &lt;span class="math inline"&gt;m_0&lt;/span&gt; 的关系如下：&lt;/p&gt;
&lt;div class="math display"&gt;
m_v = \frac{m_0}{\sqrt{1-\big(\frac{v}{c}\big)^2}}
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;注：由上式可见，当 &lt;span class="math inline"&gt;v\ll c&lt;/span&gt; 时，&lt;span class="math inline"&gt;v/c \ll 1&lt;/span&gt;，&lt;span class="math inline"&gt;m_v \approx m_0&lt;/span&gt;。即慢速运动的电子质量可视为等同于它的静止质量。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在自由空间中，用加速电位&lt;span class="math inline"&gt;U&lt;/span&gt;，取代式子中的速度&lt;span class="math inline"&gt;v&lt;/span&gt;（见下一节），可得：&lt;/p&gt;
&lt;div class="math display"&gt;
m_v = m_0 (1 + 1,957 \times 10^{-6} U) \, \text{kg}
&lt;/div&gt;
&lt;h2 id="_3"&gt;电子速度与加速电压&lt;/h2&gt;
&lt;p&gt;假定电子初速度为&lt;span class="math inline"&gt;0&lt;/span&gt;，在加速电压 &lt;span class="math inline"&gt;U&lt;/span&gt;下获得速度&lt;span class="math inline"&gt;v_0&lt;/span&gt;，在低速时，认为其质量与速度无关，依据能量守恒定理，可得：&lt;/p&gt;
&lt;div class="math display"&gt;
v_0 = \sqrt{\frac{2 \lvert e \rvert U}{m_0}} \approx 5.932 \times 10^5 \sqrt U\, \text{m/s}
&lt;/div&gt;
&lt;p&gt;另一方面，依据质能关系式，有下列关系成立：&lt;/p&gt;
&lt;div class="math display"&gt;
m_v c^2 = m_0 c^2 + \lvert e \rvert U
&lt;/div&gt;
&lt;p&gt;其中，电压 &lt;span class="math inline"&gt;U&lt;/span&gt; 单位为伏特。&lt;/p&gt;
&lt;p&gt;将上一节 &lt;span class="math inline"&gt;m_v&lt;/span&gt; 带入上式，可得到考虑相对论修正后的电子速度：&lt;/p&gt;
&lt;div class="math display"&gt;
v = c \sqrt{1-\frac{1}{\big(1+\frac{ \lvert e \rvert U}{m_0c^2}\big)^2}}
&lt;/div&gt;
&lt;p&gt;如将 &lt;span class="math inline"&gt;v_0&lt;/span&gt; 代入，便有：&lt;/p&gt;
&lt;div class="math display"&gt;
v = c \sqrt{1-\frac{1}{\big(1+\frac{v_0^2}{2c^2}\big)^2}}
&lt;/div&gt;
&lt;p&gt;若将电子的荷质比 &lt;span class="math inline"&gt;e/m_0&lt;/span&gt; 与光速 &lt;span class="math inline"&gt;c&lt;/span&gt; 的数值带入，并考虑 &lt;span class="math inline"&gt;U&lt;/span&gt; 单位为伏特，可得到电子速度与质量的相对论修正公式：&lt;/p&gt;
&lt;div class="math display"&gt;
v = 3 \times 10^8 \sqrt{1-\frac{1}{(1+1.957 \times 10^{-6} U)^2}} \, \text{m/s}
&lt;/div&gt;
&lt;h2 id="_4"&gt;电子波长与加速电压&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;1923年，法国科学家德布罗意（Louis de Broglie）在光的波粒二象性启示下，提出了实物粒子，如电子、质子、中子等也都具有波粒二象性。但是德布罗意的假说发表后，并没有立即得到科学界重视。直到1927年戴维森 (Clinton Davisson) 和革末 (Lester Germer)用电子衍射试验验证了电子的波动性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;按德布罗意的假设，质量为 &lt;span class="math inline"&gt;m&lt;/span&gt; 的粒子，以速度 &lt;span class="math inline"&gt;v&lt;/span&gt; 运动时，其具有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;粒子特征：能量 &lt;span class="math inline"&gt;E&lt;/span&gt; 和动量 &lt;span class="math inline"&gt;p&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;波动特征：波长 &lt;span class="math inline"&gt;\lambda&lt;/span&gt; 和频率 &lt;span class="math inline"&gt;\gamma&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;像光子一样，粒子特征与波动特征通过普朗克常数&lt;span class="math inline"&gt;h&lt;/span&gt;定量地联系起来：&lt;/p&gt;
&lt;div class="math display"&gt;
E = mc^2 = h\gamma
    \\
    p = mv = \frac{h}{\lambda}
&lt;/div&gt;
&lt;p&gt;上述公式称为德布罗意公式。&lt;/p&gt;
&lt;p&gt;对于任何具有静止质量 &lt;span class="math inline"&gt;m_0&lt;/span&gt; 以速度 &lt;span class="math inline"&gt;v&lt;/span&gt; 运动的粒子，所具有的波，通常称为德布罗意波或物质波。当 &lt;span class="math inline"&gt;v\ll c&lt;/span&gt; 时，其波长为：&lt;/p&gt;
&lt;div class="math display"&gt;
\lambda = \frac{h}{p} = \frac{h}{m_0 v}
&lt;/div&gt;
&lt;p&gt;考虑只受电场（加速电压为 &lt;span class="math inline"&gt;U&lt;/span&gt;)加速的电子，将非相对论下的速度关系式带入，可得：&lt;/p&gt;
&lt;div class="math display"&gt;
\lambda = \frac{h}{\sqrt{2\lvert e \rvert m_0}} \frac{1}{\sqrt{U}}
&lt;/div&gt;
&lt;p&gt;将具体数值带入：&lt;/p&gt;
&lt;div class="math display"&gt;
\lambda = 1.226 \frac{1}{\sqrt{U}} \, \text{nm}
&lt;/div&gt;
&lt;p&gt;当电子运动速度较高时，需要考虑相对论修正，可用如下公式进行计算：&lt;/p&gt;
&lt;div class="math display"&gt;
\lambda = \frac{h}{mv} = \frac{h}{m_0 v} \sqrt{1-\frac{v^2}{c^2}} = \frac{h}{\sqrt{2\lvert e \rvert m_0 U}} \frac{1}{\sqrt{1 + \frac{\lvert e \rvert U}{2 m_0 c^2}}}
&lt;/div&gt;
&lt;p&gt;带入具体数值，可得：&lt;/p&gt;
&lt;div class="math display"&gt;
\lambda = \frac{1.226}{\sqrt{U}} \frac{1}{\sqrt{1+0.978 \times 10^{-6} U}} \, \text{nm}
&lt;/div&gt;
&lt;p&gt;当 &lt;span class="math inline"&gt;U=1000&lt;/span&gt; V 时，计算 &lt;span class="math inline"&gt;\lambda \approx 0.0388&lt;/span&gt; nm，而当 &lt;span class="math inline"&gt;U=10&lt;/span&gt; kV 时，计算 &lt;span class="math inline"&gt;\lambda \approx 0.01226&lt;/span&gt; nm。可见电子的德布罗意波长时很短的，其数量级相当于或略小于晶体中的原子间距，远小于可见光的波长400nm~700nm。&lt;/p&gt;
&lt;h2 id="_5"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;姚宗熙等《物理电子学》，西安交通大学&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;https://physics.nist.gov/cgi-bin/cuu/Value?e|search_for=e&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;https://physics.nist.gov/cgi-bin/cuu/Value?me|search_for=mass&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="SEM"></category></entry><entry><title>E-Beam技术在半导体影像（量检测）中的核心应用</title><link href="https://blog.debao.me/2024/11/key-applications-of-ebeam-technology-in-semiconductor-imaging/" rel="alternate"></link><published>2024-11-27T14:52:00+08:00</published><updated>2024-11-27T14:52:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-27:/2024/11/key-applications-of-ebeam-technology-in-semiconductor-imaging/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;先简单整理一下，以后再慢慢完善&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="sem" src="https://blog.debao.me/images/sem/db-semi-sem.png"&gt;&lt;/p&gt;
&lt;h2 id="sem"&gt;SEM&lt;/h2&gt;
&lt;p&gt;扫描电子显微镜（SEM, Scanning Electron Microscope）是一种利用电子束扫描样品表面并收集信号生成高分辨 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;先简单整理一下，以后再慢慢完善&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="sem" src="https://blog.debao.me/images/sem/db-semi-sem.png"&gt;&lt;/p&gt;
&lt;h2 id="sem"&gt;SEM&lt;/h2&gt;
&lt;p&gt;扫描电子显微镜（SEM, Scanning Electron Microscope）是一种利用电子束扫描样品表面并收集信号生成高分辨率图像的显微技术。SEM通过电子与样品的相互作用，提供样品表面的形貌、结构和组成信息，图像分辨率可达（亚）纳米级。&lt;/p&gt;
&lt;p&gt;在半导体领域中，有三款重要的 SEM 设备：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EBI：E-Beam Inspcetion（注意与光学Inspection进行区分）&lt;/li&gt;
&lt;li&gt;DR-SEM：Defect Review&lt;/li&gt;
&lt;li&gt;CD-SEM：Critical Dimension Scanning Electron Microscope&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;三者分工明确，但又紧密配合，共同构成半导体制造中不可或缺的影像检测体系：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EBI 是第一道关卡：&lt;ul&gt;
&lt;li&gt;光学Inspection负责快速扫描整片晶圆，识别潜在缺陷，效率高但分辨率较低。&lt;/li&gt;
&lt;li&gt;EBI用于关键区域的高精度扫描，发现微小缺陷。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DR-SEM 是补充和验证：&lt;ul&gt;
&lt;li&gt;EBI 发现的缺陷需要进一步确认和分类，DR-SEM 设备通过高分辨率成像，确认缺陷类型和成因。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CD-SEM专注于尺寸测量：&lt;ul&gt;
&lt;li&gt;不直接参与缺陷检测，而是专注于关键尺寸的精确测量，确保工艺参数符合设计要求。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="metrology-inspection"&gt;Metrology 与 Inspection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Metrology: 指量测（Measurement）的科学和技术，用于测量半导体制造过程中关键参数（如尺寸、厚度、形貌等）。&lt;/li&gt;
&lt;li&gt;Inspection: 指检测（Inspection）设备，用于发现和识别晶圆或掩膜版上的缺陷（Defects）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Metrology inspection" src="https://blog.debao.me/images/science/metrology_inspection_in_semi.png"&gt;&lt;/p&gt;
&lt;p&gt;量检测设备在FAB中的应用（加黑的属于SEM）：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;产品&lt;/th&gt;
&lt;th&gt;薄膜沉积&lt;/th&gt;
&lt;th&gt;光刻&lt;/th&gt;
&lt;th&gt;掩膜&lt;/th&gt;
&lt;th&gt;刻蚀&lt;/th&gt;
&lt;th&gt;离子注入&lt;/th&gt;
&lt;th&gt;CMP&lt;/th&gt;
&lt;th&gt;清洗&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;掩膜版缺陷检测设备&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;无图形晶圆缺陷检测设备&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;图形晶圆缺陷检测设备&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;EBI&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;DR-SEM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;关键尺寸量测设备&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;CD-SEM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;★&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;套刻精度量测设备&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;晶圆介质薄膜量测设备&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X光量测设备&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;掩膜版关键尺寸量测设备&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;三维形貌量测设备&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;晶圆金属薄膜量测设备&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;☆&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="cd-sem"&gt;CD-SEM&lt;/h2&gt;
&lt;p&gt;关键尺寸扫描电子显微镜（CD-SEM：Critical Dimension Scanning Electron Microscope）是一种专门用于测量半导体晶圆上形成的精细图形尺寸的设备。CD-SEM主要应用于半导体电子器件的生产线中。&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;关键尺寸测量主要在以下晶圆制造工艺环节中进行&lt;sup id="fnref2:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;光刻胶图形显影后的关键尺寸测量&lt;/li&gt;
&lt;li&gt;刻蚀后的接触孔直径/通孔直径及布线宽度测量&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_1"&gt;术语&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CD&lt;/strong&gt;：关键尺寸（critical dimension），是指半导体制造商能够在晶圆上可靠生产和测量的最小特征尺寸。在光刻工艺中，关键尺寸是形成集成电路（IC）中电气路径的线宽和间距。&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="#fn:3"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WPH&lt;/strong&gt;：Wafers/hour，每小时多少片&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LER&lt;/strong&gt;：Line Edge Roughness 线边缘粗糙度&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LWR&lt;/strong&gt;：Line Width Roughness 线宽粗糙度&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;特点&lt;/h3&gt;
&lt;p&gt;与通用扫描电子显微镜相比，CD-SEM具有以下三个主要特点&lt;sup id="fnref3:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CD-SEM使用低能电子束&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CD-SEM用于样品照射的初级电子束能量较低，通常为1 keV或以下。
低能电子束的应用可以有效减少样品因电荷累积（charge-up）或电子束照射而受到的损伤。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;测量精度和重复性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CD-SEM通过最大限度地改进放大倍率的校准，确保测量精度和重复性的高度可靠。
CD-SEM的测量重复性约为测量宽度的1%（3σ）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;自动化精细图形测量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CD-SEM对晶圆上的精细图形测量是自动化的。
样品晶圆被放置在晶圆盒（或称Pod/FOUP）中，再放入CD-SEM设备。测量条件和操作步骤会提前通过“配方”（recipe）输入。启动测量后，CD-SEM会自动取出样品晶圆，将其加载到设备中，并测量指定位置。当测量完成后，晶圆会自动返回到晶圆盒中。&lt;/p&gt;
&lt;h2 id="dr-sem"&gt;DR-SEM&lt;/h2&gt;
&lt;p&gt;缺陷复查扫描电子显微镜（Defect Review SEM）是一种配置用于复查晶圆上缺陷的扫描电子显微镜（SEM）。由半导体晶圆缺陷检测系统检测到的缺陷通过复查SEM放大为高倍图像，以便进行复查和分类。缺陷复查SEM主要与检测系统配合使用，应用于电子器件和其他半导体产品的生产线中。&lt;sup id="fnref:10"&gt;&lt;a class="footnote-ref" href="#fn:10"&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;复查扫描电子显微镜（Review SEM）通常按照以下步骤工作&lt;sup id="fnref2:10"&gt;&lt;a class="footnote-ref" href="#fn:10"&gt;4&lt;/a&gt;&lt;/sup&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;使用Inspection提前检测晶圆缺陷&lt;/strong&gt;：检测系统记录缺陷的坐标位置，并将其输出到一个文件中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;将已检测的晶圆和检测结果文件加载到复查SEM中&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;拍摄列表中缺陷的图像&lt;/strong&gt;：根据缺陷列表中的位置信息确定缺陷的位置。确定位置后，复查SEM拍摄缺陷图像并存储。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;检测系统通常会检测到几千到几万处缺陷，并将数据输出到文件中。在复查SEM的配方（recipe）操作设置中，可以指定是否复查并拍摄所有缺陷或只拍摄部分缺陷。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了缩短检测的通量时间（throughput），Review SEM通常采用以下两种方式：&lt;sup id="fnref:11"&gt;&lt;a class="footnote-ref" href="#fn:11"&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;选择性地检测晶圆上的5到几十个区域&lt;/strong&gt;，而不是扫描整个直径300 mm的晶圆表面；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;仅针对有限的关键工艺步骤进行检测&lt;/strong&gt;，这些步骤中的外来物和缺陷会对芯片良率产生重大影响，例如晶体管栅极加工、接触孔刻蚀和高密度布线层的图案化。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;在许多情况下，晶圆在Review SEM检测时，晶体管和电容器已经被制造在晶圆上。为了防止入射电子影响晶体管的器件特性，加速电压通常保持在0.5-0.7 kV左右。为了收集形状和成分信息，使用镜筒内探测器（in-column detector），该探测器能够高效地收集二次电子和背散射电子。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_3"&gt;术语&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ADR功能&lt;/strong&gt;：ADR（Automatic Defect Review，自动缺陷复查）用于自动获取缺陷检测系统检测到的缺陷图像，并存储至数据库中，用于更详细的观测、分类和分析。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ADC功能&lt;/strong&gt;：ADC（Automatic Defect Classification，自动缺陷分类）通过分类软件按预设规则对缺陷图像进行分类，并存储至分类服务器，供良率管理系统（YMS）和IC制造商主机进行缺陷分析。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;特点&lt;/h3&gt;
&lt;p&gt;与常规SEM相比，DR-SEM具有如下特点：&lt;sup id="fnref2:11"&gt;&lt;a class="footnote-ref" href="#fn:11"&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统配备了一个样品载台，可观察直径300 mm晶圆的整个表面。&lt;/li&gt;
&lt;li&gt;系统与前端工艺单元中的晶圆传输系统相连，实现晶圆的引入、检测、检测结果输出，以及晶圆传输（输出）到下一工艺的全自动化操作。&lt;/li&gt;
&lt;li&gt;检测结果通过行业标准“SEMI Standards”规定的格式和通信系统，传输到管理制造工艺数据的服务器。&lt;/li&gt;
&lt;li&gt;缺陷数量超过用户预设标准的晶圆不会被传输到下一个工艺步骤，而是处于待机状态。&lt;/li&gt;
&lt;li&gt;系统能够记录和映射缺陷的位置信息（坐标），根据缺陷的形状和成分进行分类，并通过映射比较不同晶圆上外来物的分布情况。&lt;/li&gt;
&lt;li&gt;在检测形成了电路图案的晶圆芯片表面时，系统通过对比相邻芯片相同区域的观察结果，检测并显示缺陷。&lt;/li&gt;
&lt;li&gt;系统配备了一项检测功能，可通过充电（电压对比）引起的图像质量变化，检测接触孔（填充金属材料以连接上下布线层和晶体管的垂直孔）中的高阻区域。&lt;/li&gt;
&lt;li&gt;与其他检测系统一样，Review SEM的设计确保检测过程中产生的外来物和缺陷不会影响芯片的良率和可靠性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="ebi"&gt;EBI&lt;/h2&gt;
&lt;p&gt;Inspection（检测）是指使用检测设备，根据特定标准检查晶圆是否符合要求，以及是否存在异常或不适合的情况。其主要目的是发现晶圆上的颗粒或缺陷，并确定缺陷的位置信息（X, Y 坐标）。缺陷的成因之一是灰尘或颗粒的附着，因此无法预测缺陷会出现在何处。如果晶圆表面出现大量缺陷，电路图案可能无法正确形成，导致图案缺失。大量缺陷还会阻碍电子电路的正常运行，从而使晶圆成为报废品（lot-out*产品）。&lt;sup id="fnref:20"&gt;&lt;a class="footnote-ref" href="#fn:20"&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;缺陷可分为随机缺陷和系统性缺陷：&lt;sup id="fnref:21"&gt;&lt;a class="footnote-ref" href="#fn:21"&gt;7&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;随机缺陷&lt;/strong&gt;：主要由附着在晶圆表面的颗粒引起，因此其位置无法预测。晶圆缺陷检测系统的主要作用是检测晶圆上的缺陷并获取其位置信息（坐标）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;系统性缺陷&lt;/strong&gt;：由掩膜和曝光工艺的条件引起，会在所有投影晶粒的电路图案的相同位置出现。这些缺陷通常发生在曝光条件非常苛刻且需要精细调整的位置。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;晶圆缺陷检测系统通过比较相邻晶粒的电路图案图像来检测缺陷。然而，传统的晶圆缺陷检测系统有时无法检测到系统性缺陷。&lt;/p&gt;
&lt;p&gt;检测可以在带图形的工艺晶圆（Patterned Wafer）或裸晶圆（Non-patterned Wafer）上进行，这两者的系统配置有所不同。&lt;/p&gt;
&lt;h3 id="_5"&gt;术语&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Die2Die：在半导体晶圆上，相同图案的电子器件会被并排制作。随机缺陷通常由颗粒（如灰尘）引起，随机出现在不同位置，其在某一特定位置反复出现的可能性极低。因此，带图形晶圆检测系统通过对比相邻芯片（也称为晶粒或die）的图案图像来检测缺陷，并通过差异检测发现缺陷。&lt;/li&gt;
&lt;li&gt;Voltage Contrast：电子束检测系统通过设备内部导线的导电性，检测二次电子的数量以形成图像对比（电压对比）。如果能够检测到高深宽比接触孔底部的导电性，则可以识别出超薄厚度的SiO₂残留。[21]&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_6"&gt;对比&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;设备&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;CD-SEM&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;EBI&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;DR-SEM&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;用途&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;- 定点量测关键尺寸，在线监测&lt;/td&gt;
&lt;td&gt;- 指定区域内缺陷检测&lt;/td&gt;
&lt;td&gt;- 缺陷复看，根因分析&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;特点&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;- 高精度量测、高稳定性、高吞吐量&lt;br&gt;- 多机台一致性&lt;/td&gt;
&lt;td&gt;- 高速成像，VC缺陷检测&lt;br&gt;- 多套拍摄条件，适应不同缺陷&lt;br&gt;- 自动缺陷分类(ADC)&lt;/td&gt;
&lt;td&gt;- 高分辨率成像&lt;br&gt;- 搭配高级制程控制（APC）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;EOS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;- 小束流、小视场、低噪声、低速扫描&lt;br&gt;- 有高能趋势&lt;/td&gt;
&lt;td&gt;- 大束流、大视场、高速扫描&lt;br&gt;- 多种荷电控制手段&lt;br&gt;- 有多束趋势&lt;/td&gt;
&lt;td&gt;- 高能量，高分辨率，多探测器&lt;br&gt;- 支持EDX分析、能量过滤成像&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_7"&gt;参考&lt;/h2&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;https://www.hitachi-hightech.com/global/en/knowledge/semiconductor/room/manufacturing/cd-sem.html&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref2:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref3:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;https://averroes.ai/blog/what-is-critical-dimension-sem&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;https://www.iso.org/obp/ui/en/#iso:std:iso:21466:ed-1:v1:en&amp;#160;&lt;a class="footnote-backref" href="#fnref:3" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:10"&gt;
&lt;p&gt;https://www.hitachi-hightech.com/global/en/knowledge/semiconductor/room/manufacturing/review-sem.html&amp;#160;&lt;a class="footnote-backref" href="#fnref:10" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref2:10" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:11"&gt;
&lt;p&gt;https://www.jeol.com/words/semterms/20241018.php#gsc.tab=0&amp;#160;&lt;a class="footnote-backref" href="#fnref:11" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref2:11" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:20"&gt;
&lt;p&gt;https://www.hitachi-hightech.com/global/en/knowledge/semiconductor/room/manufacturing/metrology-inspection.html&amp;#160;&lt;a class="footnote-backref" href="#fnref:20" title="Jump back to footnote 6 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:21"&gt;
&lt;p&gt;https://www.hitachi-hightech.com/global/en/knowledge/semiconductor/room/manufacturing/inspection.html&amp;#160;&lt;a class="footnote-backref" href="#fnref:21" title="Jump back to footnote 7 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="SEM"></category></entry><entry><title>Windows下Ldap连接一例</title><link href="https://blog.debao.me/2024/11/an-example-of-ldap-connection-on-windows/" rel="alternate"></link><published>2024-11-27T12:26:00+08:00</published><updated>2024-11-27T12:26:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-27:/2024/11/an-example-of-ldap-connection-on-windows/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;简单的东西，没什么用，删掉又可惜，放上来吧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;公司内部一般都有域控（AD），如果内部使用的各个工装程序需要记录操作信息 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;简单的东西，没什么用，删掉又可惜，放上来吧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;公司内部一般都有域控（AD），如果内部使用的各个工装程序需要记录操作信息，可以使用LDAP用户验证&lt;/p&gt;
&lt;h2 id="winldap"&gt;winldap&lt;/h2&gt;
&lt;p&gt;使用Windows的API：winldap，写一个命令行程序。用于检验用户和密码是否是合法的域内账户。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果在内网中的域外电脑使用，需要手动安装域的CA证书，不然ssl连接无法通过。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;校验成功，返回0；&lt;/li&gt;
&lt;li&gt;校验失败，返回1；&lt;/li&gt;
&lt;li&gt;过程中异常，返回负值；&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;
&lt;span class="normal"&gt;63&lt;/span&gt;
&lt;span class="normal"&gt;64&lt;/span&gt;
&lt;span class="normal"&gt;65&lt;/span&gt;
&lt;span class="normal"&gt;66&lt;/span&gt;
&lt;span class="normal"&gt;67&lt;/span&gt;
&lt;span class="normal"&gt;68&lt;/span&gt;
&lt;span class="normal"&gt;69&lt;/span&gt;
&lt;span class="normal"&gt;70&lt;/span&gt;
&lt;span class="normal"&gt;71&lt;/span&gt;
&lt;span class="normal"&gt;72&lt;/span&gt;
&lt;span class="normal"&gt;73&lt;/span&gt;
&lt;span class="normal"&gt;74&lt;/span&gt;
&lt;span class="normal"&gt;75&lt;/span&gt;
&lt;span class="normal"&gt;76&lt;/span&gt;
&lt;span class="normal"&gt;77&lt;/span&gt;
&lt;span class="normal"&gt;78&lt;/span&gt;
&lt;span class="normal"&gt;79&lt;/span&gt;
&lt;span class="normal"&gt;80&lt;/span&gt;
&lt;span class="normal"&gt;81&lt;/span&gt;
&lt;span class="normal"&gt;82&lt;/span&gt;
&lt;span class="normal"&gt;83&lt;/span&gt;
&lt;span class="normal"&gt;84&lt;/span&gt;
&lt;span class="normal"&gt;85&lt;/span&gt;
&lt;span class="normal"&gt;86&lt;/span&gt;
&lt;span class="normal"&gt;87&lt;/span&gt;
&lt;span class="normal"&gt;88&lt;/span&gt;
&lt;span class="normal"&gt;89&lt;/span&gt;
&lt;span class="normal"&gt;90&lt;/span&gt;
&lt;span class="normal"&gt;91&lt;/span&gt;
&lt;span class="normal"&gt;92&lt;/span&gt;
&lt;span class="normal"&gt;93&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;QCommandLineParser&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;QCoreApplication&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;QDebug&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;quot;windows.h&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;quot;winldap.h&amp;quot;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;QCoreApplication&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;QCoreApplication&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;setApplicationName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;myldapauth&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;QCoreApplication&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;setOrganizationName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;YB&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;QCoreApplication&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;setApplicationVersion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1.0.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;QCommandLineParser&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setApplicationDescription&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Ldap Auth for test only.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addHelpOption&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addVersionOption&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// A boolean option with multiple names (-c, --check)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;QCommandLineOption&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;checkOption&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QStringList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                                                 &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;check&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                                   &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Check connect&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addOption&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;checkOption&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addPositionalArgument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;UserName&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Name of the user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addPositionalArgument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;PassWord&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Password of the user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;checkOption&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;positionalArguments&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="c1"&gt;// stdout not stderr&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;qPrintable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;helpText&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;QString&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dc2.xx.debao.me&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LDAP_SSL_PORT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LDAP_VERSION3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LDAP_AUTH_SIMPLE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// simple + ssl&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;QString&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;baseDN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;OU=users,DC=xx,DC=debao,DC=me&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ldap_sslinit&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;wchar_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utf16&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;qDebug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;init failed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ldap_set_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LDAP_OPT_PROTOCOL_VERSION&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LDAP_SUCCESS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;qDebug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;set_option failed: rc: %d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;ldap_unbind_s&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;-2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ldap_connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LDAP_SUCCESS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;qDebug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;connect failed: rc: %d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;ldap_unbind_s&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;-3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;qDebug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;connect success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;checkOption&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;ldap_unbind_s&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;userName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;positionalArguments&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;positionalArguments&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;QString&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dn&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;CN=&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;userName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;baseDN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// ldap bind return true when both username and password are empty!!&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isEmpty&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isEmpty&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;qDebug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;error: user name or password is not given&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;ldap_unbind_s&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;-4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ldap_bind_s&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;wchar_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;dn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utf16&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;wchar_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utf16&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LDAP_SUCCESS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;qDebug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;bind failed: rc: %d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;ldap_unbind_s&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;qDebug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;bind success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ldap_unbind_s&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;cmake工程文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cmake_minimum_required&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;VERSION&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;3.14&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;project&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;myldapauth&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;LANGUAGES&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;CXX&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;find_package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;Qt6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;COMPONENTS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Core&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;REQUIRED&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;add_executable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;myldapauth&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;main.cpp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;target_link_libraries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;myldapauth&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Qt::Core&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;add_compile_definitions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;UNICODE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;target_link_libraries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;myldapauth&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Wldap32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</content><category term="C++"></category><category term="Qt"></category></entry><entry><title>古老的SRIM小记</title><link href="https://blog.debao.me/2024/11/notes-on-the-old-srim-software/" rel="alternate"></link><published>2024-11-23T20:11:00+08:00</published><updated>2024-11-23T20:11:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-23:/2024/11/notes-on-the-old-srim-software/</id><summary type="html">&lt;p&gt;接前面 &lt;a href="https://blog.debao.me/2024/11/notes-on-monte-carlo-simulation/"&gt;蒙特卡洛模拟小记&lt;/a&gt;，看一下SRIM&lt;/p&gt;
&lt;p&gt;这个软件历史悠久，最后一个版本发布于2013年。单独看这个年份问题不大，只是它使用 VB5 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;接前面 &lt;a href="https://blog.debao.me/2024/11/notes-on-monte-carlo-simulation/"&gt;蒙特卡洛模拟小记&lt;/a&gt;，看一下SRIM&lt;/p&gt;
&lt;p&gt;这个软件历史悠久，最后一个版本发布于2013年。单独看这个年份问题不大，只是它使用 VB5，实在是太老了。&lt;/p&gt;
&lt;p&gt;它免费，但是不开源。开源替代，可考虑 RustBCA ？？&lt;/p&gt;
&lt;h2 id="srim"&gt;SRIM&lt;/h2&gt;
&lt;p&gt;SRIM：物质中离子的阻止与射程（Stopping and Range of Ions in Matter）&lt;/p&gt;
&lt;p&gt;&lt;img alt="SRIM" src="https://blog.debao.me/images/sem/srim.png"&gt;&lt;/p&gt;
&lt;p&gt;SRIM 是一组程序，用于计算离子（动能范围为 10 eV 至 2 GeV/amu）在物质中的阻止能力和射程，其计算基于离子-原子碰撞的量子力学处理（将运动的原子称为“ion（离子）”，而将所有靶原子称为“atom（原子）”）。&lt;/p&gt;
&lt;p&gt;在碰撞过程中，离子与原子之间会发生屏蔽库仑碰撞，包括重叠电子壳层之间的交换和关联相互作用。
离子还与靶原子产生长程相互作用，导致靶材料内部的电子激发和等离子体振荡（等离子体子）的形成。&lt;/p&gt;
&lt;p&gt;在计算设置时，这些过程通过包含对靶材料集体电子结构和原子间键结构的描述来体现。靶材料中离子的电荷状态是通过“有效电荷”的概念来描述的，其中包括与速度相关的电荷状态，以及靶材料集体电子海引起的长程屏蔽效应。&lt;/p&gt;
&lt;p&gt;其功能包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目标物质中离子的阻止与射程计算，&lt;/li&gt;
&lt;li&gt;离子注入，&lt;/li&gt;
&lt;li&gt;溅射，&lt;/li&gt;
&lt;li&gt;离子传输，&lt;/li&gt;
&lt;li&gt;以及离子束治疗(?)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;虚拟机里面装个Windows XP跑它可能比较容易。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_1"&gt;历史&lt;/h3&gt;
&lt;p&gt;SRIM（The Stopping and Range of Ions in Matter）的开发历史可以追溯到20世纪80年代，其诞生和发展与两位科学家的开创性研究密切相关：J. P. Biersack 和 J. F. Ziegler。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1980年，J. P. Biersack 与 L. Haggmark 在他们的论文中提出了一种新的射程算法（见 Nuclear Instruments and Methods, 第174卷，第257页）。这一工作奠定了SRIM程序的计算框架。&lt;/li&gt;
&lt;li&gt;1983年，SRIM首次作为一个基于DOS的程序开发出来，旨在为离子与物质相互作用的研究提供工具。这一初始版本已具备基础的阻止功率和离子射程计算功能。&lt;/li&gt;
&lt;li&gt;1985年，J. F. Ziegler 和 J. P. Biersack 合著了教程书《The Stopping and Range of Ions in Solids》，为SRIM提供了理论支持和应用指导。该书深入讲解了离子穿透固体的物理学原理以及SRIM的设计思路。&lt;/li&gt;
&lt;li&gt;1989年，随着计算机技术的进步，SRIM被移植到Windows平台。这一版本显著改进了用户界面，并提升了计算速度和易用性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SRIM的物理模型来源于J. F. Ziegler在1977至1985年间编著的多卷书籍《The Stopping and Range of Ions in Matter》，其内容涵盖了离子与物质相互作用的广泛研究成果。&lt;/p&gt;
&lt;p&gt;SRIM的最新版本于21世纪初发布，包含了改进的用户界面和更强大的计算功能。2009年，《The Stopping and Range of Ions in Solids》教程书出版了新版。&lt;/p&gt;
&lt;h2 id="_2"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;http://www.srim.org/&lt;/li&gt;
&lt;li&gt;https://rmlmcfadden.github.io/ion-implantation/srim/&lt;/li&gt;
&lt;li&gt;https://github.com/lcpp-org/RustBCA&lt;/li&gt;
&lt;/ul&gt;</content><category term="CAx"></category></entry><entry><title>聚焦离子束FIB小记（二）</title><link href="https://blog.debao.me/2024/11/notes-on-focused-ion-beam-part-2/" rel="alternate"></link><published>2024-11-23T10:45:00+08:00</published><updated>2024-11-23T10:45:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-23:/2024/11/notes-on-focused-ion-beam-part-2/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;接&lt;a href="https://blog.debao.me/2024/11/notes-on-focused-ion-beams-part-1/"&gt;聚焦离子束FIB小记（一）&lt;/a&gt;，继续了解FIB&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="fib"&gt;什么是FIB仪器？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;FIB：聚焦离子束（Focused Ion Beam）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;FIB 聚焦离子束（Focused Ion Beam）仪器通过一束能量通常在 2 keV 至 30 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;接&lt;a href="https://blog.debao.me/2024/11/notes-on-focused-ion-beams-part-1/"&gt;聚焦离子束FIB小记（一）&lt;/a&gt;，继续了解FIB&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="fib"&gt;什么是FIB仪器？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;FIB：聚焦离子束（Focused Ion Beam）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;FIB 聚焦离子束（Focused Ion Beam）仪器通过一束能量通常在 2 keV 至 30 keV 的高度聚焦离子束扫描样品表面，实现纳米尺度的材料改性。该技术依赖于高能初级离子与目标原子之间的弹性核碰撞，将能量转移给样品原子，从而导致这些原子的位移，甚至从样品中被移除。&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;聚焦离子束系统（FIB 系统）是一种利用离子束对样品进行观察和加工的仪器。也就是说，在观察样品表面的同时，可以对样品的特定区域进行局部铣削和沉积。该系统应用于扫描电子显微镜（SEM）和透射电子显微镜（TEM）样品的制备、半导体器件的电路修改，以及金属、软材料和经过固定处理的生物样品的微形态加工。&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;聚焦离子束（FIB）柱是一种光学仪器，用于在真空腔室中将加速的离子束聚焦并扫描样品表面。该柱体主要有两个用途：1) 通过收集入射离子与样品表面相互作用产生的二次电子（SE），形成扫描离子图像。2) 局部溅射材料表面，直接制造任意的纳米结构。&lt;sup id="fnref:5"&gt;&lt;a class="footnote-ref" href="#fn:5"&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;聚焦离子束（Focused Ion Beam，简称 FIB）是一种技术，主要应用于半导体行业、材料科学，并且在生物领域的应用也日益增多，通常用于材料的特定位置分析、沉积和去除。FIB设备是一种科学仪器，其外观类似于扫描电子显微镜（SEM）。然而，不同于SEM使用聚焦的电子束来对样品成像，FIB设备使用的是聚焦的离子束。FIB还可以与电子束柱和离子束柱组合在一个系统中，允许使用电子束或离子束对同一特征进行研究和分析。然而，需要注意的是，FIB不应与使用聚焦离子束进行直接写入光刻（例如质子束写入）混淆。这些通常是完全不同的系统，材料的改性通过其他机制实现。&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="#fn:3"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;看完后，还是不知道FIB包括哪些东西。聚焦离子束直写 算不算 FIB？？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="ibl-dw"&gt;IBL-DW&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;IBL：离子束光刻（Ion Beam Lithography）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;广义的术语IBL可用于描述两种不同风格的离子束加工方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;投影式离子束光刻（Projection IBL）：其特点是使用较宽的离子束，通过某种掩模板对样品或晶圆进行辐照，模板上的图像会被缩小投影到目标表面上。&lt;/li&gt;
&lt;li&gt;直写式离子束光刻（Direct-Write IBL）：采用高度聚焦的离子束形成扫描式离子探针，其位置和时序由图案发生器（Pattern Generator）控制。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="fib_1"&gt;FIB 系统结构&lt;/h2&gt;
&lt;p&gt;所有的FIB设备都包含以下主要组件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;离子源（Ion Source）&lt;/li&gt;
&lt;li&gt;离子光学系统（ion optics）：包括束聚焦、束整形和引导柱（beam focusing, beam shaping, and steer-ing column）&lt;/li&gt;
&lt;li&gt;样品台（sample stage）&lt;/li&gt;
&lt;li&gt;扫描控制电子设备（scan control electronics）&lt;/li&gt;
&lt;li&gt;软件（software）&lt;/li&gt;
&lt;li&gt;可装载附件的样品腔室（sample chamber with additional options）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;借用 JEOL&lt;sup id="fnref2:2"&gt;&lt;a class="footnote-ref" href="#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt; 一张图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="fib system" src="https://blog.debao.me/images/sem/fibsystem_01.jpg"&gt;&lt;/p&gt;
&lt;h3 id="_1"&gt;离子源&lt;/h3&gt;
&lt;p&gt;依据fit4nano&lt;sup id="fnref2:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;内容，先给出一个表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;离子源&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;离子种类&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;亮度&lt;/strong&gt; (Am⁻²sr⁻¹V⁻¹)&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;最小能散&lt;/strong&gt; (eV)&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;最大束流&lt;/strong&gt; (nA)&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;横向分辨率(FWHM)&lt;/strong&gt; (nm)&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;关键应用&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;LMIS/LMAIS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Li, Si, &lt;strong&gt;Ga&lt;/strong&gt;, Ge, In, Sn, Sb, Au, Pb, Bi, ...&lt;/td&gt;
&lt;td&gt;~10⁶&lt;/td&gt;
&lt;td&gt;2–40&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;2–2.8&lt;/td&gt;
&lt;td&gt;表面图案化与截面制备、体积成像、局部掺杂与离子注入、二次离子质谱（SIMS）、掩模光刻、离子推进器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ILIS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;EMI⁺, BMI⁺, BF₄⁻, I⁻, ...&lt;/td&gt;
&lt;td&gt;~5×10⁶&lt;/td&gt;
&lt;td&gt;7–10&lt;/td&gt;
&lt;td&gt;0.75&lt;/td&gt;
&lt;td&gt;50–30,000&lt;/td&gt;
&lt;td&gt;离子推进器、反应离子刻蚀、二次离子质谱（SIMS）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;PFIB&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Xe&lt;/strong&gt;, Ar, Kr, N, O, ...&lt;/td&gt;
&lt;td&gt;~10³&lt;/td&gt;
&lt;td&gt;7–10&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;2500&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;20–100&lt;/td&gt;
&lt;td&gt;高速溅射、体积成像、气态元素注入&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GFIS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;He⁺&lt;/strong&gt;, Ne⁺&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;~4×10⁹&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.25–1&lt;/td&gt;
&lt;td&gt;0.15&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0.5&lt;/strong&gt; / 4.0&lt;/td&gt;
&lt;td&gt;高分辨率成像与纳米结构制造、掩模修复、气态元素注入&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;LoTIS/MOTIS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Li, Cs, Cr, Rb&lt;/td&gt;
&lt;td&gt;~2–4×10⁵&lt;/td&gt;
&lt;td&gt;0.2–2&lt;/td&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;二次离子质谱（SIMS）、离子注入&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;NAISH&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;q⁺, Arq⁺&lt;/td&gt;
&lt;td&gt;~4×10⁵&lt;/td&gt;
&lt;td&gt;0.9–2.3&lt;/td&gt;
&lt;td&gt;0.2–20&lt;/td&gt;
&lt;td&gt;~2000&lt;/td&gt;
&lt;td&gt;用作 SEM 的离子源、质子束加工&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;东西有点多，借用网络上一张图&lt;sup id="fnref:11"&gt;&lt;a class="footnote-ref" href="#fn:11"&gt;5&lt;/a&gt;&lt;/sup&gt;，先简单关注：&lt;/p&gt;
&lt;p&gt;&lt;img alt="LMIS vs GFIS" src="https://blog.debao.me/images/sem/fib_lmis_gfis.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;【&lt;strong&gt;LMIS&lt;/strong&gt;】液态金属离子源（Liquid Metal Ion Source）：Ga⁺液态金属离子源是最常见、成熟且广泛使用的离子源，适用于高精度应用。&lt;/li&gt;
&lt;li&gt;【&lt;strong&gt;GFIS&lt;/strong&gt;】气体离子源（Gas Field-Ionization Source）：用于高分辨率应用，如氦离子显微镜（HIM）。&lt;/li&gt;
&lt;li&gt;【&lt;strong&gt;PFIB&lt;/strong&gt;】等离子体离子源（Plasma Focus Ion Beam Source）：适用于高束流电流需求的应用，例如大规模材料去除。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以后再去了解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;【&lt;strong&gt;ILIS&lt;/strong&gt;】离子液体离子源 (Ionic Liquid Ion Source)：利用离子液体提取离子，可生成单离子或簇离子，用于离子推进器、反应离子刻蚀（RIE）、SIMS。&lt;/li&gt;
&lt;li&gt;【&lt;strong&gt;LoTIS&lt;/strong&gt;】低温离子源 (Low Temperature Ion Source)：，通过冷却技术减少能量分散，产生轻质离子（如 Li⁺、Cs⁺），用于 SIMS 和精确离子注入。&lt;/li&gt;
&lt;li&gt;【&lt;strong&gt;MOTIS&lt;/strong&gt;】磁光阱离子源 (Magneto-Optical Trap Ion Source)：，通过磁光阱冷却原子后电离，生成超低能量分散离子束，用于量子技术、SIMS 和功能材料加工。&lt;/li&gt;
&lt;li&gt;【&lt;strong&gt;NAISH&lt;/strong&gt;】高强度纳米孔离子源 (Nano Aperture Ion Source at High Intensity)：通过纳米孔径提取高亮度离子束，用于 SEM 离子源和质子束加工。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="lmis"&gt;LMIS 离子源&lt;/h4&gt;
&lt;p&gt;继续借用一下 JEOL&lt;sup id="fnref3:2"&gt;&lt;a class="footnote-ref" href="#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;的图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="LMIS" src="https://blog.debao.me/images/sem/fibsystem_02.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Osray&lt;sup id="fnref2:5"&gt;&lt;a class="footnote-ref" href="#fn:5"&gt;4&lt;/a&gt;&lt;/sup&gt;的图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="osray" src="https://blog.debao.me/images/sem/fib_lmis_taylor_cone.jpg"&gt;&lt;/p&gt;
&lt;p&gt;以及 MyScope.training&lt;sup id="fnref:4"&gt;&lt;a class="footnote-ref" href="#fn:4"&gt;6&lt;/a&gt;&lt;/sup&gt;中的图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="LMIS" src="https://blog.debao.me/images/sem/fib_lmis.png"&gt;&lt;/p&gt;
&lt;p&gt;通过用灯丝对离子源中的金属（通常为 Ga）进行短暂加热，储存罐中的 Ga 金属熔化并润湿 W 针的针尖。在针尖处，液态 Ga 在表面张力的作用下形成球形。当在提取电极上施加几千伏的负电压时，在针尖处形成强电场，液态 Ga 在电场的作用下被吸引，形成锥形（泰勒锥，Taylor cone）。电场在锥尖处进一步集中，电离的 Ga 离子从锥尖释放出去。&lt;/p&gt;
&lt;h4 id="gfis"&gt;GFIS 离子源&lt;/h4&gt;
&lt;p&gt;KNI&lt;sup id="fnref:8"&gt;&lt;a class="footnote-ref" href="#fn:8"&gt;7&lt;/a&gt;&lt;/sup&gt;的这张图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="GFIS" src="https://blog.debao.me/images/sem/fib_gfis.png"&gt;&lt;/p&gt;
&lt;p&gt;基本原理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;气体离子化&lt;/strong&gt;：GFIS 使用惰性气体（如氦或氖）作为离子源。气体被引入到尖端非常细小的金属针（通常为钨）的周围。通过施加高电压，在针尖产生极强的电场（局部场强可达 10⁹ V/m），使得气体原子在针尖处被电离，生成离子。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;泰勒锥形成&lt;/strong&gt;：在强电场作用下，针尖处的气体原子被吸引并形成一个稳定的离子发射区域，类似于“泰勒锥”（Taylor cone）的形状。离子从最尖锐的部位发射出来。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;离子束加速与聚焦&lt;/strong&gt;：电场进一步加速离子束，并通过静电透镜系统将离子束聚焦到一个极小的点，形成直径仅为亚纳米尺度的离子束。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="plasma-fib"&gt;Plasma FIB&lt;/h4&gt;
&lt;p&gt;先找个示意图，来源&lt;sup id="fnref:9"&gt;&lt;a class="footnote-ref" href="#fn:9"&gt;8&lt;/a&gt;&lt;/sup&gt;：
&lt;img alt="pfib" src="https://blog.debao.me/images/sem/fib_pfib.png"&gt;&lt;/p&gt;
&lt;p&gt;基本原理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;气体电离&lt;/strong&gt;：惰性气体（如氙气）被引入等离子体腔，在高频射频电磁场（ICP）或微波场（ECR）的作用下电离，形成高密度的等离子体。等离子体中包含电子、离子和中性原子，其中离子是形成离子束的关键。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;离子提取&lt;/strong&gt;：在提取电极处施加高电压，正离子（如 Xe⁺）从等离子体中被加速提取出来，形成初步的离子束。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;离子聚焦&lt;/strong&gt;：提取的离子束通过静电或磁透镜进一步聚焦，形成高亮度、高电流密度的离子束流。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;束流调节&lt;/strong&gt;：通过一系列光阑和偏转器对离子束进行调整，使其束斑直径、能量和电流符合加工要求。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多离子种类&lt;/strong&gt;：PFIB 可使用多种离子气体（如 Xe, Ar, O, N），适用于不同材料的加工需求。&lt;strong&gt;氙（Xe）&lt;/strong&gt; 是最常用的离子，因其质量较大，具有高溅射率和化学惰性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高材料去除率&lt;/strong&gt;：相较于传统的液态金属离子源（LMIS），PFIB 的电流更高（可达数百 μA？），适合大面积材料去除和快速加工。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;离子束直径较大&lt;/strong&gt;：PFIB 的束斑直径通常较 LMIS 大，适合大尺度加工，但在纳米级别的精细加工中可能有一定限制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;束流均匀性&lt;/strong&gt;：PFIB 的离子束在横截面上可能有“束尾”，即离子束边缘的电流密度较低，这在精细加工如 TEM 样品制备中会增加复杂性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;离子光学镜筒&lt;/h3&gt;
&lt;p&gt;找个示意图，图片来源&lt;sup id="fnref3:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img alt="ion column" src="https://blog.debao.me/images/sem/fib_ion_optics.png"&gt;&lt;/p&gt;
&lt;p&gt;图片来源&lt;sup id="fnref4:2"&gt;&lt;a class="footnote-ref" href="#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img alt="ion column" src="https://blog.debao.me/images/sem/fibsystem_03.jpg"&gt;&lt;/p&gt;
&lt;p&gt;图片来源&lt;sup id="fnref3:5"&gt;&lt;a class="footnote-ref" href="#fn:5"&gt;4&lt;/a&gt;&lt;/sup&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img alt="ion column" src="https://blog.debao.me/images/sem/fib_schema.jpg"&gt;&lt;/p&gt;
&lt;p&gt;从示意图中可以看出，用的都是静电透镜和静电偏转器。不用于电子光学设备，主要使用磁透镜。&lt;/p&gt;
&lt;h4 id="_3"&gt;不使用磁透镜原因？&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;离子比电子重很多，同样能量下速度比电子慢，相对论效应压根不用考虑了。这点省心。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原因很清楚，简单放上电子光学中对于短磁透镜的一些结论&lt;sup id="fnref:20"&gt;&lt;a class="footnote-ref" href="#fn:20"&gt;9&lt;/a&gt;&lt;/sup&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;磁透镜是聚焦透镜，无论线圈中电流方向如何&lt;/li&gt;
&lt;li&gt;磁透镜会聚能力与轴上磁场积分成正比，磁场越强，会聚能力越强&lt;/li&gt;
&lt;li&gt;磁透镜的聚焦能力与电压成反比，带电粒子轴向速度越快，受力时间越短，聚焦能力越弱&lt;/li&gt;
&lt;li&gt;磁透镜的聚焦能力与带电粒子的荷质比有关。&lt;strong&gt;质量越大，聚焦力越弱&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;磁透镜存在像转角，它与线圈中电流方向有关。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="_4"&gt;离子与物质作用&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;离子与物质的相互作用，机制比电子和物质的相互作用，要复杂。先找几个示意图放上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;借用一张图&lt;sup id="fnref:21"&gt;&lt;a class="footnote-ref" href="#fn:21"&gt;11&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="ion matter interaction" src="https://blog.debao.me/images/sem/ion_matter_interaction.jpg"&gt;&lt;/p&gt;
&lt;p&gt;再借用一张图&lt;sup id="fnref:10"&gt;&lt;a class="footnote-ref" href="#fn:10"&gt;10&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="fib" src="https://blog.debao.me/images/sem/fib_functions.png"&gt;&lt;/p&gt;
&lt;h2 id="_5"&gt;参考&lt;/h2&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;https://fit4nano.eu/roadmap-for-focused-ion-beam-fib-technologies/&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref2:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref3:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;https://www.jeol.com/words/semterms/20121024.041159.php#gsc.tab=0&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref2:2" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref3:2" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref4:2" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;https://en.wikipedia.org/wiki/Focused_ion_beam&amp;#160;&lt;a class="footnote-backref" href="#fnref:3" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:5"&gt;
&lt;p&gt;https://www.orsayphysics.com/what-is-fib&amp;#160;&lt;a class="footnote-backref" href="#fnref:5" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref2:5" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref3:5" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:11"&gt;
&lt;p&gt;https://link.springer.com/chapter/10.1007/978-3-031-14244-4_3&amp;#160;&lt;a class="footnote-backref" href="#fnref:11" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:4"&gt;
&lt;p&gt;https://myscope.training/FIB_SEM_and_FIB_columns&amp;#160;&lt;a class="footnote-backref" href="#fnref:4" title="Jump back to footnote 6 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:8"&gt;
&lt;p&gt;https://www.youtube.com/watch?v=Zh21tp3aPEw&amp;#160;&lt;a class="footnote-backref" href="#fnref:8" title="Jump back to footnote 7 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:9"&gt;
&lt;p&gt;https://www.researchgate.net/publication/272010582_Advances_in_source_technology_for_focused_ion_beam_instruments&amp;#160;&lt;a class="footnote-backref" href="#fnref:9" title="Jump back to footnote 8 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:20"&gt;
&lt;p&gt;姚宗熙《物理电子学》 西安交通大学&amp;#160;&lt;a class="footnote-backref" href="#fnref:20" title="Jump back to footnote 9 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:10"&gt;
&lt;p&gt;https://www.slideshare.net/slideshow/ion-beam-lithographypptx/252276338#10&amp;#160;&lt;a class="footnote-backref" href="#fnref:10" title="Jump back to footnote 10 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:21"&gt;
&lt;p&gt;https://www.sciencedirect.com/science/article/pii/S0001868622000446&amp;#160;&lt;a class="footnote-backref" href="#fnref:21" title="Jump back to footnote 11 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="SEM"></category><category term="SEM"></category></entry><entry><title>聚焦离子束FIB小记（一）</title><link href="https://blog.debao.me/2024/11/notes-on-focused-ion-beams-part-1/" rel="alternate"></link><published>2024-11-22T20:23:00+08:00</published><updated>2024-11-22T20:23:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-22:/2024/11/notes-on-focused-ion-beams-part-1/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;查查网上资料，稍作整理，简单记记流水账...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;一些术语&lt;/h2&gt;
&lt;p&gt;先抛开 FIB（Focused Ion Beam），熟悉一些离子束（包括宽束、非聚焦离子束）相关应用或 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;查查网上资料，稍作整理，简单记记流水账...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;一些术语&lt;/h2&gt;
&lt;p&gt;先抛开 FIB（Focused Ion Beam），熟悉一些离子束（包括宽束、非聚焦离子束）相关应用或设备术语&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;IBE (Ion Beam Etching)&lt;/strong&gt;：离子束刻蚀，利用离子束轰击材料表面实现精细刻蚀或表面清洁。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IBD (Ion Beam Deposition)&lt;/strong&gt;：离子束沉积，利用离子束将材料沉积到基底上，用于薄膜制备。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IBAD (Ion Beam Assisted Deposition)&lt;/strong&gt;：离子束辅助沉积，结合离子束和物理气相沉积技术增强薄膜的附着力或调控薄膜性质。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ion Implantation&lt;/strong&gt;：离子注入，将高能离子束注入材料中，用于半导体掺杂或材料改性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ion Milling&lt;/strong&gt;：离子束研磨（减薄），通过离子束轰击样品表面去除材料层，用于样品制备和平坦化。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ion Beam Polishing&lt;/strong&gt;：离子束抛光，通过离子束轰击去除样品表面粗糙层，获得高光滑度表面。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HIM (Helium Ion Microscopy)&lt;/strong&gt;：氦离子显微镜，利用氦离子束进行超高分辨率成像，适合绝缘材料、生物样品及纳米级表面分析。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SIMS (Secondary Ion Mass Spectrometry)&lt;/strong&gt;：二次离子质谱，利用离子束溅射样品表面产生的二次离子进行化学成分表征和深度分布分析。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IBIC (Ion Beam Induced Charge Imaging)&lt;/strong&gt;：离子束诱导电荷成像，利用离子束激发样品中的电荷，用于半导体器件和材料的电性能分析。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PIXE (Particle-Induced X-ray Emission)&lt;/strong&gt;：粒子诱导 X 射线发射，离子束轰击样品产生特征 X 射线，用于化学元素分析和成像。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;STIM (Scanning Transmission Ion Microscopy)&lt;/strong&gt;：扫描透射离子显微镜，利用聚焦离子束穿透样品，记录透射离子信号，用于样品厚度分析和成像。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ion Beam Mixing&lt;/strong&gt;：离子束混合，利用离子束轰击界面材料，实现界面扩散和结构调整。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IBL (Ion Beam Lithography)&lt;/strong&gt;：离子束光刻，利用聚焦离子束在抗蚀剂上直接写图，用于纳米级图案化。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MeV Ion Beam Microprobe&lt;/strong&gt;：兆电子伏（MeV）级离子束微探针，利用高能离子束分析样品微区的成分和结构，应用于 RBS、PIXE 和 NRA 的微区分析。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RBS (Rutherford Backscattering Spectrometry)&lt;/strong&gt;：拉塞福背散射光谱，利用离子束与样品原子核的散射效应分析材料的层厚和元素分布。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ERD (Elastic Recoil Detection)&lt;/strong&gt;：弹性后退探测分析，利用离子束轰击轻元素（如氢、氧）从样品中弹出，实现定量分析。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NRA (Nuclear Reaction Analysis)&lt;/strong&gt;：核反应分析，利用离子束与特定元素发生核反应，测量其深度分布。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FIB-SEM Dual Beam Systems&lt;/strong&gt;：聚焦离子束-扫描电子显微镜联合系统，结合 FIB 的精密加工和 SEM 的高分辨率成像，用于材料分析和样品制备。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="fib"&gt;FIB供应商&lt;/h2&gt;
&lt;p&gt;Zeiss公司的John Notte在文章 &lt;a href="https://www.researchgate.net/publication/319011951_Focused_Ion_Beams_for_Imaging_Analysis_and_Fabrication_-_Where_Did_They_Come_From_and_Where_are_They_Going"&gt;Focused Ion Beams for Imaging Analysis and Fabrication&lt;/a&gt; 给出下面一个商业FIB供应商的时间线：&lt;/p&gt;
&lt;p&gt;&lt;img alt="timeline" src="https://blog.debao.me/images/sem/timeline_of_fib_providers.png"&gt;&lt;/p&gt;
&lt;p&gt;主要厂家：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Thermo Fisher Scientific&lt;/li&gt;
&lt;li&gt;Hitachi&lt;/li&gt;
&lt;li&gt;Zeiss&lt;/li&gt;
&lt;li&gt;JEOL Ltd&lt;/li&gt;
&lt;li&gt;Tescan Group&lt;/li&gt;
&lt;li&gt;Raith&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：和半导体工艺中用到的离子注入机（Ion Implanter）厂家（AIBT、AMAT等）相区分。注入机一般都是高能、大面积、深层掺杂，不用FIB。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;文中还提到：与大多数 SEM 不同，衍射效应对 FIB 的聚焦探针尺寸几乎没有显著影响。FIB在给定的束流电流下探针的聚焦尺寸主要受离子源亮度的限制。FIB 能力的进步通常与离子源技术的发展密切相关。&lt;/p&gt;
&lt;p&gt;顺便看看历史&lt;/p&gt;
&lt;h2 id="_2"&gt;历史&lt;/h2&gt;
&lt;p&gt;FIB用的离子源主要可分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;【&lt;strong&gt;LMIS&lt;/strong&gt;】&lt;strong&gt;Ga⁺&lt;/strong&gt; 液态金属离子源（Liquid Metal Ion Source）：最常见、成熟且广泛使用的离子源，适用于高精度应用。&lt;/li&gt;
&lt;li&gt;【&lt;strong&gt;GFIS&lt;/strong&gt;】气体离子源（Gas Field-Ionization Source）：用于高分辨率应用，如氦离子显微镜（HIM）。&lt;/li&gt;
&lt;li&gt;【&lt;strong&gt;PFIB&lt;/strong&gt;】等离子体离子源（Plasma Focus Ion Source）：适用于高束流电流（2uA）需求的应用，例如大规模材料去除。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="2060"&gt;20世纪60年代：起源与早期探索&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;60年代离子束技术（&lt;strong&gt;Ion Beam Technology&lt;/strong&gt;）的概念开始出现，科学家尝试利用离子束进行材料的加工与分析。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1961年&lt;/strong&gt;：Krohn 研究了带电液滴中离子的形成，并首次设计了基于液态金属的离子源（Liquid Metal Ion Source, &lt;strong&gt;LMIS&lt;/strong&gt;），为现代 FIB 技术奠定了基础。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1964年&lt;/strong&gt;：Taylor 提出了液体在电场中形成锥形（&lt;strong&gt;Taylor Cone&lt;/strong&gt;）的模型，这是 LMIS 技术的核心原理。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="1970"&gt;1970年代：气体离子源与液态金属离子源&lt;/h3&gt;
&lt;h4 id="gas-field-ion-source-gfis"&gt;气体场离子源（Gas Field Ion Source, GFIS）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1974年&lt;/strong&gt;：Seliger 和 Fleming 在集成电路中首次使用气体离子源进行无掩模掺杂（&lt;strong&gt;Maskless Doping&lt;/strong&gt;）和抗蚀剂曝光，但因电流密度较低和操作复杂，未得到广泛应用。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1975年&lt;/strong&gt;：Orloff 和 Swanson 开发了高亮度的 GFIS，但其低温操作的限制阻碍了工业化推广。基于GFIS开发了首个FIB系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="liquid-metal-ion-source-lmis"&gt;液态金属离子源（Liquid Metal Ion Source, LMIS）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1974年&lt;/strong&gt;：Krohn 演示了基于镓（Gallium, Ga）、锡（Tin, Sn）等液态金属的离子源，亮度高且易于操作，逐步成为 FIB 技术的主流方案。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1979年&lt;/strong&gt;：Seliger 等人用 LMIS 成功实现了在硅基底上的纳米级图案化（如 0.1μm 宽的线条铣刻），标志着 &lt;strong&gt;FIB&lt;/strong&gt; 技术在微纳加工（Nano-Fabrication）中的&lt;strong&gt;首次成功应用&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="1980lmis"&gt;1980年代：LMIS优化&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;80年代 LMIS 技术逐渐成熟，被广泛应用于半导体制造（Semiconductor Manufacturing）和材料加工（Material Processing）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1981年&lt;/strong&gt;：Seliger 开发了基于 ExB 质量分离器（Mass Separator）的系统，用于掺杂不同的离子种类，这一技术被 JEOL 和 AT&amp;amp;T 贝尔实验室进一步改进。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1985年&lt;/strong&gt;：Orloff 和 Sudraud 设计了一种基于 LMIS 的离子束镜筒（Ion Optics Column），在光刻（Lithography）和注入应用中实现了 10nm 的分辨率。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="1990fib"&gt;1990年代至今：FIB发展&lt;/h3&gt;
&lt;h4 id="lmis"&gt;镓 LMIS 的主导地位&lt;/h4&gt;
&lt;p&gt;镓基 LMIS 成为 FIB 系统的核心技术，广泛应用于半导体失效分析（Failure Analysis）、样品制备（Sample Preparation）和微纳加工（Nano-Fabrication）。&lt;/p&gt;
&lt;h4 id="_3"&gt;新型离子源的出现&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GFIS&lt;/strong&gt; 气体场离子源（Gas Field Ion Source）复兴：氦离子显微镜（Helium Ion Microscope, HIM）基于 GFIS 技术，提供亚纳米级分辨率，适用于高分辨率成像（High-Resolution Imaging）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PFIB&lt;/strong&gt; 等离子离子源（Plasma Ion Source）：提供高束流电流（High Beam Current），适合大规模材料去除和粗加工。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;激光离子源（Laser Ion Source）&lt;/strong&gt;：提供低温单色离子束（Monochromatic Ion Beam），支持多种离子种类的新应用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="fib_1"&gt;FIB市场规模&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;网上搜到的各种市场分析报告，感觉很多都是在胡写，真假莫辨，不知道包含哪些种类设备。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;全球市场规模&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;报告日期&lt;/th&gt;
&lt;th&gt;出版商&lt;/th&gt;
&lt;th&gt;2023&lt;/th&gt;
&lt;th&gt;2024&lt;/th&gt;
&lt;th&gt;2028&lt;/th&gt;
&lt;th&gt;2029&lt;/th&gt;
&lt;th&gt;2030&lt;/th&gt;
&lt;th&gt;2031&lt;/th&gt;
&lt;th&gt;2032&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2022.12&lt;/td&gt;
&lt;td&gt;MarketsandMarkets&lt;/td&gt;
&lt;td&gt;13亿USD&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;18亿USD&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2022.12&lt;/td&gt;
&lt;td&gt;KBV Research&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;19亿USD&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2023.2&lt;/td&gt;
&lt;td&gt;Polaris Market Research&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;15.56亿USD&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024.1&lt;/td&gt;
&lt;td&gt;360iResearch&lt;/td&gt;
&lt;td&gt;14亿USD&lt;/td&gt;
&lt;td&gt;14.8亿USD&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;23.4亿USD&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024.1&lt;/td&gt;
&lt;td&gt;Lucintel&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;16亿USD&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024.4&lt;/td&gt;
&lt;td&gt;IMARC&lt;/td&gt;
&lt;td&gt;10.44亿USD&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;17.15亿USD&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024.2&lt;/td&gt;
&lt;td&gt;The Business Research Company&lt;/td&gt;
&lt;td&gt;12.6亿USD&lt;/td&gt;
&lt;td&gt;13.6亿USD&lt;/td&gt;
&lt;td&gt;18亿USD&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024.4&lt;/td&gt;
&lt;td&gt;贝哲斯咨询&lt;/td&gt;
&lt;td&gt;7.64亿USD&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;11.36亿USD&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024&lt;/td&gt;
&lt;td&gt;贝哲斯咨询&lt;/td&gt;
&lt;td&gt;71.43亿CNY&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;88.11亿CNY&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024.11&lt;/td&gt;
&lt;td&gt;Business Research Inights&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;5.08亿USD&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;具体到FIB-SEM&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;报告日期&lt;/th&gt;
&lt;th&gt;出版商&lt;/th&gt;
&lt;th&gt;2023&lt;/th&gt;
&lt;th&gt;2024&lt;/th&gt;
&lt;th&gt;2028&lt;/th&gt;
&lt;th&gt;2029&lt;/th&gt;
&lt;th&gt;2030&lt;/th&gt;
&lt;th&gt;2031&lt;/th&gt;
&lt;th&gt;2032&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2023.8&lt;/td&gt;
&lt;td&gt;QYResearch&lt;/td&gt;
&lt;td&gt;5.96亿USD&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;7.49亿USD&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024.1&lt;/td&gt;
&lt;td&gt;Lucintel&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;7.39亿USD&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024&lt;/td&gt;
&lt;td&gt;辰宇信息&lt;/td&gt;
&lt;td&gt;38亿CNY&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;57亿CNY&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;按照 QYResearch，2023年数据：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;北美：   1.72亿USD&lt;/li&gt;
&lt;li&gt;亚太：   2.24亿USD&lt;/li&gt;
&lt;li&gt;欧洲：   1.72亿USD&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="fib_2"&gt;FIB分类？&lt;/h2&gt;
&lt;h3 id="_4"&gt;按功能&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;蚀刻（Etching）：用于材料去除和微纳结构制造。&lt;/li&gt;
&lt;li&gt;沉积（Deposition）：用于局部材料添加和结构修复。&lt;/li&gt;
&lt;li&gt;注入（Implantation）：用于材料改性和半导体掺杂。&lt;/li&gt;
&lt;li&gt;成像（Imaging）：用于高分辨率表面成像和缺陷检测。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="fib" src="https://blog.debao.me/images/sem/basic_functions_of_fib_technology.png"&gt;&lt;/p&gt;
&lt;p&gt;图片来源：&lt;a href="https://www.researchgate.net/publication/353893950_A_review_of_focused_ion_beam_applications_in_optical_fibers"&gt;A_review_of_focused_ion_beam_applications_in_optical_fibers&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="_5"&gt;按应用&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;故障分析（Failure Analysis）&lt;/strong&gt;：FIB 用于半导体和材料的失效分析（如电路开路、短路等），是当前最重要的应用之一。&lt;/li&gt;
&lt;li&gt;纳米制造（Nanofabrication）：FIB 可实现纳米级的精密加工，如纳米孔、纳米柱的制作。&lt;/li&gt;
&lt;li&gt;器件修改（Device Modification）：通过 FIB 修改现有器件的结构或性能，例如半导体器件的局部调整。&lt;/li&gt;
&lt;li&gt;电路编辑（Circuit Editing）：用于芯片设计中的电路功能修改或修复，尤其在芯片开发阶段。&lt;/li&gt;
&lt;li&gt;假冒检测（Counterfeit Detection）：用于验证电子元器件的真伪，通过对内部结构分析检测假冒产品。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_6"&gt;按行业&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;电子与半导体&lt;/strong&gt;：失效分析、晶圆修复、电路编辑是核心应用。&lt;/li&gt;
&lt;li&gt;工业科学：用于工业材料的表征和加工技术开发。&lt;/li&gt;
&lt;li&gt;生物科学：FIB 用于生物样品制备（如 TEM 生物薄片的制备）。&lt;/li&gt;
&lt;li&gt;材料科学：纳米制造、材料表征（如成分分析、结构分析）等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_7"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://baijiahao.baidu.com/s?id=1812669612351403512"&gt;聚焦离子束（FIB）的技术史与商业演化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/660311698"&gt;分析聚焦离子束fib系统的离子源技术的进步&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fit4nano.eu/roadmap-for-focused-ion-beam-fib-technologies/"&gt;https://fit4nano.eu/roadmap-for-focused-ion-beam-fib-technologies/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.researchgate.net/publication/319011951_Focused_Ion_Beams_for_Imaging_Analysis_and_Fabrication_-_Where_Did_They_Come_From_and_Where_are_They_Going"&gt;Focused Ion Beams for Imaging Analysis and Fabrication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Focused_ion_beam&lt;/li&gt;
&lt;li&gt;https://www.globalmarketmonitor.com.cn/market_news/2914506.html&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Ion_implantation&lt;/li&gt;
&lt;/ul&gt;</content><category term="SEM"></category><category term="SEM"></category></entry><entry><title>如何优雅地实现Qt无边框程序</title><link href="https://blog.debao.me/2024/11/a-brief-discussion-on-elegantly-implementing-qt-frameless-application/" rel="alternate"></link><published>2024-11-21T20:19:00+08:00</published><updated>2024-11-21T20:19:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-21:/2024/11/a-brief-discussion-on-elegantly-implementing-qt-frameless-application/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;现在的软件界面多姿多彩，越来越少软件直接使用系统默认的窗口边框。这样一来，Qt Widgets默认的风格反而显得有些土里土气。&lt;/p&gt;
&lt;p&gt;可是，一个C++工程师，美工不行，搞qss都有些费劲了 …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;现在的软件界面多姿多彩，越来越少软件直接使用系统默认的窗口边框。这样一来，Qt Widgets默认的风格反而显得有些土里土气。&lt;/p&gt;
&lt;p&gt;可是，一个C++工程师，美工不行，搞qss都有些费劲了。如何才能优雅地（无感地）实现无边框程序呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Frameless Application" src="https://blog.debao.me/images/qt/framelessapplication.png"&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;目标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;工程师写代码时无需考虑边框问题，一切都使用默认风格&lt;/li&gt;
&lt;li&gt;程序完成后，将 &lt;strong&gt;QApplicaiton&lt;/strong&gt; 直接换成 &lt;strong&gt;FramelessApplication&lt;/strong&gt; ，完工！&lt;/li&gt;
&lt;li&gt;适用 C++ Qt 和 PySide/PyQt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;愿望很美好，可是网上铺天盖地的&lt;code&gt;BorderlessWidget&lt;/code&gt;，&lt;code&gt;FramelessWindow&lt;/code&gt;，...，都是对Widget这些控件直接上手。你怎么整了个 &lt;strong&gt;Application&lt;/strong&gt; ？能好使吗？？&lt;/p&gt;
&lt;h2 id="framelessapplication"&gt;FramelessApplication 从哪儿来？？&lt;/h2&gt;
&lt;p&gt;没有现成的，手撸就好了，做成一个基础库：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;FramelessWindow&lt;/strong&gt;：毫无疑问，首先要实现这个东西。从QWidget派生成，实现无边框风格。这一部分有很多&lt;strong&gt;杂乱&lt;/strong&gt;的细节，网上的各种实现各有特点，此处不赘述。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FramelessDockWidgetTitleBar&lt;/strong&gt;：QMainWindow的停靠窗口，一旦悬浮，也有自己的边框风格。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FramelessApplication&lt;/strong&gt;：为程序中所有的窗口（QMainWindow，QDialog，等）自动应用上面两个类，隐藏实现细节。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="framelassapplication"&gt;FramelassApplication&lt;/h3&gt;
&lt;p&gt;接口很简单，如果不是为了处理个别情况，它不需要添加任何额外的API：&lt;/p&gt;
&lt;div class="mermaid"&gt;
classDiagram
    class QApplication

    class BorderlessApplication {
        + bool isAutoWrapWidgetsEnabled()
        + void setAutoWrapWidgetsEnabled(bool enabled)
        + void addNonAutoWrapWidget(QWidget *window)
        + void removeNonAutoWrapWidget(QWidget *window)
        # bool notify(QObject *receiver, QEvent *e)
    }

    QApplication &lt;|-- BorderlessApplication
&lt;/div&gt;

&lt;p&gt;一般来说，需要为以下所有的窗口分别自动包裹一个无边框的widget：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QMainWindow&lt;/li&gt;
&lt;li&gt;QDialog&lt;/li&gt;
&lt;li&gt;QMessageBox&lt;/li&gt;
&lt;li&gt;其他非 &lt;code&gt;Qt::Popup&lt;/code&gt; 的QWidget窗口等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对QDockWidget，自动应用自定义的titlebar。&lt;/p&gt;
&lt;p&gt;另外，特别注意，Qt有时候会使用原生窗口（样式表对他们不生效），需要考虑好是否想包裹他们，尤其是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QFileDialog&lt;/li&gt;
&lt;li&gt;QFontDialog&lt;/li&gt;
&lt;li&gt;QColorDialog&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无论如何，遇到如下标识，我们自动包裹它们是安全的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;QFileDialog::DontUseNativeDialog
QFontDialog::DontUseNativeDialog
QColorDialog::DontUseNativeDialog

Qt::AA_DontUseNativeDialogs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;准备工作做好后，注意，从类图可以看到，我们重写了notify函数，去截获我们要处理对象的如下两个事件就好了，要点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;QEvent::Show&lt;/code&gt;：如果需要，用无边框窗口包裹&lt;/li&gt;
&lt;li&gt;&lt;code&gt;QEvent::Close&lt;/code&gt;：如果存在自动包裹的无边框窗口，将其移除【确保无内存泄漏】&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外，样式表也可以由FramelessApplication统一处理。&lt;/p&gt;
&lt;h3 id="framelesswindow"&gt;FramelessWindow&lt;/h3&gt;
&lt;p&gt;网上实现方式多样，反正接口也很简单：&lt;/p&gt;
&lt;div class="mermaid"&gt;
classDiagram
    class QWidget

    class FramelessWindow {
        + void setCentralWidget(QWidget *widget)
        + QWidget *centralWidget() const
        + QWidget *takeCentralWidget()
        + int exec()
        + void open()
    }

    QWidget &lt;|-- FramelessWindow
&lt;/div&gt;

&lt;p&gt;我们知道，显示一个窗口，有三种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;show()：非模态，不阻塞&lt;/li&gt;
&lt;li&gt;open()：模态，不阻塞&lt;/li&gt;
&lt;li&gt;exec()：模态，阻塞（因为事件循环嵌套的问题，大程序中尽量避免使用）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了偷懒，我不想为QDialog、QMainWindow 等分别定制无边框窗口，所以所有东西都塞到一个类里面了（注意处理&lt;code&gt;Qt::WindowFlags&lt;/code&gt;）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;特别注意，一个窗口一旦被Frameless窗口包裹后，Qt将不认为原窗口是一个窗口（废话），所以它关闭时收不到CloseEvent，需要特别处理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="python"&gt;python&lt;/h3&gt;
&lt;p&gt;Python下实现和这个一样，只不过，我不想用python再写一遍，但需要为我们前面实现的类库，使用SIP或Shibokenw创建python绑定。&lt;/p&gt;
&lt;p&gt;这是另一个有趣故事。&lt;/p&gt;
&lt;h2 id="_2"&gt;使用方式&lt;/h2&gt;
&lt;p&gt;所有的代码封装到一个库中，写应用程序时，无需关注细节，直接使用就好：&lt;/p&gt;
&lt;h3 id="framelessapplication_1"&gt;让 FramelessApplication 自动包裹&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Frameless Application" src="https://blog.debao.me/images/qt/framelessapplication.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;FramelessApplication&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;MainWindow&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;mainWindow&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MainWindow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;mainWindow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_3"&gt;手动包裹&lt;/h3&gt;
&lt;p&gt;对个别窗口或所有窗口，手动创建FramelessWindow并显示。&lt;/p&gt;
&lt;p&gt;没问题&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;FramelessApplication&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;MainWindow&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;mainWindow&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MainWindow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;FramelessWindow&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;framelessWidget&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;framelessWidget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setCentralWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mainWindow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;framelessWidget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_4"&gt;注意事项&lt;/h2&gt;
&lt;p&gt;尽管主打一个用户无感，但是有时可能是会有点影响，具体和FramelessWindow的实现也有关系。&lt;/p&gt;
&lt;h3 id="1"&gt;场景1&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;MainWindow::on_button_clicked&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;QDialog&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dlg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;dlg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;我们需要清楚，在被包裹以后，这个dlg就不是一个真正的Dialog了。尽管一般都是无感的。&lt;/p&gt;
&lt;p&gt;但如果这个QDialog内部还做了很多奇奇怪怪更精细的事情，特别时需要多次显示、隐藏、关闭，可能如下写法更安全一些：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;MainWindow::on_button_clicked&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;//dlg-&amp;gt;exec();&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;dlg&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;不管它是否被包裹，都和肉眼所见的逻辑一样。&lt;/p&gt;
&lt;script type="module"&gt;
    import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.esm.min.mjs';
    mermaid.initialize({ startOnLoad: true });
&lt;/script&gt;</content><category term="Qt"></category><category term="Qt"></category></entry><entry><title>Qt与Python的绑定历史回顾</title><link href="https://blog.debao.me/2024/11/a-review-of-the-history-of-qt-and-python-bindings/" rel="alternate"></link><published>2024-11-19T23:22:00+08:00</published><updated>2024-11-19T23:22:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-19:/2024/11/a-review-of-the-history-of-qt-and-python-bindings/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;老生常谈，简单聊聊 PyQt、PySide、PythonQt 都是什么东西...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果只有两个的话，估计大家更容易理解&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PyQt：为Python程序添加C++ Qt库支持&lt;/li&gt;
&lt;li&gt;PythonQt：为C++ Qt程序添加Python脚本支持&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但为什么多了一个 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;老生常谈，简单聊聊 PyQt、PySide、PythonQt 都是什么东西...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果只有两个的话，估计大家更容易理解&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PyQt：为Python程序添加C++ Qt库支持&lt;/li&gt;
&lt;li&gt;PythonQt：为C++ Qt程序添加Python脚本支持&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但为什么多了一个PySide？其实这个是给像我这样——不喜欢盗版，也不喜欢GPL协议——的个人或小公司的福利。当然还希望有钱的公司还是要多支持Qt商业版本，便于其良性发展。&lt;/p&gt;
&lt;h2 id="_1"&gt;对比&lt;/h2&gt;
&lt;p&gt;先简单列个表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;特性/维度&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;PyQt&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;PySide (Qt for Python)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;PythonQt&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;开发者&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Riverbank Computing&lt;/td&gt;
&lt;td&gt;The Qt Company&lt;/td&gt;
&lt;td&gt;MeVis Medical Solutions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;最初发布&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1990年代后期&lt;/td&gt;
&lt;td&gt;2009年（最初版本），2018年重新作为“Qt for Python”发布&lt;/td&gt;
&lt;td&gt;2008年左右&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;许可&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;GPL&lt;/strong&gt; 和商业许可&lt;/td&gt;
&lt;td&gt;LGPL和商业许可&lt;/td&gt;
&lt;td&gt;LGPL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;功能&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;完整支持Qt框架&lt;/td&gt;
&lt;td&gt;完整支持Qt框架&lt;/td&gt;
&lt;td&gt;功能有限，主要用于嵌入式Python解释器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;工具&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;SIP&lt;/td&gt;
&lt;td&gt;Shiboken&lt;/td&gt;
&lt;td&gt;qtscriptgenerator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;文档和教程&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;丰富的文档和教程&lt;/td&gt;
&lt;td&gt;官方文档逐渐完善，紧跟Qt官方文档&lt;/td&gt;
&lt;td&gt;文档较少，资源有限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;生态&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;历史悠久，社区活跃&lt;/td&gt;
&lt;td&gt;逐渐吸引更多用户&lt;/td&gt;
&lt;td&gt;小众，主要在特定领域有使用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="pyqt"&gt;PyQt&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.riverbankcomputing.com/software/pyqt/"&gt;https://www.riverbankcomputing.com/software/pyqt/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/PyQt"&gt;https://en.wikipedia.org/wiki/PyQt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Python-SIP/sip"&gt;https://github.com/Python-SIP/sip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyQt由Riverbank Computing公司开发，最早版本发布于1998年，历史悠久，社区活跃。&lt;/p&gt;
&lt;p&gt;为了完成C++库到Python的绑定，该公司开发了SIP工具，这个工具本身采用BSD授权。&lt;/p&gt;
&lt;p&gt;注意：PyQt 采用 GPL 和 商业 双重授权，不支持LGPL。要商用的话，需要先购买授权！ &lt;/p&gt;
&lt;h2 id="pyside"&gt;PySide&lt;/h2&gt;
&lt;p&gt;在Qt支持LGPL之后，因为PyQt不采用LGPL，所有才有了采用LGPL新的项目：PySide。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.qt.io/qt-for-python"&gt;https://www.qt.io/qt-for-python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.qt.io/Qt_for_Python"&gt;https://wiki.qt.io/Qt_for_Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/PySide"&gt;https://en.wikipedia.org/wiki/PySide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.qt.io/cgit/pyside/pyside-setup.git/"&gt;https://code.qt.io/cgit/pyside/pyside-setup.git/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;2009年，我从wxpython转向Qt，就是因为Qt和PySide先后增加了LGPL授权。不过我想不通：
自从和Nokia分家后，Qt官方一直在C++ Qt中淡化LGPL，为什么这时会选择在Qt5.12时复活PySide这一和PyQt高度重合的项目。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_2"&gt;诞生与死亡&lt;/h3&gt;
&lt;p&gt;2008年，Nokia 收购Qt，立即着手给Qt（4.5）增加 LGPL 授权。但是此时PyQt的开发商，不同意同步增加LGPL授权，于是乎，为了推广Qt，当时财大气粗的Nokia MeeGo计算机小组，赞助位于巴西的OpenBossa INdT(Nokia Technology Institute)小组开发采用 LGPL 协议的新的Python绑定，这边有了 PySide。&lt;/p&gt;
&lt;p&gt;2009年8月18日，LGPL版本的PySide发布（最初采用Boost的python库进行C++到python的封装，后来改为自己的shiboken）。&lt;/p&gt;
&lt;p&gt;2011年8月22日，因为Nokia与微软结盟开发手机操作系统，使得Nokia与Intel联合研发的MeeGo系统遭受重创。进而PySide缺少资金来源（开始发公告，并躺平等死）。&lt;/p&gt;
&lt;h3 id="_3"&gt;重生&lt;/h3&gt;
&lt;p&gt;2015年，Christian Tismer开始将PySide从Qt4移植到Qt5。取名PySide2。&lt;/p&gt;
&lt;p&gt;2018年，Qt5.12发布时，Qt官方正式同步发布PySide2，商业推广名字 Qt for Python。&lt;/p&gt;
&lt;p&gt;2020年，发布PySide6，版本号命名上开始和Qt主版本号一致。&lt;/p&gt;
&lt;h2 id="pythonqt"&gt;PythonQt&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mevislab.github.io/pythonqt/"&gt;https://mevislab.github.io/pythonqt/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MeVisLab/pythonqt"&gt;https://github.com/MeVisLab/pythonqt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PythonQt 的开发始于2006年，由MeVis Medical Solutions开发。它与PyQt定位不同，设计初衷是为嵌入到C++ Qt应用程序中，以便于为其提供脚本支持。&lt;/p&gt;
&lt;p&gt;它使用Qt官方的&lt;a href="https://code.qt.io/cgit/qt-labs/qtscriptgenerator.git/"&gt;qtscriptgenerator&lt;/a&gt;，这是QtScript的生成器，随着QtScript被放弃(Qml/QJSEngine取代)已经不再活跃。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MeVis Medical Solutions AG 是一家专注于医疗成像软件的公司，总部位于德国。
该公司致力于为医疗领域提供先进的图像处理和可视化解决方案，特别是在帮助医疗专业人员进行诊断、手术规划和治疗监控方面。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个项目还活着，但是不活跃，因为它能做的事情，PySide/PyQt也能做，只是不如它轻便一点。&lt;/p&gt;
&lt;h2 id="_4"&gt;参考&lt;/h2&gt;
&lt;p&gt;暂时放这儿&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.kdab.com/creating-python-bindings-for-qt-libraries/"&gt;https://www.kdab.com/creating-python-bindings-for-qt-libraries/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://doc.qt.io/qtforpython/shiboken6/typesystem_manipulating_objects.html#inject-code"&gt;https://doc.qt.io/qtforpython/shiboken6/typesystem_manipulating_objects.html#inject-code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/dbzhang800/article/details/6714261"&gt;https://blog.csdn.net/dbzhang800/article/details/6714261&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Qt"></category><category term="Qt"></category><category term="python"></category><category term="pyside"></category></entry><entry><title>Qt下控件库小记</title><link href="https://blog.debao.me/2024/11/a-brief-note-on-widget-libraries-in-qt/" rel="alternate"></link><published>2024-11-18T19:39:00+08:00</published><updated>2024-11-18T19:39:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-18:/2024/11/a-brief-note-on-widget-libraries-in-qt/</id><summary type="html">&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/09/a-brief-note-on-chart-libraries-in-qt/"&gt;Qt下图表库小记&lt;/a&gt;与&lt;a href="https://blog.debao.me/2024/10/notes-on-qt-stylesheets/"&gt;Qt样式表小记&lt;/a&gt;，再简单记录一下控件库&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#material"&gt;Material风格&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#laserpantsqt-material-widgets"&gt;laserpants/qt-material-widgets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#un-gcpdsqt-meterial"&gt;UN-GCPDS/qt-meterial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#fluent"&gt;Fluent风格&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#githubuser0xffffqtfluentdesign"&gt;githubuser0xFFFF/QtFluentDesign&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zhiyiyopyqt-fluent-widgets"&gt;zhiyiYo/PyQt-Fluent-Widgets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#ribbon"&gt;ribbon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#czyt1988saribbon"&gt;czyt1988/SARibbon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#haiiliinpyqtribbon"&gt;haiiliin/pyqtribbon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#seriousalexejtabtoolbar"&gt;SeriousAlexej/TabToolbar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#martijnkoopmanqt-ribbon-widget"&gt;martijnkoopman/Qt-Ribbon-Widget&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nedrysoftqt-ribbon"&gt;nedrysoft/qt-ribbon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#docking"&gt;停靠窗口（Docking）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#githubuser0xffffqt-advanced-docking-system"&gt;githubuser0xFFFF/Qt-Advanced-Docking-System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#jackydingqtflex5"&gt;JackyDing/QtFlex5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#kddockwidgets"&gt;KDDockWidgets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;编辑器 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/09/a-brief-note-on-chart-libraries-in-qt/"&gt;Qt下图表库小记&lt;/a&gt;与&lt;a href="https://blog.debao.me/2024/10/notes-on-qt-stylesheets/"&gt;Qt样式表小记&lt;/a&gt;，再简单记录一下控件库&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#material"&gt;Material风格&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#laserpantsqt-material-widgets"&gt;laserpants/qt-material-widgets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#un-gcpdsqt-meterial"&gt;UN-GCPDS/qt-meterial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#fluent"&gt;Fluent风格&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#githubuser0xffffqtfluentdesign"&gt;githubuser0xFFFF/QtFluentDesign&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zhiyiyopyqt-fluent-widgets"&gt;zhiyiYo/PyQt-Fluent-Widgets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#ribbon"&gt;ribbon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#czyt1988saribbon"&gt;czyt1988/SARibbon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#haiiliinpyqtribbon"&gt;haiiliin/pyqtribbon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#seriousalexejtabtoolbar"&gt;SeriousAlexej/TabToolbar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#martijnkoopmanqt-ribbon-widget"&gt;martijnkoopman/Qt-Ribbon-Widget&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nedrysoftqt-ribbon"&gt;nedrysoft/qt-ribbon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#docking"&gt;停靠窗口（Docking）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#githubuser0xffffqt-advanced-docking-system"&gt;githubuser0xFFFF/Qt-Advanced-Docking-System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#jackydingqtflex5"&gt;JackyDing/QtFlex5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#kddockwidgets"&gt;KDDockWidgets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;编辑器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#qscintilla"&gt;QScintilla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#megaxelaqcodeeditor"&gt;Megaxela/QCodeEditor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dax89qhexview"&gt;Dax89/QHexView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#simsysqhexedit2"&gt;Simsys/qhexedit2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pbekqmarkdowntextedit"&gt;pbek/QMarkdownTextEdit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hustleiqssstylesheeteditor"&gt;hustlei/QssStylesheetEditor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#happyseafoxqsseditor"&gt;HappySeaFox/qsseditor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;常规控件集&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#pyapp-kitsuperqt"&gt;pyapp-kit/superqt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#kadir014pyqt5-custom-widgets"&gt;kadir014/pyqt5-custom-widgets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#khamisikibetqt-pyqt-pyside-custom-widgets"&gt;KhamisiKibet/QT-PyQt-PySide-Custom-Widgets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pyqt5customwidgets"&gt;PyQt5/CustomWidgets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;无边框窗口&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#jorgen-vikinggodqt-frameless-window-darkstyle"&gt;Jorgen-VikingGod/Qt-Frameless-Window-DarkStyle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bringer-of-lightqt-nice-frameless-window"&gt;Bringer-of-Light/Qt-Nice-Frameless-Window&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wangwenx190framelesshelper"&gt;wangwenx190/framelesshelper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zhiyiyopyqt-frameless-window"&gt;zhiyiYo/PyQt-Frameless-Window&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#cef"&gt;CEF&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#cefviewqcefview"&gt;CefView/QCefView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#winsoft666qcefwidget"&gt;winsoft666/QCefWidget&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;其他&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#qt-solutions"&gt;qt-solutions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lxqtqtermwidget"&gt;lxqt/QTermWidget&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gwihlidalqnodeview"&gt;gwihlidal/QNodeView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#marcel-goldschen-ohmpyqtimageviewer"&gt;marcel-goldschen-ohm/PyQtImageViewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#akascapepy-window-styles"&gt;Akascape/py-window-styles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="material"&gt;Material风格&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://material.io"&gt;Google Material Design Guidelines&lt;/a&gt; 是一套由谷歌发布的设计规范，旨在帮助设计师和开发者创建一致、直观和美观的用户界面。该指南提供了详细的设计原则、组件定义和实现方法，以确保开发人员可以创建符合 Material Design 设计语言的产品。&lt;/p&gt;
&lt;p&gt;在Qt中，官方的&lt;a href="https://doc.qt.io/qt-6/qtquickcontrols-material.html"&gt;Qt Quick Controls&lt;/a&gt;支持Material风格。但是官方 QtWidgets不支持这套风格。&lt;/p&gt;
&lt;p&gt;一些第三方的库：&lt;/p&gt;
&lt;h3 id="laserpantsqt-material-widgets"&gt;laserpants/qt-material-widgets&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/laserpants/qt-material-widgets"&gt;https://github.com/laserpants/qt-material-widgets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;BSD授权，近几年开发不活跃。&lt;/p&gt;
&lt;h3 id="un-gcpdsqt-meterial"&gt;UN-GCPDS/qt-meterial&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/UN-GCPDS/qt-material"&gt;https://github.com/UN-GCPDS/qt-material&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/qt-material/"&gt;https://pypi.org/project/qt-material/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qt-material.readthedocs.io/en/latest/"&gt;https://qt-material.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;采用BSD协议。这个不是控件，是用于PySide、PyQt的一套主题。&lt;/p&gt;
&lt;h2 id="fluent"&gt;Fluent风格&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://fluent2.microsoft.design/"&gt;Fluent Design System&lt;/a&gt; 是由微软在 2017 年推出的一种设计语言和框架，旨在为 Windows 应用程序和其他平台创建一致、直观和现代的用户界面体验。&lt;/p&gt;
&lt;p&gt;在Qt中，官方的&lt;a href="https://doc.qt.io/qt-6/qtquickcontrols-fluentwinui3.html"&gt;Qt Qucik controls&lt;/a&gt;自 Qt6.8起，开始支持 Fluent 风格，但是Qt Widgets并不支持。&lt;/p&gt;
&lt;p&gt;一些第三方的库：&lt;/p&gt;
&lt;h3 id="githubuser0xffffqtfluentdesign"&gt;githubuser0xFFFF/QtFluentDesign&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/githubuser0xFFFF/QtFluentDesign"&gt;https://github.com/githubuser0xFFFF/QtFluentDesign&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LGPL 授权&lt;/p&gt;
&lt;h3 id="zhiyiyopyqt-fluent-widgets"&gt;zhiyiYo/PyQt-Fluent-Widgets&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/zhiyiYo/PyQt-Fluent-Widgets"&gt;https://github.com/zhiyiYo/PyQt-Fluent-Widgets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qfluentwidgets.com"&gt;https://qfluentwidgets.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pyqt-fluent-widgets.readthedocs.io/en/latest/"&gt;https://pyqt-fluent-widgets.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;国内开发，采用 &lt;strong&gt;GPL&lt;/strong&gt; 授权和商业授权。&lt;/p&gt;
&lt;h2 id="ribbon"&gt;ribbon&lt;/h2&gt;
&lt;p&gt;Ribbon 是一种用户界面设计元素，首次由微软在 Microsoft Office 2007 中引入，后来扩展到其他微软产品以及第三方应用中。它旨在替代传统的菜单和工具栏，通过更直观的布局来提高用户的操作效率和可用性。Ribbon 通过将功能和命令组织成一系列标签页和分组，帮助用户更快地找到所需的工具。&lt;/p&gt;
&lt;h3 id="czyt1988saribbon"&gt;czyt1988/SARibbon&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/czyt1988/SARibbon"&gt;https://github.com/czyt1988/SARibbon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;国产，MIT授权&lt;/p&gt;
&lt;h3 id="haiiliinpyqtribbon"&gt;haiiliin/pyqtribbon&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/haiiliin/pyqtribbon"&gt;https://github.com/haiiliin/pyqtribbon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MIT授权&lt;/p&gt;
&lt;h3 id="seriousalexejtabtoolbar"&gt;SeriousAlexej/TabToolbar&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/SeriousAlexej/TabToolbar"&gt;https://github.com/SeriousAlexej/TabToolbar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LGPL授权&lt;/p&gt;
&lt;h3 id="martijnkoopmanqt-ribbon-widget"&gt;martijnkoopman/Qt-Ribbon-Widget&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/martijnkoopman/Qt-Ribbon-Widget"&gt;https://github.com/martijnkoopman/Qt-Ribbon-Widget&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LGPL授权，还不成熟。&lt;/p&gt;
&lt;h3 id="nedrysoftqt-ribbon"&gt;nedrysoft/qt-ribbon&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nedrysoft/qt-ribbon"&gt;https://github.com/nedrysoft/qt-ribbon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GPL授权&lt;/p&gt;
&lt;h2 id="docking"&gt;停靠窗口（Docking）&lt;/h2&gt;
&lt;h3 id="githubuser0xffffqt-advanced-docking-system"&gt;githubuser0xFFFF/Qt-Advanced-Docking-System&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/githubuser0xFFFF/Qt-Advanced-Docking-System"&gt;https://github.com/githubuser0xFFFF/Qt-Advanced-Docking-System&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LGPL 授权&lt;/p&gt;
&lt;h3 id="jackydingqtflex5"&gt;JackyDing/QtFlex5&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JackyDing/QtFlex5"&gt;https://github.com/JackyDing/QtFlex5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MIT授权，仿 Visual Studio 201x 的停靠控件（Flexible and dockable widgets）。&lt;/p&gt;
&lt;p&gt;只支持 Windows&lt;/p&gt;
&lt;h3 id="kddockwidgets"&gt;KDDockWidgets&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/KDAB/KDDockWidgets"&gt;https://github.com/KDAB/KDDockWidgets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;采用 &lt;strong&gt;GPL&lt;/strong&gt; 和商业授权&lt;/p&gt;
&lt;h2 id="_1"&gt;编辑器&lt;/h2&gt;
&lt;h3 id="qscintilla"&gt;QScintilla&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://riverbankcomputing.com/software/qscintilla"&gt;https://riverbankcomputing.com/software/qscintilla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qscintilla.com/"&gt;https://qscintilla.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;采用 &lt;strong&gt;GPL&lt;/strong&gt; 和商业授权。是pyQt的作者开发的文本编辑器。&lt;/p&gt;
&lt;h3 id="megaxelaqcodeeditor"&gt;Megaxela/QCodeEditor&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Megaxela/QCodeEditor"&gt;https://github.com/Megaxela/QCodeEditor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MIT授权&lt;/p&gt;
&lt;h3 id="dax89qhexview"&gt;Dax89/QHexView&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Dax89/QHexView"&gt;https://github.com/Dax89/QHexView&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MIT授权&lt;/p&gt;
&lt;h3 id="simsysqhexedit2"&gt;Simsys/qhexedit2&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Simsys/qhexedit2"&gt;https://github.com/Simsys/qhexedit2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LGPL协议&lt;/p&gt;
&lt;h3 id="pbekqmarkdowntextedit"&gt;pbek/QMarkdownTextEdit&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pbek/qmarkdowntextedit"&gt;https://github.com/pbek/qmarkdowntextedit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MIT协议&lt;/p&gt;
&lt;h3 id="hustleiqssstylesheeteditor"&gt;hustlei/QssStylesheetEditor&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hustlei/QssStylesheetEditor"&gt;https://github.com/hustlei/QssStylesheetEditor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GPL协议&lt;/p&gt;
&lt;h3 id="happyseafoxqsseditor"&gt;HappySeaFox/qsseditor&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/HappySeaFox/qsseditor"&gt;https://github.com/HappySeaFox/qsseditor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GPL协议，已停止维护&lt;/p&gt;
&lt;h2 id="_2"&gt;常规控件集&lt;/h2&gt;
&lt;h3 id="pyapp-kitsuperqt"&gt;pyapp-kit/superqt&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pyapp-kit/superqt"&gt;https://github.com/pyapp-kit/superqt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/superqt/"&gt;https://pypi.org/project/superqt/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用于 PyQt/PySide 的控件，QtWidget 的补充。&lt;/p&gt;
&lt;p&gt;采用BSD授权协议&lt;/p&gt;
&lt;h3 id="kadir014pyqt5-custom-widgets"&gt;kadir014/pyqt5-custom-widgets&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kadir014/pyqt5-custom-widgets"&gt;https://github.com/kadir014/pyqt5-custom-widgets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;采用 &lt;strong&gt;GPL&lt;/strong&gt; 授权&lt;/p&gt;
&lt;h3 id="khamisikibetqt-pyqt-pyside-custom-widgets"&gt;KhamisiKibet/QT-PyQt-PySide-Custom-Widgets&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/KhamisiKibet/QT-PyQt-PySide-Custom-Widgets"&gt;https://github.com/KhamisiKibet/QT-PyQt-PySide-Custom-Widgets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;采用 &lt;strong&gt;GPL&lt;/strong&gt; 授权&lt;/p&gt;
&lt;h3 id="pyqt5customwidgets"&gt;PyQt5/CustomWidgets&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PyQt5/CustomWidgets"&gt;https://github.com/PyQt5/CustomWidgets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;采用 &lt;strong&gt;GPL&lt;/strong&gt; 授权&lt;/p&gt;
&lt;h2 id="_3"&gt;无边框窗口&lt;/h2&gt;
&lt;h3 id="jorgen-vikinggodqt-frameless-window-darkstyle"&gt;Jorgen-VikingGod/Qt-Frameless-Window-DarkStyle&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Jorgen-VikingGod/Qt-Frameless-Window-DarkStyle"&gt;https://github.com/Jorgen-VikingGod/Qt-Frameless-Window-DarkStyle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MIT协议&lt;/p&gt;
&lt;h3 id="bringer-of-lightqt-nice-frameless-window"&gt;Bringer-of-Light/Qt-Nice-Frameless-Window&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Bringer-of-Light/Qt-Nice-Frameless-Window"&gt;https://github.com/Bringer-of-Light/Qt-Nice-Frameless-Window&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;国内，采用 MIT协议&lt;/p&gt;
&lt;h3 id="wangwenx190framelesshelper"&gt;wangwenx190/framelesshelper&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wangwenx190/framelesshelper"&gt;https://github.com/wangwenx190/framelesshelper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MIT协议&lt;/p&gt;
&lt;h3 id="zhiyiyopyqt-frameless-window"&gt;zhiyiYo/PyQt-Frameless-Window&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/zhiyiYo/PyQt-Frameless-Window"&gt;https://github.com/zhiyiYo/PyQt-Frameless-Window&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;国内开发，采用 &lt;strong&gt;GPL&lt;/strong&gt; 授权&lt;/p&gt;
&lt;h2 id="cef"&gt;CEF&lt;/h2&gt;
&lt;h3 id="cefviewqcefview"&gt;CefView/QCefView&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/CefView/QCefView"&gt;https://github.com/CefView/QCefView&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LGPL授权，QCefView is a Qt based QWidget which encapsulates CEF。&lt;/p&gt;
&lt;h3 id="winsoft666qcefwidget"&gt;winsoft666/QCefWidget&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/winsoft666/QCefWidget"&gt;https://github.com/winsoft666/QCefWidget&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LGPL授权&lt;/p&gt;
&lt;h2 id="_4"&gt;其他&lt;/h2&gt;
&lt;h3 id="qt-solutions"&gt;qt-solutions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/qtproject/qt-solutions"&gt;https://github.com/qtproject/qt-solutions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Qt官方早期的商业版扩展模块。已经停止维护，采用BSD授权。&lt;/p&gt;
&lt;p&gt;里面可能只有 qtpropertybrowser 和 qtservice 有些意义。&lt;/p&gt;
&lt;h3 id="lxqtqtermwidget"&gt;lxqt/QTermWidget&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lxqt/qtermwidget"&gt;https://github.com/lxqt/qtermwidget&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;采用 &lt;strong&gt;GPL&lt;/strong&gt; 授权。一个终端控件，类似 KDE4 Konsole。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="gwihlidalqnodeview"&gt;gwihlidal/QNodeView&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gwihlidal/QNodeView"&gt;https://github.com/gwihlidal/QNodeView&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Apache协议&lt;/p&gt;
&lt;h3 id="marcel-goldschen-ohmpyqtimageviewer"&gt;marcel-goldschen-ohm/PyQtImageViewer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/marcel-goldschen-ohm/PyQtImageViewer"&gt;https://github.com/marcel-goldschen-ohm/PyQtImageViewer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MIT协议&lt;/p&gt;
&lt;h3 id="akascapepy-window-styles"&gt;Akascape/py-window-styles&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Akascape/py-window-styles"&gt;https://github.com/Akascape/py-window-styles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;和Qt没有直接关系，号称对Windows下python如下库通吃：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tkinter&lt;/li&gt;
&lt;li&gt;Customtkinter&lt;/li&gt;
&lt;li&gt;PyQt&lt;/li&gt;
&lt;li&gt;PySide&lt;/li&gt;
&lt;li&gt;WxPython&lt;/li&gt;
&lt;li&gt;Pygame&lt;/li&gt;
&lt;li&gt;Kivy&lt;/li&gt;
&lt;li&gt;PySimpleGUI&lt;/li&gt;
&lt;li&gt;DearPyGui&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;采用CC0协议(Creative Commons Zero)。&lt;/p&gt;
&lt;h2 id="_5"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://doc.qt.io/qt-6/qtquickcontrols-material.html"&gt;https://doc.qt.io/qt-6/qtquickcontrols-material.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://material.io"&gt;https://material.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.devmachines.com/qtitanribbon-overview.html"&gt;https://www.devmachines.com/qtitanribbon-overview.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JPNaude/Qtilities"&gt;https://github.com/JPNaude/Qtilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Qt-Widgets"&gt;https://github.com/Qt-Widgets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://doc.qt.io/qt-6/gallery.html"&gt;https://doc.qt.io/qt-6/gallery.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Qt"></category><category term="Qt"></category></entry><entry><title>C++ Ranges小记</title><link href="https://blog.debao.me/2024/11/notes-on-c++-ranges/" rel="alternate"></link><published>2024-11-17T00:35:00+08:00</published><updated>2024-11-17T00:35:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-17:/2024/11/notes-on-c++-ranges/</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#ranges"&gt;什么是范围（Ranges）？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ranges_1"&gt;Ranges 的核心组件&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#range"&gt;Range 表达式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#range-views"&gt;Range 适配器（Views）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#range_1"&gt;Range 算法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#range_2"&gt;Range 适配器的惰性计算&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#range_3"&gt;自定义 Range 适配器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="ranges"&gt;什么是范围（Ranges）？&lt;/h2&gt;
&lt;p&gt;Ranges 是 …&lt;/p&gt;</summary><content type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#ranges"&gt;什么是范围（Ranges）？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ranges_1"&gt;Ranges 的核心组件&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#range"&gt;Range 表达式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#range-views"&gt;Range 适配器（Views）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#range_1"&gt;Range 算法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#range_2"&gt;Range 适配器的惰性计算&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#range_3"&gt;自定义 Range 适配器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="ranges"&gt;什么是范围（Ranges）？&lt;/h2&gt;
&lt;p&gt;Ranges 是 C++20 提供的一种更现代的处理集合的方式，可以看作是对迭代器的进一步抽象。&lt;/p&gt;
&lt;p&gt;如果要筛选处vector中的偶数，可使用ranges：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;ranges&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;([](&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;其中，&lt;code&gt;std::views::filter&lt;/code&gt; 是一个 Range 适配器，它直接对Range &lt;code&gt;v&lt;/code&gt; 进行过滤操作。通过管道操作符 &lt;code&gt;|&lt;/code&gt;，我们将过滤器应用到range上。&lt;/p&gt;
&lt;p&gt;在 C++20 之前，使用标准库算法时，需要显式地传递迭代器：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;copy_if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;back_inserter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在这个例子中，使用了 &lt;code&gt;std::copy_if&lt;/code&gt; 来过滤 &lt;code&gt;v&lt;/code&gt; 中的偶数，需要手动传递起始和结束迭代器。&lt;/p&gt;
&lt;h2 id="ranges_1"&gt;Ranges 的核心组件&lt;/h2&gt;
&lt;p&gt;主要由以下三个核心组件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Range 表达式：它可以是一个范围（如容器）或任何可以产生范围的对象。&lt;/li&gt;
&lt;li&gt;Range 适配器（Views）：允许对范围进行变换、过滤等操作。&lt;/li&gt;
&lt;li&gt;Range 算法：它是标准库中已有算法的扩展版本，直接作用于 Ranges。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="range"&gt;Range 表达式&lt;/h3&gt;
&lt;p&gt;Range 表达式可以是任何可以被视作“范围”的对象，比如标准库容器std::vector、std::list 等。此外，C++20 还引入了 std::ranges::range 概念(concept)，用于判定一个类型是否是range。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;ranges&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ranges&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;range&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;decltype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;v is a range&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="range-views"&gt;Range 适配器（Views）&lt;/h3&gt;
&lt;p&gt;Range 适配器（Views）是 Ranges 的关键部分，它们允许对范围进行变换、过滤等操作，而不会修改原始数据。一些的适配器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;std::views::filter：过滤满足条件的元素。&lt;/li&gt;
&lt;li&gt;std::views::transform：对每个元素进行某种变换。&lt;/li&gt;
&lt;li&gt;std::views::take：获取前 N 个元素。&lt;/li&gt;
&lt;li&gt;std::views::drop：跳过前 N 个元素。&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面例子通过管道操作符 | 组合多个适配器——首先过滤出偶数，然后对这些偶数进行平方操作：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;ranges&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;([](&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;([](&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="range_1"&gt;Range 算法&lt;/h3&gt;
&lt;p&gt;C++20 为标准库的算法添加了 Ranges 版本，这些算法直接作用于范围，而不再需要显式传递迭代器。常见的 Range 算法包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;std::ranges::find&lt;/li&gt;
&lt;li&gt;std::ranges::sort&lt;/li&gt;
&lt;li&gt;std::ranges::for_each&lt;/li&gt;
&lt;li&gt;std::ranges::copy&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;ranges&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ranges&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;std::ranges::sort 直接作用于范围 v，无需显式传递 begin() 和 end() 迭代器。&lt;/p&gt;
&lt;h2 id="range_2"&gt;Range 适配器的惰性计算&lt;/h2&gt;
&lt;p&gt;Ranges 的一个重要特性是 惰性计算。适配器不会立即执行操作，而是会在真正访问元素时才进行计算。&lt;/p&gt;
&lt;p&gt;如下代码输出 &lt;code&gt;0 1 2 3 4 5 6 7 8 9&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;ranges&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;iota&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;take&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;例子中， std::views::iota(0) 生成了一个从 0 开始的无限整数序列，通过 std::views::take(10)，我们只取了前 10 个元素。由于 Ranges 的惰性特性，程序并不会生成整个无限序列，而是按需生成并处理元素。&lt;/p&gt;
&lt;h2 id="range_3"&gt;自定义 Range 适配器&lt;/h2&gt;
&lt;p&gt;C++20 允许我们定义自己的 Range 适配器。自定义适配器可以帮助我们实现特定的数据处理逻辑。下面是一个简单的例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;ranges&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;concepts&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;double_transform_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ranges&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;input_range&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;operator&lt;/span&gt;&lt;span class="p"&gt;()(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;friend&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;operator&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ranges&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;input_range&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;double_transform_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;inline&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;double_transform&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;iota&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;take&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;double_transform&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// output：2 4 6 8 10&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在这个例子中，&lt;code&gt;double_transform&lt;/code&gt; 是一个简单的自定义 Range 适配器，它将范围中的每个元素都乘以 2。&lt;/p&gt;
&lt;p&gt;尽管 &lt;code&gt;view_base&lt;/code&gt;是空类，据说从它派生会有好多好处：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;double_transform_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ranges&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;view_base&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ranges&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;input_range&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;operator&lt;/span&gt;&lt;span class="p"&gt;()(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;inline&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;double_transform&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ranges&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;input_range&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;operator&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;double_transform_t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;double_transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_1"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://zh.cppreference.com/w/cpp/ranges&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="C++"></category></entry><entry><title>C++泛型编程小记</title><link href="https://blog.debao.me/2024/11/notes-on-c++-generic-programming/" rel="alternate"></link><published>2024-11-15T22:49:00+08:00</published><updated>2024-11-15T22:49:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-15:/2024/11/notes-on-c++-generic-programming/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;世界变化太快，C++的各种写法，转眼都快看不懂了。通过傻瓜例子简单梳理些 C++ 基础内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#generic-programming"&gt;什么是泛型编程（Generic Programming）？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#concepts"&gt;Concepts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;例子概览 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;世界变化太快，C++的各种写法，转眼都快看不懂了。通过傻瓜例子简单梳理些 C++ 基础内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#generic-programming"&gt;什么是泛型编程（Generic Programming）？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#concepts"&gt;Concepts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;例子概览&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#function-templates"&gt;函数模板（Function Templates）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-"&gt;例子1 - 自动推导类型的加法函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-"&gt;例子2 - 只接受整数类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-"&gt;例子3 - 确保参数类型一致&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-concepts"&gt;例子4 - Concepts与重载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5-tag-dispatching"&gt;例子5 - 标签派发(Tag Dispatching)与重载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#6-if-constexpr"&gt;例子6 - if constexpr与特化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#class-templates"&gt;类模板（Class Templates）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-_1"&gt;例子1 - 简单的类模板&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-traits"&gt;例子2 - 特化与 traits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#non-type-template-parameters"&gt;非类型模板参数（Non-Type Template Parameters）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-_2"&gt;例子1 - 计算阶乘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-_1"&gt;例子2 - 数组大小&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#lambdalambda-expressions"&gt;Lambda表达式（Lambda Expressions）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-_3"&gt;例子1 - 泛型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-_2"&gt;例子2 - 约束&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#variadic-templates"&gt;变参模板（Variadic Templates）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-_4"&gt;例子1 - 简单场景&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-_3"&gt;例子2 - 非类型参数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="generic-programming"&gt;什么是泛型编程（Generic Programming）？&lt;/h2&gt;
&lt;p&gt;泛型编程是一种编程范式，其核心思想是编写与类型无关的代码，从而提高代码的复用性和灵活性。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;几乎所有现代编程语言都提供了泛型编程的支持，某些语言（如 Java、C#）中称为“泛型（Generics）”的机制，通常通过类型擦除或运行时检查来实现；某些语言（如 Haskell）使用“参数多态（Parametric Polymorphism）”来描述泛型编程。但在 C++ 中，泛型编程实现被称为模板（Templates），是基于编译期实例化的。C++标准库的大量组件（如容器、算法、智能指针等）都是使用模板实现的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;C++ 模板主要有两种形式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;函数模板：定义与类型无关的通用函数。&lt;/li&gt;
&lt;li&gt;类模板：定义与类型无关的通用类。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C++ 模板具有下列特色：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编译期展开：模板在编译期被实例化为具体类型的代码，从而提高性能。&lt;/li&gt;
&lt;li&gt;模板特化：允许为某些类型提供特定实现，包括完全特化和部分特化。&lt;/li&gt;
&lt;li&gt;模板元编程：允许在编译期进行复杂的计算和类型推导。&lt;/li&gt;
&lt;li&gt;可变参数模板：允许模板接收任意数量的参数。&lt;/li&gt;
&lt;li&gt;概念（Concepts）：C++20 引入的特性，用于约束模板参数的类型和行为。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;模板元编程和编译期展开，超出了泛型编程的范畴。它们用来在编译期优化代码或进行复杂计算，增加灵活性的同时，也造就了C++模板系统的高复杂性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="concepts"&gt;Concepts&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;concept&lt;/strong&gt; 是一个编译期的布尔值表达式，用来描述类型的要求。你可以使用 template 语法来定义 concept。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;concept&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;MyConceptName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/* 布尔表达式 */&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;其中，布尔表达式可以是任何可以在 &lt;strong&gt;编译期计算的表达式&lt;/strong&gt; ，通常是类型特征或其他概念的组合。&lt;/p&gt;
&lt;p&gt;C++20 提供了许多标准库中的 concepts，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::integral&lt;/code&gt;：表示一个类型是整型。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::floating_point&lt;/code&gt;：表示一个类型是浮点型。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::convertible_to&amp;lt;T&amp;gt;&lt;/code&gt;：表示一个类型可以隐式转换为 T。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::same_as&amp;lt;T, U&amp;gt;&lt;/code&gt;：表示两个类型是相同的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;requires&lt;/strong&gt; 表达式在 concept 中使用，用于检查类型是否满足某些操作或行为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;requires&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;参数列表&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;表达式1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;表达式2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// 更多表达式...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;表达式包含一系列需要检查的操作。如果所有操作都合法，则 requires 表达式返回 true，否则返回 false。&lt;/p&gt;
&lt;h2 id="_1"&gt;例子概览&lt;/h2&gt;
&lt;p&gt;文字太枯燥！！本文通过一些简短的例子展示了从 C++11 到 C++20 的泛型编程演进。我们重点介绍了函数模板、类模板、非类型模板参数以及 concepts 的使用场景。随着 C++20 的发布，泛型编程变得更加简洁和强大，尤其是 concepts 的引入大大提高了模板代码的可读性和维护性。&lt;/p&gt;
&lt;h2 id="function-templates"&gt;函数模板（Function Templates）&lt;/h2&gt;
&lt;p&gt;一个函数定义，C++整出这么多写法，难怪劝退这么多人&lt;/p&gt;
&lt;h3 id="1-"&gt;例子1 - 自动推导类型的加法函数&lt;/h3&gt;
&lt;p&gt;定义一个泛型的加法函数看看。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;namespace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;string_literals&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;//output: 2.1&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;123&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;456&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;//output: 123456&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// std::cout &amp;lt;&amp;lt; add(&amp;quot;123&amp;quot;s, 456) &amp;lt;&amp;lt; std::endl;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;但是这个例子需要C++20支持（叫做Abbreviated Function Templates），&lt;/p&gt;
&lt;p&gt;而对于C++14和C++17来说，需要写成下面这样（auto具备推导返回值类型能力）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;而到了C++11，单独auto也不行了，它只是一个占位符，需要使用 &lt;code&gt;decltype&lt;/code&gt;来推导返回值类型：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;decltype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;C++98更为原始，auto含义都不一样，应该无需多提了。&lt;/p&gt;
&lt;h3 id="2-"&gt;例子2 - 只接受整数类型&lt;/h3&gt;
&lt;p&gt;定义一个只接受整数类型(比如 int, short, long, long long, char, ....)的add函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;约束一下参数类型&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;concepts&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;//output 256&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;255ull&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;//output 256&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\xff&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;//output 0 or 256&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\xff&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// output 0 or 256&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;用concept取代 typename/class 来约束模板参数，&lt;code&gt;add&lt;/code&gt;函数可以写成这样：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;也可以这样：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;requires&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;还可以这样：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;requires&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;这些都用到了C++20引入的concept。上面的&lt;code&gt;std::integral&lt;/code&gt;是标准库提供的concept，&lt;code&gt;requires&lt;/code&gt;是其引入的关键词。&lt;/p&gt;
&lt;p&gt;在C++17下面，可以使用 &lt;code&gt;std::enable_if&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;U&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;enable_if_t&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_integral_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_integral_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;模板第一个默认参数是一个占位符参数 &lt;code&gt;typename = typename std::enable_if_t&amp;lt;condition&amp;gt;&lt;/code&gt; 。使用的 SFINAE（Substitution Failure Is Not An Error）的技术，condition 是否为 true 决定了是否会实例化。&lt;/p&gt;
&lt;p&gt;如果不使用上面的占位符参数，可以用返回值做文章：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;enable_if_t&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_integral_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_integral_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;decltype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或者&lt;code&gt;static_assert&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;static_assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_integral_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_integral_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;T and U must be integral&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在C++14和C++11下，没有&lt;code&gt;std::enable_if_t&lt;/code&gt; 和 &lt;code&gt;std::is_integral_v&lt;/code&gt;，只能：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;U&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;enable_if&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_integral&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_integral&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;enable_if&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_integral&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_integral&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;decltype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;
&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;同样，&lt;code&gt;static_assert&lt;/code&gt; 也能用。&lt;/p&gt;
&lt;p&gt;无论concept还是用SFINA，约束的好处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提高模板代码可维护性（可读性？）&lt;/li&gt;
&lt;li&gt;优化编译速度（可提前检测模板参数有效性）&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;尽管 SFINAE 可以在编译期有效地过滤不满足条件的模板实例，但编译器产生的错误信息通常较为复杂且难以理解。而 C++20 的 concepts 不仅可以提高代码的可读性，还能生成更友好的编译器错误信息。例如在使用不匹配的类型时，编译器会明确告诉你哪种类型不符合期望的概念。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="3-"&gt;例子3 - 确保参数类型一致&lt;/h3&gt;
&lt;p&gt;接前面的add函数，如何保证a、b两个参数类型完全一致？？&lt;/p&gt;
&lt;p&gt;Abbreviated Function Templates方式写出来：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;requires&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;same_as&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;decltype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;decltype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;requires&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;same_as&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;requires&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;same_as&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;尽管不如常规单模板参数写法简单：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;但比下面写法舒服： &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;requires&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;same_as&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Concept写法够乱了，SFINAE 的写法先不列了&lt;/p&gt;
&lt;h3 id="4-concepts"&gt;例子4 - Concepts与重载&lt;/h3&gt;
&lt;p&gt;模板函数重载&lt;/p&gt;
&lt;p&gt;使用Concept对函数进行重载，挺直观：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;concepts&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Adding integers: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;floating_point&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Adding floats: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Other: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;不用Concept的话，add函数也能写，就是不够简洁：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;enable_if&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_integral&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;
&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Adding integers: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;enable_if&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_floating_point&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;
&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Adding floats: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;enable_if&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;!&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_integral&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_floating_point&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;
&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Other: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="5-tag-dispatching"&gt;例子5 - 标签派发(Tag Dispatching)与重载&lt;/h3&gt;
&lt;p&gt;在某些情况下，模板重载可能会导致代码过于复杂，特别是需要处理多种类型的情况下。标签派发（Tag Dispatching） 提供了一种更为直观、可维护的方式来处理不同类型的重载。&lt;/p&gt;
&lt;p&gt;用C++20来写：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;MyIntegersTag&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;MyFloatsTag&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;

&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add_impl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;MyIntegersTag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Adding integers: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add_impl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MyFloatsTag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Adding floats: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add_impl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Other: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_integral_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;decltype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_integral_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;decltype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add_impl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MyIntegersTag&lt;/span&gt;&lt;span class="p"&gt;{});&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_floating_point_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;decltype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_floating_point_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;decltype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add_impl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MyFloatsTag&lt;/span&gt;&lt;span class="p"&gt;{});&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add_impl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;其中定义两个空struct作为标签(Tag)。&lt;/p&gt;
&lt;p&gt;如果不单独写个函数来让它派发，也可以手动来：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;concepts&amp;gt;&lt;/span&gt;


&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;MyIntegersTag&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;MyFloatsTag&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;

&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;MyIntegersTag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Adding integers: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MyFloatsTag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Adding floats: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Other: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MyIntegersTag&lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MyFloatsTag&lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="6-if-constexpr"&gt;例子6 - if constexpr与特化&lt;/h3&gt;
&lt;p&gt;假定我们需要一个将类型T转化为std::string的函数，在C++20下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;format&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.1e-3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello Debao&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;如果我们需要对个别类型特殊处理的话，可以使用&lt;code&gt;if constexpr&lt;/code&gt;（实例化有只有一个return）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_same_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_same_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;如下代码尽管工作，但会实例出两个return，要避免：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_same_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_same_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;如果不用&lt;code&gt;if constexpr&lt;/code&gt;，可使用函数特化（“传统”，就是冗余一些）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;以上用的C++20的内容。在C++14下，可以继续用重载方式；但是不能用下列方式（因为每个支路都要实例化，需要都有效才行）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_same&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_same&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ostringstream&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;oss&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;oss&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;oss&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="class-templates"&gt;类模板（Class Templates）&lt;/h2&gt;
&lt;h3 id="1-_1"&gt;例子1 - 简单的类模板&lt;/h3&gt;
&lt;p&gt;一个简单的类模板&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;format&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;private&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;namespace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;string_literals&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Box&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;intBox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;112&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Box&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;strBox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1+1=10&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{} {}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;intBox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;strBox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;如果要加约束，可以用concept取代 typename位置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;private&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或者使用requires：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;requires&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;private&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或者&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;requires&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;private&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在C++20之前，使用 &lt;code&gt;std::enable_if&lt;/code&gt; 这种SAFINE机制：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;enable_if_t&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_integral_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// 使用 SFINAE&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;private&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或者，使用&lt;code&gt;static_assert&lt;/code&gt; 这种静态断言：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;static_assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_integral_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;T must be integral type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;private&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="2-traits"&gt;例子2 - 特化与 traits&lt;/h3&gt;
&lt;p&gt;类模板的特化和特征（traits）关系密切。&lt;/p&gt;
&lt;p&gt;比如用于判定类型是否指针的 &lt;code&gt;std::is_pointer&lt;/code&gt;或 &lt;code&gt;std::is_pointer_v&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;type_traits&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;boolalpha&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;int: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_pointer_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;int*: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_pointer_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;*&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;double*: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_pointer_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="o"&gt;*&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;借助标准库通过特化可这么实现：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;type_traits&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;is_pointer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;false_type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;is_pointer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;*&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;true_type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;boolalpha&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;int: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;is_pointer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;int*: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;is_pointer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;*&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;double*: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;is_pointer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="o"&gt;*&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;//  true&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;而在C++11之前，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;is_pointer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;is_pointer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;*&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;boolalpha&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;int: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;is_pointer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;int*: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;is_pointer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;*&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;double*: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;is_pointer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="o"&gt;*&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="non-type-template-parameters"&gt;非类型模板参数（Non-Type Template Parameters）&lt;/h2&gt;
&lt;p&gt;非类型模板参数（Non-Type Template Parameters，NTTP）的变化自C++11起没前面那么大。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;类型参数：用 typename 或 class 声明的模板参数，如 &lt;code&gt;template&amp;lt;typename T&amp;gt;&lt;/code&gt;，T 表示一种类型，可以是 int、float、DbClass 等；&lt;/li&gt;
&lt;li&gt;非类型参数：用类型限定的实际值作为参数，比如 &lt;code&gt;template&amp;lt;int N&amp;gt;&lt;/code&gt; 中的 N 是一个非类型参数，表示一个整数值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="1-_2"&gt;例子1 - 计算阶乘&lt;/h3&gt;
&lt;p&gt;涉及NTTP，这类计算的例子似乎挺常见：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Factorial of 5 is: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;上面用了 C++17支持的编译期 &lt;code&gt;if constexpr&lt;/code&gt;。但是这个小例子，可以不用它，不用模板：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Factorial of 5: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;里面用了 C++11时引入的 constexpr。而在C++11之前，只能：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Factorial&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Factorial&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Factorial&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Factorial of 5: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Factorial&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="2-_1"&gt;例子2 - 数组大小&lt;/h3&gt;
&lt;p&gt;非类型参数可用于数组大小模板，这样它即使不存放这个参数也能用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Array&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="lambdalambda-expressions"&gt;Lambda表达式（Lambda Expressions）&lt;/h2&gt;
&lt;p&gt;Lambda变化挺快：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C++11：基础 Lambda 表达式，不支持泛型参数和 constexpr。&lt;/li&gt;
&lt;li&gt;C++14：引入了泛型 Lambda（使用 auto 作为参数）。&lt;/li&gt;
&lt;li&gt;C++17：增加了 constexpr 支持。&lt;/li&gt;
&lt;li&gt;C++20：引入了 Lambda 模板和 concepts，增强了类型约束能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="1-_3"&gt;例子1 - 泛型&lt;/h3&gt;
&lt;p&gt;C++14支持如下泛型写法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;namespace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;literals&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;但是，add函数如下写法直到C++20才支持：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="2-_2"&gt;例子2 - 约束&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;concepts&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// std::cout &amp;lt;&amp;lt; add(1.0, 1.0) &amp;lt;&amp;lt; std::endl;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;requires&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;integral&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;里面用到C++20的concept约束，如果在C++20之前的话，使用SFANE：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;enable_if_t&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_integral_v&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;decltype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;decltype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="variadic-templates"&gt;变参模板（Variadic Templates）&lt;/h2&gt;
&lt;p&gt;变参模板允许模板接受可变数量的模板参数。C++11 引入的这一特性。&lt;/p&gt;
&lt;p&gt;C++17引入折叠表达式（Fold expressions），有四种写法（烧脑）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;( pack op ... )
( ... op pack )
( pack op ... op init )
( init op ... op pack )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;假定参数包E中有N个元素用&lt;code&gt;E_下标&lt;/code&gt;表示，以上四种写法对应：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一元右折叠（Unary right fold）：&lt;code&gt;(E op ...)&lt;/code&gt; 展开为 &lt;code&gt;(E_1 op (... op (E_{N-1} op E_N)))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;一元左折叠（Unary left fold）：&lt;code&gt;(... op E)&lt;/code&gt; 展开为 &lt;code&gt;(((E_1 op E_2) op ...) op E_N)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;二元右折叠（Binary right fold）：&lt;code&gt;(E op ... op I)&lt;/code&gt; 展开为 &lt;code&gt;(E_1 op (... op (E_{N−1} op (E_N op I))))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;二元左折叠（Binary left fold）：&lt;code&gt;(I op ... op E)&lt;/code&gt; 展开为 &lt;code&gt;((((I op E_1) op E_2) op ...) op E_N)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="1-_4"&gt;例子1 - 简单场景&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Args&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Args&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;3.14&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;其中使用了C++17引入的折叠表达式（Fold Expressions）。具体来说，&lt;code&gt;(std::cout &amp;lt;&amp;lt; ... &amp;lt;&amp;lt; args)&lt;/code&gt; 是二元左折叠，它将参数依次从左到右进行操作，如 &lt;code&gt;(std::cout &amp;lt;&amp;lt; arg1) &amp;lt;&amp;lt; arg2 &amp;lt;&amp;lt; arg3 ...&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果不用折叠表达式，可以用递归来实现&lt;code&gt;print&lt;/code&gt;函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Args&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Args&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;...(&lt;/span&gt;&lt;span class="n"&gt;rest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rest&lt;/span&gt;&lt;span class="p"&gt;...);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;但是&lt;code&gt;if constexpr&lt;/code&gt;也是C++17引入的，要在C++14中使用递归的话，需要类似下面这样：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Args&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Args&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rest&lt;/span&gt;&lt;span class="p"&gt;...);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或者用逗号表达式展开&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;printSingle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Args&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Args&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;printSingle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="2-_3"&gt;例子2 - 非类型参数&lt;/h3&gt;
&lt;p&gt;一个求和的例子，可以使用折叠表达式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Ns&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Ns&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或者使用&lt;code&gt;if constexpr&lt;/code&gt; 和递归：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Ns&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;...(&lt;/span&gt;&lt;span class="n"&gt;Ns&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Ns&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;以上写法折叠表达式和&lt;code&gt;if constexpr&lt;/code&gt;都需要C++17。要在C++14中使用递归，需要：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Ns&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Ns&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_2"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.cppreference.com/w/cpp/concepts&lt;/li&gt;
&lt;li&gt;https://github.com/AnthonyCalandra/modern-cpp-features&lt;/li&gt;
&lt;li&gt;https://www.cppstories.com/2016/02/notes-on-c-sfinae/&lt;/li&gt;
&lt;li&gt;https://zh.cppreference.com/w/cpp/language/fold&lt;/li&gt;
&lt;/ul&gt;</content><category term="C++"></category></entry><entry><title>浅谈复杂C++ Qt项目代码组织结构</title><link href="https://blog.debao.me/2024/11/a-brief-discussion-on-code-organization-structure-in-complex-c++-qt-projects/" rel="alternate"></link><published>2024-11-14T09:07:00+08:00</published><updated>2024-11-14T09:07:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-14:/2024/11/a-brief-discussion-on-code-organization-structure-in-complex-c++-qt-projects/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;接前面的开胃菜 &lt;a href="https://blog.debao.me/2024/11/how-to-elegantly-configure-third-party-libraries-in-qt-creator/"&gt;QtCreator 下如何优雅使用第三方库&lt;/a&gt;，继续聊聊C++ Qt程序中众多的动态库(共享库)如何管理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="c++ qt libraries structure" src="https://blog.debao.me/images/qt/cpp-qt-libraries-structure.png"&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;缘起&lt;/h2&gt;
&lt;p&gt;用Qt开发一个程序，需要几十上百个的动态库。如果没 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;接前面的开胃菜 &lt;a href="https://blog.debao.me/2024/11/how-to-elegantly-configure-third-party-libraries-in-qt-creator/"&gt;QtCreator 下如何优雅使用第三方库&lt;/a&gt;，继续聊聊C++ Qt程序中众多的动态库(共享库)如何管理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="c++ qt libraries structure" src="https://blog.debao.me/images/qt/cpp-qt-libraries-structure.png"&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;缘起&lt;/h2&gt;
&lt;p&gt;用Qt开发一个程序，需要几十上百个的动态库。如果没有可心的包管理工具，那么这些动态库如何管理，还真的让人倍感头疼...&lt;/p&gt;
&lt;p&gt;如果还有些强迫症，需要一个跨平台（Windows，Linux，MacOS，Embedded Linux）的方案，且同时支持cmake和qmake，...&lt;/p&gt;
&lt;p&gt;同时，这个项目的开发和维护期需要保证5年以上...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：本文介绍的是一个经过验证的手搓方案。新的应用程序直接考虑conan或者vcpkg可能更好一些。不管怎样，希望文中涉及四种不同的动态库使用方式，能对大家有一定参考意义。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_2"&gt;动态库分类&lt;/h2&gt;
&lt;p&gt;首先，综合考虑动态库的接口稳定性，是否需要自行维护，是否自行开发，是否通用等因素，将动态库分成几类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第三方代码库：稳定的第三方库，不需要自行维护。直接使用预编译的二进制库，作为开发环境的基本配置。不需要git管理代码，直接体现在脚本和README中即可。&lt;/li&gt;
&lt;li&gt;基础代码库（框架库）：自行开发的稳定的代码库，一些需要适配或魔改的采用MIT、BSD、LGPL等商业友好协议的比较小的三方库。每个框架（framework）一个git仓库，按版本号发布为动态库，以便于其他程序使用。&lt;/li&gt;
&lt;li&gt;业务代码库（可复用模组库）：自行开发的模组库，每个模组一个git仓库，每一个库可以独立测试，库中的example可以直接作为公司某些业务的正式程序使用。主要用途还是供上层应用程序使用。&lt;/li&gt;
&lt;li&gt;应用程序（特定库）：应用程序自身使用的代码库，位于应用程序自身的代码仓库中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;下一步呢？&lt;/h2&gt;
&lt;p&gt;分类之后，针对不同库，采用不同的应对策略就可以了。本身不复杂...&lt;/p&gt;
&lt;h3 id="_4"&gt;应用程序代码库&lt;/h3&gt;
&lt;p&gt;这个最简单，一个git仓库中的应用程序逻辑代码的直接拆分而已。qmake项目的代码结构大致如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MyApp/
├── README.md
├── src/
│   ├── mycommon.pri
│   ├── src.pro
│   ├── app/
│   │   ├── main.cpp
│   │   └── app.pro
│   ├── libs/
│   │   ├── mylibs.pri
│   │   ├── lib1/
│   │   │   ├── main.cpp
│   │   │   └── lib1.pro
│   │   └── lib2/
│   │       ├── main.cpp
│   │       └── lib2.pro
├── tests/
└── scripts/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;主要点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;各个不同 &lt;code&gt;.pro&lt;/code&gt;，通过 &lt;code&gt;.pri&lt;/code&gt; 文件进行沟通和共享配置。各个.pro文件内容都很少&lt;/li&gt;
&lt;li&gt;比如动态库输出到什么地方，统一宏定义等，统一放到之 mylibs.pri 文件中&lt;/li&gt;
&lt;li&gt;尽可能使用qmake的函数定义等功能，以简化项目工程文件中的重复内容&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比如，在 src.pro 负责管理这些库（生成到合适位置）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;TEMPLATE = subdirs

SUBDIRS += libs/lib1/lib1.pro
SUBDIRS += libs/lib2/lib2.pro
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;app需要使用（找到）这些动态库和头文件，偷懒做法，写qmake函数将其隐藏起来，项目中直接用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MYAPP_LIBS += lib1 lib2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;cmake做类似事情，比qmake简单一些。每个文件夹下面放置一个CMakeLists.txt文件，再适当定义符合自己口味的cmake函数可以简化书写。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="git"&gt;业务代码库，每个独立业务模块一个git代码仓库&lt;/h3&gt;
&lt;p&gt;假定我有数十个来自不同部门的的独立模块需要控制。每个模块对应一个git仓库，应该还比较自然吧。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这个仓库，直接对应这个模块。里面的example可以直接反馈给模组开发部门使用。&lt;/li&gt;
&lt;li&gt;一系列的这种仓库，单独测试通过后，可以作为git submodule，在上层应用程序中直接使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="git_1"&gt;单个git仓库结构&lt;/h4&gt;
&lt;p&gt;以qmake为例，单个代码的git仓库结构大致如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MyLib/
├── README.md
├── mylib_top.pro
├── mylib_common.pri
├── src/
│   └── mylib/
│       ├── mylib.h
│       ├── main.cpp
│       ├── mylib.pri
│       └── mylib.pro
├── tests/
├── docs/
└── examples/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在这个仓库内，可以独立完成单元测试，编译验证。example中的例子也可以直接供其他部分使用。&lt;/p&gt;
&lt;p&gt;这个example的好处是：不需要严格的版本号进行管控。About对话框中，只需要显示构建时间、构建所用源码的SHA值，仓库提交记录总数等，可用于追溯即可。&lt;/p&gt;
&lt;h4 id="_5"&gt;集成方式&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;不同的业务逻辑代码库进行组合，可以完成一些更复杂的功能，用于构筑上层用户应用程序。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以将上面的各个git子仓库，直接以git submodule方式，集成到应用程序仓库中，一种组织结构如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MyApp/
├── README.md
├── src/
│   ├── mycommon.pri
│   ├── src.pro
│   ├── app/
│   │    ├──app.pro
│   │ 
│   ├── libs/
│   ├── submodulelibs/
│   │   ├── app_submodulelibs.pri
│   │   ├── mylib1/
│   │   │   ├── mylib1_top.pro
│   │   │   └── src\
│   │   │       └── mylib1\
│   │   │           ├── mylib1.h
│   │   │           ├── main.cpp
│   │   │           ├── mylib1.pri
│   │   │           └── mylib1.pro
│   │   └── mylib2/
│   │       ├── mylib2_top.pro
│   │       └── src\
│   │           └── mylib2\
│   │               ├── mylib2.h
│   │               ├── main.cpp
│   │               ├── mylib2.pri
│   │               └── mylib2.pro
├── tests/
└── scripts/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;所有的子仓库，统一放置到某个submoduleLibs目录下，在&lt;code&gt;src.pro&lt;/code&gt;中，我们告诉它一下（让它统一管理）就好了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;TEMPLATE = subdirs

SUBDIRS += submodulelibs/mylib1/src/mylib1/mylib1.pro
SUBDIRS += submodulelibs/mylib2/src/mylib2/mylib2.pro
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;然后我们需要告诉app.pro，动态库和头文件在什么地方。偷懒的话，自己定义变量，直接写成下面这样：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MY_SUBMOD_LIBS += mylib1 mylib2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;源码中，直接用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;quot;mylib1/mylib1.h&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;quot;mylib2/mylib2.h&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;//bala bala...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;注意：但是这儿我们新增加了一个&lt;code&gt;app_submodulelibs.pri&lt;/code&gt;文件。该文件用于对所有的子仓库进行统一控制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;控制动态库输出到什么地方&lt;/li&gt;
&lt;li&gt;控制统一使用哪一个版本基础库&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，前面的业务代码库中的pri文件内，有类似下面的钩子代码（以保证作为子仓库集成时，行为受控）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;exists(../app_submodulelibs.pri) {
    # USER app should provide the .pri file
    include(../app_submodulelibs.pri)

    xxx_BIN_PATH = $$APP_BIN_PATH
    xxx_LIB_PATH = $$APP_LIB_PATH
}else{
    xxx_BIN_PATH = xxx_BUILD_TREE/bin
    xxx_LIB_PATH = xxx_BUILD_TREE/lib

    CONFIG += myqtaddons100
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="cmake"&gt;cmake&lt;/h4&gt;
&lt;p&gt;以上使用qmake举例，cmake其实差不多。整个代码完全结构不动，每个文件夹下面添加 CMakeLists.txt 文件，可以保持qmake和cmake两套系统同时工作的（尽管不建议这种左右手互博）。&lt;/p&gt;
&lt;h3 id="_6"&gt;基础代码库，公司框架库，使用动态库形式发布&lt;/h3&gt;
&lt;p&gt;这个比较纠结，不能所有代码都用子仓库以源码形式集成到应用程序仓库啊。&lt;/p&gt;
&lt;p&gt;那么怎么办？我们可以将其做成framework，采用动态库的形式进行发布。&lt;/p&gt;
&lt;h4 id="_7"&gt;代码组织结构&lt;/h4&gt;
&lt;p&gt;这和前面的业务代码库有点相似，只是更繁杂一些/简单一些？？：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不用考虑作为子仓库使用，不需要留钩子(hook)&lt;/li&gt;
&lt;li&gt;需要作为动态库发布，质量要求更高，不能老改，乱改&lt;/li&gt;
&lt;li&gt;如果不能保证ABI兼容，需要支持多版本并存&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MyQtAddons/
├── README.md
├── myqtaddons.pro
├── myqtaddons_common.pri
├── src/
│   ├── mycore/
│   │   ├── mycore.h
│   │   ├── mycore.pri
│   │   └── mycore.pro
│   ├── mygui/
│   │   ├── mygui.h
│   │   ├── mygui.pri
│   │   └── mygui.pro
│   ├── mywidgets/
│   │   ├── mywidgets.h
│   │   ├── mywidgets.pri
│       └── mywidgets.pro
├── tests/
├── docs/
└── examples/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;这个没多少可说的，我们看看打包后结构&lt;/p&gt;
&lt;h4 id="_8"&gt;发布包结构&lt;/h4&gt;
&lt;p&gt;为了保持多版本并存，需要注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有头文件放置到以版本号命令的文件夹中&lt;/li&gt;
&lt;li&gt;所有动态库添加版本号作为后缀&lt;/li&gt;
&lt;li&gt;提供给qmake或cmake使用的文件，包含版本号。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以Windows为例，代码包发布结构：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;├── bin/
│   ├── myqtcore100.dll
│   ├── myqtcore100d.dll
│   ├── myqtgui100.dll
│   └── myqtgui100d.dll
│
├── include/
│   └── myqtaddons/
│       └── 1.0.0/
│           ├── myqtcore/
│           │   ├── xxxx1.h
│           │   └── xxxx2.h
│           │
│           └── myqtgui/
│               ├── yyyy1.h
│               └── yyyy2.h
│
├── lib/
│   ├── cmake/
│   │   └── myqtaddons100/
│   │       └── myqtaddons100-config.cmake
│   │
│   ├── myqtcore100.lib
│   ├── myqtcore100d.lib
│   ├── myqtgui100.lib
│   └── myqtgui100d.lib
│
└── mkspecs/
    └── features/
        ├── myqtaddons_moduels100.prf
        └── myqtaddons100.prf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;注意：这里面分别为 cmake和qmake提供了 myqtaddons100-config.cmake 和 myqtaddons100.prf，需要什么黑魔法，尽情往里面放就可以。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;只不过你能看到，到处充斥着这么多版本号，使用起来麻烦吗？？？&lt;/p&gt;
&lt;h4 id="_9"&gt;使用不麻烦&lt;/h4&gt;
&lt;p&gt;在程序代码中，不体现任何版本号&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;myqtcore/xxxx1.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;myqtgui/yyyy2.h&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;//bala bala ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在工程文件中，只需要出现一次版本号&lt;/p&gt;
&lt;p&gt;对于cmake工程来说，只需要&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;find_package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myqtaddons100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;COMPONENTS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;core&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;gui&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;REQUIRED&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;对于qmake工程来说&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;CONFIG += myqtaddons100
MYQTADDONS += core gui
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="_10"&gt;不用统一升级&lt;/h4&gt;
&lt;p&gt;我们前面提到，业务代码库数十个仓库，都依赖基础框架库，如果框架升级，那不得所有的仓库都变更啊？？&lt;/p&gt;
&lt;p&gt;其实不需要，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;submodulelibs/mylib1 使用 myqtaddons100&lt;/li&gt;
&lt;li&gt;submodulelibs/mylib2 使用 myqtaddons130&lt;/li&gt;
&lt;li&gt;myapp 使用 myqtaddons150&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;各个业务库子仓库，单独编译时，比如mylib1会使用它自己指定的 100版本。&lt;/p&gt;
&lt;p&gt;但是当它作为myapp的子仓库使用时，会自动使用myapp指定的150版本。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不要求ABI。只需要基础框架库保持源码级别兼容即可。只有做了不兼容的变更时，其他涉及到的业务逻辑库，才需要升级。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_11"&gt;第三方库，配置到基本开发环境中&lt;/h3&gt;
&lt;p&gt;OpenCV是一个很大个头的C++库。把它放置到某个具体的Qt应用程序中不太现实。更不用说这东西迭代挺快，有好多版本。而且即使同一个版本，还有不同的编译选项，造成的不同动态库。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenCV4.10&lt;/li&gt;
&lt;li&gt;OpenCV4.10-with-Cuda&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单起见，这些统统在外围屏蔽掉，我们项目中只需要直接启用opencv，然后源码中：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;opencv2/opencv2&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;// bala bala&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="cmake_1"&gt;cmake工程&lt;/h4&gt;
&lt;p&gt;OpenCV提供cmake支持，不用手动编写搜索逻辑。直接在CMakeLists.txt中用就行了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find_package(OpenCV&lt;span class="w"&gt; &lt;/span&gt;REQUIRED&lt;span class="w"&gt; &lt;/span&gt;)

target_link_libraries(hello112&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;OpenCV_LIBS&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;主打一个：应用程序不关心opencv的具体版本，以及在什么位置。&lt;/p&gt;
&lt;h4 id="qmake"&gt;qmake工程&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;qmake稍微复杂一下，使用.pri/.prf/.prl“魔法”就行了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;.pro文件中，使用一行代码来启用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;CONFIG += opencv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或者友好点，找不到时，让他报错：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opencv&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Fail&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;opencv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;总之，将配置基础环境时，将其封装到一个opencv.prf文件中，然后配置qmake能找到这个文件就行（所以，系统中有多套OpenCV库，就可以有很多个opencv.prf文件）。&lt;/p&gt;
&lt;p&gt;在Windows下，opencv.prf手动创建就可，Linux下，可以使用类似代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;unix&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;packagesExist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;opencv4&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;PKGCONFIG&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;opencv4&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;packagesExist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;opencv&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;PKGCONFIG&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;opencv&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Fail to find opencv.pc file!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_12"&gt;其他&lt;/h2&gt;
&lt;p&gt;东西太杂，以上只做了简单整理和介绍。实际上，在整个项目中，尽管和构建无关，还有一些python写的向导脚本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于生成各个库的模板（取个名字，直接填肉即可，不用考虑qmake，cmake细节）&lt;/li&gt;
&lt;li&gt;构建时，让qmake或cmake将关键的环境变量和变量信息记录到一个文件中（如果电脑上有多套Qt、OpenCV等库时这点很重要）&lt;/li&gt;
&lt;li&gt;打包脚本根据构建信息，自动提取所有依赖文件，生成安装包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外如上所有内容，均不依赖于QtCreator，在命令行下都可正常工作（便于CI/CD集成）。&lt;/p&gt;</content><category term="Qt"></category><category term="Qt"></category><category term="cmake"></category><category term="qmake"></category></entry><entry><title>电子与物质相互作用</title><link href="https://blog.debao.me/2024/11/interaction-of-electrons-with-matter/" rel="alternate"></link><published>2024-11-13T09:26:00+08:00</published><updated>2024-11-13T09:26:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-13:/2024/11/interaction-of-electrons-with-matter/</id><summary type="html">&lt;p&gt;具有一定能量的入射电子（incident electron），以一定方向轰击到物质表面时，会向内部渗透一定的距离，&lt;/p&gt;
&lt;p&gt;&lt;img alt="electron matter interaction" src="https://blog.debao.me/images/sem/electron-matter-1.png"&gt;&lt;/p&gt;
&lt;p&gt;这个过程中，入射电子可能与物 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;具有一定能量的入射电子（incident electron），以一定方向轰击到物质表面时，会向内部渗透一定的距离，&lt;/p&gt;
&lt;p&gt;&lt;img alt="electron matter interaction" src="https://blog.debao.me/images/sem/electron-matter-1.png"&gt;&lt;/p&gt;
&lt;p&gt;这个过程中，入射电子可能与物质中的如下内容发生相互作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原子核&lt;/li&gt;
&lt;li&gt;原子的轨道电子&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在原子库仑场的作用下，入射电子会发生散射，不仅改变运动方向，而且发生能量和动量和变化。这个撞击作用又可以分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;弹性的（elastic）：入射电子的能量没有损失&lt;/li&gt;
&lt;li&gt;非弹性的（inelastic）：入射电子的动能会发生变化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;排列组合一下，那么...&lt;/p&gt;
&lt;h2 id="4"&gt;4种可能情况&lt;/h2&gt;
&lt;h3 id="_1"&gt;与原子核弹性碰撞&lt;/h3&gt;
&lt;p&gt;入射电子被散射（scattering），只改变方向，能量无损失。&lt;/p&gt;
&lt;p&gt;&lt;img alt="elastic scattering" src="https://blog.debao.me/images/sem/electron-elastic-scattering.png"&gt;&lt;/p&gt;
&lt;p&gt;平均散射角度只有几度大小，但是个别电子散射角度能达到180°。&lt;/p&gt;
&lt;p&gt;碰撞几率用 cross section表示。原子序数越高，散射几率越大；入射电子能量越低，几率越大。&lt;/p&gt;
&lt;p&gt;而入射电子需要走多长距离才能发生碰撞，用平均自由程（mean free path)来度量。&lt;/p&gt;
&lt;h3 id="_2"&gt;与原子轨道电子弹性碰撞&lt;/h3&gt;
&lt;p&gt;这种情况，或许不应该单列。入射电子的弹性碰撞是和原子核和核外电子共同作用的？？ 入射电子散射&lt;/p&gt;
&lt;h3 id="_3"&gt;与原子轨道电子非弹性碰撞&lt;/h3&gt;
&lt;p&gt;入射电子的能量传递给轨道电子&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;【激发（Excitation ）】：如果传递的能量足够，轨道电子会跃迁到更高的壳层，称为激发。&lt;/li&gt;
&lt;li&gt;【电离（ionisation）】：如果传递的能量足够，轨道电子可能逃离原子，使得原子电离（ionised）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;处于激发状态的原子，会自发地跃迁到能量较低的状态（较低壳层的的空穴很快被其他轨道电子填充），这一过程可以是辐射跃迁，
也可以是非辐射跃迁：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;【特征X-射线】：辐射跃迁会释放出来光子；如果壳层的结合能足够大，这个光子就是 X 射线。&lt;/li&gt;
&lt;li&gt;【俄歇电子】：外层电子跃迁到内层空穴的同时，将多余能量传递给两一个外层电子，使其游离，成为俄歇电子。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;俄歇电子发射是1925年法国科学家 俄歇（Auger） 观察到的，1953年 兰特（lahder）从次级电子能量分布曲线中首次
辨认出俄歇电子谱线。1967年哈里斯采用电子能量分布微分法，把俄歇电子峰同均匀本次分开。此后俄歇电子才成为有效的表面分析方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;另外，入射电子可能使得固体中价电子集体产生震荡（等离子激发，对应特征能量损失峰）；也可能使得晶格振动加剧，声子增多（声子激发，热能）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="electron escape depth" src="https://blog.debao.me/images/sem/electron-matter-escape-depth.png"&gt;&lt;/p&gt;
&lt;h3 id="_4"&gt;与原子核非弹性碰撞&lt;/h3&gt;
&lt;p&gt;入射电子减速并改变方向。电子损失的能量以光子形式（X射线）释放出来。
轫致辐射（bremsstrahlung）。轫致辐射是德语单词，在德语中是制动辐射/刹车辐射的意思。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由于各个电子减速情况不同，辐射的X射线也具有不同的波长，从而形成连续的X光谱。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_5"&gt;二次电子能量分布&lt;/h2&gt;
&lt;p&gt;如果把入射电子成为原电子或一次电子，那么从物质表面逸出的电子，可称为二次电子或次级电子。这些逸出的电子可能包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;真正的二次电子&lt;/li&gt;
&lt;li&gt;弹性散射的原电子&lt;/li&gt;
&lt;li&gt;非弹性散射的原电子&lt;/li&gt;
&lt;li&gt;俄歇电子&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对特定材料，将不同入射电子能量下的对应逸出的电子数量，绘制成曲线，则长下面这样：&lt;/p&gt;
&lt;p&gt;&lt;img alt="secondary-electrons" src="https://blog.debao.me/images/sem/electron-matter-secondary-electrons.png"&gt;&lt;/p&gt;
&lt;p&gt;它大致分三个区域：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;快峰：电子能量高，速度快。当入射能量改变时，它同步移动。对应弹性散射的原电子。&lt;/li&gt;
&lt;li&gt;慢峰：集中在0~50eV范围呢。电子能量低，速度慢。&lt;/li&gt;
&lt;li&gt;两峰之间区域：对应非弹性的BSE，其中靠近快峰的一部分电子，被称为特征能损电子。另外还有俄歇电子峰也会叠加其上。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_6"&gt;其他效应&lt;/h2&gt;
&lt;p&gt;入射电子在固体表面也会产生其他一些效应&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;诱导脱附：低能电子(1kV)轰击物质表面时，表面吸附的气体分子发生脱附的现象。&lt;/li&gt;
&lt;li&gt;表面组分分解：入射电子透入的范围内，引起化合物分解。&lt;/li&gt;
&lt;li&gt;充电和场致转移：入射电子轰击绝缘体时，由于次级电子发射系数不为1，造成表面产生电荷积累。&lt;/li&gt;
&lt;li&gt;热效应：入射电子所损失的能量绝大部分都变成热能。物质温度上升速率与入射电子功率密度成正比，与物质导热系数成反比。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_7"&gt;电子衍射&lt;/h2&gt;
&lt;p&gt;电子除了粒子性外，还拥有波动性。电子通过晶体时，会发生衍射现象。&lt;/p&gt;
&lt;h2 id="_8"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《Scanning Electron Microscopy and X-Ray Microanalysis》&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nrc.gov/docs/ml1122/ml11229a666.pdf"&gt;Interaction of Charged Particles With Matter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pdfs.semanticscholar.org/presentation/60f5/30bae72b0c9881026cd75d9bc7c444f37772.pdf"&gt;Interaction of Electrons with Matter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://myscope.training/SEM_Beam_specimen_interactions"&gt;https://myscope.training/SEM_Beam_specimen_interactions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ozradonc.wikidot.com/physics:electron-interactions-types"&gt;http://ozradonc.wikidot.com/physics:electron-interactions-types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="SEM"></category><category term="SEM"></category></entry><entry><title>SEM镜筒：Retarding 与 Boosting</title><link href="https://blog.debao.me/2024/11/sem-column-retarding-or-boosting/" rel="alternate"></link><published>2024-11-12T00:28:00+08:00</published><updated>2024-11-12T00:28:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-12:/2024/11/sem-column-retarding-or-boosting/</id><summary type="html">&lt;p&gt;电子从灯丝发出后，会在真空中通过静电场和磁场区域（这些场由各种静电和磁的透镜/偏转器件产生），
电子束在场中受洛 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;电子从灯丝发出后，会在真空中通过静电场和磁场区域（这些场由各种静电和磁的透镜/偏转器件产生），
电子束在场中受洛伦兹力的控制会进行聚焦或偏转，最终轰击到样品上。&lt;/p&gt;
&lt;p&gt;&lt;img alt="boosting_vs_retarding" src="https://blog.debao.me/images/sem/sem_column_boosting_vs_retarding.png"&gt;&lt;/p&gt;
&lt;h2 id="vs"&gt;高 vs 低?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;电子束在场中能量越高（电子速度越快），它的色差（Chromatic aberration）和衍射像差（Diffraction aberration）就会越小。从这一方面，我们需要尽可能提高电子束能量，以便于获取更小的电子束斑，来提升分辨率...&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;另一方面，高速主电子与原子核发生相互作用，坏的事情也更多：&lt;ul&gt;
&lt;li&gt;很多样品——比如生物组织切片、聚合物材料等，很不耐轰击。&lt;/li&gt;
&lt;li&gt;深度产生的信号无法穿透到表面，在非导电材料中积累负电荷&lt;/li&gt;
&lt;li&gt;电子束在固体目标中的相互作用体积过大，影响分辨率&lt;/li&gt;
&lt;li&gt;弹性前向散射占主导地位，而高速BSE沿直线运动，多数打在腔室壁上&lt;/li&gt;
&lt;li&gt;表面结构成像不清晰&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;如何两全？&lt;/h2&gt;
&lt;p&gt;可以试想，如果能在电子束到达样品之前进行减速(decelerate)。那就可以达到这种效果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在镜筒中维持高速，以便于获取更小的电子束斑&lt;/li&gt;
&lt;li&gt;达到样品前进行减速，以确保不损伤样品&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;思路没问题，如何做...&lt;/p&gt;
&lt;h2 id="_2"&gt;具体如何？&lt;/h2&gt;
&lt;p&gt;要实现上面效果，市面上有两种做法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Retarding：/ rɪˈtɑːrdɪŋ /，延迟、阻滞，...&lt;/li&gt;
&lt;li&gt;Boosting：/ ˈbuːstɪŋ /，推进，升压，...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很有意思，取名上完全相反。分别看看&lt;/p&gt;
&lt;h3 id="boosting"&gt;Boosting 结构&lt;/h3&gt;
&lt;p&gt;特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;物镜中有一个加速管（boost tube），电子通过加速管加速，在加速管出口处和物镜极靴形成减速电场。&lt;/li&gt;
&lt;li&gt;样品在地电位上，一般无需特殊处理。&lt;/li&gt;
&lt;li&gt;落点能量（Landing Energy）直接对应 加速电压（Acccelerating Valtage）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="SEM Column Boosting" src="https://blog.debao.me/images/sem/sem_column_boosting.png"&gt;&lt;/p&gt;
&lt;h3 id="retarding"&gt;Retarding 结构&lt;/h3&gt;
&lt;p&gt;特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无加速管，样品直接加负电压（Retarding Valtage)，使电子在撞击样品之前进行减速&lt;/li&gt;
&lt;li&gt;样品浸没在静电场中，对样品导电性要求较高。如果还浸没在磁场中，还需要无磁性。&lt;/li&gt;
&lt;li&gt;落点能量（Landing Energy）对应于 &lt;code&gt;加速电压 - Retarding电压&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;样品带电，注意接送样安全性（先使其接地）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="SEM Column Retarding" src="https://blog.debao.me/images/sem/sem_column_retarding.png"&gt;&lt;/p&gt;
&lt;p&gt;该模式对样品要求很高，换来的其他好处也不少：比如，由于物镜区域都在地电位上，引入静电偏转器，镜筒内探测器 等都很方便。&lt;/p&gt;
&lt;h4 id="_3"&gt;历史&lt;/h4&gt;
&lt;p&gt;在1927年，Busch 发表了一篇关于磁透镜的论文，展示了如何利用磁场来聚焦电子束，类似于光学中光束通过玻璃透镜聚焦的方式。他推导出了电子在磁场中的运动方程，并证明了电子束也能形成类似于光学系统中的像。这个发现成为了电子光学的开端。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hans Busch（布许） 是一位德国物理学家，他的研究奠定了电子显微镜技术的基础。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1931年，Ernst Ruska 和 Max Knoll 构建了第一台实验性的电子显微镜，最终在1933年，Ruska 制造了首台能够超过光学显微镜分辨率的电子显微镜。这一时期已经有磁浸没概念。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ernst Ruska（鲁斯卡） 和 Max Knoll 两位也都是德国物理学家。Ernst Ruska 获得1986年诺贝尔物理学奖。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Retarding的概念比浸没要晚的多，1942年提出这一概念，但直到1993年Irena Müllerová 和 Luděk Frank才获得高质量的图像并公开发表。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Irena Müllerová 和 Luděk Frank 两位是捷克的科学家。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_4"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.intechopen.com/chapters/49846"&gt;Scanning Electron Microscopy with a Retarded Primary Beam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://patents.google.com/patent/US20020148960"&gt;Scanning electron microscope &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;https://www.jeol.com/applications/pdf/sm/844_en.pdf&lt;/li&gt;
&lt;li&gt;https://www.jeol.com/words/semterms/&lt;/li&gt;
&lt;/ul&gt;</content><category term="SEM"></category><category term="SEM"></category></entry><entry><title>SEM知识库：网络视频与文章资源收集</title><link href="https://blog.debao.me/2024/11/sem-knowledge-base-a-collection-of-online-video-and-article-resources/" rel="alternate"></link><published>2024-11-10T17:16:00+08:00</published><updated>2024-11-10T17:16:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-10:/2024/11/sem-knowledge-base-a-collection-of-online-video-and-article-resources/</id><summary type="html">&lt;h2 id="youtube"&gt;Youtube视频&lt;/h2&gt;
&lt;p&gt;Youtube中有大量SEM相关的视频，先简单列一些，作为培训素材还是挺好的。&lt;/p&gt;
&lt;p&gt;Markdown中似乎不能直接插入youtube视频，本文中使用如下方式，插入视频对应的图片&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[
![Scanning Electron Microscopy (SEM) Lecture]
(https://img …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</summary><content type="html">&lt;h2 id="youtube"&gt;Youtube视频&lt;/h2&gt;
&lt;p&gt;Youtube中有大量SEM相关的视频，先简单列一些，作为培训素材还是挺好的。&lt;/p&gt;
&lt;p&gt;Markdown中似乎不能直接插入youtube视频，本文中使用如下方式，插入视频对应的图片&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[
![Scanning Electron Microscopy (SEM) Lecture]
(https://img.youtube.com/vi/Zh21tp3aPEw/0.jpg)
]
(https://www.youtube.com/watch?v=Zh21tp3aPEw)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="kni"&gt;KNI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/@thekavlinanoscienceinstitu9490"&gt;KNI&lt;/a&gt;加州理工学院的卡夫里纳米科学研究所有一些介绍视频。SEM、FIB已经电镜操作都有介绍。PPT也不错&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Zh21tp3aPEw"&gt;&lt;img alt="Scanning Electron Microscopy (SEM) Lecture: Principles, Techniques &amp;amp; Applications" src="https://img.youtube.com/vi/Zh21tp3aPEw/0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=Zh21tp3aPEw"&gt;Scanning Electron Microscopy (SEM) Lecture: Principles, Techniques &amp;amp; Applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=3eSzisbNcGo"&gt;Gallium Focused Ion Beam (Ga-FIB) Lecture: Principles, Techniques &amp;amp; Applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=JXS3K8G2CVY"&gt;Helium &amp;amp; Neon Focused Ion Beam (He/Ne-FIB) Lecture: Principles, Techniques &amp;amp; Applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=eOyfoMRHfgE"&gt;Scanning Electron Microscopy (SEM) Concepts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="mse585"&gt;MSE585&lt;/h3&gt;
&lt;p&gt;Thomas Cochell 肯塔基大学工程学院材料工程学的高级讲师。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PLGRqpYZBJBC7D6sP_SR3GvCFXo58oqUIx"&gt;MSE585&lt;/a&gt; 这门课程视频内容挺全，里面涉及不少SEM和TEM的：&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=931nbwoz1C4"&gt;&lt;img alt="MSE585 F20 Lecture 17 Module 3 - Introduction of SEM" src="https://img.youtube.com/vi/931nbwoz1C4/0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=931nbwoz1C4"&gt;Introduction of SEM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=gCgg-soph6E"&gt;The Electron Gun&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=cjG2Ry1rGmU"&gt;EM Lenses &amp;amp; Probe Size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=EsLN7Q5GQ18"&gt;Electron-Specimen Interactions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=nFM0NVgNEGE"&gt;Backscattered Electrons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=CzN0nix_0Vo"&gt;SEM Scanning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=r4sDVqnF5Jc"&gt;SEM Depth of Field&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=XhQuyDIL7Es"&gt;SEM Image Artifacts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=BAXpSTlgGrg"&gt;Specialized SEM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=puv4ZxHn3kY"&gt;Introduction to TEM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=bLnshnNYM0M"&gt;Contrast in TEM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=B78vj6af684"&gt;Bright- and Dark-Field in TEM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tonya-coffey"&gt;Tonya Coffey&lt;/h3&gt;
&lt;p&gt;美国 阿巴拉契亚州立大学 教授 Tonya Coffey 介绍 SEM、TEM 视频。涉及样品荷电、电子源、电子与样品作用，探测器等&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=d7ch1XSmOgI"&gt;&lt;img alt="Scanning Electron Microscopy (SEM) Basics" src="https://img.youtube.com/vi/d7ch1XSmOgI/0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=d7ch1XSmOgI"&gt;Scanning Electron Microscopy (SEM) Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=1oGOwpiVvw8"&gt;Transmission Electron Microscopy (TEM) basics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ben-britton"&gt;Ben Britton&lt;/h3&gt;
&lt;p&gt;Thomas Benjamin Britton，CEng FIMMM，（出生于1985年4月18日）是一位材料科学家和工程师，目前就职于不列颠哥伦比亚大学。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=h3Z2RTAlZSU"&gt;&lt;img alt="Introduction to Scanning Electron Microscopy" src="https://img.youtube.com/vi/h3Z2RTAlZSU/0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=h3Z2RTAlZSU"&gt;Introduction to Scanning Electron Microscopy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=vBu9Xzc1TgE"&gt;Introduction to Energy Dispersive X-Ray Spectroscopy (EDX/EDS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=X-XG5RHlC-E"&gt;Introduction to Focussed Ion Beams (for microscopy)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注：他有大量关于EBSD的视频：&lt;a href="https://www.youtube.com/playlist?list=PLo_ZiAxtCLkqaujdC4pnAF7_rmQ0bPiqT"&gt;Introduction to Electron Backscatter Diffraction&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="microscopy-australia"&gt;Microscopy Australia&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PLJm35A24ZX_ftcHi7zzNCQ9pNQgaY85vu"&gt;Scanning Electron Microscopy&lt;/a&gt;系列，除理论介绍，还有不少电镜操作视频。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=HLCfI0i3WIA"&gt;&lt;img alt="SEM Theory Course: Session 1 General Information" src="https://img.youtube.com/vi/HLCfI0i3WIA/0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=HLCfI0i3WIA"&gt;SEM Theory Course: Session 1 General Information&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=ESwYTCSu4JQ"&gt;SEM Theory Course: Session 2 "What is Scanning Electron Microscopy?"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=yKNyHjDcCx0"&gt;SEM Theory Course: Session 3 "How does a SEM work?"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=_4YyBJm80jU"&gt;SEM Theory Course: Session 4 "How do I get a good image?"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=lmMtc_f2wyY"&gt; SEM Theory Course: Session 5 Specialised SEM Techniques &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;透射电镜操作系列：&lt;a href="https://www.youtube.com/playlist?list=PLJm35A24ZX_cCu2L9TeUrbBjXIgFbDngm"&gt;Transmission Electron Microscopy&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="duke-university-smif"&gt;Duke University - SMIF&lt;/h3&gt;
&lt;p&gt;SMIF：共享材料仪器设施（The Shared Materials Instrumentation Facility），杜克大学&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=8TaXtCOZV4o"&gt;&lt;img alt="Introduction to the Scanning Electron Microscope (SEM)" src="https://img.youtube.com/vi/8TaXtCOZV4o/0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=8TaXtCOZV4o"&gt;Introduction to the Scanning Electron Microscope (SEM)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;链接：&lt;a href="https://www.youtube.com/watch?v=Q4-HsS4eyOU"&gt;Introduction to EBL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;网站&lt;/h2&gt;
&lt;h3 id="myscope"&gt;MYSCOPE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://myscope.training/"&gt;https://myscope.training/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个专注于显微技术的在线培训平台，旨在为学生、研究人员和科学家提供显微镜使用和相关技术的教育和培训资源。&lt;/p&gt;
&lt;h3 id="nanoscience-instruments"&gt;Nanoscience Instruments&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nanoscience.com/techniques/scanning-electron-microscopy/"&gt;Scanning Electron Microscopy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nanoscience.com/techniques/scanning-transmission-electron-microscopy/"&gt;Scanning Transmission Electron Microscopy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nanoscience.com/techniques/transmission-electron-microscopy/"&gt;Transmission Electron Microscopy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="thermofisher"&gt;ThermoFisher&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.thermofisher.com/blog/materials/electron-microscopy-101/"&gt;https://www.thermofisher.com/blog/materials/electron-microscopy-101/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.thermofisher.com/us/en/home/materials-science/learning-center/applications/scanning-electron-microscope-sem-electron-column.html"&gt;https://www.thermofisher.com/us/en/home/materials-science/learning-center/applications/scanning-electron-microscope-sem-electron-column.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assets.thermofisher.com/TFS-Assets/MSD/Reference-Materials/desktop-sem-technology-comprehensive-guide-WP0015.pdf"&gt;SEM Technology: A Comprehensive Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="jeol"&gt;JEOL&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.jeol.com/products/science/"&gt;https://www.jeol.com/products/science/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jeolusa.com/RESOURCES/Electron-Optics/Scanning-Electron-Microscopy-Basics"&gt;https://www.jeolusa.com/RESOURCES/Electron-Optics/Scanning-Electron-Microscopy-Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jeol.com/words/semterms/"&gt;https://www.jeol.com/words/semterms/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jeol.com/words/emterms/"&gt;https://www.jeol.com/words/emterms/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jeol.com/applications/pdf/sm/sem_atoz_all.pdf"&gt;Scanning Electron Microscope A To Z&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jeol.com/applications/pdf/sm/844_en.pdf"&gt;A Guide to Scanning Microscope Observation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="hitachi-high-tech"&gt;Hitachi High-Tech&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.hitachi-hightech.com/global/en/knowledge/semiconductor/room/manufacturing/"&gt;https://www.hitachi-hightech.com/global/en/knowledge/semiconductor/room/manufacturing/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chanl.unc.edu/wp-content/uploads/sites/18385/2019/02/S4700.pdf"&gt;Hitachi S-4700 SEM Training &amp;amp; Reference Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;其他&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://emb-iitk.vlabs.ac.in/exp/sem-basics/theory.html&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://em-lab.berkeley.edu/EML/resources&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Scanning_electron_microscope&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Transmission_electron_microscopy&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Scanning_transmission_electron_microscopy&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Focused_ion_beam&lt;/li&gt;
&lt;/ul&gt;</content><category term="SEM"></category><category term="SEM"></category></entry><entry><title>开源C++ 3D引擎小记</title><link href="https://blog.debao.me/2024/11/notes-on-open-source-c++-3d-engines/" rel="alternate"></link><published>2024-11-10T00:08:00+08:00</published><updated>2024-11-10T00:08:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-10:/2024/11/notes-on-open-source-c++-3d-engines/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;简单罗列一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;开源，免费&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#ogre"&gt;OGRE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#irrlicht-engine"&gt;Irrlicht Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#godot"&gt;Godot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#panda3d"&gt;Panda3D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#o3de"&gt;O3DE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#openscenegraph"&gt;OpenSceneGraph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vulkanscenegraph"&gt;VulkanSceneGraph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#open3d"&gt;Open3D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vtk"&gt;VTK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coin3d"&gt;Coin3D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#open-inventor"&gt;Open Inventor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;商业&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#unigine"&gt;Unigine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unreal-engine"&gt;Unreal Engine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;开源，免费&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;本表格内容来自 chatgpt，可能不准确。先列上 …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;简单罗列一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;开源，免费&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#ogre"&gt;OGRE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#irrlicht-engine"&gt;Irrlicht Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#godot"&gt;Godot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#panda3d"&gt;Panda3D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#o3de"&gt;O3DE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#openscenegraph"&gt;OpenSceneGraph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vulkanscenegraph"&gt;VulkanSceneGraph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#open3d"&gt;Open3D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vtk"&gt;VTK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coin3d"&gt;Coin3D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#open-inventor"&gt;Open Inventor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;商业&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#unigine"&gt;Unigine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unreal-engine"&gt;Unreal Engine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;开源，免费&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;本表格内容来自 chatgpt，可能不准确。先列上&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;工具/引擎&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;游戏开发&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;实时 3D 渲染&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;科学数据可视化&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;虚拟现实/仿真&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;CAD/工业设计&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;医学与工程&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;大规模数据处理&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;体渲染/点云处理&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;OGRE&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✅ 高质量渲染&lt;/td&gt;
&lt;td&gt;✅ 强大渲染能力&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;✅ 适合&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Irrlicht Engine&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✅ 简单游戏开发&lt;/td&gt;
&lt;td&gt;✅ 基本渲染能力&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;✅ 适合&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Godot&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✅ 全功能游戏引擎&lt;/td&gt;
&lt;td&gt;✅ 完整支持&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;✅ 支持&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Panda3D&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✅ 教育与轻量级游戏&lt;/td&gt;
&lt;td&gt;✅ 支持&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;O3DE&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;✅ 复杂 AAA 游戏开发&lt;/td&gt;
&lt;td&gt;✅ PBR 和现代图形特性&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;✅ 专业支持&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;✅ 支持数据驱动&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;OpenSceneGraph&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;✅ 适合&lt;/td&gt;
&lt;td&gt;✅ 部分适合&lt;/td&gt;
&lt;td&gt;✅ 支持&lt;/td&gt;
&lt;td&gt;✅ 适合&lt;/td&gt;
&lt;td&gt;✅ 适合&lt;/td&gt;
&lt;td&gt;✅ 支持&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;VulkanSceneGraph&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;✅ 非常适合&lt;/td&gt;
&lt;td&gt;✅ 高性能支持&lt;/td&gt;
&lt;td&gt;✅ 支持 VR/AR&lt;/td&gt;
&lt;td&gt;✅ 支持&lt;/td&gt;
&lt;td&gt;✅ 适合&lt;/td&gt;
&lt;td&gt;✅ 支持&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Open3D&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;✅ 强大数据可视化&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;✅ 最适合&lt;/td&gt;
&lt;td&gt;✅ 最适合&lt;/td&gt;
&lt;td&gt;✅ 最适合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;VTK&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;✅ 最适合&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;✅ 部分适合&lt;/td&gt;
&lt;td&gt;✅ 最适合&lt;/td&gt;
&lt;td&gt;✅ 最适合&lt;/td&gt;
&lt;td&gt;✅ 最适合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Coin3D&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;✅ 支持简单可视化&lt;/td&gt;
&lt;td&gt;✅ 支持&lt;/td&gt;
&lt;td&gt;✅ 非常适合&lt;/td&gt;
&lt;td&gt;✅ 部分适合&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Open Inventor&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;✅ 支持简单可视化&lt;/td&gt;
&lt;td&gt;✅ 支持&lt;/td&gt;
&lt;td&gt;✅ 非常适合&lt;/td&gt;
&lt;td&gt;✅ 部分适合&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;td&gt;❌ 不适用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="ogre"&gt;OGRE&lt;/h3&gt;
&lt;p&gt;OGRE：面向对象的图形渲染引擎（Object-Oriented Graphics Rendering Engine）。最初由 Steve Streeting 创建，它是面向对象设计的，专注于图形渲染而非完整游戏引擎功能。采用MIT协议发布。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ogre3d.org"&gt;https://www.ogre3d.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OGRECave"&gt;https://github.com/OGRECave&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首次发布于2005年，但是2019年fork出两个项目同时开发：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ogre：原来的1.x 版本。版本号从 1.11.x, 1.12.x 之后就变成了 13.x，14.x，...&lt;/li&gt;
&lt;li&gt;Ogre Next：原来的2.x开发版本。版本号从2.1开始，后续命名 3.0，4.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两个版本的比较见&lt;a href="https://www.ogre3d.org/about/what-version-to-choose"&gt;官方&lt;/a&gt;，OgreNext 是 Ogre 引擎的现代化版本，专注于物理渲染管线，适合高端硬件和现代图形 API 的需求。OGRE更成熟，支持的插件，绑定的语言更多。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ogre提供有&lt;a href="https://www.ogre3d.org/2020/04/21/qt-ogre3d-integration-now-available-in-master"&gt;ApplicationContextQt &lt;/a&gt;，而OgreNext没有直接提供。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="irrlicht-engine"&gt;Irrlicht Engine&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://irrlicht.sourceforge.io/"&gt;https://irrlicht.sourceforge.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Irrlicht 于 2003 年由 Niko Schröder 开发，一个轻量级的 3D 引擎。采用zlib协议发布。&lt;/p&gt;
&lt;p&gt;简单的 API 和良好的文档。&lt;/p&gt;
&lt;h3 id="godot"&gt;Godot&lt;/h3&gt;
&lt;p&gt;发音：/ˈɡɒdoʊ/ GOD-oh&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://godotengine.org/"&gt;https://godotengine.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/godotengine/godot"&gt;https://github.com/godotengine/godot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Godot 起初由 Juan Linietsky 和 Ariel Manzur 开发，正式开源于 2014 年。&lt;/p&gt;
&lt;p&gt;尽管可以使用C++，但知名的是它的 GDScript 和 C# 支持&lt;/p&gt;
&lt;h3 id="panda3d"&gt;Panda3D&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.panda3d.org/"&gt;https://www.panda3d.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Panda3D 由迪士尼和卡内基梅隆大学合作开发，最初用于主题公园的互动体验。2008 年，迪士尼将其开源。&lt;/p&gt;
&lt;p&gt;简单的学习曲线和丰富的 Python 绑定，但其核心是用 C++ 编写的。内置的物理引擎和粒子系统，适合教育和快速原型开发&lt;/p&gt;
&lt;h3 id="o3de"&gt;O3DE&lt;/h3&gt;
&lt;p&gt;O3DE：Open 3D Engine&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://o3de.org/"&gt;https://o3de.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/o3de/o3de/"&gt;https://github.com/o3de/o3de/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O3DE 的前身是 Amazon Lumberyard，这是 Amazon 在 2016 年基于 CryEngine 开发的引擎。&lt;/p&gt;
&lt;p&gt;2021 年，Amazon 将 Lumberyard 开源，并将其交由 Linux 基金会管理，形成了 Open 3D Engine 项目。&lt;/p&gt;
&lt;p&gt;采用 Apache License 2.0 与 MIT 协议。&lt;/p&gt;
&lt;h3 id="openscenegraph"&gt;OpenSceneGraph&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/openscenegraph/OpenSceneGraph"&gt;https://github.com/openscenegraph/OpenSceneGraph&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OpenSceneGraph (OSG) 1998年OSG 由 Don Burns 和 Robert Osfield 创建，最初用于军事仿真和科学可视化，采用 OpenGL 渲染和场景图架构。它是一个开源的 3D 图形应用程序开发框架，广泛用于可视化、仿真、游戏开发和虚拟现实等领域。它基于 C++ 开发，提供了一个高效的 3D 渲染引擎，适合用于构建高性能的图形应用程序。发布协议类似 LGPL。&lt;/p&gt;
&lt;h3 id="vulkanscenegraph"&gt;VulkanSceneGraph&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://vsg-dev.github.io/vsg-dev.io/&lt;/li&gt;
&lt;li&gt;https://github.com/vsg-dev/VulkanSceneGraph&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2018年：VulkanSceneGraph 项目开始在 GitHub 上发布。是一个基于 Vulkan 图形 API 的开源 3D 场景图引擎，旨在提供比传统 OpenGL 更高效、更灵活的 3D 渲染解决方案。&lt;/p&gt;
&lt;p&gt;采用MIT协议。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Qt支持：https://github.com/vsg-dev/vsgQt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="open3d"&gt;Open3D&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.open3d.org/"&gt;https://www.open3d.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isl-org/Open3D"&gt;https://github.com/isl-org/Open3D&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个开源的库，不是游戏引擎。旨在为 3D 数据处理和可视化提供高效和易用的工具。它专注于处理点云、网格、体素和其他 3D 数据结构，广泛应用于计算机视觉、机器人、几何处理、3D 重建等领域。&lt;/p&gt;
&lt;p&gt;Open3D 提供了简洁且高效的 API，使开发者能够快速进行 3D 数据的处理、分析和可视化。&lt;/p&gt;
&lt;h3 id="vtk"&gt;VTK&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vtk.org/"&gt;https://vtk.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kitware/VTK"&gt;https://github.com/Kitware/VTK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;VTK (The Visualization Toolkit) 是一个开源的 3D 计算机图形学、图像处理、可视化和数据分析软件库。它用于处理、渲染和分析科学数据，广泛应用于工程、医学、地球科学、物理学等领域。VTK 支持丰富的 3D 图形可视化，提供了强大的功能，可以进行多种数据处理操作，包括几何处理、网格和体积数据的可视化、流体动力学分析、图像分析等。采用BSD协议发布&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1993年：VTK 由 Kitware 公司创建，最初用于科学计算和工程仿真领域的数据可视化。&lt;/li&gt;
&lt;li&gt;1996年：VTK 开源，允许更多的开发者和研究人员使用和改进。&lt;/li&gt;
&lt;li&gt;2005年：VTK 添加了对 Python 的支持，使得开发者能更方便地用 Python 进行可视化编程。&lt;/li&gt;
&lt;li&gt;2010年代：增加了对 GPU 加速的支持，并改善了渲染技术，能处理更复杂的数据和图形。&lt;/li&gt;
&lt;li&gt;2015年：支持现代的图形硬件，提升了性能和图形质量。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="coin3d"&gt;Coin3D&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;它是 Open Inventor 的一个高兼容性实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.coin3d.org/"&gt;https://www.coin3d.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coin3d"&gt;https://github.com/coin3d&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Coin3D 是一个开源的 3D 图形工具包，基于 Open Inventor 标准开发，主要用于交互式 3D 图形应用的开发。它提供了高层次的编程接口，让开发者能够方便地创建复杂的 3D 图形场景，而无需直接处理底层的 OpenGL 代码。&lt;/p&gt;
&lt;p&gt;1998-2011，Coin3D作为商业产品开发，采用商业和GPL双重授权。最初由一家名为 Systems in Motion (SIM) 的公司开发，后来由 Kongsberg Oil &amp;amp; Gas Technologies 维护。&lt;/p&gt;
&lt;p&gt;2011年，停止商业开发，采用 BSD协议发布。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Coin3D 使用 BSD 许可证&lt;/li&gt;
&lt;li&gt;它的Python绑定叫做 pivy&lt;/li&gt;
&lt;li&gt;它的Qt绑定叫做 quarter（老的绑定叫 soqt）&lt;/li&gt;
&lt;li&gt;它还有提供有 wxWidget，Xt/Motif、GTK 等绑定&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;FreeCAD 使用 Coid3D&lt;/p&gt;
&lt;h3 id="open-inventor"&gt;Open Inventor&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aumuell/open-inventor"&gt;https://github.com/aumuell/open-inventor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Open Inventor 是由 Silicon Graphics, Inc. (SGI) 在 1990 年代开发的一种高级 3D 图形工具包，它为开发交互式三维应用程序提供了一个面向对象的框架。它的核心是一个基于场景图（Scene Graph）的架构，这种架构简化了 3D 图形开发，使开发者可以通过更高层次的接口来操作 3D 对象，而无需直接处理底层的 OpenGL 调用。&lt;/p&gt;
&lt;p&gt;采用 LGPL 授权（2000年开始，但是开源版本基本不再维护？？）&lt;/p&gt;
&lt;p&gt;相关项目：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.openinventor.com/en"&gt;Open Inventor Toolkit&lt;/a&gt; ：赛默飞的闭源产品。&lt;/li&gt;
&lt;li&gt;Coin3D：和 Open Inventor 接口兼容的开源产品&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mevislab.de/mevislab/features/open-inventor"&gt;MeVisLab Open Inventor&lt;/a&gt;：二次开发版本，包含Qt绑定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;商业&lt;/h2&gt;
&lt;h3 id="unigine"&gt;Unigine&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://unigine.com/"&gt;https://unigine.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unigine 开发始于 2005 年，主要由一家俄罗斯公司开发，一个高保真的 3D 渲染和物理模拟引擎。&lt;/p&gt;
&lt;p&gt;尽管 Unigine 的专业版是商业产品，但它提供了一个免费的社区版供开发者使用。&lt;/p&gt;
&lt;h3 id="unreal-engine"&gt;Unreal Engine&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.unrealengine.com"&gt;https://www.unrealengine.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.unrealengine.com/zh-CN/ue-on-github"&gt;https://www.unrealengine.com/zh-CN/ue-on-github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unreal Engine（简称 UE）是由 Epic Games 开发的一个高度功能强大的游戏引擎，广泛应用于游戏开发、虚拟现实（VR）、电影制作、建筑可视化等多个领域。自 1998 年首次发布以来，Unreal Engine 已成为业内最为知名和最具影响力的引擎之一。&lt;/p&gt;
&lt;p&gt;Unreal Engine 曾经是商业引擎，需要支付高额的许可费用，但从 2015 年起，Epic Games 推出了 UE4 的免费版本，允许开发者使用所有功能，唯一的费用是当游戏收入超过一定数额时支付分成。&lt;/p&gt;
&lt;h2 id="_3"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/OGRE&lt;/li&gt;
&lt;li&gt;https://www.ogre3d.org/2020/04/21/qt-ogre3d-integration-now-available-in-master&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Irrlicht_Engine&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Panda3D&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Godot_(game_engine)&lt;/li&gt;
&lt;li&gt;https://wiki.qt.io/Using_3D_engines_with_Qt&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Unigine&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/VTK&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Open_Inventor&lt;/li&gt;
&lt;/ul&gt;</content><category term="C++"></category><category term="CAx"></category><category term="Qt"></category></entry><entry><title>如何在Qt Creator下优雅地配置第三方库</title><link href="https://blog.debao.me/2024/11/how-to-elegantly-configure-third-party-libraries-in-qt-creator/" rel="alternate"></link><published>2024-11-09T19:44:00+08:00</published><updated>2024-11-09T19:44:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-09:/2024/11/how-to-elegantly-configure-third-party-libraries-in-qt-creator/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;C++下使用各种三方库是不可避免的，如果不借助任何包管理工具，在QtCreator下，如何玩转三方库...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;考虑如下一个极度简化的使用第 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;C++下使用各种三方库是不可避免的，如果不借助任何包管理工具，在QtCreator下，如何玩转三方库...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;考虑如下一个极度简化的使用第三方库的场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电脑上有多套Qt：Qt5.15，Qt6.8，...&lt;/li&gt;
&lt;li&gt;同时安装了多套OpenCV：OpenCV4.0，OpenCV4.10，...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;应该如何配置，才能隐藏这些细节。使得在同一个项目文件（.pro 或 CMakeLists.txt）中，不写死任何路径，
又可以随意切换，&lt;/p&gt;
&lt;p&gt;比如：在同一个QtCreator下，在如下配置下自由切换：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Qt5.15 + OpenCV4.0&lt;/li&gt;
&lt;li&gt;Qt5.15 + OpenCV4.10&lt;/li&gt;
&lt;li&gt;Qt6.8 + OpenCV4.0&lt;/li&gt;
&lt;li&gt;Qt6.8 + OpenCV4.10&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;其实，很简单&lt;/h2&gt;
&lt;p&gt;只需要充分利用Qt Creator的Kits功能，克隆（clone）出来不同的配置，做些微调就行了。效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="qtcreator-kits-config" src="https://blog.debao.me/images/qt/qtcreator-kits-config.png"&gt;&lt;/p&gt;
&lt;p&gt;那么需要调整什么？&lt;/p&gt;
&lt;h2 id="_2"&gt;需要做什么？&lt;/h2&gt;
&lt;p&gt;两件事：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;让cmake能找到三方库（&lt;code&gt;OpenCVConfig.cmake&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;让qmake能找到三方库（&lt;code&gt;opencv.prf&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们以 Windows 下 Qt6.8 + OpenCV4.0 配置为例&lt;/p&gt;
&lt;h3 id="qt"&gt;克隆Qt默认配置&lt;/h3&gt;
&lt;p&gt;克隆 &lt;code&gt;Desktop Qt 6.8.0 MSVC2022 64bit&lt;/code&gt; 配置文件，名字改为自己喜欢的以便于区分：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Qt %{Qt:Version} MSVC2022 64bit（OpenCV 4.0.1）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="opencv"&gt;确定 OpenCV 位置&lt;/h3&gt;
&lt;p&gt;假定OpenCV位于 &lt;code&gt;D:/Qt/opencv-4.0.1-vs2015-x64/&lt;/code&gt;，那么&lt;/p&gt;
&lt;p&gt;需要确认：&lt;code&gt;OpenCVConfig.cmake&lt;/code&gt; 在哪个具体位置，比如&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;D:/Qt/opencv-4.0.1-vs2015-x64/x64/vc14/lib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="cmake"&gt;让 cmake 找到三方库&lt;/h3&gt;
&lt;p&gt;要让 cmake的 &lt;code&gt;find_package()&lt;/code&gt; 能找到所需要的库，它有一套复杂的
&lt;a href="https://cmake.org/cmake/help/latest/command/find_package.html#config-mode-search-procedure"&gt;查找规则&lt;/a&gt;。
可以通过各种环境变量（比如&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;）或者cmake变量（比如 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 或 &lt;code&gt;&amp;lt;PackageName&amp;gt;_DIR&lt;/code&gt;）
进行控制。&lt;/p&gt;
&lt;p&gt;我们继续考虑简单的场景，在命令行下，只需要将如下选项传递给cmake即可：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;-DOpenCV_DIR:PATH=D:/Qt/opencv-4.0.1-vs2015-x64/x64/vc14/lib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;问题转化成，如何在Qt Creator下实现同样效果？&lt;/p&gt;
&lt;p&gt;在 Kits 配置中，将上述内容加入 &lt;code&gt;CMake Configuration&lt;/code&gt; 即可。&lt;/p&gt;
&lt;h3 id="qmake"&gt;让 qmake 找到第三方库&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;尽管早已不建议继续使用 qmake，为了完整性，此处仍给出个人早期常用方案。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先，为每一个opencv的库，准备一个 opencv.prf 文件，内容大致如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;INCLUDEPATH += D:/Qt/opencv_build_vs2015_x64/include
LIBS += -LD:/Qt/opencv_build_vs2015_x64/x64/vc14/lib
CONFIG(debug, debug|release) {
    LIBS += -lopencv_aruco310d
    LIBS += -lopencv_bgsegm310d
    #...
} else {
    LIBS += -lopencv_aruco310
    LIBS += -lopencv_bgsegm310
    #...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;而后，通过如下环境变量告诉 qmake 它在什么地方&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;QMAKEFEATURES=D:\Qt\opencv-4.0.1-vs2015-x64\qtfeatures
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在Qt Creator下，在 Kits 配置中，将上述内容加入 &lt;code&gt;Environment&lt;/code&gt; 即可。&lt;/p&gt;
&lt;h3 id="_3"&gt;重复操作&lt;/h3&gt;
&lt;p&gt;重复如上操作，即可完成不同 kits 的配置&lt;/p&gt;
&lt;p&gt;最终配置结果，会放在如下文件中：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;%appdata&lt;/span&gt;&lt;span class="o"&gt;%/&lt;/span&gt;&lt;span class="n"&gt;QtProject&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;qtcreator&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;profiles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_4"&gt;使用&lt;/h2&gt;
&lt;p&gt;Kits环境配置完毕后，所有细节对各个项目都是隐藏的：&lt;/p&gt;
&lt;h3 id="cmake_1"&gt;cmake 项目&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cmake_minimum_required&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;VERSION&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;3.16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;project&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;hello112&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;LANGUAGES&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;CXX&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;CMAKE_AUTOMOC&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;ON&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;find_package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;QT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;NAMES&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Qt6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Qt5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;REQUIRED&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;COMPONENTS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Core&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;find_package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;Qt&lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;QT_VERSION_MAJOR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;REQUIRED&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;COMPONENTS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Core&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;find_package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;OpenCV&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;REQUIRED&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;add_executable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;hello112&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;main.cpp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;target_link_libraries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;hello112&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Qt::Core&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OpenCV_LIBS&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="qmake_1"&gt;qmake 项目&lt;/h3&gt;
&lt;p&gt;.pro 文件只需要如下这样&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;win32&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;CONFIG&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;opencv&lt;/span&gt;

&lt;span class="n"&gt;SOURCES&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cpp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_5"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://cmake.org/cmake/help/latest/command/find_package.html#config-mode-search-procedure&lt;/li&gt;
&lt;li&gt;https://discourse.cmake.org/t/packagename-root-vs-package-dir/10361/3&lt;/li&gt;
&lt;li&gt;https://doc.qt.io/qt-6/qmake-advanced-usage.html&lt;/li&gt;
&lt;/ul&gt;</content><category term="Qt"></category></entry><entry><title>Python打包与包管理小记</title><link href="https://blog.debao.me/2024/11/notes-on-python-packaging-and-package-management/" rel="alternate"></link><published>2024-11-09T12:29:00+08:00</published><updated>2024-11-09T12:29:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-09:/2024/11/notes-on-python-packaging-and-package-management/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;记忆力似乎越来越差，简单记一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;历史&lt;/h2&gt;
&lt;p&gt;Python 包管理和打包技术经历了多个阶段的发展，从早期的简单手动分发到现代的 &lt;code&gt;.whl …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;记忆力似乎越来越差，简单记一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;历史&lt;/h2&gt;
&lt;p&gt;Python 包管理和打包技术经历了多个阶段的发展，从早期的简单手动分发到现代的 &lt;code&gt;.whl&lt;/code&gt; 格式和 &lt;code&gt;pip&lt;/code&gt; 工具。&lt;/p&gt;
&lt;h3 id="2000"&gt;手动分发阶段（2000年代初期及之前）&lt;/h3&gt;
&lt;p&gt;最初，Python 包的分发和安装都是手动进行的，需要下载源代码并运行 &lt;code&gt;setup.py&lt;/code&gt; 脚本来安装。&lt;/p&gt;
&lt;p&gt;2000年9月，Python1.6的标准库引入了 &lt;code&gt;distutils&lt;/code&gt; 模块，使打包和分发 Python 模块更为规范。
但 &lt;code&gt;distutils&lt;/code&gt; 功能有限，对依赖关系管理能力较弱，扩展性不足。&lt;/p&gt;
&lt;h3 id="setuptools-egg-2004"&gt;setuptools 和 .egg 格式（2004 年）&lt;/h3&gt;
&lt;p&gt;Philip J. Eby 在 2004 年发布了 &lt;code&gt;setuptools&lt;/code&gt; 模块。 &lt;code&gt;distutils&lt;/code&gt; 的扩展，增加了更强大的功能，如依赖管理和插件支持。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;setuptools&lt;/code&gt; 引入了统一的 &lt;code&gt;.egg&lt;/code&gt; 包格式以及安装工具 &lt;code&gt;easy_install&lt;/code&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;.egg&lt;/code&gt; 格式&lt;/strong&gt;：提供了包的归档和分发方式。包中包含代码和元数据，支持即用即装。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;easy_install&lt;/code&gt;&lt;/strong&gt;：用于安装和管理 &lt;code&gt;.egg&lt;/code&gt; 包。简化了安装。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;easy_install&lt;/code&gt;依赖管理较弱，难以处理复杂依赖。&lt;/p&gt;
&lt;h3 id="pip-virtualenv2008"&gt;pip 和 virtualenv（2008 年）&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pip&lt;/code&gt; 于 2008年发布，它由 Ian Bicking 开发。相较于 &lt;code&gt;easy_install&lt;/code&gt; ，&lt;code&gt;pip&lt;/code&gt; 提供了更强大的依赖管理、卸载功能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;virtualenv&lt;/code&gt;&lt;/strong&gt; 提供了一个工具来创建独立的 Python 环境，使开发者能够为每个项目创建隔离的环境，避免不同项目之间的依赖冲突。它由 Ian Bicking 和 Chris B. Wilson 等人开发，并在 2007 年发布。&lt;/p&gt;
&lt;p&gt;2011年pip 0.3版本引入 &lt;code&gt;pip freeze&lt;/code&gt; 。用于生成当前环境中安装的所有包和版本的列表，通常用于创建 requirements.txt 文件，这对于项目的依赖管理和环境重建非常有用。&lt;/p&gt;
&lt;h3 id="whl2012"&gt;&lt;code&gt;.whl&lt;/code&gt;格式（2012 年）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://peps.python.org/pep-0427/"&gt;https://peps.python.org/pep-0427/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;.whl&lt;/code&gt; 格式由 &lt;code&gt;PEP 427&lt;/code&gt; 引入，成为标准化的打包格式。目的是克服 &lt;code&gt;.egg&lt;/code&gt; 的缺陷，如兼容性问题和社区支持不足。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.whl&lt;/code&gt; 文件可直接安装，无需编译，安装速度快，与 &lt;code&gt;pip&lt;/code&gt; 完全集成。&lt;code&gt;setuptools&lt;/code&gt; 继续用于构建包，但打包输出格式支持 &lt;code&gt;.whl&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;pip&lt;/code&gt; 1.4 发布于2013年，提供了 &lt;code&gt;.whl&lt;/code&gt;的全面支持。而后 &lt;code&gt;.egg&lt;/code&gt; 逐渐不受待见。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="build-pyprojecttoml2018"&gt;build 与 pyproject.toml（2018）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://peps.python.org/pep-0517/"&gt;PEP 517 – A build-system independent format for source trees&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://peps.python.org/pep-0518/"&gt;PEP 518 – Specifying Minimum Build System Requirements for Python Projects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;PEP 517 和 PEP 518&lt;/strong&gt; 引入了新的构建系统接口，允许项目定义自定义构建后端，如 &lt;code&gt;poetry&lt;/code&gt; 或 &lt;code&gt;flit&lt;/code&gt;，提升了打包和构建的灵活性。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pyproject.toml&lt;/code&gt; 文件成为了现代 Python 项目的标准配置文件，允许项目声明构建系统、依赖项以及其他相关元数据。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;build&lt;/code&gt; 遵循 PEP 517 规范而设计的工具。build 提供了一个轻量级且标准化的方式来构建 .whl 和 .tar.gz 文件&lt;/p&gt;
&lt;h2 id="_2"&gt;使用举例&lt;/h2&gt;
&lt;h3 id="whl"&gt;生成 .whl 包&lt;/h3&gt;
&lt;p&gt;有多种方式可以生成 .whl 包&lt;/p&gt;
&lt;h4 id="setuptools-wheel"&gt;使用 setuptools + wheel（已不推荐）&lt;/h4&gt;
&lt;p&gt;尽管（曾）是最常见的打包方式，但已经不被推荐使用，见：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html"&gt;https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首先安装依赖&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;setuptools&lt;span class="w"&gt; &lt;/span&gt;wheel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;确保存在 setup.py 文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;find_packages&lt;/span&gt;

&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;my_package&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0.0.1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;find_packages&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="c1"&gt;# more ...&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;生成.whl包&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python&lt;span class="w"&gt; &lt;/span&gt;setup.py&lt;span class="w"&gt; &lt;/span&gt;sdist&lt;span class="w"&gt; &lt;/span&gt;bdist_wheel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;尽管这个方式不被推荐，但并不是说 &lt;code&gt;setup.py&lt;/code&gt; 已经被取缔。只是建议不要这么直接调用它！！所以，下面的 build 继续在用它&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="build"&gt;使用 build 工具&lt;/h4&gt;
&lt;p&gt;首先安装依赖&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;生成 .whl 文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="flit"&gt;使用flit工具&lt;/h4&gt;
&lt;p&gt;安装依赖：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;filt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;生成&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;filt build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="pypi"&gt;发布到 pypi&lt;/h3&gt;
&lt;h4 id="_3"&gt;注册账户&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;正式：&lt;a href="https://pypi.org/account/register/"&gt;https://pypi.org/account/register/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;测试：&lt;a href="https://test.pypi.org/account/register/"&gt;https://test.pypi.org/account/register/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意，测试网站账户和正式的pypi账户不互通，需要分别注册。&lt;/p&gt;
&lt;h4 id="pypirc"&gt;配置 .pypirc&lt;/h4&gt;
&lt;p&gt;配置用户配置文件 &lt;code&gt;~/.pypirc&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[distutils]&lt;/span&gt;
&lt;span class="na"&gt;index-servers&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;pypi&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;testpypi&lt;/span&gt;

&lt;span class="k"&gt;[pypi]&lt;/span&gt;
&lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;__token__&lt;/span&gt;
&lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;lt;my-api-token-here&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;[testpypi]&lt;/span&gt;
&lt;span class="na"&gt;repository&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;https://test.pypi.org/legacy/&lt;/span&gt;
&lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;__token__&lt;/span&gt;
&lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;lt;my-api-token-here&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;其中，api koken在网站上生成。&lt;/p&gt;
&lt;h4 id="twine"&gt;twine 上传&lt;/h4&gt;
&lt;p&gt;安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;twine
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;上传 &lt;code&gt;dist/&lt;/code&gt; 下的所有文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;twine&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;如果要上传到test，需要使用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;twine&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;testpypi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_4"&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://peps.python.org/pep-0427/"&gt;PEP 427 – The Wheel Binary Package Format 1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://peps.python.org/pep-0517/"&gt;PEP 517 – A build-system independent format for source trees&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://peps.python.org/pep-0518/"&gt;PEP 518 – Specifying Minimum Build System Requirements for Python Projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pypa.io/en/latest/"&gt;Python Packaging Authority (PyPA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://setuptools.pypa.io/en/latest/"&gt;Python 官方文档 - setuptools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pip.pypa.io/en/stable/"&gt;Python 官方文档 - pip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carpentries-incubator.github.io/python_packaging/instructor/04-history-of-packaging.html"&gt;https://carpentries-incubator.github.io/python_packaging/instructor/04-history-of-packaging.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Python"></category></entry><entry><title>一些绘图相关的工具与网站链接</title><link href="https://blog.debao.me/2024/11/some-charts-related-tool-software-and-website-links/" rel="alternate"></link><published>2024-11-08T10:36:00+08:00</published><updated>2024-11-08T10:36:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-08:/2024/11/some-charts-related-tool-software-and-website-links/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;除了Python家族的各种东西，记录一些的开源/开放的绘图或可视化工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;在线工具&lt;/h2&gt;
&lt;h3 id="materials-project"&gt;Materials Project&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://next-gen.materialsproject.org&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在线数据库，提供了数十万种材料的晶体结构 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;除了Python家族的各种东西，记录一些的开源/开放的绘图或可视化工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;在线工具&lt;/h2&gt;
&lt;h3 id="materials-project"&gt;Materials Project&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://next-gen.materialsproject.org&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在线数据库，提供了数十万种材料的晶体结构数据和计算属性。&lt;/p&gt;
&lt;p&gt;&lt;img alt="materialsproject" src="https://blog.debao.me/images/science/materialsproject-sic.png"&gt;&lt;/p&gt;
&lt;h3 id="drawio"&gt;drawio&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://app.diagrams.net/"&gt;https://app.diagrams.net/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;https://github.com/jgraph/drawio&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;draw.io（diagrams.net）是一款免费且开源的在线图形绘制工具，
常用于创建各种图表和流程图。它适用于从简单的流程图到复杂的网络架构图等用途。&lt;/p&gt;
&lt;h3 id="geogebra"&gt;Geogebra&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.geogebra.org/calculator"&gt;https://www.geogebra.org/calculator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;https://github.com/geogebra/geogebra&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="geogebra" src="https://blog.debao.me/images/geogebra-example1.png"&gt;&lt;/p&gt;
&lt;p&gt;“GeoGebra” 的发音通常是 /ˌdʒiːoʊˈdʒɛbrə/，是几何（geometry）与代数（algebra)的结合。&lt;/p&gt;
&lt;p&gt;是一个交互式的几何、代数、统计、计算程序，适合做一些简单的2D或3D绘图或运算。&lt;/p&gt;
&lt;h2 id="_2"&gt;离线软件&lt;/h2&gt;
&lt;h3 id="_3"&gt;开源，免费&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Maxima：&lt;a href="https://maxima.sourceforge.io/"&gt;https://maxima.sourceforge.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GNU Octave ：&lt;a href="https://octave.org/"&gt;https://octave.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;gnuplot：&lt;a href="http://www.gnuplot.info/"&gt;http://www.gnuplot.info/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SciDAVis：&lt;a href="https://scidavis.sourceforge.net/"&gt;https://scidavis.sourceforge.net/&lt;/a&gt;，基于QtiPlot&lt;/li&gt;
&lt;li&gt;labplot：&lt;a href="https://labplot.kde.org/"&gt;https://labplot.kde.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;dia：&lt;a href="http://dia-installer.de/"&gt;http://dia-installer.de/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Veusz：&lt;a href="https://veusz.github.io/"&gt;https://veusz.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Avogadro：&lt;a href="https://avogadro.cc"&gt;https://avogadro.cc&lt;/a&gt; 分子结构编辑于可视化&lt;/li&gt;
&lt;li&gt;jmol：&lt;a href="https://jmol.sourceforge.net/"&gt;https://jmol.sourceforge.net/&lt;/a&gt; viewer for chemical structures in 3D&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;不开源，（非商业用途）免费&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;VESTA：&lt;a href="https://jp-minerals.org/vesta/en/"&gt;https://jp-minerals.org/vesta/en/&lt;/a&gt;，&lt;strong&gt;V&lt;/strong&gt;isualization for &lt;strong&gt;E&lt;/strong&gt;lectronic and &lt;strong&gt;ST&lt;/strong&gt;ructural &lt;strong&gt;A&lt;/strong&gt;nalysis&lt;/li&gt;
&lt;li&gt;vmd：&lt;a href="https://www.ks.uiuc.edu/Research/vmd/"&gt;https://www.ks.uiuc.edu/Research/vmd/&lt;/a&gt;，&lt;strong&gt;V&lt;/strong&gt;isual &lt;strong&gt;M&lt;/strong&gt;olecular &lt;strong&gt;D&lt;/strong&gt;ynamics&lt;/li&gt;
&lt;li&gt;Free Mercury：&lt;a href="https://www.ccdc.cam.ac.uk/solutions/software/free-mercury/"&gt;https://www.ccdc.cam.ac.uk/solutions/software/free-mercury/&lt;/a&gt;，Crystal Structure Visualization&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tools"></category></entry><entry><title>对Qt应用程序的一些胡乱记录</title><link href="https://blog.debao.me/2024/11/some-random-notes-on-qt-applications/" rel="alternate"></link><published>2024-11-04T00:23:00+08:00</published><updated>2024-11-04T00:23:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-04:/2024/11/some-random-notes-on-qt-applications/</id><summary type="html">&lt;p&gt;&lt;img alt="Wechat 4.0 written in Qt" src="https://blog.debao.me/images/qt/wechat_4_0_qt.png"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;记录一下，或许可作为后续GUI选型参考。反正Qt和其他跨平台方案相比，优势越来越不明显...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="40-qt"&gt;微信4.0 切换到 Qt&lt;/h2&gt;
&lt;p&gt;微信PC版 自4.0版本起【2024年10月】已经切换成 Qt 编写（11月6日微信Linux官网上线）。&lt;/p&gt;
&lt;p&gt;它使用 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Wechat 4.0 written in Qt" src="https://blog.debao.me/images/qt/wechat_4_0_qt.png"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;记录一下，或许可作为后续GUI选型参考。反正Qt和其他跨平台方案相比，优势越来越不明显...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="40-qt"&gt;微信4.0 切换到 Qt&lt;/h2&gt;
&lt;p&gt;微信PC版 自4.0版本起【2024年10月】已经切换成 Qt 编写（11月6日微信Linux官网上线）。&lt;/p&gt;
&lt;p&gt;它使用Qt静态构建，所以安装目录下没有常见的Qtxxxx.dll以及plugins等文件。不过&lt;/p&gt;
&lt;p&gt;安装后，只需要用vim或其他文本编辑器打开&lt;code&gt;Weixin.dll&lt;/code&gt;，即可看到大量Q字头的文本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QWidget&lt;/li&gt;
&lt;li&gt;QApplication&lt;/li&gt;
&lt;li&gt;QFrame&lt;/li&gt;
&lt;li&gt;QListView&lt;/li&gt;
&lt;li&gt;QtCore&lt;/li&gt;
&lt;li&gt;qml&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Wechat 4.0 written in Qt" src="https://blog.debao.me/images/qt/wechat_4_0_qt.png"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;网友发现：Linux 版微信虽然主界面采用了 Qt 编写，但 Web 渲染的部分没有用QtWebEngine等方案，而是用了一个基于GTK的完全独立的程序。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;微信（3.x）在Windows下使用的duilib。安装目录下有&lt;code&gt;duilib license.txt&lt;/code&gt;等文件，而且打开&lt;code&gt;WeChatWin.dll&lt;/code&gt;可以看到&lt;code&gt;duilib&lt;/code&gt;字样，比如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;D:\Tools\agent\workspace\MicroMsgWindowsV3912\WeUIEngine\DuiLib\Core\Render\D3DRenderInterface.cpp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;企业微信（4.x）使用的是也是duilib，目录下直接有duilib.dll动态库。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;另外，Web部分用了CEF（The Chromium Embedded Framework）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="qq"&gt;QQ&lt;/h3&gt;
&lt;p&gt;值得注意的是，QQ 2023年从个平台的原生方案转向跨平台的Electron方案时，知乎网友&lt;a href="https://www.zhihu.com/question/570447541/answer/2791939780"&gt;MagiLu&lt;/a&gt;曾透露：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Qt的确在性能上是一个很好的选择，但目前团队对Qt没有太多积累，基建基本没有，而且市场上相关人才其实比较匮乏，招聘就更难了，而当前QQ团队Web前端团队积累是比较充分的，可以比较好的权衡质量、性能和效率。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不过腾讯家的 腾讯会议、腾讯电脑管家 等软件都是Qt编写的。&lt;/p&gt;
&lt;h2 id="_1"&gt;其他&lt;/h2&gt;
&lt;p&gt;部分使用Qt的商业软件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Adobe Photoshop Elements&lt;/strong&gt;：Adobe推出的简化版Photoshop&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Autodesk 3ds Max&lt;/strong&gt;：用于3D建模、动画和渲染的专业软件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Autodesk Fusion 360&lt;/strong&gt;：集成CAD、CAM和CAE功能的3D建模软件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Autodesk Maya&lt;/strong&gt;：用于3D建模、动画和渲染的专业软件，广泛应用于电影和游戏行业。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Autodesk Revit&lt;/strong&gt;：建筑信息模型（BIM）软件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Google Earth&lt;/strong&gt;：著名的地理信息软件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mathematica&lt;/strong&gt;：Wolfram Research开发的数学计算软件，广泛用于科学、工程和数学计算。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TeamViewer&lt;/strong&gt;：流行的远程控制和桌面共享软件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Telegram Desktop&lt;/strong&gt;：流行的即时通讯应用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VirtualBox&lt;/strong&gt;：Oracle的虚拟化软件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WPS Office&lt;/strong&gt;：金山软件的办公套件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Foxit PDF&lt;/strong&gt;：福昕阅读器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zoom&lt;/strong&gt;：视频会议应用的桌面客户端&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在EDA和CAD领域，应用似乎更广。&lt;/p&gt;
&lt;h2 id="_2"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Qt_(software)&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Category:Proprietary_software_that_uses_Qt&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Category:Software_that_uses_Qt&lt;/li&gt;
&lt;li&gt;https://github.com/najepaliya/awesome_qt&lt;/li&gt;
&lt;li&gt;https://github.com/duilib/duilib&lt;/li&gt;
&lt;li&gt;https://github.com/chromiumembedded/cef&lt;/li&gt;
&lt;/ul&gt;</content><category term="Qt"></category></entry><entry><title>蒙特卡洛模拟小记</title><link href="https://blog.debao.me/2024/11/notes-on-monte-carlo-simulation/" rel="alternate"></link><published>2024-11-03T00:08:00+08:00</published><updated>2024-11-03T00:08:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-03:/2024/11/notes-on-monte-carlo-simulation/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;蒙特卡洛模拟(Monte  Carlo  simulation)的名称来自摩纳哥的蒙特卡洛赌场，因为模拟过程中使用了大量随机数，类似于赌博中的随机性。这 …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;蒙特卡洛模拟(Monte  Carlo  simulation)的名称来自摩纳哥的蒙特卡洛赌场，因为模拟过程中使用了大量随机数，类似于赌博中的随机性。这种命名由美国数学家斯坦尼斯拉夫·乌拉姆（Stanislaw Ulam）和约翰·冯·诺依曼（John von Neumann）【就是提出冯·诺依曼结构的那个现在计算机之父】等人提出。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;什么是蒙特卡洛模拟?&lt;/h2&gt;
&lt;p&gt;蒙特卡洛模拟是一种计算方法，通过大量的随机抽样和概率统计来解决复杂问题。我们可以把它想象成一个不断“投骰子”的过程。每次投掷都得到不同的结果，通过多次重复，可以得出系统行为的可能性分布。这个过程让我们能够对系统的不确定性进行更细致的分析，最终获得可能的结果范围。&lt;/p&gt;
&lt;p&gt;蒙特卡洛模拟在20世纪40年代的曼哈顿计划中得到系统发展，当时科学家们需要模拟原子粒子的运动，这种运动充满随机性。&lt;/p&gt;
&lt;h2 id="_2"&gt;基本步骤&lt;/h2&gt;
&lt;p&gt;尽管听起来很复杂,不过其过程相对直接。蒙特卡洛方法的主要步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义问题和模型&lt;/strong&gt;：明确问题，把它转化为数学模型，包含随机变量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;确定输入的概率分布&lt;/strong&gt;：定义模型中的不确定变量并给出其概率分布（如正态分布、三角形分布等）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;生成随机样本&lt;/strong&gt;：利用计算机生成大量随机数，为每个随机变量创建大量可能的输入组合。&lt;/li&gt;
&lt;li&gt;运行模拟：将每一组随机样本代入模型进行计算，重复该过程数百甚至数千次。&lt;/li&gt;
&lt;li&gt;分析结果：收集所有模拟结果，计算出变量的分布情况、期望值、方差等统计数据，从而推测出不同结果的概率。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用两个小例子看下步骤&lt;/p&gt;
&lt;h3 id="_3"&gt;计算圆周率&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;似乎大家都喜欢用蒙特卡洛方法计算圆周率。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="monte carlo method pi" src="https://blog.debao.me/images/science/monte_carlo_method_pi.png"&gt;&lt;/p&gt;
&lt;p&gt;想象一个正方形中，内嵌一个与其边长相同的四分之一圆弧。假设该正方形的边长为 1，那么：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;四分之一圆的面积为 π/4​&lt;/li&gt;
&lt;li&gt;正方形的面积为 1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此，四分之一圆面积占正方形面积的比例为 π/4​。具体步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;生成随机点&lt;/strong&gt;：在正方形中随机生成大量的点，每个点的 x 和 y 坐标在 0 到 1 之间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;判断是否在圆内&lt;/strong&gt;：对于每个点，计算其到圆心 (0,0)的距离。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;计算比例&lt;/strong&gt;：统计所有点中落在圆内的比例。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;估算 π&lt;/strong&gt;：通过该比例乘以 4 来得到 π 的近似值。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;简单的python代码如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;estimate_pi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;inside_circle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;points_inside_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;points_inside_y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;points_outside_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;points_outside_y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# Generate a random point&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="c1"&gt;# Check if point is inside the circle&lt;/span&gt;
            &lt;span class="n"&gt;inside_circle&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="n"&gt;points_inside_x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;points_inside_y&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;points_outside_x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;points_outside_y&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;pi_estimate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inside_circle&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pi_estimate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;points_inside_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;points_inside_y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;points_outside_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;points_outside_y&lt;/span&gt;

&lt;span class="c1"&gt;#-----------------&lt;/span&gt;

&lt;span class="c1"&gt;# Set the number of points&lt;/span&gt;
&lt;span class="n"&gt;num_points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;pi_estimate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;points_inside_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;points_inside_y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;points_outside_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;points_outside_y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;estimate_pi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Plot the results&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;points_inside_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;points_inside_y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Inside&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;points_outside_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;points_outside_y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Outside&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;π = &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;pi_estimate&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;.4f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; (Points: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;equal&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_4"&gt;计算多重积分&lt;/h3&gt;
&lt;div class="math display"&gt;
I = \int_0^1\int_0^1\int_0^1 (x + y^2 + z^3) dxdydz
&lt;/div&gt;

&lt;p&gt;使用蒙特卡罗方法来估算这个积分，遵循以下步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在立方体内随机生成 N 个点。&lt;/li&gt;
&lt;li&gt;计算每个点的函数值 f(x,y,z)。&lt;/li&gt;
&lt;li&gt;取这些函数值的平均值，并乘以立方体的体积（此处为1），得到积分的近似值。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;monte_carlo_integration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_samples&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# 随机生成 num_samples 个点&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uniform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_samples&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uniform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_samples&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uniform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_samples&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 计算每个点的函数值&lt;/span&gt;
    &lt;span class="n"&gt;function_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 计算积分的近似值&lt;/span&gt;
    &lt;span class="n"&gt;integral_estimate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;function_values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;integral_estimate&lt;/span&gt;

&lt;span class="c1"&gt;# 设置样本数量&lt;/span&gt;
&lt;span class="n"&gt;num_samples&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt;
&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;monte_carlo_integration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_samples&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;某次结果如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;1.0834714194252095&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;可以和解析值（1+1/2+1/3 = 1.08333...）比较。&lt;/p&gt;
&lt;h2 id="_5"&gt;应用&lt;/h2&gt;
&lt;p&gt;蒙特卡洛模拟应用广泛，几乎可以应用于任何含有不确定性的问题，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;物理学和工程：用于核物理、材料科学、粒子物理的模拟。&lt;/li&gt;
&lt;li&gt;金融：应用于股票价格预测、期权定价等。&lt;/li&gt;
&lt;li&gt;项目管理：用于风险分析，进度预测等&lt;/li&gt;
&lt;li&gt;计算生物学：用于分子模拟和基因表达研究。&lt;/li&gt;
&lt;li&gt;医学物理：用于辐射治疗剂量计算和医疗影像分析。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在电子显微镜和X射线分析中，通过蒙特卡洛模拟来研究电子束与样品之间的相互作用。在电子显微镜中,空间电荷效应(Boersch效应)一般也通过蒙特卡洛方法进行数值模拟.&lt;/p&gt;
&lt;h2 id="_6"&gt;软件&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;先简单罗列&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Github也能搜到不少,但都挺小众...&lt;/p&gt;
&lt;h3 id="geant4"&gt;Geant4&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://geant4.org/&lt;/li&gt;
&lt;li&gt;https://gitlab.cern.ch/geant4/geant4&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Geant4（GEometry ANd Tracking）是一个使用蒙特卡洛方法模拟“粒子穿过物质的过程”的平台。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;功能&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Geometry 是对实验物理布局的分析，包括探测器、吸收体等，考虑这些布局如何影响粒子在实验中的路径。&lt;/li&gt;
&lt;li&gt;Tracking 是模拟粒子穿过物质的过程，涉及可能的相互作用和衰变过程。&lt;/li&gt;
&lt;li&gt;Detector response 记录粒子通过探测器体积时的反应，并近似真实探测器的响应。&lt;/li&gt;
&lt;li&gt;Run management 记录每次运行（即一组事件）的详细信息，并在不同运行之间设置实验的不同配置。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="penelope"&gt;PENELOPE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;http://www.oecd-nea.org/tools/abstract/detail/nea-1525&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PENELOPE（PENetration and Energy LOss of Positrons and Electrons …and photons）是一款通用蒙特卡洛子程序包，用于模拟任意几何结构中的电子-光子耦合传输。该软件通过蒙特卡洛方法对正电子、电子和光子的穿透和能量损失进行精确建模，适用于多种科学和工程应用场景。&lt;/p&gt;
&lt;h3 id="egsnrc"&gt;EGSnrc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/nrc-cnrc/EGSnrc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;EGSnrc（Electron Gamma Shower, National Research Council），发音 "eggs-N-R-C"。&lt;/p&gt;
&lt;p&gt;EGSnrc 是一个软件工具包，用于进行电离辐射通过物质的蒙特卡罗模拟。它模拟光子、电子和正电子在 1 keV 到 10 GeV 动能范围内在均匀材料中的传播。&lt;/p&gt;
&lt;p&gt;EGSnrc 于 2000 年首次发布，是对原先在 1970 年代斯坦福线性加速器中心（SLAC）开发的Electron Gamma Shower（EGS）软件包的全面改进。&lt;/p&gt;
&lt;p&gt;EGSnrc 的一个显著特点是，它在带电粒子运输方面进行了重要的改进，提供了更好的低能截面，并包含 egs++ 类库以建模复杂的几何形状和粒子源。&lt;/p&gt;
&lt;h3 id="mc-x-ray"&gt;MC X-Ray&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://montecarlomodeling.mcgill.ca/software/mcxray/mcxray.html&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MC X-Ray 是一款新的蒙特卡洛模拟软件，是 Casino 和 Win X-Ray 程序的扩展版。它通过模拟不同几何结构的固体中的电子散射，计算完整的 X 射线光谱。&lt;/p&gt;
&lt;p&gt;MC X-Ray 允许用户定义多达 256 个区域，这些区域可以是球体、圆柱体或水平与垂直平面的组合，每个区域都可以具有不同的成分。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MCXRay 被集成到 3D 处理平台 Dragonfly（加拿大蒙特利尔 ORS），其运行速度比原始程序快 100 到 1000 倍！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;功能&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持 3D 样品和复杂几何结构&lt;/li&gt;
&lt;li&gt;明场、暗场、高角环形暗场检测器&lt;/li&gt;
&lt;li&gt;3D 结果计算&lt;/li&gt;
&lt;li&gt;显示电子轨迹&lt;/li&gt;
&lt;li&gt;样品表面的电子与能量分布&lt;/li&gt;
&lt;li&gt;透射电子分布&lt;/li&gt;
&lt;li&gt;能量损失分布&lt;/li&gt;
&lt;li&gt;X 射线光谱&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="win-x-ray"&gt;Win X-Ray&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://montecarlomodeling.mcgill.ca/software/winxray/winxray.html&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Win X-Ray 是一款蒙特卡洛模拟程序，用于模拟固体中的电子轨迹。Ray 是一款新的蒙特卡洛模拟扩展程序，基于知名的 CASINO 程序，它增加了回散电子、吸收电子、能量损失和 X 射线 φρz 曲线的统计分布。Ray 的新增功能包括完整的 X 射线光谱模拟和绝缘样品的电荷效应。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;功能&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;显示电子轨迹&lt;/li&gt;
&lt;li&gt;回散电子分布&lt;/li&gt;
&lt;li&gt;吸收电子分布&lt;/li&gt;
&lt;li&gt;能量损失分布&lt;/li&gt;
&lt;li&gt;特征 X 射线&lt;/li&gt;
&lt;li&gt;制动辐射 X 射线&lt;/li&gt;
&lt;li&gt;X 射线光谱&lt;/li&gt;
&lt;li&gt;可模拟非导电样品&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="casino"&gt;CASINO&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Casino，发音 /kəˈsiːnəʊ/，原意是赌场的意思。这儿是刻意缩写。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;CASINO（"monte CArlo SImulation of electroN trajectory in sOlids"）是全球知名的电子轨迹蒙特卡洛模拟程序。由 Prof. Gauvin 和他的研究生（Pierre Hovington 和 Dominique Drouin）在 Sherbrooke 大学最初开发。此后，该程序一直由 Sherbrooke 大学的 Dominique Drouin 和来自 Hydro-Québec 研究所（IREQ）的 Hendrix Demers 维护并改进。&lt;/p&gt;
&lt;p&gt;不过软件似乎太老了，开发也不活跃，官网都已经无法访问。&lt;/p&gt;
&lt;p&gt;它的2.4和3.3 两个版本差异很大。后者支持3D功能，但有人只使用它的2系列。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;功能&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;显示电子轨迹&lt;/li&gt;
&lt;li&gt;回散电子分布&lt;/li&gt;
&lt;li&gt;吸收电子分布&lt;/li&gt;
&lt;li&gt;能量分布&lt;/li&gt;
&lt;li&gt;φρz 曲线&lt;/li&gt;
&lt;li&gt;快速模拟&lt;/li&gt;
&lt;li&gt;回散和透射电子的角度检测器&lt;/li&gt;
&lt;li&gt;复杂的光束参数&lt;/li&gt;
&lt;li&gt;复杂几何结构&lt;/li&gt;
&lt;li&gt;二次电子生成&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="srimtrim"&gt;SRIM/TRIM&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;http://www.srim.org/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SRIM（Stopping and Range of Ions in Matter）/ TRIM 是一款免费的蒙特卡洛模拟软件包，用于模拟固体中离子的轨迹。该程序能够计算离子的阻止本领和范围，被广泛应用于材料科学和辐照研究等领域。&lt;/p&gt;
&lt;h3 id="hurricane"&gt;Hurricane&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;http://www.samx.com/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SAMx 免费向社区提供蒙特卡洛程序 Hurricane。该软件包旨在基于蒙特卡洛方法模拟材料中的电子轨迹。Hurricane 拥有多种功能，特别的特点包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对弹性和非弹性相互作用的个别处理，无任何近似&lt;/li&gt;
&lt;li&gt;支持矩阵中的多个成分&lt;/li&gt;
&lt;li&gt;支持所有几何形状的模拟样品：&lt;ul&gt;
&lt;li&gt;大块样品&lt;/li&gt;
&lt;li&gt;基底上的薄膜&lt;/li&gt;
&lt;li&gt;垂直界面的多个成分&lt;/li&gt;
&lt;li&gt;由颗粒组成的矩阵样品&lt;/li&gt;
&lt;li&gt;粗糙样品&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;存储所有计算参数，包括发射强度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_7"&gt;商业软件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.3ds.com/products/biovia/materials-studio"&gt;BIOVIA Materials Studio&lt;/a&gt;：达索公司（Dassault Systèmes）&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.comsol.com/model/using-the-monte-carlo-method-to-estimate-the-value-of-pi-127901"&gt;COMSOL Multiphysics&lt;/a&gt;：COMSOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://optics.ansys.com/hc/en-us/articles/360034403194-Monte-Carlo-analysis-utility"&gt;ANSYS&lt;/a&gt;：ANSYS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://silvaco.com/simulation-standard/mocasim-a-versatile-monte-carlo-simulator-for-iii-nitride-transport-properties/"&gt;Mocasim&lt;/a&gt;：Silvaco&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_8"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Monte_Carlo_method&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Geant4&lt;/li&gt;
&lt;li&gt;https://www.memrg.com/programs-download&lt;/li&gt;
&lt;li&gt;https://montecarlomodeling.mcgill.ca/links/Links_mcprgs.html&lt;/li&gt;
&lt;li&gt;https://www.lehigh.edu/~maw3/link/mssoft/mcsim.html&lt;/li&gt;
&lt;li&gt;https://www.microbeamanalysis.eu/links-resources&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="CAx"></category></entry><entry><title>财务报表知识小记</title><link href="https://blog.debao.me/2024/11/notes-on-financial-statements-knowledge/" rel="alternate"></link><published>2024-11-02T10:38:00+08:00</published><updated>2024-11-02T10:38:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-02:/2024/11/notes-on-financial-statements-knowledge/</id><summary type="html">&lt;p&gt;财务报表通常包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资产负债表（Statement of Financial Position，或 Balance Sheet）&lt;/li&gt;
&lt;li&gt;利润表（Income Statement）&lt;/li&gt;
&lt;li&gt;现金流量表（Cash Flow Statement）&lt;/li&gt;
&lt;li&gt;所有者权益变动表（Statement of Changes in Equity），以及相关 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;财务报表通常包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资产负债表（Statement of Financial Position，或 Balance Sheet）&lt;/li&gt;
&lt;li&gt;利润表（Income Statement）&lt;/li&gt;
&lt;li&gt;现金流量表（Cash Flow Statement）&lt;/li&gt;
&lt;li&gt;所有者权益变动表（Statement of Changes in Equity），以及相关的&lt;/li&gt;
&lt;li&gt;财务报表附注（Notes to Financial Statements）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="balance-sheet"&gt;资产负债表（Balance Sheet）&lt;/h2&gt;
&lt;p&gt;资产负债表反映企业在某一特定时点的财务状况，主要展示企业的资产、负债和所有者权益，它遵循一个基本的会计等式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;资产 = 负债 + 所有者权益。

Total Assets = Total Liabilities + Owners’ Equity
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;按照这一等式，任何一项经济业务都会引起资产与权益之间至少两个项目发生增减变动，且增减变动的金额相等。这引入复式记账法（double-entry accounting）——对每一项经济业务，都要以相等的金额，同时在两个或两个以上相互联系的账户中进行登记的记账方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_1"&gt;资产负债表的结构&lt;/h3&gt;
&lt;p&gt;一般分成左右两列（中国和美国格式基本一致，英联邦一些国家左右列与中国相反，欧洲国家一般不分列），&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;左侧——企业资产：&lt;strong&gt;钱用在哪里&lt;/strong&gt;（购买的各类资产）&lt;/li&gt;
&lt;li&gt;右侧——企业负债+所有者权益：&lt;strong&gt;钱来自哪里&lt;/strong&gt;（债权人，股东）&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;资产&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;金额&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;负债和所有者权益&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;金额&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;流动资产&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;流动负债&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;- 现金&lt;/td&gt;
&lt;td&gt;￥XX&lt;/td&gt;
&lt;td&gt;- 短期借款&lt;/td&gt;
&lt;td&gt;￥XX&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;- 应收账款&lt;/td&gt;
&lt;td&gt;￥XX&lt;/td&gt;
&lt;td&gt;- 应付账款&lt;/td&gt;
&lt;td&gt;￥XX&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;- 存货&lt;/td&gt;
&lt;td&gt;￥XX&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;非流动负债&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;非流动资产&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;- 长期借款&lt;/td&gt;
&lt;td&gt;￥XX&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;- 固定资产&lt;/td&gt;
&lt;td&gt;￥XX&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;所有者权益&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;- 无形资产&lt;/td&gt;
&lt;td&gt;￥XX&lt;/td&gt;
&lt;td&gt;- 股本&lt;/td&gt;
&lt;td&gt;￥XX&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;- 留存收益&lt;/td&gt;
&lt;td&gt;￥XX&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;资产总计&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;￥XXX&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;负债和所有者权益总计&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;￥XXX&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;按会计恒等式，两侧金额总是相等的。&lt;/p&gt;
&lt;h3 id="_2"&gt;有借必有贷，借贷必相等&lt;/h3&gt;
&lt;p&gt;“有借必有贷，借贷必相等” 是会计中的基本原则，表达的是“复式记账法（double-entry accounting）”的核心理念。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“借” 对应 “debit”&lt;/li&gt;
&lt;li&gt;“贷” 对应 “credit”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;贷（credit）和借（debit）是记录公司支出和余额的两种账户类型。简而言之，贷记表示“应付（owed）”的金额，而借记表示“应收（due）”的金额。&lt;/p&gt;
&lt;p&gt;注意：借（Debit） 和 贷（Credit） 不代表“增加”或“减少”的绝对含义，而是根据账户类型不同，表现出不同的变化：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资产账户：借表示增加，贷表示减少。&lt;/li&gt;
&lt;li&gt;负债账户：借表示减少，贷表示增加。&lt;/li&gt;
&lt;li&gt;所有者权益账户：借表示减少，贷表示增加。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这句话在英文中表述：&lt;/p&gt;
&lt;p&gt;“For every debit, there must be a credit, and the total debits must equal the total credits.”&lt;/p&gt;
&lt;p&gt;另外，借贷概念也对应日常使用的两种银行卡：Credit(信用卡)和Debit(借记卡)。它们之间的主要区别在于资金来源。&lt;/p&gt;
&lt;h3 id="_3"&gt;术语&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;在财务和会计领域的，&lt;code&gt;Current&lt;/code&gt; 与日常语境中的“&lt;strong&gt;当前的&lt;/strong&gt;”或“现在的”有所不同，它指的是资产在短期（一年或一个营业周期内）可以变现或运用的特性。翻译成 “&lt;strong&gt;流动的&lt;/strong&gt;”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;资产（Assets）&lt;ul&gt;
&lt;li&gt;流动资产（Current Assets）&lt;ul&gt;
&lt;li&gt;货币资金（Cash and Cash Equivalents）&lt;/li&gt;
&lt;li&gt;短期投资（Short-term Investments）&lt;/li&gt;
&lt;li&gt;应收票据（Notes Receivable）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应收账款（Accounts Receivable）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;存货（Inventory）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;其他流动资产（Other Current Assets）...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;非流动资产（Non-current Assets）&lt;ul&gt;
&lt;li&gt;长期股权投资（Long-term Equity Investments）&lt;/li&gt;
&lt;li&gt;投资性房地产（Investment Properties）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;固定资产（Fixed Assets）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;在建工程（Construction in Progress）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无形资产（Intangible Assets）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;其他非流动资产（Other Non-current Assets）...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;负债（Liabilities）&lt;ul&gt;
&lt;li&gt;流动负债（Current Liabilities）&lt;ul&gt;
&lt;li&gt;短期借款（Short-term Borrowings）&lt;/li&gt;
&lt;li&gt;应付票据（Notes Payable）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应付账款（Accounts Payable）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;预收账款（Advance Receipts）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;应付职工薪酬（Payroll Payable）&lt;/li&gt;
&lt;li&gt;应交税费（Taxes Payable）&lt;/li&gt;
&lt;li&gt;其他应付款（Other Current Liabilities）...  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;非流动负债（Non-current Liabilities）&lt;ul&gt;
&lt;li&gt;长期借款（Long-term Borrowings）&lt;/li&gt;
&lt;li&gt;长期应付款（Long-term Payables）&lt;/li&gt;
&lt;li&gt;递延所得税负债（Deferred Tax Liabilities）&lt;/li&gt;
&lt;li&gt;其他非流动负债（Other Non-current Liabilities）...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;所有者权益（Equity）&lt;ul&gt;
&lt;li&gt;股本（Share Capital）&lt;/li&gt;
&lt;li&gt;资本公积（Capital Reserve）&lt;/li&gt;
&lt;li&gt;盈余公积（Surplus Reserve）&lt;/li&gt;
&lt;li&gt;未分配利润（Undistributed Profits）&lt;/li&gt;
&lt;li&gt;其他权益工具（Other Equity Instruments）...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="income-statement"&gt;利润表（Income Statement）&lt;/h2&gt;
&lt;p&gt;利润表也称为&lt;strong&gt;损益表&lt;/strong&gt;，是企业财务报表中的一部分，用于展示企业在一段时间内的经营成果，即收入、费用和利润情况。利润表的核心是通过计算收入和费用的差额，得出企业的净利润或净亏损。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;营业收入（Revenue/Operating Income）：企业的主营业务收益。&lt;/li&gt;
&lt;li&gt;营业成本（Cost of Goods Sold, COGS）：生产或获取商品和服务所直接发生的成本。&lt;/li&gt;
&lt;li&gt;毛利润（Gross Profit）：营业收入 减去 营业成本&lt;/li&gt;
&lt;li&gt;营业费用（Operating Expenses）：企业在经营过程中发生的费用，主要包括：&lt;ul&gt;
&lt;li&gt;销售费用（Selling Expenses）：与销售相关的费用，如广告、市场推广等。&lt;/li&gt;
&lt;li&gt;管理费用（General and Administrative Expenses, G&amp;amp;A）：企业管理运营所需的费用，如办公费用、管理人员工资等。&lt;/li&gt;
&lt;li&gt;财务费用（Financial Expenses）：与企业融资相关的费用，如利息支出。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;营业利润（Operating Profit）：毛利润减去营业费用&lt;/li&gt;
&lt;li&gt;营业外收入和支出（Non-operating Income and Expenses）：与企业主营业务无关的收入和支出，如投资收益（Investment Income）、罚款支出等。&lt;/li&gt;
&lt;li&gt;利润总额（Total Profit）：营业利润加上营业外收入，减去营业外支出&lt;/li&gt;
&lt;li&gt;所得税（Income Tax）：企业根据税法规定需缴纳的所得税。&lt;/li&gt;
&lt;li&gt;净利润（Net Profit）：利润总额减去所得税后的余额&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="cash-flow-statement"&gt;现金流量表（Cash Flow Statement）&lt;/h2&gt;
&lt;p&gt;现金流量表展示企业在一定期间内的现金流入和现金流出，分为三大活动类别：&lt;strong&gt;经营活动&lt;/strong&gt;、&lt;strong&gt;投资活动&lt;/strong&gt;和&lt;strong&gt;筹资活动&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;经营活动产生的现金流量（Cash Flows from Operating Activities）：日常经营活动的现金流，包括：&lt;ul&gt;
&lt;li&gt;销售商品或服务收到的现金（Cash received from customers）&lt;/li&gt;
&lt;li&gt;支付给供应商和员工的现金（Cash paid to suppliers and employees）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;投资活动产生的现金流量（Cash Flows from Investing Activities）：购置或处置长期资产的现金流，包括：&lt;ul&gt;
&lt;li&gt;购置固定资产支付的现金（Cash paid for purchasing fixed assets）&lt;/li&gt;
&lt;li&gt;处置固定资产收到的现金（Cash received from disposing of fixed assets）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;筹资活动产生的现金流量（Cash Flows from Financing Activities）：融资和偿还债务的现金流，包括：&lt;ul&gt;
&lt;li&gt;借款收到的现金（Cash received from borrowings）&lt;/li&gt;
&lt;li&gt;偿还借款支付的现金（Cash paid for debt repayment）&lt;/li&gt;
&lt;li&gt;分配股利支付的现金（Cash paid for dividends）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;现金及现金等价物净增加额（Net Increase in Cash and Cash Equivalents）：三类活动整体现金状况&lt;/li&gt;
&lt;/ul&gt;</content><category term="Legal"></category></entry><entry><title>《Charged Particle Optics Theory》读书笔记</title><link href="https://blog.debao.me/2024/11/reading-notes-on-charged-particle-optics-theory/" rel="alternate"></link><published>2024-11-01T20:12:00+08:00</published><updated>2024-11-01T20:12:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-11-01:/2024/11/reading-notes-on-charged-particle-optics-theory/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;先简单记记，作为后续的基础&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;《Charged Particle Optics Theory: An Introduction》是由Timothy R. Groves 2015年撰写的一本理论著作，系统介绍了带电粒子光学的基本原理。书中从经典力学、相对论 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;先简单记记，作为后续的基础&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;《Charged Particle Optics Theory: An Introduction》是由Timothy R. Groves 2015年撰写的一本理论著作，系统介绍了带电粒子光学的基本原理。书中从经典力学、相对论力学和量子力学的角度出发，详细探讨了带电粒子束的几何光学、波动光学及其在电磁场中的行为。作者基于物理学的基本原理，通过数学方法推导了一些重要的理念。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;蒂莫西·格罗夫斯（Timothy Groves）是纽约州立大学奥尔巴尼分校（University at Albany, State University of New York）纳米科学领域帝国创新荣誉教授。他拥有斯坦福大学的物理学学士学位和芝加哥大学的物理学博士学位。在2007年加入纽约州立大学（SUNY）教职之前，他曾在惠普（HP）、国际商用机器公司（IBM）和徕卡（Leica）从事工业半导体研发工作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;章节内容&lt;/h2&gt;
&lt;h3 id="1-introduction-the-optical-nature-of-a-charged-particle-beam"&gt;1. 带电粒子束的光学性质（Introduction: The Optical Nature of a Charged Particle Beam）&lt;/h3&gt;
&lt;p&gt;介绍了带电粒子束的行为与光学系统的相似性。电场和磁场对带电粒子的聚焦和偏转与光学系统中的透镜和反射镜的相似性。&lt;/p&gt;
&lt;p&gt;展示了带电粒子束在扫描电子显微镜（SEM）、透射电子显微镜（TEM）、扫描透射电子显微镜（STEM）以及聚焦离子束（FIB）中的实际应用。&lt;/p&gt;
&lt;h3 id="2-geometrical-optics"&gt;2. 几何光学（Geometrical Optics）&lt;/h3&gt;
&lt;p&gt;基于带电粒子在电磁场中的相对论经典力学，讨论了带电粒子的运动轨迹。通过拉格朗日方程和哈密顿方程，作者推导了粒子运动的轨迹方程，解释了粒子如何在透镜和磁场中聚焦和偏转。还讨论了保守力场中的能量守恒、拉格朗日不变量、刘维尔定理（Liouville's Theorem）、亮度守恒等内容。&lt;/p&gt;
&lt;p&gt;2.4节 广义曲线轴（General Curvilinear Axis）&lt;/p&gt;
&lt;p&gt;2.5节 轴对称（Axial sysmmetry）大致对应一般电子光学书中的主要内容。轨迹方程、旁轴近似、空间电荷效应、像差、色差等。&lt;/p&gt;
&lt;p&gt;2.6节 随机库仑散射（Stochastic Coulomb Scattering）讨论了当粒子束密度较高时，粒子间的相互作用导致粒子束的发散和能量展宽（随机库仑散射）现象。重点介绍蒙特卡罗模拟（Monte Carlo Simulation），以及马尔可夫方法（Markov’s method）。。&lt;/p&gt;
&lt;h3 id="3-wave-optics"&gt;3. 波动光学（Wave Optics）&lt;/h3&gt;
&lt;p&gt;从量子力学中对单个带电粒子有影响的部分的回顾开始，通过薛定谔方程描述了单个粒子在电磁场中的运动，并讨论了波包传播、电子衍射和干涉现象。还探讨了与几何光学的对应关系。&lt;/p&gt;
&lt;h3 id="4-particle-scattering"&gt;4. 粒子散射（Particle Scattering）&lt;/h3&gt;
&lt;p&gt;详细讨论了带电粒子与原子和核的弹性（elastic）和非弹性散射（inelastic scattering）。分别在经典近似和量子力学框架下对散射截面（Scattering cross section）进行推导。&lt;/p&gt;
&lt;h3 id="5-electron-emission-from-solids"&gt;5. 固体中的电子发射（Electron Emission from Solids）&lt;/h3&gt;
&lt;p&gt;固体中的电子发射是量子力学的应用。探讨了电子从固体表面发射的几种机制，包括热电子发射、场发射和空间电荷限制发射。&lt;/p&gt;</content><category term="Science"></category></entry><entry><title>Pandoc与LaTeX小记</title><link href="https://blog.debao.me/2024/10/notes-on-pandoc-and-latex/" rel="alternate"></link><published>2024-10-29T22:25:00+08:00</published><updated>2024-10-29T22:25:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-10-29:/2024/10/notes-on-pandoc-and-latex/</id><summary type="html">&lt;p&gt;Markdown和LaTeX都是老朋友了。本文试图通过简单例子，将markdown文件通过latex输出一本书，以此来熟悉一下pandoc&lt;/p&gt;
&lt;p&gt;&lt;img alt="pandoc book" src="https://blog.debao.me/images/pandoc-examples-book.png"&gt;&lt;/p&gt;
&lt;h2 id="pandoc"&gt;关于Pandoc&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;功能太多，本文只关心其从 Markdown 到 LaTeX 的转换功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Pandoc 是一个广泛使 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Markdown和LaTeX都是老朋友了。本文试图通过简单例子，将markdown文件通过latex输出一本书，以此来熟悉一下pandoc&lt;/p&gt;
&lt;p&gt;&lt;img alt="pandoc book" src="https://blog.debao.me/images/pandoc-examples-book.png"&gt;&lt;/p&gt;
&lt;h2 id="pandoc"&gt;关于Pandoc&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;功能太多，本文只关心其从 Markdown 到 LaTeX 的转换功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Pandoc 是一个广泛使用的&lt;strong&gt;文档转换工具&lt;/strong&gt;，它可以在不同的标记语言和文档格式之间进行转换。Pandoc 由加州大学伯克利分校的哲学教授 John MacFarlane 开发。&lt;/li&gt;
&lt;li&gt;Pandoc 的第一个版本发布于 2006 年，最初的重点是从 Markdown 转换为 LaTeX、HTML 和 DocBook。&lt;/li&gt;
&lt;li&gt;Pandoc 的设计理念是为每种输入格式解析器构建一个抽象语法树（AST），然后通过这个 AST 生成目标格式。通过这种方式，Pandoc 可以支持任意多的输入和输出格式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;命令行&lt;/h2&gt;
&lt;p&gt;通过例子来走马观花看一看，如何从一个包含中文的markdown文件，转换成latex，进而到pdf。&lt;/p&gt;
&lt;h3 id="1"&gt;例子1&lt;/h3&gt;
&lt;p&gt;将 hello.md 转换成 hello.tex，可执行如下命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;markdown&lt;span class="w"&gt; &lt;/span&gt;-t&lt;span class="w"&gt; &lt;/span&gt;latex&lt;span class="w"&gt; &lt;/span&gt;hello.md&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;hello.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;，&lt;code&gt;--from&lt;/code&gt;：输入文件格式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;，&lt;code&gt;--to&lt;/code&gt;：输出文件格式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt;，&lt;code&gt;--output&lt;/code&gt;：输出文件名&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实pandoc可以根据后缀直接猜测格式，所以，上面命令可以写作：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;hello.md&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;hello.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;注意：pandoc支持令人头大的 &lt;strong&gt;各种风格&lt;/strong&gt; 的 markdown 格式！！！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;markdown&lt;/strong&gt;：Pandoc风格的Markdown&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;markdown_mmd&lt;/strong&gt;：MultiMarkdown&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;markdown_phpextra&lt;/strong&gt;：PHP Markdown Extra&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;markdown_strict&lt;/strong&gt;：原始的Markdown&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gfm&lt;/strong&gt;：Github风格的Markdown&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入文件hello.md内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gh"&gt;# Hello 1+1=2&lt;/span&gt;

我是测试文本。

我是公式：

$$
E=mc^2
$$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;输出文件hello.tex内容如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;\section{Hello 1+1=2}\label{hello-112}

我是测试文本。

我是公式：

\[
E=mc^2
\]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;操作成功了，尽管输出只是tex片段。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="2"&gt;例子2&lt;/h3&gt;
&lt;p&gt;如果要生成完整的tex文件，我们需要命令行参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;，&lt;code&gt;--standalone&lt;/code&gt;：生成文件头和尾（完整的tex或html等文件）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样一来，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;hello.md&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;hello.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;此时 tex文件就完整了。可以调用latex来生成pdf文件了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;xelatex&lt;span class="w"&gt; &lt;/span&gt;hello.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;尽管可以生成pdf，但是因为中文的问题，如上命令生成的pdf和我们期望的并不一样，丢失了中文字体。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;编译之前，我们需要手动将.tex的文档类从&lt;code&gt;article&lt;/code&gt;改为&lt;code&gt;ctexart&lt;/code&gt;才行。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;%\documentclass[]{article}&lt;/span&gt;
&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="na"&gt;[]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;ctexart&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="3"&gt;例子3&lt;/h3&gt;
&lt;p&gt;前面我们启用&lt;code&gt;-s&lt;/code&gt;选项，它就添加了tex文件的头和尾。很神奇，它怎么做的？？&lt;/p&gt;
&lt;p&gt;实际上，它有一个模板，对于latex，它的默认模板长下面这样：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;passoptions.latex&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;
&lt;span class="k"&gt;\documentclass&lt;/span&gt;[
&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;fontsize&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;
  &lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;fontsize&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;,
&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;endif&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;
&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;papersize&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;
  &lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;papersize&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;paper,
&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;endif&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;
&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;classoption&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;
  &lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;classoption&lt;/span&gt;&lt;span class="s"&gt;$$&lt;/span&gt;&lt;span class="nb"&gt;sep&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;,
&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;endfor&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;
]&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;documentclass&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;beamerarticle&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;
&lt;span class="k"&gt;\usepackage&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;beamerarticle&lt;span class="nb"&gt;}&lt;/span&gt; &lt;span class="c"&gt;% needs to be loaded first&lt;/span&gt;
&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;endif&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;
&lt;span class="k"&gt;\usepackage&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;xcolor&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;.......&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;通过如下命令，我们可以输出这个模板：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;-D&lt;span class="w"&gt; &lt;/span&gt;latex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;其中命令行参数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-D&lt;/code&gt;，&lt;code&gt;----print-default-template&lt;/code&gt; 用于输出指定格式的 默认模板。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意看上面的模板，明显有一个我们感兴趣的变量&lt;code&gt;$documentclass$&lt;/code&gt;。上面例子中，我们已经发现它不符合我们胃口。但，如何修改它？！！&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;hello.md&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;-V&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;documentclass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ctexart&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;hello.tex
xelatex&lt;span class="w"&gt; &lt;/span&gt;hello.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;这样就可以，直接生成我们可用的latex文件。&lt;/p&gt;
&lt;p&gt;通过命令行选项（大写）&lt;code&gt;V&lt;/code&gt;可以定义模板变量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-V&lt;/code&gt;，&lt;code&gt;--variable&lt;/code&gt;：用于定义模板变量&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="4"&gt;例子4&lt;/h3&gt;
&lt;p&gt;文档类是文档的一部分啊，除了命令行之外，有没有其他写法？？&lt;/p&gt;
&lt;p&gt;好在
Pandoc的Markdown支持yaml格式的front matter（一种元数据）。
通过它，我们可以将前面的markdown文件，写为&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;---
&lt;span class="gu"&gt;documentclass: ctexart&lt;/span&gt;
&lt;span class="gu"&gt;---&lt;/span&gt;

&lt;span class="gh"&gt;# Hello 1+1=2&lt;/span&gt;

我是测试文本。

我是公式：

$$
E=mc^2
$$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;这样一来，通过front matter我们定义了模板变量，下面命令也就没问题了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;hello.md&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;hello.tex
xelatex&lt;span class="w"&gt; &lt;/span&gt;hello.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="5"&gt;例子5&lt;/h3&gt;
&lt;p&gt;例子跑通了，不过这么牛的pandoc，既然能各种格式直接转。是不是可以直接生成pdf呢？&lt;/p&gt;
&lt;p&gt;试一下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;hello.md&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;hello.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;对我们这个例子没问题。不过因为markdown中我们有中文。pandoc默认使用pdflatex引擎对中文支持不好，万一不能正常工作。怎么办，如何切换成我们前面用的xelatex。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;hello.md&lt;span class="w"&gt; &lt;/span&gt;--pdf-engine&lt;span class="w"&gt; &lt;/span&gt;xelatex&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;hello.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;通过命令行 &lt;code&gt;--pdf-engine&lt;/code&gt; 我们可以指定一个特定的latex编译器。问题解决！&lt;/p&gt;
&lt;h3 id="6"&gt;例子6&lt;/h3&gt;
&lt;p&gt;如果我们不想再头部添加yaml，可以独立成一个单独文件，比如hello.yaml:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="nt"&gt;documentclass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ctexart&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;这样，只需要&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;hello.md&lt;span class="w"&gt; &lt;/span&gt;--metadata-file&lt;span class="o"&gt;=&lt;/span&gt;hello.yaml&lt;span class="w"&gt; &lt;/span&gt;--pdf-engine&lt;span class="w"&gt; &lt;/span&gt;xelatex&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;hello.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或者&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;hello.md&lt;span class="w"&gt; &lt;/span&gt;hello.yaml&lt;span class="w"&gt; &lt;/span&gt;--pdf-engine&lt;span class="w"&gt; &lt;/span&gt;xelatex&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;hello.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;这个文件应该挺有用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_2"&gt;模板&lt;/h2&gt;
&lt;p&gt;要取代默认模板很简单，只需要我们定义一个&lt;/p&gt;
&lt;h3 id="8"&gt;例子8&lt;/h3&gt;
&lt;p&gt;一个简单的模板，不需要多高大上：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;ctexart&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;body&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;通过命令行指定模板&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;hello.md&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;--template&lt;span class="o"&gt;=&lt;/span&gt;debao_template.tex&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;hello.tex
xelatex&lt;span class="w"&gt; &lt;/span&gt;hello.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或者一步到位，生成pdf&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;hello.md&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;--template&lt;span class="o"&gt;=&lt;/span&gt;debao_template.tex&lt;span class="w"&gt; &lt;/span&gt;--pdf-engine&lt;span class="w"&gt; &lt;/span&gt;xelatex&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;hello.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_3"&gt;变量&lt;/h2&gt;
&lt;p&gt;模板变量，直接和模板相关，比如yaml中定义如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;The document title&lt;/span&gt;
&lt;span class="nt"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Author One&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;affiliation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;University of Somewhere&lt;/span&gt;
&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Author Two&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;affiliation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;University of Nowhere&lt;/span&gt;
&lt;span class="nn"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在模板文件中，可以&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;author&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;
&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;author.name&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;
&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;author.name&lt;/span&gt;&lt;span class="s"&gt;$$&lt;/span&gt;&lt;span class="nb"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;author.affiliation&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt; (&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;author.affiliation&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;)&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;endif&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;
&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;else&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;
&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;author&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;
&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;endif&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;
&lt;span class="s"&gt;$&lt;/span&gt;&lt;span class="nb"&gt;endfor&lt;/span&gt;&lt;span class="s"&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;模板中，条件语句、循环语句，以及默认哪些变量，需要查&lt;a href="https://pandoc.org/MANUAL.html#templates"&gt;手册&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_4"&gt;开始写本书&lt;/h2&gt;
&lt;p&gt;假定一本书有10章，每章对应一个markdown文件。&lt;/p&gt;
&lt;h3 id="1_1"&gt;例子1&lt;/h3&gt;
&lt;p&gt;作为模拟，可以写个python脚本，生成这10个markdown文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="c1"&gt;# 定义章节的数量&lt;/span&gt;
&lt;span class="n"&gt;num_chapters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="n"&gt;output_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;chapters&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output_dir&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 循环生成每个章节文件&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_chapters&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;output_dir&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/chapter&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;02&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.md&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;# 第&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;章: 章节标题&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;这是第 &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; 章的内容。&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;## 小节 1&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;这是第 &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; 章的小节 1 的内容。&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;## 小节 2&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;这是第 &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; 章的小节 2 的内容。&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;生成 &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;成功生成 &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;num_chapters&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; 个章节的 Markdown 文件！&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;而后，直接使用pandoc命令，来生成pdf文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;chapters/chapter01.md&lt;span class="w"&gt; &lt;/span&gt;chapters/chapter02.md&lt;span class="w"&gt; &lt;/span&gt;chapters/chapter03.md&lt;span class="w"&gt; &lt;/span&gt;chapters/chapter04.md&lt;span class="w"&gt; &lt;/span&gt;chapters/chapter05.md&lt;span class="w"&gt; &lt;/span&gt;chapters/chapter06.md&lt;span class="w"&gt; &lt;/span&gt;chapters/chapter07.md&lt;span class="w"&gt; &lt;/span&gt;chapters/chapter08.md&lt;span class="w"&gt; &lt;/span&gt;chapters/chapter09.md&lt;span class="w"&gt; &lt;/span&gt;chapters/chapter10.md&lt;span class="w"&gt; &lt;/span&gt;-V&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;documentclass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ctexbook&lt;span class="w"&gt; &lt;/span&gt;--pdf-engine&lt;span class="w"&gt; &lt;/span&gt;xelatex&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;book.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;这样就可以。就是一堆文件名太闹心&lt;/p&gt;
&lt;h3 id="2_1"&gt;例子2&lt;/h3&gt;
&lt;p&gt;写个文本文件，比如 booklist.txt&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;chapters/chapter01.md
chapters/chapter02.md
chapters/chapter03.md
chapters/chapter04.md
chapters/chapter05.md
chapters/chapter06.md
chapters/chapter07.md
chapters/chapter08.md
chapters/chapter09.md
chapters/chapter10.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;而后，就清爽多了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;booklist.txt&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;book.pdf&lt;span class="w"&gt; &lt;/span&gt;--pdf-engine&lt;span class="o"&gt;=&lt;/span&gt;xelatex&lt;span class="w"&gt; &lt;/span&gt;-V&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;documentclass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ctexbook
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="3_1"&gt;例子3&lt;/h3&gt;
&lt;p&gt;还可以编写一个yaml文件，来存在模板变量信息：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="nt"&gt;documentclass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ctexbook&lt;/span&gt;
&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;我的书籍&amp;quot;&lt;/span&gt;
&lt;span class="nt"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1+1=10&amp;quot;&lt;/span&gt;
&lt;span class="nt"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2024-10-29&amp;quot;&lt;/span&gt;
&lt;span class="nt"&gt;fontsize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;12pt&lt;/span&gt;
&lt;span class="nt"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;margin=1in&lt;/span&gt;
&lt;span class="nt"&gt;toc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
&lt;span class="nt"&gt;numbersections&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;这样一来&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;--metadata-file&lt;span class="o"&gt;=&lt;/span&gt;metadata.yaml&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;booklist.txt&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;book.pdf&lt;span class="w"&gt; &lt;/span&gt;--pdf-engine&lt;span class="o"&gt;=&lt;/span&gt;xelatex&lt;span class="w"&gt; &lt;/span&gt;-V&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;documentclass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ctexbook
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_5"&gt;扩展&lt;/h2&gt;
&lt;h3 id="extension"&gt;Extension&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://pandoc.org/chunkedhtml-demo/8.21-non-default-extensions.html&lt;/li&gt;
&lt;li&gt;https://pandoc.org/chunkedhtml-demo/7.3-math-input.html&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;扩展可以通过在格式名称后添加 &lt;code&gt;+EXTENSION&lt;/code&gt; 来启用，通过添加 &lt;code&gt;-EXTENSION&lt;/code&gt; 来禁用。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--from markdown_strict+footnotes&lt;/code&gt; 是启用脚注的严格 Markdown，而&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--from markdown-footnotes-pipe_tables&lt;/code&gt; 是不包含脚注或管道表的 Pandoc Markdown。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可用扩展列表，可通过如下命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;--list-extensions&lt;span class="o"&gt;=&lt;/span&gt;markdown
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;--list-extensions&lt;span class="o"&gt;=&lt;/span&gt;gfm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;来获取&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;-abbreviations
+all_symbols_escapable
-angle_brackets_escapable
-ascii_identifiers
+auto_identifiers
-autolink_bare_uris
+backtick_code_blocks
+blank_before_blockquote
+blank_before_header
+bracketed_spans
+citations
-compact_definition_lists
+definition_lists
-east_asian_line_breaks
-emoji
+escaped_line_breaks
+example_lists
+fancy_lists
+fenced_code_attributes
+fenced_code_blocks
+fenced_divs
+footnotes
-four_space_rule
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="filter"&gt;Filter&lt;/h3&gt;
&lt;p&gt;Pandoc 过滤器在文档转换过程中对 Pandoc 的抽象语法树（AST）进行操作。这意味着我们可以对文档的结构、内容和格式进行修改，添加、删除或重排元素。&lt;/p&gt;
&lt;p&gt;可以使用各种脚本语言（默认对应解释器）：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;文件后缀&lt;/th&gt;
&lt;th&gt;解释器&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;.py&lt;/td&gt;
&lt;td&gt;python&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.hs&lt;/td&gt;
&lt;td&gt;runhaskell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.pl&lt;/td&gt;
&lt;td&gt;perl&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.rb&lt;/td&gt;
&lt;td&gt;ruby&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.php&lt;/td&gt;
&lt;td&gt;php&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.js&lt;/td&gt;
&lt;td&gt;node&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.r&lt;/td&gt;
&lt;td&gt;Rscript&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;使用python编写时，使用 pandocfilters，见：&lt;/p&gt;
&lt;p&gt;https://pypi.org/project/pandocfilters/&lt;/p&gt;
&lt;h2 id="_6"&gt;继续&lt;/h2&gt;
&lt;p&gt;如果写点像书的正经东西，还要多学习一些。&lt;/p&gt;
&lt;h3 id="_7"&gt;文件、代码结构&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;my-book/                  # 项目根目录
├── chapters/             # 存放各个章节的 Markdown 文件
│   ├── 01-introduction.md
│   ├── 02-chapter1.md
│   ├── 03-chapter2.md
│   └── ...               # 其他章节
├── images/               # 存放图片资源
│   └── cover.png         # 书籍封面图片
├── templates/            # 存放自定义的模板和样式文件
│   ├── custom-template.tex   # 自定义的 LaTeX 模板
│   └── custom-style.css      # 自定义的 CSS 样式表
├── metadata.yaml         # 元数据文件，存放书籍的全局信息，如标题、作者等
├── booklist.txt          # 列出所有章节的文件列表
├── Makefile              # Makefile 文件，用于生成书籍（可选）
└── README.md             # 项目说明文件
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;这些文件前面基本都见到了，Makefile文件用于简化pandoc的调用&lt;/p&gt;
&lt;h3 id="makefile"&gt;Makefile&lt;/h3&gt;
&lt;p&gt;Makefile真要好好写，挺不容易。&lt;/p&gt;
&lt;p&gt;不过我们可以只用最简单和傻瓜的规则（不考虑构建依赖以及清理等操作）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;# 生成多个格式&lt;/span&gt;
&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="n"&gt;epub&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;

&lt;span class="c"&gt;# 生成 PDF 文件&lt;/span&gt;
&lt;span class="nf"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;--metadata-file&lt;span class="o"&gt;=&lt;/span&gt;metadata.yaml&lt;span class="w"&gt; &lt;/span&gt;--toc&lt;span class="w"&gt; &lt;/span&gt;--number-sections&lt;span class="w"&gt; &lt;/span&gt;--template&lt;span class="o"&gt;=&lt;/span&gt;templates/custom-template.tex&lt;span class="w"&gt; &lt;/span&gt;--pdf-engine&lt;span class="o"&gt;=&lt;/span&gt;xelatex&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;mybook.pdf&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;booklist.txt&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# 生成 EPUB 文件&lt;/span&gt;
&lt;span class="nf"&gt;epub&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;--metadata-file&lt;span class="o"&gt;=&lt;/span&gt;metadata.yaml&lt;span class="w"&gt; &lt;/span&gt;--toc&lt;span class="w"&gt; &lt;/span&gt;--number-sections&lt;span class="w"&gt; &lt;/span&gt;--css&lt;span class="o"&gt;=&lt;/span&gt;templates/custom-style.css&lt;span class="w"&gt; &lt;/span&gt;--epub-cover-image&lt;span class="o"&gt;=&lt;/span&gt;images/cover.png&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;mybook.epub&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;booklist.txt&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# 生成 HTML 文件&lt;/span&gt;
&lt;span class="nf"&gt;html&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;--metadata-file&lt;span class="o"&gt;=&lt;/span&gt;metadata.yaml&lt;span class="w"&gt; &lt;/span&gt;--toc&lt;span class="w"&gt; &lt;/span&gt;--number-sections&lt;span class="w"&gt; &lt;/span&gt;--css&lt;span class="o"&gt;=&lt;/span&gt;templates/custom-style.css&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;mybook.html&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;booklist.txt&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或者直接用python吧&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;
&lt;span class="normal"&gt;63&lt;/span&gt;
&lt;span class="normal"&gt;64&lt;/span&gt;
&lt;span class="normal"&gt;65&lt;/span&gt;
&lt;span class="normal"&gt;66&lt;/span&gt;
&lt;span class="normal"&gt;67&lt;/span&gt;
&lt;span class="normal"&gt;68&lt;/span&gt;
&lt;span class="normal"&gt;69&lt;/span&gt;
&lt;span class="normal"&gt;70&lt;/span&gt;
&lt;span class="normal"&gt;71&lt;/span&gt;
&lt;span class="normal"&gt;72&lt;/span&gt;
&lt;span class="normal"&gt;73&lt;/span&gt;
&lt;span class="normal"&gt;74&lt;/span&gt;
&lt;span class="normal"&gt;75&lt;/span&gt;
&lt;span class="normal"&gt;76&lt;/span&gt;
&lt;span class="normal"&gt;77&lt;/span&gt;
&lt;span class="normal"&gt;78&lt;/span&gt;
&lt;span class="normal"&gt;79&lt;/span&gt;
&lt;span class="normal"&gt;80&lt;/span&gt;
&lt;span class="normal"&gt;81&lt;/span&gt;
&lt;span class="normal"&gt;82&lt;/span&gt;
&lt;span class="normal"&gt;83&lt;/span&gt;
&lt;span class="normal"&gt;84&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;

&lt;span class="n"&gt;metadata_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;metadata.yaml&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;booklist_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;booklist.txt&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;output_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;build&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;output_pdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mybook.pdf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;output_epub&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mybook.epub&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;output_html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mybook.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cover_image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;images/cover.png&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;latex_template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;templates/pdf.latex&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;css_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;templates/style.css&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;pdf_engine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xelatex&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;md_format&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;markdown+tex_math_single_backslash&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;booklist_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;booklist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;command_comm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;pandoc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;--metadata-file&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;metadata_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;--from&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;md_format&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;--toc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;--number-sections&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;booklist&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;check_file_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Error: Cannot found &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;file_path&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_output_directory&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output_dir&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Build directory: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;output_dir&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_pdf&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;check_file_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;latex_template&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="n"&gt;pdf_command&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;command_comm&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;--template&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;latex_template&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;--pdf-engine&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pdf_engine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;-o&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_pdf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Generate PDF: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;output_pdf&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pdf_command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CalledProcessError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Error generate PDF: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_epub&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;epub_command&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;command_comm&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;--css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;css_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;--epub-cover-image&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cover_image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;-o&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_epub&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Generate EPUB: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;output_epub&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;epub_command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CalledProcessError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Error generating EPUB: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_html&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;html_command&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;command_comm&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;--css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;css_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;-o&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Generate HTML: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;output_html&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html_command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CalledProcessError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Error generating HTML: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;..start...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;create_output_directory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;generate_pdf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;generate_epub&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;generate_html&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;..finished...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或许找个现成模板，起步会更好...&lt;/p&gt;
&lt;h2 id="_8"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pandoc.org/MANUAL.html"&gt;https://pandoc.org/MANUAL.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learnbyexample.github.io/customizing-pandoc/"&gt;https://learnbyexample.github.io/customizing-pandoc/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://keleshev.com/my-book-writing-setup/"&gt;https://keleshev.com/my-book-writing-setup/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Wandmalfarbe/pandoc-latex-template"&gt;https://github.com/Wandmalfarbe/pandoc-latex-template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ge-chunyu.github.io/posts/2019-11-pandoc-large-document/"&gt;https://ge-chunyu.github.io/posts/2019-11-pandoc-large-document/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sspai.com/post/77206"&gt;Pandoc 从入门到精通，你也可以学会这一个文本转换利器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/564587260"&gt;利用pandoc模板eisvogel实现Markdown转pdf（latex）中文排版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wikiti/pandoc-book-template"&gt;https://github.com/wikiti/pandoc-book-template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@sydasif78/book-creation-with-pandoc-and-markdown-893c7d72cb35"&gt;https://medium.com/@sydasif78/book-creation-with-pandoc-and-markdown-893c7d72cb35&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tools"></category><category term="latex"></category><category term="markdown"></category><category term="pandoc"></category></entry><entry><title>电磁场数值计算小记</title><link href="https://blog.debao.me/2024/10/notes-on-electromagnetic-field-numerical-computation/" rel="alternate"></link><published>2024-10-28T00:51:00+08:00</published><updated>2024-10-28T00:51:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-10-28:/2024/10/notes-on-electromagnetic-field-numerical-computation/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;先列一些流水账，熟悉一下术语&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;电磁场数值计算的核心是通过计算机求解麦克斯韦方程组。麦克斯韦方程组是描述电场 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;先列一些流水账，熟悉一下术语&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;电磁场数值计算的核心是通过计算机求解麦克斯韦方程组。麦克斯韦方程组是描述电场和磁场相互作用的基本方程，但对于复杂的边界条件和介质分布，解析求解十分困难。这时，需要通过数值方法将这些偏微分方程离散化，并利用计算机进行求解。&lt;/p&gt;
&lt;p&gt;通过数值方法和计算机仿真来求解电磁场问题的学科，还有个专门名字——计算电磁学（Computational Electromagnetics, CEM）。&lt;/p&gt;
&lt;h2 id="_1"&gt;术语&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;FDM&lt;/strong&gt;: Finite Difference Method（有限差分法）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FDTD&lt;/strong&gt;: Finite Difference Time Domain（有限差分时域法）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FEM&lt;/strong&gt;: Finite Element Method（有限元法）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MoM&lt;/strong&gt;: Method of Moments（矩量法）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BEM&lt;/strong&gt;: Boundary Element Method（边界元法）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GO&lt;/strong&gt;: Geometrical Optics（几何光学）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PO&lt;/strong&gt;: Physical Optics（物理光学）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GTD&lt;/strong&gt;: Geometrical Theory of Diffraction（几何绕射理论）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UTD&lt;/strong&gt;: Uniform Theory of Diffraction（均匀绕射理论）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PTD&lt;/strong&gt;: Physical Theory of Diffraction（物理绕射理论）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MLFMA&lt;/strong&gt;: Multilevel Fast Multipole Algorithm（多层快速多极子算法）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FFT&lt;/strong&gt;: Fast Fourier Transform（快速傅里叶变换）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ACA&lt;/strong&gt;: Adaptive Cross Approximation（自适应交叉逼近）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MLMDA&lt;/strong&gt;: Multilevel Matrix Decomposition Algorithm（多层矩阵分解算法）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RCS&lt;/strong&gt;：Radar Cross-Section (雷达散射截面)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IE&lt;/strong&gt;：Integral Equation (积分方程)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DE&lt;/strong&gt;：Differential Equation（微分方程）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TDDE&lt;/strong&gt;: Time Domain Differential Equation（时域微分方程）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TDIE&lt;/strong&gt;: Time Domain Integral Equation（时域积分方程）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FDIE&lt;/strong&gt;: Frequency Domain Integral Equation（频域积分方程）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FDDE&lt;/strong&gt;: Frequency Domain Differential Equation（频域微分方程）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="cem"&gt;CEM发展历史&lt;/h2&gt;
&lt;div class="mermaid"&gt;
graph LR
    A[CEM发展阶段]
    A --&gt; B1[阶段1: 解析法]
    B1 --&gt; B2[Mie Series]

    A --&gt; C1[阶段2: 近似法]
    C1 --&gt; C2[几何光学]
    C2 --&gt; C3[GO]
    C2 --&gt; C4[GTD]
    C2 --&gt; C5[UTD]
    C1 --&gt; D2[物理光学]
    D2 --&gt; D3[PO]
    D2 --&gt; D4[PTD]

    A --&gt; E1[阶段3: 数值方法]
    E1 --&gt; E2[FDTD]
    E1 --&gt; E3[FEM]
    E1 --&gt; E4[MOM IE]

    A --&gt; F1[阶段4: 快速方法 IE]
    F1 --&gt; F2[迭代求解技术]
    F2 --&gt; F3[MLFMA]
    F2 --&gt; F4[FFT]
    F2 --&gt; F5[ACA]
    F1 --&gt; G2[直接求解技术]
    G2 --&gt; G3[Hierarchical Matrix Methods]
    G2 --&gt; G4[MLMDA]
&lt;/div&gt;

&lt;p&gt;随着计算技术和电磁理论的进步，CEM经历了不同的阶段&lt;/p&gt;
&lt;h3 id="1-20"&gt;1. 解析法阶段（20世纪中期之前）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;在计算机技术尚未发展之前，电磁问题的求解主要依赖于&lt;strong&gt;解析方法&lt;/strong&gt;，通过严格的数学推导来解决麦克斯韦方程。解析法能够提供封闭形式的解决方案，但仅适用于较为简单的几何结构和理想化的边界条件，并需要依托高超的数学技能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Mie级数&lt;/strong&gt;：用于解决电磁波在球形对象上的散射问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;其他经典解析方法&lt;/strong&gt;：如分离变量法、傅里叶级数解等。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;局限：解析法只能处理简单的几何结构和边界条件，对于复杂的三维结构和非均匀介质问题，无法提供有效的解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="2-206080"&gt;2. 近似法阶段（20世纪60年代到80年代）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;随着计算机的出现，解析法的局限性逐渐显现。为了应对更复杂的电磁问题，开始发展&lt;strong&gt;近似法&lt;/strong&gt;。这些方法在一定的假设条件下对问题进行简化，以减少计算复杂度。近似法通常应用于高频电磁波的传播和散射问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;几何光学（GO）&lt;/strong&gt;：将电磁波近似为光线，波的传播问题可以采用射线追踪（Ray-Tracing）分析，适用于波长远小于物体尺寸的情况。忽略了波动的干涉和衍射效应，主要用于反射和折射问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;物理光学（PO）&lt;/strong&gt;：在几何光学的基础上增加了对衍射效应的考虑，适用于大尺寸物体上的散射问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;几何绕射理论（GTD）&lt;/strong&gt;：扩展了几何光学，能够处理电磁波沿物体边缘的绕射。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;均匀绕射理论（UTD）&lt;/strong&gt;：是 GTD 的改进，能够更准确地处理绕射问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;应用与局限：这些方法特别适合处理大尺度物体的电磁波传播和散射问题，广泛应用于雷达散射、天线设计等领域。但它们的精度依赖于特定条件，无法处理所有的电磁场问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="3-2080"&gt;3. 数值方法阶段（20世纪80年代至今）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;随着计算机性能的增强，数值方法成为解决复杂电磁问题的主要手段。数值方法通过将麦克斯韦方程组离散化为代数方程，从而能够处理复杂几何结构、异质介质以及复杂边界条件下的电磁问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;有限差分时域法（FDTD）&lt;/strong&gt;：基于时域求解，适合模拟电磁波的时域传播过程。它简单易实现，广泛用于天线设计、微波电路、雷达散射等领域。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;有限元法（FEM）&lt;/strong&gt;：通过将计算区域划分为多个有限单元，解决复杂几何和非均匀介质问题。FEM 被广泛应用于波导、天线、雷达散射等领域，尤其适合处理复杂边界条件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;矩量法（MoM）&lt;/strong&gt;：基于积分方程，主要用于开放空间中的电磁波问题，如天线和电磁散射。它适合处理自由空间中的问题，但对计算资源要求较大。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;应用：数值方法能够处理复杂几何、异质材料和复杂边界条件，是现代工程中电磁仿真的核心技术。随着计算机的进步，数值方法可以应用于越来越复杂的系统。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="4-21"&gt;4. 快速求解技术阶段（21世纪至今）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;随着电磁问题的复杂性和规模不断增加，传统的数值方法在计算时间和内存占用方面面临挑战。为了解决这些问题，快速求解技术应运而生。这些技术通过优化算法、数据压缩和并行计算，大幅提高了大规模问题的求解效率。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;迭代求解技术&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多层快速多极子方法（MLFMA）&lt;/strong&gt;：通过分层多极展开和分组处理，减少大规模电磁散射问题的计算复杂度，特别适合处理大尺度的问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;快速傅里叶变换（FFT）&lt;/strong&gt;：用于加速卷积运算，减少矩阵求解的运算时间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自适应交叉逼近（ACA）&lt;/strong&gt;：一种矩阵压缩技术，能够有效减少存储需求和计算时间，特别适用于多尺度问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;直接求解技术&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;分层矩阵方法（Hierarchical Matrix Methods）&lt;/strong&gt;：通过对矩阵进行分层压缩，能够减少大型系统的计算和存储需求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多层多尺度分析（MLMDA）&lt;/strong&gt;：能够处理同时包含大尺度和小尺度特征的电磁问题，特别适合复杂结构的仿真。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;这些快速求解技术使得大规模和复杂电磁问题的仿真成为可能，特别是在天线阵列、雷达散射和复杂电磁环境的应用中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_2"&gt;不同视角比较&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;时域/频域&lt;/th&gt;
&lt;th&gt;实空间/傅里叶空间&lt;/th&gt;
&lt;th&gt;积分/微分&lt;/th&gt;
&lt;th&gt;网格类型&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;FDM&lt;/td&gt;
&lt;td&gt;频域/时域&lt;/td&gt;
&lt;td&gt;实空间&lt;/td&gt;
&lt;td&gt;微分&lt;/td&gt;
&lt;td&gt;结构化网格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FDTD&lt;/td&gt;
&lt;td&gt;时域&lt;/td&gt;
&lt;td&gt;实空间&lt;/td&gt;
&lt;td&gt;微分&lt;/td&gt;
&lt;td&gt;结构化网格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FEM&lt;/td&gt;
&lt;td&gt;频域/时域&lt;/td&gt;
&lt;td&gt;实空间&lt;/td&gt;
&lt;td&gt;微分&lt;/td&gt;
&lt;td&gt;非结构化网格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MoM&lt;/td&gt;
&lt;td&gt;频域&lt;/td&gt;
&lt;td&gt;实空间&lt;/td&gt;
&lt;td&gt;积分&lt;/td&gt;
&lt;td&gt;表面网格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BEM&lt;/td&gt;
&lt;td&gt;频域&lt;/td&gt;
&lt;td&gt;实空间&lt;/td&gt;
&lt;td&gt;积分&lt;/td&gt;
&lt;td&gt;表面网格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GO&lt;/td&gt;
&lt;td&gt;频域&lt;/td&gt;
&lt;td&gt;实空间&lt;/td&gt;
&lt;td&gt;近似方法&lt;/td&gt;
&lt;td&gt;无需网格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PO&lt;/td&gt;
&lt;td&gt;频域&lt;/td&gt;
&lt;td&gt;实空间&lt;/td&gt;
&lt;td&gt;近似方法&lt;/td&gt;
&lt;td&gt;无需网格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GTD&lt;/td&gt;
&lt;td&gt;频域&lt;/td&gt;
&lt;td&gt;实空间&lt;/td&gt;
&lt;td&gt;近似方法&lt;/td&gt;
&lt;td&gt;无需网格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UTD&lt;/td&gt;
&lt;td&gt;频域&lt;/td&gt;
&lt;td&gt;实空间&lt;/td&gt;
&lt;td&gt;近似方法&lt;/td&gt;
&lt;td&gt;无需网格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PTD&lt;/td&gt;
&lt;td&gt;频域&lt;/td&gt;
&lt;td&gt;实空间&lt;/td&gt;
&lt;td&gt;近似方法&lt;/td&gt;
&lt;td&gt;无需网格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MLFMA&lt;/td&gt;
&lt;td&gt;频域&lt;/td&gt;
&lt;td&gt;实空间&lt;/td&gt;
&lt;td&gt;积分&lt;/td&gt;
&lt;td&gt;表面网格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FFT&lt;/td&gt;
&lt;td&gt;频域&lt;/td&gt;
&lt;td&gt;傅里叶空间&lt;/td&gt;
&lt;td&gt;数值变换方法&lt;/td&gt;
&lt;td&gt;无需网格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ACA&lt;/td&gt;
&lt;td&gt;频域&lt;/td&gt;
&lt;td&gt;实空间&lt;/td&gt;
&lt;td&gt;数值逼近方法&lt;/td&gt;
&lt;td&gt;表面网格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MLMDA&lt;/td&gt;
&lt;td&gt;频域&lt;/td&gt;
&lt;td&gt;实空间&lt;/td&gt;
&lt;td&gt;数值分解方法&lt;/td&gt;
&lt;td&gt;表面网格&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id="1-frequency-domain-vs-time-domain"&gt;1. 频域（Frequency-Domain） vs. 时域（Time-Domain）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;频域：适合处理稳态和尖锐共振问题，处理斜入射和周期性问题非常快，但可能错过一些细微的共振现象。&lt;/li&gt;
&lt;li&gt;时域：适合宽频带模拟，尤其在有源和非线性器件中表现出色，且扩展性好，但内存需求较大，处理纵向周期性和斜入射时存在困难。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="2-semi-analytical-vs-fully-numerical"&gt;2. 半解析（Semi-Analytical） vs. 全数值（Fully Numerical）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;半解析：收敛性好，适合复杂几何结构，但内存需求大，处理长均匀段时效率较低。&lt;/li&gt;
&lt;li&gt;全数值：非常快且高效，适合分层器件和复杂几何，但收敛性有时较差。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="3-fourier-space-vs-real-space"&gt;3. 傅里叶空间（Fourier-Space） vs. 实空间（Real-Space）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;傅里叶空间：适合高折射率对比、金属材料和细节解析，但在低折射率对比下速度较慢。&lt;/li&gt;
&lt;li&gt;实空间：非常适合处理周期性问题，速度快，内存占用低，但难以实现场可视化和解析复杂细节。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="4-unstructured-grid-vs-structured-grid"&gt;4. 非结构化网格（Unstructured Grid） vs. 结构化网格（Structured Grid）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;非结构化网格：实现简单，适合矩形结构，但效率较低，难以处理曲面。&lt;/li&gt;
&lt;li&gt;结构化网格：效率最高，适应大规模结构和曲面，但实现复杂，可能产生伪解。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="5-integral-based-vs-differential-based"&gt;5. 积分法（Integral-Based） vs. 微分法（Differential-Based）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;积分法：使用稀疏矩阵，实现简单，适合表面网格，但需要体积网格，可能出现伪解。&lt;/li&gt;
&lt;li&gt;微分法：只需表面网格，适合处理大规模结构，但矩阵是全矩阵，公式推导较复杂。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;软件&lt;/h2&gt;
&lt;p&gt;一些商业软件&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;软件名称&lt;/th&gt;
&lt;th&gt;开发公司&lt;/th&gt;
&lt;th&gt;求解器类型&lt;/th&gt;
&lt;th&gt;应用领域&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Ansys HFSS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ANSYS&lt;/td&gt;
&lt;td&gt;FEM&lt;/td&gt;
&lt;td&gt;(High Frequency Structure Simulation) 天线设计、射频电路、无线通信设备、雷达系统&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.ansys.com/products/electronics/ansys-maxwell"&gt;&lt;strong&gt;Ansys Maxwell&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ANSYS&lt;/td&gt;
&lt;td&gt;FEM&lt;/td&gt;
&lt;td&gt;（Low Frequency）电机设计、变压器、感应加热、传感器、磁体设计&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.ansys.com/products/optics/fdtd"&gt;&lt;strong&gt;Ansys Lumerical FDTD&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ANSYS&lt;/td&gt;
&lt;td&gt;FDTD&lt;/td&gt;
&lt;td&gt;高频仿真，特别适合光子学、纳米技术&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.ansys.com/products/optics/multiphysics"&gt;&lt;strong&gt;Ansys Lumerical Multiphysics&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ANSYS&lt;/td&gt;
&lt;td&gt;FEM、FDTD、EIGENMODE&lt;/td&gt;
&lt;td&gt;高频仿真，特别适合光子学、纳米技术&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.3ds.com/products/simulia/cst-studio-suite"&gt;&lt;strong&gt;CST Studio Suite&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dassault Systèmes&lt;/td&gt;
&lt;td&gt;FDTD、FEM、积分方程法（IE）、静电求解器&lt;/td&gt;
&lt;td&gt;微波电路、天线设计、电磁兼容性（EMC/EMI）分析、射频电路&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.3ds.com/products/simulia/opera"&gt;&lt;strong&gt;SIMULIA Opera&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dassault Systèmes&lt;/td&gt;
&lt;td&gt;FEM&lt;/td&gt;
&lt;td&gt;静态场仿真，适合电透镜、磁透镜、加速器设计&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.comsol.com/comsol-multiphysics"&gt;&lt;strong&gt;COMSOL Multiphysics&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;COMSOL&lt;/td&gt;
&lt;td&gt;FEM&lt;/td&gt;
&lt;td&gt;电机设计、传感器、感应加热、电磁加热&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://altair.com/feko"&gt;&lt;strong&gt;Altair Feko&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Altair Engineering&lt;/td&gt;
&lt;td&gt;MoM、FEM、GO、PO&lt;/td&gt;
&lt;td&gt;天线设计、雷达散射、无线通信、汽车电子&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.altair.com/flux/"&gt;&lt;strong&gt;Altair Flux&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Altair Engineering&lt;/td&gt;
&lt;td&gt;FEM&lt;/td&gt;
&lt;td&gt;低频、静态场仿真，适合电机、磁性设备设计&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://plm.sw.siemens.com/en-US/simcenter/electromagnetics-simulation/magnet/"&gt;&lt;strong&gt;Simcenter MagNet&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Siemens (原Infolytica)&lt;/td&gt;
&lt;td&gt;FEM&lt;/td&gt;
&lt;td&gt;低频和静磁场仿真，适合磁透镜、电机设计&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Keysight EMPro&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Keysight Technologies&lt;/td&gt;
&lt;td&gt;FEM、FDTD&lt;/td&gt;
&lt;td&gt;微波电路、天线、PCB设计、射频组件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://quickfield.com/"&gt;&lt;strong&gt;QuickField&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;FEM&lt;/td&gt;
&lt;td&gt;静态场和准静态场仿真，适合电透镜和磁透镜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.remcom.com/xf7"&gt;&lt;strong&gt;XFdtd&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;FDTD&lt;/td&gt;
&lt;td&gt;高频电磁仿真，适合天线、微波电路仿真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.jmag-international.com/products/"&gt;&lt;strong&gt;JMAG&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;JSOL&lt;/td&gt;
&lt;td&gt;FEM&lt;/td&gt;
&lt;td&gt;低频、静态电磁场仿真，适合电机、传感器设计&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://simion.com/info/poisson_superfish.html"&gt;&lt;strong&gt;POISSON Superfish&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;simion&lt;/td&gt;
&lt;td&gt;FEM(2D)&lt;/td&gt;
&lt;td&gt;静态场仿真，适合粒子加速器、电透镜和磁透镜&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;一些开源软件&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;软件名称&lt;/th&gt;
&lt;th&gt;开发组织&lt;/th&gt;
&lt;th&gt;求解器类型&lt;/th&gt;
&lt;th&gt;应用领域&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/elmercsc/elmerfem"&gt;Elmer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;CSC – IT Center for Science&lt;/td&gt;
&lt;td&gt;有限元法（FEM）&lt;/td&gt;
&lt;td&gt;开源软件，适合低频和静态场仿真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://freefem.org/"&gt;FreeFEM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;FEM&lt;/td&gt;
&lt;td&gt;支持静电场，静磁场&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://fenicsproject.org/"&gt;Fenics&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;FEM&lt;/td&gt;
&lt;td&gt;有python绑定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://getdp.info/"&gt;GetDP&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;FEM&lt;/td&gt;
&lt;td&gt;开源软件，支持静态电磁场仿真，适合复杂几何&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://openems.de/"&gt;GMSH + OpenEMS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;FDTD&lt;/td&gt;
&lt;td&gt;开源工具，低频、静态场仿真，适合学术研究&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://meep.readthedocs.io/en/latest/"&gt;Meep&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;FDTD&lt;/td&gt;
&lt;td&gt;开源软件，适合光子学、纳米结构、电磁波仿真&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.openfoam.com/"&gt;OpenFOAM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;有限体积法（FVM），支持电磁模块&lt;/td&gt;
&lt;td&gt;开源软件，主要用于流体仿真，但支持电磁仿真&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_4"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mp.weixin.qq.com/s?__biz=MzIwODc4NzE1OA==&amp;amp;mid=2247508781&amp;amp;idx=1&amp;amp;sn=00a6badc7461fc6b6f03c2b092de7f98&amp;amp;chksm=977f2094a008a98278ec0c36047fffa33336335e28959bb2e55e88d3e4b8db326259725993bf&amp;amp;scene=27"&gt;电磁计算方法的发展与展望&lt;/a&gt; &lt;a href="https://www.sohu.com/a/659900326_121124371"&gt;链接2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;https://empossible.net/academics/emp5337/&lt;/li&gt;
&lt;li&gt;https://engineering.purdue.edu/wcchew/ece604f19/Lecture%20Notes/Lect36.pdf&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Computational_electromagnetics&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/List_of_finite_element_software_packages&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="module"&gt;
    import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.esm.min.mjs';
    mermaid.initialize({ startOnLoad: true });
&lt;/script&gt;</content><category term="CAx"></category></entry><entry><title>Qt样式表小记</title><link href="https://blog.debao.me/2024/10/notes-on-qt-stylesheets/" rel="alternate"></link><published>2024-10-27T19:45:00+08:00</published><updated>2024-10-27T19:45:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-10-27:/2024/10/notes-on-qt-stylesheets/</id><summary type="html">&lt;p&gt;Qt 样式表（stylesheet），简称QSS，是一种声明式的样式定义方法，允许开发者以类似于 Web 开发中的 CSS 的方式，为 Qt 应用中的传统的QtWidgets窗口控件（如 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Qt 样式表（stylesheet），简称QSS，是一种声明式的样式定义方法，允许开发者以类似于 Web 开发中的 CSS 的方式，为 Qt 应用中的传统的QtWidgets窗口控件（如按钮、标签、文本框等）设置外观。它可以用来改变控件的颜色、边框、背景、字体、形状等。&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#qss-vs-css"&gt;QSS vs CSS&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#sub-controls"&gt;子控件（Sub-Controls）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#c"&gt;C++命名空间中的控件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#q_property"&gt;Q_PROPERTY属性&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#qss"&gt;QSS模板&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;模板&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;样式切换的一些思考点&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="qss-vs-css"&gt;QSS vs CSS&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Qt 样式表 与 CSS2 在语法和部分功能上有很多相似之处，但 Qt 样式表 是为桌面应用的 Qt Widgets 设计的，功能和灵活性相比 CSS2 有一些限制。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Qt 样式表&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;CSS2&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;适用对象&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;用于 &lt;strong&gt;Qt Widgets&lt;/strong&gt;（桌面应用的控件）&lt;/td&gt;
&lt;td&gt;用于 &lt;strong&gt;HTML 元素&lt;/strong&gt;（网页中的元素）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;选择器支持&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;支持CSS2所有选择器类型&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;子控件选择器&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;专门引入了 &lt;code&gt;::subcontrol&lt;/code&gt; 来选择控件的子部分&lt;/td&gt;
&lt;td&gt;直接使用类或 ID 选择器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;继承性&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;通过合并祖先控件和应用程序的样式表来获得。不会自动从父窗口的继承颜色字体等。没有 &lt;code&gt;!important&lt;/code&gt; 规则&lt;/td&gt;
&lt;td&gt;样式在父子元素之间可以继承（如 &lt;code&gt;color&lt;/code&gt;、&lt;code&gt;font-size&lt;/code&gt; 等）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;单位支持&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;px&lt;/code&gt;（通用）、&lt;code&gt;pt&lt;/code&gt;（只用于字体）、&lt;code&gt;em&lt;/code&gt; 、&lt;code&gt;ex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;完全支持 &lt;code&gt;px&lt;/code&gt;、&lt;code&gt;em&lt;/code&gt;、&lt;code&gt;rem&lt;/code&gt;、&lt;code&gt;%&lt;/code&gt; 等多种单位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;背景图片&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;支持 &lt;code&gt;background-image&lt;/code&gt; 和 &lt;code&gt;border-image&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;支持 &lt;code&gt;background-image&lt;/code&gt;，可用于更多元素和伪类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;颜色&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;支持颜色名称和十六进制颜色值，如 &lt;code&gt;#RRGGBB&lt;/code&gt;以及hsv,hsl等 。注意Qt有调色版&lt;code&gt;palette&lt;/code&gt;可供使用。具体关注属性类型Brush。&lt;/td&gt;
&lt;td&gt;没有调色板&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;渐变色&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;qlineargradient&lt;/code&gt;等,与CSS语法差异大&lt;/td&gt;
&lt;td&gt;&lt;code&gt;linear-gradient&lt;/code&gt;等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;边框样式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;支持 &lt;code&gt;border&lt;/code&gt;，但不支持如 &lt;code&gt;border-collapse&lt;/code&gt; 等复杂的属性&lt;/td&gt;
&lt;td&gt;支持完整的边框属性，如 &lt;code&gt;border-radius&lt;/code&gt;、&lt;code&gt;border-collapse&lt;/code&gt; 等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;属性值支持&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;支持基本的属性值，如 &lt;code&gt;color&lt;/code&gt;、&lt;code&gt;background-color&lt;/code&gt;、&lt;code&gt;border&lt;/code&gt; 等&lt;/td&gt;
&lt;td&gt;支持更复杂的属性值，如 &lt;code&gt;box-shadow&lt;/code&gt;、&lt;code&gt;text-shadow&lt;/code&gt; 等&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;另外注意Qt特有的语法：&lt;/p&gt;
&lt;h3 id="sub-controls"&gt;子控件（Sub-Controls）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;子控件（Sub-control） 是 Qt 中用于样式化复杂控件的一个重要概念。它们可以通过双冒号&lt;code&gt;::&lt;/code&gt;语法进行选择，并且可以使用 &lt;code&gt;subcontrol-origin&lt;/code&gt; 和 &lt;code&gt;subcontrol-position&lt;/code&gt; 来调整其在小部件中的定位。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于 QComboBox 的下拉按钮。选择器可以包含子控件，从而使得可以将样式规则应用于特定的子控件。例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;QComboBox&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;QComboBox&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;drop-down&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sx"&gt;dropdown.png&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;subcontrol-origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;双冒号 &lt;code&gt;::&lt;/code&gt; 语法类似 CSS3 的伪元素，二者概念上有不同，且具有不同的层叠语义。&lt;/p&gt;
&lt;h3 id="c"&gt;C++命名空间中的控件&lt;/h3&gt;
&lt;p&gt;Qt 样式表使用控件的 &lt;code&gt;QObject::className()&lt;/code&gt; 来确定类型选择器。如果自定义的控件位于命名空间中，&lt;code&gt;QObject::className()&lt;/code&gt; 将返回 &lt;code&gt;&amp;lt;namespace&amp;gt;::&amp;lt;classname&amp;gt;&lt;/code&gt;。这与子控件（&lt;code&gt;Sub-Controls&lt;/code&gt;）的语法相冲突。为了解决这个问题，当为命名空间中的小部件使用类型选择器时，必须将 &lt;code&gt;::&lt;/code&gt; 替换为 &lt;code&gt;--&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;namespace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;ns&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;MyPushButton&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;QPushButton&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;qApp&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setStyleSheet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ns--MyPushButton { background: yellow; }&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="q_property"&gt;Q_PROPERTY属性&lt;/h3&gt;
&lt;p&gt;QSS 提供了一个特性，允许通过 &lt;code&gt;qproperty-&lt;/code&gt; 前缀直接设置控件的 Qt 属性。这在 CSS 中是不存在的，主要是为了与 Qt 对象属性系统 进行集成。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;QPushButton&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;qproperty-icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sx"&gt;icon.png&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;qproperty-iconSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;通过&lt;code&gt;Q_PROPERTY&lt;/code&gt; 定义的属性都可以使用 &lt;code&gt;qproperty-&amp;lt;属性名&amp;gt;&lt;/code&gt; 语法进行设置。&lt;/p&gt;
&lt;h2 id="qss"&gt;QSS模板&lt;/h2&gt;
&lt;p&gt;网络上不少网友分享的qss模板以及和模板相关的工具&lt;/p&gt;
&lt;h3 id="_1"&gt;模板&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://qss-stock.devsecstudio.com/&lt;/li&gt;
&lt;li&gt;https://github.com/GTRONICK/QSS&lt;/li&gt;
&lt;li&gt;https://github.com/githubuser0xFFFF/Qt-Advanced-Stylesheets&lt;/li&gt;
&lt;li&gt;https://github.com/ColinDuquesnoy/QDarkStyleSheet&lt;/li&gt;
&lt;li&gt;https://github.com/Jorgen-VikingGod/Qt-Frameless-Window-DarkStyle&lt;/li&gt;
&lt;li&gt;https://www.tech-artists.org/t/release-qt-dark-orange-stylesheet/2287&lt;/li&gt;
&lt;li&gt;https://github.com/antonypro/QGoodWindow&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;工具&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;QSS没有原生的 theme（主题） 或 SASS 等预处理器的直接支持。但有不少工具来做这样的事情&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/hustlei/QssStylesheetEditor&lt;/li&gt;
&lt;li&gt;https://github.com/HappySeaFox/qsseditor&lt;/li&gt;
&lt;li&gt;https://github.com/UN-GCPDS/qt-material&lt;/li&gt;
&lt;li&gt;https://gitlab.com/pavel.krupala/qt-skin-generator&lt;/li&gt;
&lt;li&gt;https://github.com/Qt-Widgets/Qui_QSS_Skin_Builder&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_3"&gt;样式切换的一些思考点&lt;/h3&gt;
&lt;p&gt;我们可以使用SASS方式编写文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;$button-bg-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;#333&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="na"&gt;$button-text-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ni"&gt;white&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;

&lt;span class="nt"&gt;QPushButton&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;background-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$button-bg-color&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$button-text-color&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;而后调用sass或者使用其他三方工具生成qss样式表。这样，调整变量，容易生成多套样式表（尽管是静态的）。&lt;/p&gt;
&lt;p&gt;另外，考虑调色板可以用，可以让其作为QSS基本色&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;QToolTip&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;#ffffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;palette&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;solid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;palette&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;这样Qt程序运行时通过代码中修改调色板来影响样式表。&lt;/p&gt;
&lt;p&gt;控件的动态属性（setProperty）配合QSS的属性选择器，也容易实现单个qss文件的主题切换。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;qApp&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setStyleSheet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;R&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="dl"&gt;(&lt;/span&gt;
&lt;span class="s"&gt;    QPushButton[theme=&amp;quot;dark&amp;quot;] {&lt;/span&gt;
&lt;span class="s"&gt;        background-color: #333;&lt;/span&gt;
&lt;span class="s"&gt;        color: white;&lt;/span&gt;
&lt;span class="s"&gt;    }&lt;/span&gt;
&lt;span class="s"&gt;    QPushButton[theme=&amp;quot;light&amp;quot;] {&lt;/span&gt;
&lt;span class="s"&gt;        background-color: #fff;&lt;/span&gt;
&lt;span class="s"&gt;        color: black;&lt;/span&gt;
&lt;span class="s"&gt;    }&lt;/span&gt;
&lt;span class="dl"&gt;)&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;对于样式表不能直接控制的部分，我们可以使用&lt;code&gt;qproperty-&lt;/code&gt; 语法自定义属性进行补充。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;QPushButton&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;qproperty-iconSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;qproperty-flat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_4"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://doc.qt.io/qt-6/stylesheet.html"&gt;https://doc.qt.io/qt-6/stylesheet.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://doc.qt.io/qt-6/stylesheet-syntax.html"&gt;https://doc.qt.io/qt-6/stylesheet-syntax.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://doc.qt.io/qt-6/stylesheet-reference.html"&gt;https://doc.qt.io/qt-6/stylesheet-reference.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/CSS2/selector.html#q1"&gt;https://www.w3.org/TR/CSS2/selector.html#q1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/file/d/1OnauZq5m2VimtNjgWWBBbt3z40Ay_3Xn/view"&gt;https://drive.google.com/file/d/1OnauZq5m2VimtNjgWWBBbt3z40Ay_3Xn/view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.qt.io/Gallery_of_Qt_CSS_Based_Styles"&gt;https://wiki.qt.io/Gallery_of_Qt_CSS_Based_Styles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Qt"></category><category term="Qt"></category></entry><entry><title>Introduction to Python Markdown Extension md_katex</title><link href="https://blog.debao.me/2024/10/introduction-to-python-markdown-extension-md_katex/" rel="alternate"></link><published>2024-10-25T23:57:00+08:00</published><updated>2024-10-25T23:57:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-10-25:/2024/10/introduction-to-python-markdown-extension-md_katex/</id><summary type="html">&lt;p&gt;This page illustrates how mathematical formulas written in Python-Markdown can be rendered using KaTeX with the help of the &lt;a href="https://github.com/dbzhang800/md_katex"&gt;md_katex&lt;/a&gt; extension.&lt;/p&gt;
&lt;h2 id="demo"&gt;Demo&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;md_katex&lt;/strong&gt; is a KaTeX plugin initially developed for use in this blog with &lt;strong&gt;Pelican&lt;/strong&gt;. It focuses on rendering mathematical formulas directly in the browser using the KaTeX JavaScript …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;This page illustrates how mathematical formulas written in Python-Markdown can be rendered using KaTeX with the help of the &lt;a href="https://github.com/dbzhang800/md_katex"&gt;md_katex&lt;/a&gt; extension.&lt;/p&gt;
&lt;h2 id="demo"&gt;Demo&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;md_katex&lt;/strong&gt; is a KaTeX plugin initially developed for use in this blog with &lt;strong&gt;Pelican&lt;/strong&gt;. It focuses on rendering mathematical formulas directly in the browser using the KaTeX JavaScript library, rather than performing offline conversions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="inline-formula"&gt;Inline Formula&lt;/h3&gt;
&lt;p&gt;The md_katex extension supports two inline formula styles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GitLab Style&lt;/strong&gt;: Delimited by &lt;code&gt;$`&lt;/code&gt; and &lt;code&gt;`$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Brackets Style&lt;/strong&gt;:  Delimited by &lt;code&gt;\(&lt;/code&gt; and &lt;code&gt;\)&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Markdown Example&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;GitLab&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;style&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;inline&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="nv"&gt;mula&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;``&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;`E=mc^2`&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;``&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;`E=mc^2`&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;

&lt;span class="nv"&gt;Brackets&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;style&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;inline&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="nv"&gt;mula&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;``&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;\&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;E&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;mc&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;\&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;``&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;\&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;E&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;mc&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;\&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Rendered Output:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GitLab-style inline formula &lt;code&gt;$`E=mc^2`$&lt;/code&gt; : &lt;span class="math inline"&gt;E=mc^2&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Brackets-style inline formula &lt;code&gt;\(E=mc^2\)&lt;/code&gt;: &lt;span class="math inline"&gt;E=mc^2&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Generated HTML Source:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;GitLab-style inline formula &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;$`E=mc^2`$&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; : &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;math inline&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;E=mc^2&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Brackets-style inline formula &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;\(E=mc^2\)&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;: &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;math inline&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;E=mc^2&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="block-formula"&gt;Block Formula&lt;/h3&gt;
&lt;p&gt;The md_katex extension also supports rendering block-level formulas in three styles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GitLab Style&lt;/strong&gt;: Delimited by &lt;code&gt;~~~math&lt;/code&gt; and &lt;code&gt;~~~&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Brackets Style&lt;/strong&gt;:  Delimited by &lt;code&gt;\[&lt;/code&gt; and &lt;code&gt;\]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GitHub Style&lt;/strong&gt;:  Delimited by &lt;code&gt;$$&lt;/code&gt; and &lt;code&gt;$$&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="gitlab-style-block-formula"&gt;GitLab-style Block Formula&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Markdown Example&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;```math
\int_0^\infty e^{-x^2} dx = \frac{\sqrt{\pi}}{2}
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Rendered Output:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="math display"&gt;
\int_0^\infty e^{-x^2} dx = \frac{\sqrt{\pi}}{2}
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Generated HTML Source:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;math display&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
\int_0^\infty e^{-x^2} dx = \frac{\sqrt{\pi}}{2}
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="brackets-style-block-formula"&gt;Brackets-style Block Formula&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Markdown Example&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;\[
\int_0^\infty e^{-x^2} dx = \frac{\sqrt{\pi}}{2}
\]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Rendered Output:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="math display"&gt;
\int_0^\infty e^{-x^2} dx = \frac{\sqrt{\pi}}{2}
&lt;/div&gt;
&lt;h4 id="github-style-block-formula"&gt;GitHub-style Block Formula&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Markdown Example&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;$$&lt;/span&gt;
\&lt;span class="nv"&gt;int_0&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;\&lt;span class="no"&gt;inf&lt;/span&gt;&lt;span class="nv"&gt;ty&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;dx&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;\&lt;span class="nv"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;\&lt;span class="nv"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;\&lt;span class="nv"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;}}{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;$$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Rendered Output:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="math display"&gt;
\int_0^\infty e^{-x^2} dx = \frac{\sqrt{\pi}}{2}
&lt;/div&gt;
&lt;h2 id="installation"&gt;Installation&lt;/h2&gt;
&lt;p&gt;First, ensure that you have the &lt;code&gt;python-markdown&lt;/code&gt; library installed. Then, you can install this plugin using the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;md_katex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;The generated HTML will include KaTeX formulas, and you will need to load KaTeX JavaScript on the frontend to complete the rendering.&lt;/p&gt;
&lt;p&gt;To ensure proper rendering, include the KaTeX script via a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag in your HTML page. For example, using a CDN:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://cdn.jsdelivr.net/npm/katex@0.16.11/dist/katex.min.css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;integrity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;sha384-nB0miv6/jRmo5UMMR1wu3Gz6NLsoTkbqJghGIsx//Rlm+ZU03BU6SQNC66uf4l5+&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;crossorigin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;anonymous&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;defer&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://cdn.jsdelivr.net/npm/katex@0.16.11/dist/katex.min.js&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;integrity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;sha384-7zkQWkzuo3B5mTepMUcHkMB5jZaolc2xDwL6VFqjFALcbeS9Ggm/Yr2r3Dy4lfFg&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;crossorigin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;anonymous&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;DOMContentLoaded&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;mathElements&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;math&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;macros&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;mathElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;texText&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;mathElements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;firstChild&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mathElements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;tagName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SPAN&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;mathElements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;tagName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;===&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;DIV&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nx"&gt;katex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;texText&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;mathElements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;displayMode&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;mathElements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;display&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;throwOnError&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;macros&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;macros&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;fleqn&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}}});&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/dbzhang800/md_katex&lt;/li&gt;
&lt;li&gt;https://katex.org/docs&lt;/li&gt;
&lt;li&gt;https://python-markdown.github.io/&lt;/li&gt;
&lt;/ul&gt;</content><category term="Python"></category><category term="katex"></category><category term="markdown"></category></entry><entry><title>Pelican继续了解</title><link href="https://blog.debao.me/2024/10/a-deeper-dive-into-pelican/" rel="alternate"></link><published>2024-10-21T13:16:00+08:00</published><updated>2024-10-21T13:16:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-10-21:/2024/10/a-deeper-dive-into-pelican/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;重新捡起来 Pelican 写博客已经将近一年，见 &lt;a href="https://blog.debao.me/2023/11/hello-pelican-again/"&gt;Hello Pelican Again&lt;/a&gt;。由于开始用到大量公式，重新梳理一下Markdown的一些概念，并使用了katex和mermaid扩展，但是体验并不好，见&lt;a href="https://blog.debao.me/2024/05/notes-on-markdown/"&gt;Markdown小记 …&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;重新捡起来 Pelican 写博客已经将近一年，见 &lt;a href="https://blog.debao.me/2023/11/hello-pelican-again/"&gt;Hello Pelican Again&lt;/a&gt;。由于开始用到大量公式，重新梳理一下Markdown的一些概念，并使用了katex和mermaid扩展，但是体验并不好，见&lt;a href="https://blog.debao.me/2024/05/notes-on-markdown/"&gt;Markdown小记&lt;/a&gt;与&lt;a href="https://blog.debao.me/2024/09/notes-on-python-markdown-usage/"&gt;Python Markdown使用小记&lt;/a&gt;。另外，想看看&lt;a href="https://blog.debao.me/2023/11/notes-for-sass/"&gt;Sass相关&lt;/a&gt;以及&lt;a href="https://blog.debao.me/2023/12/python-flask-beginner-notes-2/"&gt;Jinja2相关内容&lt;/a&gt;以便于调整一下模板，也没看懂。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Pelican 是一个基于 Python 的静态网站生成器，广泛用于创建博客、个人网站、文档网站和项目展示页面。它支持 Markdown 和 reStructuredText 格式，允许用户通过模板引擎（如 Jinja2）定制页面布局&lt;/p&gt;
&lt;h2 id="pelican"&gt;Pelican源码结构&lt;/h2&gt;
&lt;p&gt;既然不准备换掉它，那就走马观花看看，顺便温习python知识点&lt;/p&gt;
&lt;h3 id="pyprojecttoml"&gt;pyproject.toml&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;pelican 从多年以前就开始使用 pyproject.toml 文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;pyproject.toml 是PEP 518 提出的标准配置文件，用于定义 Python 项目的构建工具和元数据。旨在为 Python 项目提供一种统一的、简洁的方式来配置构建工具链。&lt;/p&gt;
&lt;p&gt;在它之前，经常可见的文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;setup.py&lt;/li&gt;
&lt;li&gt;setup.cfg&lt;/li&gt;
&lt;li&gt;requirements.txt (不是完全取代)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文件由各个部分，主要的：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;部分&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[project]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;定义项目的元数据，如名称、版本、描述、作者等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[project.dependencies]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;声明项目的运行时依赖项，类似于 &lt;code&gt;requirements.txt&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[project.scripts]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;定义可以暴露为命令行的脚本，类似于 &lt;code&gt;entry_points&lt;/code&gt; 中的 &lt;code&gt;console_scripts&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[build-system]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;定义项目的构建工具和构建依赖（如 &lt;code&gt;setuptools&lt;/code&gt; 或 &lt;code&gt;poetry&lt;/code&gt;）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[tool]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;各种工具（如 &lt;code&gt;black&lt;/code&gt;, &lt;code&gt;pytest&lt;/code&gt; 等）的配置区域。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;pyproject.toml 参考链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://packaging.python.org/en/latest/specifications/pyproject-toml/#pyproject-toml-spec&lt;/li&gt;
&lt;li&gt;https://peps.python.org/pep-0518/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于当前penlican项目，它的scripts部分如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[project.scripts]&lt;/span&gt;
&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pelican.__main__:main&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;pelican-import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pelican.tools.pelican_import:main&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;pelican-plugins&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pelican.plugins._utils:list_plugins&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;pelican-quickstart&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pelican.tools.pelican_quickstart:main&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;pelican-themes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pelican.tools.pelican_themes:main&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;对应我们在命令行下可用的命令，特别是第一个。对应主命令 pelican。&lt;/p&gt;
&lt;p&gt;另外，我们执行如下命令时，调用的也是它：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;python -m&lt;/code&gt; 的模块搜索路径遵循 sys.path，顺序为当前工作目录、PYTHONPATH 环境变量、标准库路径和第三方库路径。它运行模块和包中的代码，包的入口文件为 &lt;code&gt;__main__.py&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="mainpy"&gt;&lt;strong&gt;main&lt;/strong&gt;.py 文件&lt;/h3&gt;
&lt;p&gt;脚本入口文件，真正代码位于别处：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="__init__py"&gt;__init__py 文件&lt;/h3&gt;
&lt;p&gt;真正的入口文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Pelican&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;init_plugins&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;main() 是命令行入口，解析命令行并决定执行转换操作还是listen操作。&lt;/li&gt;
&lt;li&gt;Pelican.run() 函数，函数内生成各个Generator，并按特定顺序执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="generatorspy"&gt;generators.py文件&lt;/h3&gt;
&lt;p&gt;生成Generator后，创建一个上下文（context）。该上下文包含来自命令行的设置，以及如果提供了设置文件，则也包含其内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;调用每个生成器的 &lt;code&gt;generate_context()&lt;/code&gt; 方法，更新上下文。&lt;/li&gt;
&lt;li&gt;创建一个写入器（writer）对象，并将其传递给每个生成器的&lt;code&gt;generate_output()&lt;/code&gt; 方法。&lt;/li&gt;
&lt;li&gt;注意：Generator的&lt;code&gt;get_template()&lt;/code&gt;方法&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="mermaid"&gt;
classDiagram
    class Generator {
        +get_template(self, name)
    }

    class CachingGenerator {
    }

    class TemplatePagesGenerator {
        +generate_output(writer)
    }

    class StaticGenerator {
        +generate_context()
        +generate_output(writer)
    }

    class SourceFileGenerator {
        +generate_context()
        +generate_output(writer)
    }

    class ArticleGenerator {
        +generate_context()
        +generate_output(writer)
        +generate_feeds(writer)
        +generate_pages(writer)
    }

    class PagesGenerator {
        +generate_context()
        +generate_output(writer)
    }

    Generator &lt;|-- CachingGenerator
    Generator &lt;|-- TemplatePagesGenerator
    Generator &lt;|-- StaticGenerator
    Generator &lt;|-- SourceFileGenerator

    CachingGenerator &lt;|-- ArticleGenerator
    CachingGenerator &lt;|-- PagesGenerator
&lt;/div&gt;

&lt;p&gt;以简单的PagesGenerator为例：&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;generate_context&lt;/code&gt;阶段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读取指定路径，搜索其中特定的文件（比如 .markdown文件等）&lt;/li&gt;
&lt;li&gt;使用Reader，将文件加载到特定对象中&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 &lt;code&gt;generate_output&lt;/code&gt;阶段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用上面的context 和 Writer，写入生成的内容。&lt;/li&gt;
&lt;li&gt;对于ArticleGenerator、PagesGenerator以及TemplatePageGenerator，都会调用Writer的&lt;code&gt;write_file()&lt;/code&gt;函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="jinja2"&gt;jinja2模板加载&lt;/h4&gt;
&lt;p&gt;模板加载也在这个文件内，通过这个文件，对接jinja2知识&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;
&lt;span class="normal"&gt;63&lt;/span&gt;
&lt;span class="normal"&gt;64&lt;/span&gt;
&lt;span class="normal"&gt;65&lt;/span&gt;
&lt;span class="normal"&gt;66&lt;/span&gt;
&lt;span class="normal"&gt;67&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;jinja2&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;BaseLoader&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;ChoiceLoader&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;FileSystemLoader&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;PrefixLoader&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;TemplateNotFound&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Generator&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
     &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;settigns&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ChoiceLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="p"&gt;[&lt;/span&gt;
                    &lt;span class="n"&gt;FileSystemLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_templates_path&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="n"&gt;simple_loader&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# implicit inheritance&lt;/span&gt;
                    &lt;span class="n"&gt;PrefixLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;!simple&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;simple_loader&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;!theme&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;theme_loader&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;),&lt;/span&gt;  &lt;span class="c1"&gt;# explicit ones&lt;/span&gt;
                &lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;JINJA_ENVIRONMENT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;

                &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Template list: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list_templates&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

        &lt;span class="c1"&gt;# provide utils.strftime as a jinja filter&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filters&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;strftime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DateFormatter&lt;/span&gt;&lt;span class="p"&gt;()})&lt;/span&gt;

        &lt;span class="c1"&gt;# get custom Jinja filters from user settings&lt;/span&gt;
        &lt;span class="n"&gt;custom_filters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;JINJA_FILTERS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filters&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;custom_filters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# get custom Jinja globals from user settings&lt;/span&gt;
        &lt;span class="n"&gt;custom_globals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;JINJA_GLOBALS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;globals&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;custom_globals&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# get custom Jinja tests from user settings&lt;/span&gt;
        &lt;span class="n"&gt;custom_tests&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;JINJA_TESTS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;plugin_enabled&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;plugin_enabled&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;plugin_list&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PLUGINS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;custom_tests&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Return the template by name.&lt;/span&gt;
&lt;span class="sd"&gt;        Use self.theme to get the templates to use, and return a list of&lt;/span&gt;
&lt;span class="sd"&gt;        templates ready to use with Jinja2.&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_templates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;ext&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TEMPLATE_EXTENSIONS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_templates&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;
                &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;TemplateNotFound&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;continue&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_templates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;PelicanTemplateNotFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;[templates] unable to load &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;[&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;] from &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s2"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TEMPLATE_EXTENSIONS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
                        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_templates_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_templates&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="readerspy"&gt;readers.py文件&lt;/h3&gt;
&lt;p&gt;这是用于解析各种源文件的地方。主要关注MarkdownReader。&lt;/p&gt;
&lt;div class="mermaid"&gt;
classDiagram
    class BaseReader {
        +process_metadata(name, value)
        +read(source_path)
    }

    class RstReader {
        +_parse_metadata(document, source_path) dict
        +read(source_path) :(content, metadata)
    }

    class MarkdownReader {
        -_parse_metadata(meta) dict
        +read(source_path) :(content, metadata)
    }

    class HTMLReader {
        +read(filename) :(content, metadata)
    }

    BaseReader &lt;|-- RstReader
    BaseReader &lt;|-- MarkdownReader
    BaseReader &lt;|-- HTMLReader
&lt;/div&gt;

&lt;p&gt;对MarkdownReader，可以看到基本上没有特殊处理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;处理配置文件中的参数，使用参数直接创建python的Markdown对象&lt;/li&gt;
&lt;li&gt;使用Makrdown对象的&lt;code&gt;convert()&lt;/code&gt;方法执行转换操作&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MarkdownReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseReader&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Reader for Markdown files&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;enabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Markdown&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;file_extensions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;md&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;markdown&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mkd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mdown&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MARKDOWN&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setdefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;extension_configs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;
        &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setdefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;extensions&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;extension_configs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;extensions&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;extensions&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;markdown.extensions.meta&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;extensions&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;extensions&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;markdown.extensions.meta&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_source_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;source_path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Parse content and metadata of markdown files&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_source_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;source_path&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_md&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MARKDOWN&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;pelican_open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_md&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;hasattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_md&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Meta&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;metadata&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_parse_metadata&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_md&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;metadata&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;metadata&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="writerspy"&gt;writers.py文件&lt;/h3&gt;
&lt;p&gt;Wrriter类主要两个函数：&lt;/p&gt;
&lt;div class="mermaid"&gt;
classDiagram
    class Writer {
        +write_feed(elements, context, path=None, url=None, feed_type="atom", ...)
        +write_file(name, template, context, relative_urls=False, paginated=None, template_name=None, ...)
    }

    Writer --&gt; Paginator
&lt;/div&gt;

&lt;p&gt;主要的函数 &lt;code&gt;write_file()&lt;/code&gt;中有一个辅助函数&lt;code&gt;_write_file()&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_write_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;localcontext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Render the template write the file.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
            &lt;span class="c1"&gt;# set localsiteurl for context so that Contents can adjust links&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;localcontext&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;localsiteurl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;localsiteurl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;localcontext&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;localsiteurl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;localcontext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sanitised_join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;pass&lt;/span&gt;

            &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_open_w&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;从这儿可以看到，模板的 render() 方法被调用。&lt;/p&gt;
&lt;h2 id="plugins"&gt;插件（plugins）&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;插件接口？&lt;/li&gt;
&lt;li&gt;插件的组织结构怎么样？&lt;/li&gt;
&lt;li&gt;Pelican如何搜索插件？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_1"&gt;插件接口&lt;/h3&gt;
&lt;p&gt;Pelican的插件文件的定义很简单，只需要提供 &lt;code&gt;register()&lt;/code&gt;文件作为插件入口！&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pelican&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;signals&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;register&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;signals&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initialized&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;所有的插件是通过订阅-监听机制来工作的，Pelican中称之为signals。所以register()中主要为需要监听的信号注册响应函数。&lt;/p&gt;
&lt;h3 id="_2"&gt;插件结构&lt;/h3&gt;
&lt;p&gt;对于一个名为myplugin插件，其文件组织结构大致如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;├── pelican
│   └── plugins
│       └── myplugin
│           ├── __init__.py
│           └── ...
├── ...
└── pyproject.toml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;注意：pelican，pelican/plugins 文件夹下不包含其他文件。&lt;/p&gt;
&lt;p&gt;核心文件就一个 &lt;code&gt;__init__.py&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="_3"&gt;用途？&lt;/h3&gt;
&lt;p&gt;Python写的这东西，尽管简陋，确实灵活&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://docs.getpelican.com/en/latest/plugins.html&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比如：添加一个新的Reader，以支持新的格式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从 BaseReader 派生，声明支持的文件后缀并实现特定的read()函数&lt;/li&gt;
&lt;li&gt;对&lt;code&gt;readers_init&lt;/code&gt;信号进行注册相应，以便于添加新的reader&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pelican&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;signals&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pelican.readers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BaseReader&lt;/span&gt;

&lt;span class="c1"&gt;# Create a new reader class, inheriting from the pelican.reader.BaseReader&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;NewReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseReader&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;enabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;  &lt;span class="c1"&gt;# Yeah, you probably want that :-)&lt;/span&gt;

    &lt;span class="c1"&gt;# The list of file extensions you want this reader to match with.&lt;/span&gt;
    &lt;span class="c1"&gt;# If multiple readers were to use the same extension, the latest will&lt;/span&gt;
    &lt;span class="c1"&gt;# win (so the one you&amp;#39;re defining here, most probably).&lt;/span&gt;
    &lt;span class="n"&gt;file_extensions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yeah&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c1"&gt;# You need to have a read method, which takes a filename and returns&lt;/span&gt;
    &lt;span class="c1"&gt;# some content and the associated metadata.&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;metadata&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Oh yeah&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;category&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2012-12-01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;parsed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;parsed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;process_metadata&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Some content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parsed&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_reader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;readers&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;readers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reader_classes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yeah&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NewReader&lt;/span&gt;

&lt;span class="c1"&gt;# This is how pelican works.&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;register&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;signals&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readers_init&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add_reader&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="theme"&gt;主题（theme）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;这玩意主要是前端的工作了，Jinja2模板，样式表，sass 等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;penlican提供一些第三方的主题可用，但一般用户都定制一下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://docs.getpelican.com/en/latest/themes.html&lt;/li&gt;
&lt;li&gt;https://github.com/getpelican/pelican-themes&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;模板结构&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;static部分用于存放主题的静态资源文件，包括 CSS、图片、JavaScript 等。Pelican 会将此目录中的文件复制到输出目录中，与生成的 HTML 文件一起发布。&lt;/li&gt;
&lt;li&gt;templates目录下的Jinja2模板文件用于定义每个页面的布局和内容显示方式。Pelican 会根据内容类型（文章、标签、分类等）选择相应的模板文件来生成 HTML 页面。下面列出的这些模板必须都存在。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mytheme/
├── static
│   ├── css
│   ├── js
│   └── images
└── templates
    ├── archives.html         // 显示归档页面
    ├── article.html          // 为每篇文章生成页面
    ├── author.html           // 为每个作者生成页面
    ├── authors.html          // 列出所有作者
    ├── categories.html       // 列出所有分类
    ├── category.html         // 为每个分类生成页面
    ├── index.html            // 网站首页，列出所有文章
    ├── page.html             // 为每个页面生成内容（例如“关于我们”页面）
    ├── period_archives.html  // 按时间段显示归档
    ├── tag.html              // 为每个标签生成页面
    └── tags.html             // 列出所有标签（可以是标签云）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_5"&gt;变量&lt;/h3&gt;
&lt;p&gt;Pelican为模板提供的一些常规变量&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;变量&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;output_file&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当前正在生成的文件名。例如，当 Pelican 正在渲染首页时，&lt;code&gt;output_file&lt;/code&gt; 的值为 &lt;code&gt;"index.html"&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;articles&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文章列表，按日期降序排列。所有元素都是 &lt;code&gt;Article&lt;/code&gt; 对象，可访问其属性（如标题、摘要、作者等）。有时会被覆盖（例如在标签页面中）。在这种情况下，可以在 &lt;code&gt;all_articles&lt;/code&gt; 变量中找到信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dates&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;相同的文章列表，但按日期升序排列。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hidden_articles&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;隐藏的文章列表。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;drafts&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;草稿文章列表。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;period_archives&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;一个字典，包含与时间段归档相关的元素（如果启用）。详见“Listing and Linking to Period Archives”部分的细节。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;authors&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;(作者, 文章) 元组的列表，包含所有作者及其对应的文章。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;categories&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;(分类, 文章) 元组的列表，包含所有分类及其对应的文章。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tags&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;(标签, 文章) 元组的列表，包含所有标签及其对应的文章。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;页面列表。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hidden_pages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;隐藏的页面列表。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;draft_pages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;草稿页面列表。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;另外，在配置文件 pelicanconf.py 中，可以自由定义变量（注意不要和pelian内置变量冲突），这些自定义变量，在jinja2模板中也可以直接用。&lt;/p&gt;
&lt;h3 id="sass"&gt;sass&lt;/h3&gt;
&lt;p&gt;兜兜转转，还是回来折腾折腾这个 octopress 这个久久没人维护的主题。克隆一下进行折腾&lt;a href="https://github.com/dbzhang800/pelican-octopress-theme"&gt;pelican-octopress-theme&lt;/a&gt;：&lt;/p&gt;
&lt;p&gt;它的样式表是通过sass来生成的，更改样式表要手动修改这些scss文件，而后使用sass工具来生成目标.css。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个东西变化太多，先勉强从老的ruby版本一直到dart版本。还有一堆警告存在。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先，安装nodejs及其下的sass包&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;npm install -g sass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;而后&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sass&lt;span class="w"&gt; &lt;/span&gt;main.scss&lt;span class="w"&gt; &lt;/span&gt;../static/css/main.css&lt;span class="w"&gt; &lt;/span&gt;--style&lt;span class="w"&gt; &lt;/span&gt;compressed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="katex"&gt;katex&lt;/h3&gt;
&lt;p&gt;Pelican的katex支持有两个方案。但都是离线转换方案，在Windows下奇慢无比（数十分钟），即使在github的actions，也是分钟级别的。&lt;/p&gt;
&lt;p&gt;实在无法接受，故而当前blog 自己编写Markdown插件，不进行离线转换。速度只需数秒。&lt;/p&gt;
&lt;h4 id="markdown-katex"&gt;markdown-katex&lt;/h4&gt;
&lt;p&gt;网站：https://github.com/mbarkhau/markdown-katex&lt;/p&gt;
&lt;p&gt;&lt;code&gt;markdown-katex&lt;/code&gt; 插件通过调用 KaTeX 进行 &lt;strong&gt;离线转换&lt;/strong&gt;，从而生成不需要浏览器加载 JavaScript 的公式。然而：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在我的个人电脑（Windows 10）上，性能表现非常差，尽管在 GitHub Actions 环境中速度尚可。&lt;/li&gt;
&lt;li&gt;该插件只支持 &lt;strong&gt;GitLab&lt;/strong&gt; 风格的公式分割符。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="pelican-katex"&gt;pelican-katex&lt;/h4&gt;
&lt;p&gt;网站：https://github.com/martenlienen/pelican-katex&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pelican-katex&lt;/code&gt; 也是一个基于 KaTeX 的 &lt;strong&gt;离线转换&lt;/strong&gt; 插件，且封装为 Pelican 插件，适合使用 Pelican 的用户。在实现上，它是一个 Markdown 插件，被 Pelican 通过传递对象的方式调用。&lt;/p&gt;
&lt;h2 id="getpelican"&gt;getpelican使用问题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;它使用 python-markdown 不支持 commmark，与主流的Markdown编辑器由一定的兼容性问题。&lt;/li&gt;
&lt;li&gt;内部链接使用自定义变量&lt;code&gt;{filenme}&lt;/code&gt;、&lt;code&gt;{static}&lt;/code&gt;等，主流的Markdown编辑器不支持。&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="front-matter"&gt;front matter&lt;/h3&gt;
&lt;p&gt;现在其他软件YAML Front Matter用的比较多，可以使用扩展&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://pypi.org/project/pelican-yaml-metadata/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://pypi.org/project/markdown-full-yaml-metadata/&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;I am the title of the article&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;注意，pelican源码中默认会启动python-markdown的自己的Mate扩展。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其他编辑器比如vscode等可以识别并隐藏这部分。&lt;/p&gt;
&lt;h3 id="nest-list"&gt;nest list&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;嵌套用4个空格，这是Python Markdown非常坚持的一点。见Issue：https://github.com/Python-Markdown/markdown/issues/3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;针对python markdown和其他软件缩进空格不一致问题，可以&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://pypi.org/project/mdx-truly-sane-lists/&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_6"&gt;其他扩展&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;方案！ 手动写Python Markdown扩展，书写makrdown时使用编辑器常规使用的格式，送入pelican时在内存中自动转换一下。这个终极灵活&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如如果没有可心的katex扩展，那就直接写一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://pypi.org/project/md-katex/&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="commonmark"&gt;commonmark兼容？&lt;/h3&gt;
&lt;p&gt;另外，pelican也有三方的pelican-markdown-it-reader插件，它使用更符合markdown-it 生态的 markdown-it-py。先观望，后面考虑是否切换。&lt;/p&gt;
&lt;h2 id="_7"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://docs.getpelican.com/en/latest/internals.html&lt;/li&gt;
&lt;li&gt;https://github.com/getpelican/pelican&lt;/li&gt;
&lt;li&gt;https://peps.python.org/pep-0518/&lt;/li&gt;
&lt;li&gt;https://pypi.org/project/pelican-markdown-it-reader/&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="module"&gt;
    import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.esm.min.mjs';
    mermaid.initialize({ startOnLoad: true });
&lt;/script&gt;</content><category term="Tools"></category><category term="pelican"></category><category term="katex"></category><category term="markdown"></category></entry><entry><title>物理中的场与势是什么鬼？</title><link href="https://blog.debao.me/2024/10/what-the-heck-are-fields-and-potentials-in-physics/" rel="alternate"></link><published>2024-10-20T23:49:00+08:00</published><updated>2024-10-20T23:49:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-10-20:/2024/10/what-the-heck-are-fields-and-potentials-in-physics/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;标势、矢势都是什么东西。继续从物理门外汉角度找点浅显的资料捋一捋电磁学的概念...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="field"&gt;场（Field）的概念&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;这个Field（场）与数学中的 …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;标势、矢势都是什么东西。继续从物理门外汉角度找点浅显的资料捋一捋电磁学的概念...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="field"&gt;场（Field）的概念&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;这个Field（场）与数学中的Field（域）以及编程语言中的Field（字段）没有任何关系，尽管对应同一个单词。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;场&lt;/strong&gt;（Field）是指在空间中的每一点都有一个物理量与之相关联的数学结构。这个物理量可以是标量、矢量或张量，依赖于场的性质。场通过这些物理量描述了某种分布式的物理效应。&lt;/p&gt;
&lt;p&gt;场描述了空间中物质或能量的分布，以及它们如何相互作用。场是连续的，通常使用微分方程来描述其变化。&lt;/p&gt;
&lt;h3 id="_1"&gt;分类&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;标量场（Scalar Field）&lt;/strong&gt;：每个空间点都与一个标量（单一数值）相关联的场。例如，温度场是一个标量场，每一点的温度是一个标量值。重力势场、压力场等都是标量场。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;矢量场（Vector Field）&lt;/strong&gt;：每个空间点都与一个矢量（具有方向和大小的量）相关联的场。例如，速度场是一个矢量场，每一个点的速度都有大小和方向。重力场、电场、磁场等都是矢量场。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;张量场（Tensor Field）&lt;/strong&gt;：每个空间点都与一个张量（具有多个分量的物理量）相关联的场。张量场通常描述的是更复杂的物理现象，如应力场、电磁场张量、广义相对论中的度量场等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="equipotential-surfacefield-line"&gt;标量场的等位面（Equipotential Surface）与矢量场的矢量线（Field Line）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;等位面&lt;/strong&gt;：标量场中，所有具有相同标量值的点组成的面。在等位面上，标量值恒定不变，标量场的梯度（如电场或重力场）总是垂直于等位面。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;矢量线&lt;/strong&gt;：矢量场中，为了直观表示矢量的分布，引入矢量线概念。它是这样的曲线，曲线上每点的切线方向与该点的矢量场方向一致。矢量线表示场的方向和强度分布。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;典型情况下，电势是标量场，有等势面的概念，对应的电场强度是矢量场，有电场线的概念。列表对比一下两个概念：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;等位面（Equipotential Surface）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;矢量线（Field Line）&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;标量场中所有具有相同标量值的点构成的面&lt;/td&gt;
&lt;td&gt;矢量场中与矢量方向一致的曲线&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方向关系&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;矢量场的梯度总是垂直于等位面&lt;/td&gt;
&lt;td&gt;矢量线的切线方向与矢量场的方向相同&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;移动后的变化&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;沿等位面移动时，势能不变，场力不做功&lt;/td&gt;
&lt;td&gt;沿矢量线移动时，势能发生变化&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;几何表现&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;等位面是封闭的连续曲面，标量值在面上恒定&lt;/td&gt;
&lt;td&gt;矢量线表示场的方向，线的密度表示场强度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;相互关系&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;等位面与矢量线总是相互垂直（在静态电场、引力场中）&lt;/td&gt;
&lt;td&gt;矢量线与等位面垂直，不相交&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;物理意义&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;反映标量场的能量分布，帮助理解势的分布&lt;/td&gt;
&lt;td&gt;反映矢量场的方向和强度，帮助理解场的作用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="gradientdivergencecurl"&gt;梯度（Gradient）、散度（Divergence）、旋度（Curl）&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;标量场&lt;/strong&gt;有梯度的概念，表示标量场变化最快的方向和速率；而&lt;strong&gt;矢量场&lt;/strong&gt;有散度和旋度的概念，分别表示场的发散性（源或汇）和旋转性（循环或涡流）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;梯度（Gradient）：标量场的梯度是一个矢量场，描述标量场在各个方向上的变化率。&lt;/li&gt;
&lt;li&gt;散度（Divergence）：散度是一个标量，衡量矢量场的"源"或"汇"的强度。它表示矢量场是否在某点向外发散或向内收缩。&lt;/li&gt;
&lt;li&gt;旋度（Curl）：旋度是一个矢量，描述矢量场在某点绕某一轴旋转的趋势。它表示矢量场的循环性或旋转性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="potential-fieldtube-like-fieldtube-like-field"&gt;有势场（Potential Field）、管型场（Tube-like Field）、管型场（Tube-like Field）&lt;/h3&gt;
&lt;p&gt;三种比较重要的场&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;有势场（Potential Field）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;管型场（Tube-like Field）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;调和场（Harmonic Field）&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;可以通过标量势函数描述的矢量场：&lt;span class="math inline"&gt;\mathbf{F} = -\nabla \phi&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;散度为零的矢量场&lt;/td&gt;
&lt;td&gt;满足拉普拉斯方程 &lt;span class="math inline"&gt;\nabla^2 \phi = 0&lt;/span&gt; 的场&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;旋度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;旋度为零：&lt;span class="math inline"&gt;\nabla \times \mathbf{F} = 0&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;不一定为零&lt;/td&gt;
&lt;td&gt;旋度为零：&lt;span class="math inline"&gt;\nabla \times \mathbf{F} = 0&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;散度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;不一定为零&lt;/td&gt;
&lt;td&gt;散度为零：&lt;span class="math inline"&gt;\nabla \cdot \mathbf{F} = 0&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;散度为零：&lt;span class="math inline"&gt;\nabla \cdot \mathbf{F} = 0&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;通量守恒&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;无特定要求&lt;/td&gt;
&lt;td&gt;通量在管内保持守恒&lt;/td&gt;
&lt;td&gt;通量守恒，因无源或汇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;常见例子&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;重力场、电场（静电场）等&lt;/td&gt;
&lt;td&gt;流体力学中的不可压缩流体、磁场线等&lt;/td&gt;
&lt;td&gt;静电场、稳态热传导、引力场等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;物理意义&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;描述能量分布，场由标量势的梯度表示&lt;/td&gt;
&lt;td&gt;描述无源、不可压缩的连续场，通量守恒&lt;/td&gt;
&lt;td&gt;描述无源、无旋且无散的平稳场分布&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;场线特性&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;场线无旋，表示场方向是势变化最快的方向&lt;/td&gt;
&lt;td&gt;场线连续，不分叉，类似流体流动&lt;/td&gt;
&lt;td&gt;场线无旋、无散，且满足拉普拉斯方程&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="potential"&gt;势（Potential）的概念&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;势本身就是一个场（Field），它与其他场（电场、磁场等）之间通过梯度或旋度等微分运算联系在一起。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;势&lt;/strong&gt;（Potential）是描述场的一种标量或矢量函数，通常用于表示系统中与场有关的能量状态。势的主要作用是帮助&lt;strong&gt;简化复杂的场问题&lt;/strong&gt;，特别是在涉及力和能量的情况下。&lt;/p&gt;
&lt;h3 id="_2"&gt;势与位？&lt;/h3&gt;
&lt;p&gt;中文翻译似乎很统一？比如下面三个是一个概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;磁矢势&lt;/li&gt;
&lt;li&gt;磁矢位&lt;/li&gt;
&lt;li&gt;矢量磁位&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="helmholtzs-theorem"&gt;亥姆霍兹定理（Helmholtz's theorem）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;矢量场可以分解成 无旋场部分 和 无散场部分。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无旋场部分取决于散度源 和 界面上的 法向分量；&lt;/li&gt;
&lt;li&gt;无散场部分取决于旋度源 和 界面上的 切向分量。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;亥姆霍兹定理指出：&lt;/p&gt;
&lt;p&gt;任何光滑且快速衰减的向量场 &lt;span class="math inline"&gt;\mathbf{F}(\mathbf{r})&lt;/span&gt; 都可以唯一地分解为&lt;strong&gt;无旋场&lt;/strong&gt;和&lt;strong&gt;无散场&lt;/strong&gt;的和，即：&lt;/p&gt;
&lt;div class="math display"&gt;
\mathbf{F}(\mathbf{r}) = -\nabla \phi(\mathbf{r}) + \nabla \times \mathbf{A}(\mathbf{r})
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\phi(\mathbf{r})&lt;/span&gt; 是&lt;strong&gt;标量势&lt;/strong&gt;，描述的是场的无旋（或梯度）部分。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\mathbf{A}(\mathbf{r})&lt;/span&gt; 是&lt;strong&gt;矢量势&lt;/strong&gt;，描述的是场的无散（或旋度）部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;亥姆霍兹定理的推导基于以下两条公式：&lt;/p&gt;
&lt;p&gt;标量势 &lt;span class="math inline"&gt;\Phi(\mathbf{r})&lt;/span&gt; 的定义是：&lt;/p&gt;
&lt;div class="math display"&gt;
\Phi(\mathbf{r}) = \frac{1}{4\pi} \int_V \frac{\nabla' \cdot \mathbf{F}(\mathbf{r}')}{|\mathbf{r} - \mathbf{r}'|} dV' - \frac{1}{4\pi} \oint_S \frac{\hat{n}' \cdot \mathbf{F}(\mathbf{r}')}{|\mathbf{r} - \mathbf{r}'|} dS'
&lt;/div&gt;

&lt;p&gt;矢量势 &lt;span class="math inline"&gt;\mathbf{A}(\mathbf{r})&lt;/span&gt; 的定义是：&lt;/p&gt;
&lt;div class="math display"&gt;
\mathbf{A}(\mathbf{r}) = \frac{1}{4\pi} \int_V \frac{\nabla' \times \mathbf{F}(\mathbf{r}')}{|\mathbf{r} - \mathbf{r}'|} dV' - \frac{1}{4\pi} \oint_S \frac{\hat{n}' \times \mathbf{F}(\mathbf{r}')}{|\mathbf{r} - \mathbf{r}'|} dS'
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\mathbf{r}&lt;/span&gt; 是观察点的坐标。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\mathbf{r}'&lt;/span&gt; 是源点的坐标。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\hat{n}'&lt;/span&gt; 是边界面 &lt;span class="math inline"&gt;S&lt;/span&gt; 上的单位法向量。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;dV'&lt;/span&gt; 是源点处的体积分元素。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;dS'&lt;/span&gt; 是边界面上的面积元素。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当向量场 &lt;span class="math inline"&gt;\mathbf{F}(\mathbf{r})&lt;/span&gt; 在无穷远处衰减时，边界项通常可以忽略，公式简化为仅包含体积分的部分：&lt;/p&gt;
&lt;div class="math display"&gt;
\phi(\mathbf{r}) = \frac{1}{4\pi} \int_V \frac{\nabla' \cdot \mathbf{F}(\mathbf{r}')}{|\mathbf{r} - \mathbf{r}'|} dV'
\\
\mathbf{A}(\mathbf{r}) = \frac{1}{4\pi} \int_V \frac{\nabla' \times \mathbf{F}(\mathbf{r}')}{|\mathbf{r} - \mathbf{r}'|} dV'
&lt;/div&gt;

&lt;p&gt;通过这两个公式，可以将一个向量场分解为标量势和矢量势的组合。&lt;/p&gt;
&lt;p&gt;亥姆霍兹定理 是数学上的，需要对应到物理中...&lt;/p&gt;
&lt;h3 id="scalar-potential"&gt;标量势（Scalar Potential）&lt;/h3&gt;
&lt;p&gt;对标量场或矢量场的标量描述，通常表示某种能量。标量势在物理学中广泛应用，例如在引力场和电场中，势与力之间存在明确的关系。标量势场的梯度通常与场（如力场）相关联。&lt;/p&gt;
&lt;p&gt;例如，在引力场中，重力势能是标量势，重力场是该势的梯度：&lt;/p&gt;
&lt;div class="math display"&gt;
    \mathbf{g} = - \nabla \Phi
&lt;/div&gt;

&lt;p&gt;其中，&lt;span class="math inline"&gt;\Phi&lt;/span&gt; 是重力势能。&lt;/p&gt;
&lt;h3 id="vector-potential"&gt;矢量势（Vector Potential）&lt;/h3&gt;
&lt;p&gt;对矢量场的矢量描述，常用于描述与旋度相关的场。矢量势的旋度通常与矢量场（如磁场）相关联。&lt;/p&gt;
&lt;p&gt;例如，在磁场中，磁场与磁矢势的关系为：&lt;/p&gt;
&lt;div class="math display"&gt;
    \mathbf{B} = \nabla \times \mathbf{A}
&lt;/div&gt;

&lt;p&gt;其中，&lt;span class="math inline"&gt;\mathbf{A}&lt;/span&gt; 是磁矢势。&lt;/p&gt;
&lt;h2 id="electric-scalar-potential-magnetic-vector-potential"&gt;电标势（Electric Scalar Potential）与 磁矢势（Magnetic Vector Potential）&lt;/h2&gt;
&lt;h3 id="electric-scalar-potential"&gt;电标势（Electric Scalar Potential）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;在静电场中，电场强度E是矢量，有三个分量，而与之等价的电标势只有一个量。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;电标势是为了简化静电场的描述而引入的，它通过描述电场的能量分布，提供了对电场变化的直观理解，并且与电场的梯度密切相关。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：电场 &lt;span class="math inline"&gt;\mathbf{E}&lt;/span&gt; 可以表示为电标势 &lt;span class="math inline"&gt;\phi&lt;/span&gt; 的负梯度：&lt;/p&gt;
&lt;div class="math display"&gt;
  \mathbf{E} = -\nabla \phi
&lt;/div&gt;

&lt;p&gt;其中，&lt;span class="math inline"&gt;\phi&lt;/span&gt; 是电标势，&lt;span class="math inline"&gt;\mathbf{E}&lt;/span&gt; 是电场（静电场）。&lt;/p&gt;
&lt;h3 id="magnetic-vector-potential"&gt;磁矢势（Magnetic Vector Potential）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;磁感应强度B的散度恒为0，等价于它是另一个矢量场的旋度场（矢势的引入会自动满足B散度为0）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;磁矢势是为了简化磁场的计算而引入的，尤其在复杂电流分布的情况下，它是描述磁场的旋度形式。此外，在量子力学中，磁矢势具有重要的物理意义。特别是A-B效应显示，即使磁场为零，磁矢势的存在仍然能够影响电子的相位。【不再是一个辅助概念】&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：磁场 &lt;span class="math inline"&gt;\mathbf{B}&lt;/span&gt; 可以表示为磁矢势 &lt;span class="math inline"&gt;\mathbf{A}&lt;/span&gt; 的旋度：&lt;/p&gt;
&lt;div class="math display"&gt;
  \mathbf{B} = \nabla \times \mathbf{A}
&lt;/div&gt;

&lt;p&gt;其中，&lt;span class="math inline"&gt;\mathbf{A}&lt;/span&gt; 是磁矢势，&lt;span class="math inline"&gt;\mathbf{B}&lt;/span&gt; 是磁场。&lt;/p&gt;
&lt;h3 id="magnetic-scalar-potential"&gt;磁标势（Magnetic Scalar Potential）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;类似于电标势用于描述静电场。在某些特定条件下，磁场可以通过标量势来描述。它只能用于&lt;strong&gt;无电流区域&lt;/strong&gt;，例如在磁材料外部或远离电流源的区域。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;磁标势（通常用符号 &lt;span class="math inline"&gt;\phi_m&lt;/span&gt; 表示）是一个标量量，主要用于描述&lt;strong&gt;静磁场&lt;/strong&gt;（即时间不变的磁场）。然而，它的应用范围受限，尤其在存在电流分布时，磁标势的使用会遇到一些局限性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：在无电流的区域（即 &lt;span class="math inline"&gt;\nabla \times \mathbf{B} = 0&lt;/span&gt;情况下），磁场 &lt;span class="math inline"&gt;\mathbf{B}&lt;/span&gt; 可以表示为磁标势 &lt;span class="math inline"&gt;\psi&lt;/span&gt; 的负梯度：&lt;/p&gt;
&lt;div class="math display"&gt;
  \mathbf{B} = -\nabla \phi_m
&lt;/div&gt;

&lt;p&gt;其中，&lt;span class="math inline"&gt;\phi_m&lt;/span&gt; 是磁标势，&lt;span class="math inline"&gt;\mathbf{B}&lt;/span&gt; 是磁场。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用磁标势的好处（在能用的时候）是：简单，能列出关于它的拉普拉斯方程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="electric-scalar-potential_1"&gt;电矢势（Electric Scalar Potential）&lt;/h3&gt;
&lt;p&gt;与磁标势类似，在没有电荷的区域，根据E的散度为零。引入电矢势的概念。使用符号&lt;span class="math inline"&gt;\mathbf{A}_m&lt;/span&gt;表示。&lt;/p&gt;
&lt;h2 id="gauge-invariance"&gt;规范不变性（Gauge Invariance）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;规范不变性（Gauge Invariance）是现代物理学中一个核心概念，尤其在电磁学和量子场论中，它指的是物理系统的描述在某些特定的变换下保持不变。这意味着我们可以对某些场进行特定的数学变换，而物理观测量（如电场和磁场）不会发生变化。这种变换被称为&lt;strong&gt;规范变换（Gauge Transformation）&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在经典电磁学中，我们使用&lt;strong&gt;电标势&lt;/strong&gt; &lt;span class="math inline"&gt;\phi&lt;/span&gt; 和&lt;strong&gt;磁矢势&lt;/strong&gt; &lt;span class="math inline"&gt;\mathbf{A}&lt;/span&gt; 来描述电场和磁场。通过麦克斯韦方程，电场 &lt;span class="math inline"&gt;\mathbf{E}&lt;/span&gt; 和磁场 &lt;span class="math inline"&gt;\mathbf{B}&lt;/span&gt; 分别由以下关系给出：&lt;/p&gt;
&lt;div class="math display"&gt;
\mathbf{E} = -\nabla \phi - \frac{\partial \mathbf{A}}{\partial t}
\\
\mathbf{B} = \nabla \times \mathbf{A}
&lt;/div&gt;

&lt;p&gt;然而，电标势 &lt;span class="math inline"&gt;\phi&lt;/span&gt; 和磁矢势 &lt;span class="math inline"&gt;\mathbf{A}&lt;/span&gt; 本身并不是唯一的，物理上我们关心的是电场 &lt;span class="math inline"&gt;\mathbf{E}&lt;/span&gt; 和磁场 &lt;span class="math inline"&gt;\mathbf{B}&lt;/span&gt;，而不是具体的 &lt;span class="math inline"&gt;\phi&lt;/span&gt; 和 &lt;span class="math inline"&gt;\mathbf{A}&lt;/span&gt; 的数值。因此，电磁场允许我们对 &lt;span class="math inline"&gt;\phi&lt;/span&gt; 和 &lt;span class="math inline"&gt;\mathbf{A}&lt;/span&gt; 进行某种变换，使得电场和磁场不变，这就是&lt;strong&gt;规范不变性&lt;/strong&gt;（Gauge Invariance）。&lt;/p&gt;
&lt;h3 id="_3"&gt;麦克斯韦方程&lt;/h3&gt;
&lt;p&gt;将电标势 &lt;span class="math inline"&gt;\phi&lt;/span&gt; 和磁矢势 &lt;span class="math inline"&gt;\mathbf{A}&lt;/span&gt;带入如下麦克斯韦方程组：&lt;/p&gt;
&lt;div class="math display"&gt;
\nabla \cdot \mathbf{E} = \frac{\rho}{\epsilon_0}
\\
\nabla \cdot \mathbf{B} = 0
\\
\nabla \times \mathbf{E} = -\frac{\partial \mathbf{B}}{\partial t}
\\
\nabla \times \mathbf{B} = \mu_0 \mathbf{J} + \mu_0 \epsilon_0 \frac{\partial \mathbf{E}}{\partial t}
&lt;/div&gt;

&lt;p&gt;进行整理，可得到2个方程：&lt;/p&gt;
&lt;div class="math display"&gt;
\nabla^2 \phi + \frac{\partial}{\partial t} (\nabla \cdot \mathbf{A}) = -\frac{\rho}{\epsilon_0}
\\
\left( \nabla^2 \mathbf{A} - \mu_0 \epsilon_0 \frac{\partial^2 \mathbf{A}}{\partial t^2} \right) - \nabla \left( \nabla \cdot \mathbf{A} + \mu_0 \epsilon_0 \frac{\partial \phi}{\partial t} \right) = -\mu_0 \mathbf{J}
&lt;/div&gt;

&lt;p&gt;选取不同的规范，还可以得到不同的简化形式&lt;/p&gt;
&lt;h3 id="_4"&gt;规范变换：&lt;/h3&gt;
&lt;p&gt;电标势和磁矢势可以在以下形式下发生变化：&lt;/p&gt;
&lt;div class="math display"&gt;
\mathbf{A}' = \mathbf{A} + \nabla \chi
\\
\phi' = \phi - \frac{\partial \chi}{\partial t}
&lt;/div&gt;

&lt;p&gt;其中，&lt;span class="math inline"&gt;\chi&lt;/span&gt; 是任意的&lt;strong&gt;标量场&lt;/strong&gt;（规范函数）。&lt;/p&gt;
&lt;p&gt;经过这样的变换，电场和磁场保持不变：&lt;/p&gt;
&lt;div class="math display"&gt;
\mathbf{E}' = \mathbf{E}
\\
\mathbf{B}' = \mathbf{B}
&lt;/div&gt;

&lt;p&gt;因此，尽管势函数 &lt;span class="math inline"&gt;\phi&lt;/span&gt; 和 &lt;span class="math inline"&gt;\mathbf{A}&lt;/span&gt; 发生了变化，实际的电场和磁场并没有改变。也就是说，电磁学中的物理定律具有&lt;strong&gt;规范不变性&lt;/strong&gt;（Gauge Invariance）。&lt;/p&gt;
&lt;h3 id="_5"&gt;物理意义&lt;/h3&gt;
&lt;p&gt;规范不变性使得我们可以在不改变物理结果的情况下选择不同的势函数。这种自由度有以下几个重要的物理意义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;简化计算&lt;/strong&gt;：在实际问题中，选择合适的规范可以极大简化计算。例如，在静电学问题中，我们通常选择洛伦兹规范或库伦规范来简化电磁场方程的解。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;消除赘余自由度&lt;/strong&gt;：由于势函数并不唯一，规范变换允许我们消除多余的自由度，使得物理理论的描述更加简洁。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_6"&gt;常见的规范&lt;/h3&gt;
&lt;p&gt;尽管势函数具有一定的自由度，我们通常选择一个合适的&lt;strong&gt;规范&lt;/strong&gt;来简化计算或满足特定的边界条件。常见的规范包括：&lt;/p&gt;
&lt;h4 id="coulomb-gauge"&gt;库伦规范（Coulomb Gauge）&lt;/h4&gt;
&lt;p&gt;库伦规范：要求磁矢势的散度为零，即 &lt;span class="math inline"&gt;\nabla \cdot \mathbf{A} = 0&lt;/span&gt;。这种规范常用于静态场的问题。&lt;/p&gt;
&lt;p&gt;在库伦规范下，电场可以分解为电标势 &lt;span class="math inline"&gt;\phi&lt;/span&gt; 和磁矢势 &lt;span class="math inline"&gt;\mathbf{A}&lt;/span&gt; 的两部分：&lt;/p&gt;
&lt;div class="math display"&gt;
\mathbf{E} = -\nabla \phi - \frac{\partial \mathbf{A}}{\partial t}
&lt;/div&gt;

&lt;p&gt;其中，&lt;span class="math inline"&gt;\phi&lt;/span&gt; 满足泊松方程：&lt;/p&gt;
&lt;div class="math display"&gt;
\nabla^2 \phi = -\frac{\rho}{\epsilon_0}
&lt;/div&gt;
&lt;p&gt;这是与电荷密度 &lt;span class="math inline"&gt;\rho&lt;/span&gt; 直接相关的部分。&lt;/p&gt;
&lt;p&gt;假定无穷远处势为0，可以解出这个泊松方程：&lt;/p&gt;
&lt;div class="math display"&gt;
\phi(\mathbf{r}, t) = \frac{1}{4 \pi \epsilon_0} \int \frac{\rho(\mathbf{r}',t)}{|\mathbf{r} - \mathbf{r}'|} \, d^3\mathbf{r}'
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;需要注意，非静电场中，要求出电场强度，还需要求出磁矢势。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;库伦规范的缺点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;库伦规范尽管计算标势非常简单，但是矢势的计算非常复杂。在库伦规范中，矢势的微分方程如下：&lt;/p&gt;
&lt;div class="math display"&gt;
\nabla^2 \mathbf{A} - \mu_0 \epsilon_0 \frac{\partial^2 \mathbf{A}}{\partial t^2} = -\mu_0 \mathbf{J} + \mu_0 \epsilon_0 \nabla \frac{\partial \phi}{\partial t}
&lt;/div&gt;

&lt;p&gt;其中，&lt;span class="math inline"&gt;c&lt;/span&gt; 是光速，&lt;span class="math inline"&gt;\mathbf{J}&lt;/span&gt; 是电流密度。&lt;/p&gt;
&lt;h4 id="lorenz-gauge"&gt;洛伦兹规范（Lorenz Gauge）&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;与库伦规范相比，它对标势和矢势的处理是相同的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;洛伦兹规范要求 &lt;span class="math inline"&gt;\nabla \cdot \mathbf{A} + \frac{1}{c^2} \frac{\partial \phi}{\partial t} = 0&lt;/span&gt;。这种规范在相对论性电磁场中非常有用。&lt;/p&gt;
&lt;p&gt;在洛伦兹规范下，电场和磁场依旧可以通过电标势 &lt;span class="math inline"&gt;\phi&lt;/span&gt; 和磁矢势 &lt;span class="math inline"&gt;\mathbf{A}&lt;/span&gt; 来表示：&lt;/p&gt;
&lt;div class="math display"&gt;
\mathbf{E} = -\nabla \phi - \frac{\partial \mathbf{A}}{\partial t}
\\
\mathbf{B} = \nabla \times \mathbf{A}
&lt;/div&gt;

&lt;p&gt;在洛伦兹规范下，麦克斯韦方程可以写成&lt;strong&gt;达朗贝尔方程&lt;/strong&gt;（波动方程）的形式：&lt;/p&gt;
&lt;div class="math display"&gt;
\Box \phi = \frac{\rho}{\epsilon_0}
\\
\Box \mathbf{A} = \mu_0 \mathbf{J}
&lt;/div&gt;

&lt;p&gt;其中，&lt;span class="math inline"&gt;\Box&lt;/span&gt; 是达朗贝尔算符，定义为：&lt;/p&gt;
&lt;div class="math display"&gt;
\Box = \nabla^2 - \frac{1}{c^2} \frac{\partial^2}{\partial t^2}
&lt;/div&gt;

&lt;p&gt;这些方程表明，电标势 &lt;span class="math inline"&gt;\phi&lt;/span&gt; 和磁矢势 &lt;span class="math inline"&gt;\mathbf{A}&lt;/span&gt; 都遵从波动方程，传播速度是光速 &lt;span class="math inline"&gt;c&lt;/span&gt;。【可看作泊松方程的四维版本】&lt;/p&gt;
&lt;h2 id="electromagnetic-four-potential"&gt;四维势（Electromagnetic Four-potential）&lt;/h2&gt;
&lt;p&gt;前面看到&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;电标势&lt;/strong&gt; &lt;span class="math inline"&gt; \phi &lt;/span&gt;：描述电场的源头，电荷会产生电场。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;磁矢势&lt;/strong&gt; &lt;span class="math inline"&gt; \mathbf{A} &lt;/span&gt;：描述磁场的源头，电流会产生磁场。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这两个势分别描述电场和磁场，但在相对论中，电场和磁场是同一个物理现象的两种表现，需要一个统一的描述方式，这就是&lt;strong&gt;四维势&lt;/strong&gt;，有的书中称其为相对论势。&lt;/p&gt;
&lt;h3 id="_7"&gt;四维势定义&lt;/h3&gt;
&lt;p&gt;在相对论框架下，时间和空间是结合在一起的，构成了&lt;strong&gt;四维时空&lt;/strong&gt;。为了统一描述电场和磁场的来源，我们将&lt;strong&gt;电标势&lt;/strong&gt;和&lt;strong&gt;磁矢势&lt;/strong&gt;结合在一个新的量中，这个量叫做&lt;strong&gt;四维势&lt;/strong&gt;，记作 &lt;span class="math inline"&gt; A^\mu &lt;/span&gt;。&lt;/p&gt;
&lt;div class="math display"&gt;
A^\mu = \left( \frac{\phi}{c}, \mathbf{A} \right)
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt; \phi &lt;/span&gt; 是电标势（标量）。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; \mathbf{A} = (A_x, A_y, A_z) &lt;/span&gt; 是磁矢势（向量）。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; c &lt;/span&gt; 是光速。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; \mu &lt;/span&gt; 是四维索引，表示四维时空中的不同分量。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体来说，四维势 &lt;span class="math inline"&gt; A^\mu &lt;/span&gt; 包含了&lt;strong&gt;四个分量&lt;/strong&gt;：
1. &lt;strong&gt;时间分量&lt;/strong&gt; &lt;span class="math inline"&gt; A^0 = \frac{\phi}{c} &lt;/span&gt; （电标势除以光速）。
2. &lt;strong&gt;空间分量&lt;/strong&gt; &lt;span class="math inline"&gt; A^1 = A_x &lt;/span&gt;、&lt;span class="math inline"&gt; A^2 = A_y &lt;/span&gt;、&lt;span class="math inline"&gt; A^3 = A_z &lt;/span&gt; （磁矢势的分量）。&lt;/p&gt;
&lt;p&gt;因此，四维势可以写成：&lt;/p&gt;
&lt;div class="math display"&gt;
A^\mu = \left( \frac{\phi}{c}, A_x, A_y, A_z \right)
&lt;/div&gt;

&lt;h3 id="tensor-field"&gt;张量场（Tensor Field）、张量&lt;/h3&gt;
&lt;p&gt;前面出现一个奇怪的上标记法。这是张量逆变量的记法。四维势仍然是向量场（4个分量），尽管可以看作一阶张量场。但是由它导出的电磁场属于正经的二阶张量场。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;张量&lt;/strong&gt;（Tensor）是数学和物理学中描述多维数据和线性变换的工具，可以看作是&lt;strong&gt;标量&lt;/strong&gt;、&lt;strong&gt;向量&lt;/strong&gt;和&lt;strong&gt;矩阵&lt;/strong&gt;的推广。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;张量的&lt;strong&gt;阶&lt;/strong&gt;（Rank）表示它有多少个下标或上标，也就是它描述了多少个方向。不同阶的张量对应于不同的对象：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;0阶张量&lt;/strong&gt;：标量，没有下标。例子：&lt;span class="math inline"&gt;5&lt;/span&gt;、&lt;span class="math inline"&gt;\pi&lt;/span&gt; 等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1阶张量&lt;/strong&gt;：向量，有一个下标。例子：&lt;span class="math inline"&gt;\mathbf{v}_i&lt;/span&gt;，如位置向量、速度向量等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2阶张量&lt;/strong&gt;：矩阵，有两个下标。例子：&lt;span class="math inline"&gt;A_{ij}&lt;/span&gt;，如应力或惯性矩等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3阶及以上的张量&lt;/strong&gt;：高阶张量，有三个或更多下标。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;张量的分量可以分为&lt;strong&gt;协变分量&lt;/strong&gt;（下标）和&lt;strong&gt;逆变分量&lt;/strong&gt;（上标）。协变与逆变的区别在于它们在坐标变换下的行为不同：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;协变张量&lt;/strong&gt;：分量用下标表示，在坐标变换中按照基向量的反向变换。一个常见的例子是梯度 &lt;span class="math inline"&gt;\partial_i&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;逆变张量&lt;/strong&gt;：分量用上标表示，在坐标变换中按照基向量的同向变换。向量 &lt;span class="math inline"&gt;v^i&lt;/span&gt; 是一个逆变张量的例子。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;高阶张量可以同时有协变和逆变分量。例如，&lt;span class="math inline"&gt;T_i^j&lt;/span&gt; 是一个混合张量，有一个下标和一个上标。&lt;/p&gt;
&lt;p&gt;张量通常使用爱因斯坦求和约定，其中重复的上标和下标表示求和。例如，假设 &lt;span class="math inline"&gt;A_{ij}&lt;/span&gt; 是一个二阶张量（矩阵），&lt;span class="math inline"&gt;v^j&lt;/span&gt; 是一个一阶张量（向量），则它们的乘积可以写作：&lt;/p&gt;
&lt;div class="math display"&gt;
u_i = A_{ij} v^j
&lt;/div&gt;

&lt;p&gt;根据爱因斯坦求和约定，上下标相同的 &lt;span class="math inline"&gt;j&lt;/span&gt; 表示对 &lt;span class="math inline"&gt;j&lt;/span&gt; 进行求和，这样 &lt;span class="math inline"&gt;u_i&lt;/span&gt; 也是一个向量。&lt;/p&gt;
&lt;h3 id="_8"&gt;四维势与电磁场&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;通过四维势 &lt;span class="math inline"&gt; A^\mu &lt;/span&gt; 可以构造出&lt;strong&gt;电磁场张量&lt;/strong&gt;（也叫&lt;strong&gt;场强张量&lt;/strong&gt;），它是一个四维张量，包含了所有的电场和磁场信息。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;电磁场张量 &lt;span class="math inline"&gt; F^{\mu\nu} &lt;/span&gt; 是通过四维势的导数定义的：&lt;/p&gt;
&lt;div class="math display"&gt;
F^{\mu\nu} = \partial^\mu A^\nu - \partial^\nu A^\mu
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt; F^{\mu\nu} &lt;/span&gt; 是一个二维张量，包含了电场和磁场的分量。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; \partial^\mu &lt;/span&gt; 表示对四维坐标的偏导数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个张量的分量具体来说是：
- &lt;span class="math inline"&gt; F^{0i} &lt;/span&gt; 对应电场的分量。
- &lt;span class="math inline"&gt; F^{ij} &lt;/span&gt; 对应磁场的分量。&lt;/p&gt;
&lt;p&gt;通过这一张量，我们可以统一描述电场和磁场，而不再需要单独处理它们。&lt;/p&gt;
&lt;div class="math display"&gt;
F^{\mu\nu} =
\begin{pmatrix}
0 &amp; -\frac{E_x}{c} &amp; -\frac{E_y}{c} &amp; -\frac{E_z}{c} \\
\frac{E_x}{c} &amp; 0 &amp; B_z &amp; -B_y \\
\frac{E_y}{c} &amp; -B_z &amp; 0 &amp; B_x \\
\frac{E_z}{c} &amp; B_y &amp; -B_x &amp; 0
\end{pmatrix}
&lt;/div&gt;

&lt;p&gt;还有协变形式：&lt;/p&gt;
&lt;div class="math display"&gt;
F_{\mu\nu} =
\begin{pmatrix}
0 &amp; \frac{E_x}{c} &amp; \frac{E_y}{c} &amp; \frac{E_z}{c} \\
-\frac{E_x}{c} &amp; 0 &amp; -B_z &amp; B_y \\
-\frac{E_y}{c} &amp; B_z &amp; 0 &amp; -B_x \\
-\frac{E_z}{c} &amp; -B_y &amp; B_x &amp; 0
\end{pmatrix}
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：电磁场的张量表示很乱！！除了协变和逆变的差异，还有...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先，里面分量有带c的版本和不带c的版本。二者是单位制不同的原因，不带c的采用的高斯单位制。此处我们只关注SI国际单位制&lt;/li&gt;
&lt;li&gt;其次，度规（metric）的选择可能不同，有的采用惯用的&lt;code&gt;diag(1, -1, -1, -1)&lt;/code&gt;，有的采用东海岸符号 &lt;code&gt;diag(-1, 1, 1 ,1)&lt;/code&gt;。导致磁场符号不同。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_9"&gt;度规概念&lt;/h4&gt;
&lt;p&gt;欧式空间度规是我们在日常生活中最常见的度规，适用于&lt;strong&gt;三维欧几里得空间&lt;/strong&gt;，它定义了两点之间的直线距离。其公式为：&lt;/p&gt;
&lt;div class="math display"&gt;
ds^2 = dx^2 + dy^2 + dz^2
&lt;/div&gt;

&lt;p&gt;Minkowski 度规用于描述&lt;strong&gt;四维时空&lt;/strong&gt;，其中三维是空间，另一维是时间。它是狭义相对论中的核心几何工具，用来定义事件在时空中的间隔。Minkowski 度规的标准形式为：&lt;/p&gt;
&lt;div class="math display"&gt;
ds^2 = c^2 dt^2 - dx^2 - dy^2 - dz^2
&lt;/div&gt;

&lt;h3 id="_10"&gt;洛伦兹规范&lt;/h3&gt;
&lt;p&gt;在四维势下，前面提到的洛伦兹规范的可以重新表述为：&lt;/p&gt;
&lt;div class="math display"&gt;
\partial_\mu A^\mu = 0
&lt;/div&gt;

&lt;p&gt;这意味着四维势的&lt;strong&gt;四维散度&lt;/strong&gt;为零。这里的 &lt;span class="math inline"&gt; \partial_\mu &lt;/span&gt; 是对四维时空坐标的偏导数，&lt;span class="math inline"&gt; A^\mu &lt;/span&gt; 是四维势。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt; A^\mu = \left( \frac{\phi}{c}, \mathbf{A} \right) &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; \partial_\mu = \left( \frac{1}{c} \frac{\partial}{\partial t}, \nabla \right) &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此，洛伦兹规范实际上是对电标势 &lt;span class="math inline"&gt; \phi &lt;/span&gt; 和磁矢势 &lt;span class="math inline"&gt; \mathbf{A} &lt;/span&gt; 的一个约束条件。&lt;/p&gt;
&lt;p&gt;在洛伦兹规范下，麦克斯韦方程可以用四维势 &lt;span class="math inline"&gt; A^\mu &lt;/span&gt; 的形式写作：&lt;/p&gt;
&lt;div class="math display"&gt;
\Box A^\mu = \mu_0 J^\mu
&lt;/div&gt;

&lt;p&gt;这里：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt; \Box &lt;/span&gt; 是&lt;strong&gt;达朗贝尔算子&lt;/strong&gt;（也叫波动算子），表示为 &lt;span class="math inline"&gt; \Box = \partial_\mu \partial^\mu &lt;/span&gt;，其展开为 &lt;span class="math inline"&gt; \Box = \frac{1}{c^2} \frac{\partial^2}{\partial t^2} - \nabla^2 &lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; J^\mu = (\rho c, \mathbf{J}) &lt;/span&gt; 是&lt;strong&gt;四维电流密度&lt;/strong&gt;，其中 &lt;span class="math inline"&gt; \rho &lt;/span&gt; 是电荷密度，&lt;span class="math inline"&gt; \mathbf{J} &lt;/span&gt; 是三维电流密度。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个方程表示四维势与四维电流之间的关系，具有完全的洛伦兹不变性。在洛伦兹规范下，这个方程变得更对称且更易于处理。&lt;/p&gt;
&lt;h2 id="hertz-vector-potentials"&gt;赫兹矢量势（Hertz vector potentials）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;在电磁场和电磁波课程中，通常会定义所谓的电赫兹矢量或磁赫兹矢量，用于简化特定情况下电磁场的计算。电动力学一般不涉及这个东西！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;电赫兹矢量 和 磁赫兹矢量 根据场景选用其中一个。不会两个同时使用。&lt;/p&gt;
&lt;h3 id="_11"&gt;电赫兹矢量&lt;/h3&gt;
&lt;p&gt;电赫兹矢量 &lt;span class="math inline"&gt; \mathbf{\Pi}_e &lt;/span&gt; 主要用于描述&lt;strong&gt;电偶极子辐射&lt;/strong&gt;。通过它可以表达电磁势中的矢量势 和 标量势。&lt;/p&gt;
&lt;p&gt;对于电赫兹矢量 &lt;span class="math inline"&gt; \mathbf{\Pi}_e &lt;/span&gt;：&lt;/p&gt;
&lt;div class="math display"&gt;
\mathbf{A} = \epsilon \mu \frac{\partial \mathbf{\Pi}_e}{\partial t}
\\
\phi = -\nabla \cdot \mathbf{\Pi}_e
&lt;/div&gt;

&lt;p&gt;它满足如下方程：&lt;/p&gt;
&lt;div class="math display"&gt;
\nabla^2\mathbf{\Pi}_e - \epsilon \mu \frac{\partial^2 \mathbf{\Pi}_e}{\partial t^2} = - \frac{\mathbf{P}} {\epsilon}
&lt;/div&gt;

&lt;p&gt;其中 P 是电场极化强度。&lt;/p&gt;
&lt;h3 id="_12"&gt;磁赫兹矢量&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;注：不同参考资料不太一致，公式待确定。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;磁赫兹矢量 &lt;span class="math inline"&gt; \mathbf{\Pi}_m &lt;/span&gt; 主要用于描述&lt;strong&gt;磁偶极子辐射&lt;/strong&gt;。通过它可以表达电磁势中的电场矢量势 和 磁场标量势。&lt;/p&gt;
&lt;p&gt;对于磁赫兹矢量 &lt;span class="math inline"&gt; \mathbf{\Pi}_m &lt;/span&gt;：&lt;/p&gt;
&lt;div class="math display"&gt;
\mathbf{A}_m = \epsilon \mu \frac{\partial \mathbf{\Pi}_m}{\partial t}
\\
\phi_m = -\nabla \cdot \mathbf{\Pi}_m
&lt;/div&gt;

&lt;p&gt;它满足如下方程：&lt;/p&gt;
&lt;div class="math display"&gt;
\nabla^2\mathbf{\Pi}_m - \epsilon \mu \frac{\partial^2 \mathbf{\Pi}_m}{\partial t^2} = - \frac{\mathbf{M}} {\epsilon}
&lt;/div&gt;

&lt;p&gt;其中，M 是磁场极化强度。&lt;/p&gt;
&lt;h2 id="_13"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《工程数学——矢量分析与场论（第五版）》 - 谢树艺&lt;/li&gt;
&lt;li&gt;《电动力学教程》 - David J. Griffiths&lt;/li&gt;
&lt;li&gt;《高等电磁理论》- 傅君眉&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Vector_potential&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Magnetic_vector_potential&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Magnetic_scalar_potential&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Electromagnetic_four-potential&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Hertz_vector&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Helmholtz_decomposition&lt;/li&gt;
&lt;/ul&gt;</content><category term="Science"></category></entry><entry><title>傅里叶变换小记</title><link href="https://blog.debao.me/2024/10/a-brief-note-on-fourier-transform/" rel="alternate"></link><published>2024-10-17T09:21:00+08:00</published><updated>2024-10-17T09:21:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-10-17:/2024/10/a-brief-note-on-fourier-transform/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;东南大学《工程数学·积分变换》主要介绍傅里叶变换和拉普拉斯变换；顾樵《数学物理方法》二三四章都在介绍这两个变换；ALAN …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;东南大学《工程数学·积分变换》主要介绍傅里叶变换和拉普拉斯变换；顾樵《数学物理方法》二三四章都在介绍这两个变换；ALAN V. OPPENHEIM《信号与系统》二三四九十章都在介绍积分变换；《数字图像处理》...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;傅里叶认为，任何复杂的周期信号都可以用一组简单的正弦波（sine waves，即不同频率的正弦和余弦函数）表示。这种方法不仅适用于光滑的信号，也适用于不光滑的信号（例如锯齿波，sawtooth wave），甚至是 &lt;strong&gt;不连续&lt;/strong&gt; 的信号（discontinuous signals）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="fourier series" src="https://blog.debao.me/images/science/math_fourier_series.png"&gt;&lt;/p&gt;
&lt;p&gt;这就是现在所说的 傅里叶级数。后来，这一思想被推广到更广泛的领域，包括 傅里叶变换 和 离散傅里叶变换。&lt;/p&gt;
&lt;p&gt;&lt;img alt="img" src="https://blog.debao.me/images/science/math_fourier_laplace_etc.png"&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;学术争议&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;傅里叶提出的用正弦和余弦函数表示任意周期函数的观点，实际上是引入了 正交基（orthogonal basis）的概念。今天我们知道，正弦和余弦函数组成了一个 完备的函数集（complete function set），可以用于表示任何周期函数。然而，在傅里叶所处的时代，这一想法是前所未有的，并不为大多数数学家所接受。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_2"&gt;困境&lt;/h3&gt;
&lt;p&gt;由于当时 数学分析（mathematical analysis），特别是关于 函数收敛性（convergence of functions）的理论还处于发展的早期阶段，傅里叶的工作缺乏严格的数学基础。他并没有明确给出傅里叶级数（Fourier series）的收敛条件，或证明这些级数在一定条件下会收敛到原函数。&lt;/p&gt;
&lt;p&gt;在傅里叶之前的10多年，著名数学家 欧拉（Leonhard Euler）和 伯努利（Daniel Bernoulli）在研究弦振动（vibrating strings）时也提出过类似的 正弦波叠加（superposition of sine waves）的想法，但他们并没有深入研究这一概念。事实上，欧拉本人后来放弃了使用 三角函数级数（trigonometric series）来表示函数的想法。&lt;/p&gt;
&lt;h3 id="_3"&gt;争议&lt;/h3&gt;
&lt;p&gt;在傅里叶的同代人中，著名数学家 约瑟夫·拉格朗日（Joseph-Louis Lagrange）和 西蒙·泊松（Siméon Denis Poisson）是傅里叶理论的强烈反对者。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拉格朗日：拉格朗日质疑傅里叶级数的 严谨性（rigor）。他认为傅里叶声称的“任意函数”可以分解为正弦和余弦函数的和，这一观点过于宽泛。拉格朗日坚持认为，只有非常光滑且具有 连续一阶导数（continuously differentiable functions）的函数才能用这种方法表示出来。他尤其怀疑傅里叶级数是否能适用于 不连续函数（discontinuous functions）。&lt;/li&gt;
&lt;li&gt;泊松：泊松则从物理角度质疑傅里叶的观点，认为傅里叶的数学方法可能与物理现实不符。他特别关注傅里叶级数在处理 边界条件（boundary conditions）时的有效性问题，并认为傅里叶的理论在物理应用中可能并不适用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;发展&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;狄利克雷（Johann Peter Gustav Lejeune Dirichlet）为傅里叶级数的 收敛性（convergence）问题提供了严格的数学证明，定义了 狄利克雷条件（Dirichlet conditions），从而解决了拉格朗日和泊松等人关于傅里叶级数收敛性的担忧。&lt;/li&gt;
&lt;li&gt;奥古斯丁·柯西（Augustin Cauchy）和 皮埃尔·西蒙·拉普拉斯（Pierre-Simon Laplace）等人也对傅里叶的理论表示支持，并对其进行了进一步的完善，推动了傅里叶级数和傅里叶变换在数学和物理中的应用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_5"&gt;傅里叶级数 到 傅里叶变换&lt;/h2&gt;
&lt;p&gt;傅里叶级数 和 傅里叶变换 是傅里叶分析的核心工具。傅里叶积分则是傅里叶变换的中间形式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;傅里叶级数&lt;/strong&gt;（&lt;strong&gt;Fourier Series&lt;/strong&gt;）：用于表示周期信号的离散频谱（discrete spectrum of periodic signals）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;傅里叶积分&lt;/strong&gt;（&lt;strong&gt;Fourier Integral&lt;/strong&gt;）：用于处理非周期信号的连续频谱（continuous spectrum of non-periodic signals）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;傅里叶变换&lt;/strong&gt;（&lt;strong&gt;Fourier Transform&lt;/strong&gt;）：最广泛的形式，用于任意信号的时域到频域转换。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;对比项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;傅里叶级数（Fourier Series）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;傅里叶积分（Fourier Integral）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;傅里叶变换（Fourier Transform）&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;适用对象&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;周期信号（periodic signals）&lt;/td&gt;
&lt;td&gt;非周期信号（aperiodic signals）&lt;/td&gt;
&lt;td&gt;任意信号（any signals）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;频谱&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;离散频谱（discrete spectrum）&lt;/td&gt;
&lt;td&gt;连续频谱（continuous spectrum）&lt;/td&gt;
&lt;td&gt;连续频谱（continuous spectrum）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;展开方式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;离散频率下的正弦和余弦函数的和&lt;/td&gt;
&lt;td&gt;频率连续变化的正弦和余弦函数的积分&lt;/td&gt;
&lt;td&gt;频率连续变化的正弦和余弦函数的积分&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;应用领域&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;处理周期性现象，如振动、波动等&lt;/td&gt;
&lt;td&gt;对非周期信号的频率分析&lt;/td&gt;
&lt;td&gt;广泛&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_6"&gt;傅里叶级数&lt;/h3&gt;
&lt;p&gt;对于周期为 &lt;span class="math inline"&gt; T &lt;/span&gt; 的函数 &lt;span class="math inline"&gt; f(t) &lt;/span&gt;，它可以展开为傅里叶级数：&lt;/p&gt;
&lt;div class="math display"&gt;
f(t) = \frac{a_0}{2} + \sum_{n=1}^{\infty} \left( a_n \cos\left( \frac{2\pi n t}{T} \right) + b_n \sin\left( \frac{2\pi n t}{T} \right) \right)
&lt;/div&gt;

&lt;p&gt;其中，傅里叶系数 &lt;span class="math inline"&gt; a_n &lt;/span&gt; 和 &lt;span class="math inline"&gt; b_n &lt;/span&gt; 通过以下公式计算：&lt;/p&gt;
&lt;div class="math display"&gt;
a_n = \frac{2}{T} \int_{0}^{T} f(t) \cos\left( \frac{2\pi n t}{T} \right) dt
\\
b_n = \frac{2}{T} \int_{0}^{T} f(t) \sin\left( \frac{2\pi n t}{T} \right) dt
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;在傅里叶级数中，周期函数的频率是离散的，正弦波的频率是其周期的整数倍。然而，在处理非周期信号（aperiodic signals）时，傅里叶级数&lt;strong&gt;不再&lt;/strong&gt;适用，因为此时频率将不再是离散的，而是连续的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="orthogonal-basis"&gt;正交基（Orthogonal Basis）&lt;/h4&gt;
&lt;p&gt;泰勒级数的基底函数：&lt;span class="math inline"&gt;1, x^2, x^3, x^4, ... &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;傅里叶级数的基底函数：&lt;span class="math inline"&gt;1, \cos x, \cos 2x, \cos 3x, ..., \sin x, \sin 2x, \sin 3x, ...&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;与泰勒级数不同，傅里叶级数的任意两个基底函数，在区间 &lt;span class="math inline"&gt;[0, 2\pi]&lt;/span&gt;上都是正交的。&lt;/p&gt;
&lt;h4 id="dirichlets-theorem"&gt;狄利赫雷定理（Dirichlet's Theorem）&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;傅里叶级数用于将周期函数表示为正弦和余弦函数的无穷级数，狄利赫雷定理给出了傅里叶级数收敛的条件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果一个周期为 &lt;span class="math inline"&gt;T&lt;/span&gt; 的函数 &lt;span class="math inline"&gt;f(x)&lt;/span&gt; 满足以下条件，则它的傅里叶级数在每个点都收敛于 &lt;span class="math inline"&gt;f(x)&lt;/span&gt; 在该点的值（或者在不连续点处收敛于左右极限的平均值）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;周期性（Periodicity）&lt;/strong&gt;：&lt;span class="math inline"&gt;f(x)&lt;/span&gt; 是一个周期为 &lt;span class="math inline"&gt;T&lt;/span&gt; 的周期函数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分段连续（Piecewise Continuity）&lt;/strong&gt;：函数 &lt;span class="math inline"&gt;f(x)&lt;/span&gt; 在一个周期内至多有有限个不连续点，并且在这些不连续点处的左极限和右极限存在。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分段光滑（Piecewise Smoothness）&lt;/strong&gt;：函数 &lt;span class="math inline"&gt;f(x)&lt;/span&gt; 在一个周期内至多有有限个极值点，并且在这些点之间，函数是可微的，且导数连续。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="fourier series" src="https://blog.debao.me/images/science/math_fourier_series.png"&gt;&lt;/p&gt;
&lt;p&gt;意味着：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;在连续点上&lt;/strong&gt;：傅里叶级数收敛于函数 &lt;span class="math inline"&gt;f(x)&lt;/span&gt; 的值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在不连续点上&lt;/strong&gt;：傅里叶级数收敛于该点的左右极限的平均值，即：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
\text{傅里叶级数在不连续点} \ x_0 \ \text{上收敛于} \ \frac{f(x_0^-) + f(x_0^+)}{2}
&lt;/div&gt;

&lt;h3 id="_7"&gt;傅里叶积分&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;傅里叶积分是连接傅里叶级数和傅里叶变换的桥梁，它适用于 &lt;strong&gt;非周期函数&lt;/strong&gt;（non-periodic function）。当周期趋于无穷大时，傅里叶级数过渡为傅里叶积分。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于非周期函数 &lt;span class="math inline"&gt; f(t) &lt;/span&gt;，我们可以使用傅里叶积分来表示（不使用复数时，注意积分范围&lt;span class="math inline"&gt;[0, \infty)&lt;/span&gt;）：&lt;/p&gt;
&lt;div class="math display"&gt;
f(t) = \int_{0}^{\infty}[A(\omega)\cos\omega t+B(\omega)\sin\omega t]d\omega
&lt;/div&gt;

&lt;p&gt;其中，傅里叶系数 &lt;span class="math inline"&gt; A(\omega) &lt;/span&gt; 和 &lt;span class="math inline"&gt; B(\omega) &lt;/span&gt; 通过以下公式计算：&lt;/p&gt;
&lt;div class="math display"&gt;
A(\omega) = \frac{1}{\pi} \int_{-\infty}^{\infty} f(t) \cos\omega t dt
\\
B(\omega) = \frac{1}{\pi} \int_{-\infty}^{\infty} f(t) \sin\omega t dt
&lt;/div&gt;

&lt;p&gt;当使用复数表达时，上下限就变成&lt;span class="math inline"&gt;(-\infty, \infty)&lt;/span&gt;&lt;/p&gt;
&lt;div class="math display"&gt;
f(t) = \int_{-\infty}^{+\infty} F(\omega) e^{-j\omega t } \mathrm{d} \omega
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;div class="math display"&gt;
F(\omega) = \frac{1}{2\pi}\int_{-\infty}^{+\infty}f(\tau)e^{-j\omega\tau} \mathrm{d}\tau
&lt;/div&gt;

&lt;h4 id="_8"&gt;傅里叶积分定理&lt;/h4&gt;
&lt;p&gt;傅里叶积分的前提是：&lt;span class="math inline"&gt;f(t)&lt;/span&gt; 在 &lt;span class="math inline"&gt;(-\infty, +\infty)&lt;/span&gt; 上满足如下条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;f(t)&lt;/span&gt; 在任一有限区间满足 狄利赫雷条件。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;f(t)&lt;/span&gt; 在无限区域上绝对可积！！&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么，什么是...&lt;/p&gt;
&lt;h4 id="absolutely-integrable"&gt;绝对可积（absolutely integrable）&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;从傅里叶级数到傅里叶积分转变过程中，绝对可积是一个重要概念。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="absolutely_integrable" src="https://blog.debao.me/images/science/math_fourier_absolutely_integrable.png"&gt;&lt;/p&gt;
&lt;p&gt;如果&lt;span class="math inline"&gt;f(t)&lt;/span&gt;在 &lt;span class="math inline"&gt;(-\infty, +\infty)&lt;/span&gt; 上满足如下条件：&lt;/p&gt;
&lt;div class="math display"&gt;
\int_{-\infty}^{\infty} \lvert f(t) \rvert \mathrm{d}t &lt; \infty
&lt;/div&gt;

&lt;p&gt;则称为 &lt;span class="math inline"&gt;f(t)&lt;/span&gt; 绝对可积。&lt;/p&gt;
&lt;p&gt;该条件可以确保前面 &lt;span class="math inline"&gt;A(\omega)&lt;/span&gt; 和 &lt;span class="math inline"&gt;B(\omega)&lt;/span&gt; 对 &lt;span class="math inline"&gt;f(t)&lt;/span&gt; 乘以绝对值小于1的三角函数后一定时可积分的。&lt;/p&gt;
&lt;h3 id="_9"&gt;傅里叶变换&lt;/h3&gt;
&lt;p&gt;对于定义在实数轴上 &lt;span class="math inline"&gt; t \in (-\infty, \infty) &lt;/span&gt; 的函数 &lt;span class="math inline"&gt; f(t) &lt;/span&gt;，傅里叶变换定义为：&lt;/p&gt;
&lt;div class="math display"&gt;
F(\omega) = \int_{-\infty}^{\infty} f(t) e^{-i \omega t} dt
&lt;/div&gt;

&lt;p&gt;这里，&lt;span class="math inline"&gt; F(\omega) &lt;/span&gt; 是信号 &lt;span class="math inline"&gt; f(t) &lt;/span&gt; 在频率 &lt;span class="math inline"&gt; \omega &lt;/span&gt; 上的傅里叶变换，表示信号的频谱。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;逆傅里叶变换&lt;/strong&gt; 可以将频域的函数转换回时域，其定义为：&lt;/p&gt;
&lt;div class="math display"&gt;
f(t) = \frac{1}{2\pi} \int_{-\infty}^{\infty} F(\omega) e^{i \omega t} d\omega
&lt;/div&gt;

&lt;p&gt;可以看出，&lt;span class="math inline"&gt;f{t}&lt;/span&gt; 和 &lt;span class="math inline"&gt;F(\omega)&lt;/span&gt; 可以互相表达。其中&lt;/p&gt;
&lt;p&gt;傅里叶变换式 可以记为：&lt;/p&gt;
&lt;div class="math display"&gt;
F(\omega) = \mathcal{F}[f(t)]
&lt;/div&gt;

&lt;p&gt;傅里叶逆变换式记为：&lt;/p&gt;
&lt;div class="math display"&gt;
f(t) = \mathcal{F}^{-1}[F(\omega)]
&lt;/div&gt;

&lt;h4 id="epicycle"&gt;周转圆（Epicycle）&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    Epicycle(frequency=1, amplitude=3, phase=0),
    Epicycle(frequency=-3, amplitude=1, phase=0),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="epicycles" src="https://blog.debao.me/images/science/math_fourier_epicycles.png"&gt;&lt;/p&gt;
&lt;p&gt;Epicycle（周转圆）是古代天文学家用来解释天体运动的几何模型，特别是为了描述行星的复杂轨迹。这个概念最早由托勒密（Ptolemy）提出，主要用于解释在地心模型中看到的行星逆行现象。&lt;/p&gt;
&lt;p&gt;在周转圆模型中，行星并不直接绕地球运动，而是首先围绕一个小圆（周转圆）运动，而这个小圆的中心则绕着一个大圆（称为本轮，deferent）运动。通过这种双重旋转，古代天文学家能够近似描述行星的复杂轨迹。&lt;/p&gt;
&lt;p&gt;傅里叶级数和傅里叶变换是将函数分解为多个频率的正弦波或复数指数函数的叠加。这些正弦波可以看作是不同频率的"周转圆"。
在傅里叶级数中，每个离散频率的复数指数函数对应一个"周转圆"，而傅里叶变换中每个连续频率的复数指数函数也可以看作一个"周转圆"。&lt;/p&gt;
&lt;h4 id="_10"&gt;花体符号表示&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;傅里叶变换&lt;/strong&gt; 通常用 &lt;strong&gt;花体的 &lt;span class="math inline"&gt;\mathcal{F}&lt;/span&gt;&lt;/strong&gt; 表示：&lt;/p&gt;
&lt;div class="math display"&gt;
\mathcal{F}\{f(t)\} = F(\omega) = \int_{-\infty}^{\infty} f(t) e^{-i \omega t} dt
&lt;/div&gt;

&lt;p&gt;其中，&lt;span class="math inline"&gt;\mathcal{F}&lt;/span&gt; 表示傅里叶变换运算符，将时域中的信号 &lt;span class="math inline"&gt;f(t)&lt;/span&gt; 转换为频域中的信号 &lt;span class="math inline"&gt;F(\omega)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;与此类似，后面提到的拉普拉斯变换通常用 &lt;strong&gt;花体的 &lt;span class="math inline"&gt;\mathcal{L}&lt;/span&gt;&lt;/strong&gt; 表示：&lt;/p&gt;
&lt;div class="math display"&gt;
\mathcal{L}\{f(t)\} = F(s)
&lt;/div&gt;

&lt;p&gt;其中，&lt;span class="math inline"&gt;\mathcal{L}&lt;/span&gt; 表示拉普拉斯变换运算符，将时域信号 &lt;span class="math inline"&gt;f(t)&lt;/span&gt; 转换为复频域中的信号 &lt;span class="math inline"&gt;F(s)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id="dft"&gt;离散傅里叶变换（DFT）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;离散傅里叶变换（DFT） 的思想源自傅里叶的工作，但它的真正发展得益于 20 世纪中期计算机和数字信号处理的进步。特别是在 J. W. Cooley 和 John Tukey 在 1965 年提出的 快速傅里叶变换（FFT）算法后。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于长度为 &lt;span class="math inline"&gt;N&lt;/span&gt; 的序列 &lt;span class="math inline"&gt;x[n]&lt;/span&gt;，它的离散傅里叶变换 &lt;span class="math inline"&gt;X[k]&lt;/span&gt; 定义为：&lt;/p&gt;
&lt;div class="math display"&gt;
X[k] = \sum_{n=0}^{N-1} x[n] e^{-i \frac{2\pi}{N} kn}, \quad k = 0, 1, \dots, N-1
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;x[n]&lt;/span&gt; 是时域的离散信号，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;X[k]&lt;/span&gt; 是频域的离散傅里叶系数，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;N&lt;/span&gt; 是信号的长度，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;i&lt;/span&gt; 是虚数单位。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逆离散傅里叶变换（Inverse Discrete Fourier Transform, IDFT）的定义为：&lt;/p&gt;
&lt;div class="math display"&gt;
x[n] = \frac{1}{N} \sum_{k=0}^{N-1} X[k] e^{i \frac{2\pi}{N} kn}, \quad n = 0, 1, \dots, N-1
&lt;/div&gt;

&lt;p&gt;通过 DFT，我们可以将时域的离散信号 &lt;span class="math inline"&gt;x[n]&lt;/span&gt; 转换为频域信号 &lt;span class="math inline"&gt;X[k]&lt;/span&gt;，而通过 IDFT，可以将频域信号 &lt;span class="math inline"&gt;X[k]&lt;/span&gt; 转换回时域信号 &lt;span class="math inline"&gt;x[n]&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id="fftfast-fourier-transform"&gt;FFT（Fast Fourier Transform）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;FFT&lt;/strong&gt;（Fast Fourier Transform）是快速计算 &lt;strong&gt;DFT&lt;/strong&gt;（Discrete Fourier Transform）的高效算法，将复杂度从 &lt;span class="math inline"&gt;O(N^2)&lt;/span&gt; 降低到 &lt;span class="math inline"&gt;O(N \log N)&lt;/span&gt;。它通过&lt;strong&gt;分治法&lt;/strong&gt;（divide and conquer）将大规模问题分解为多个小规模问题，再递归求解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;FFT的分治思想依赖于&lt;strong&gt;蝴蝶操作&lt;/strong&gt;（Butterfly Operation），它通过反复将DFT分解为两个规模分别为 &lt;span class="math inline"&gt;N/2&lt;/span&gt; 的DFT。具体来说，FFT利用了偶数项和奇数项的分解：&lt;/p&gt;
&lt;div class="math display"&gt;
X[k] = \sum_{n=0}^{N-1} x[n] e^{-i \frac{2\pi}{N} kn}
&lt;/div&gt;

&lt;p&gt;可以拆分为：&lt;/p&gt;
&lt;div class="math display"&gt;
X[k] = \sum_{n=0}^{N/2 - 1} \left( x[2n] e^{-i \frac{2\pi}{N} k(2n)} + x[2n+1] e^{-i \frac{2\pi}{N} k(2n+1)} \right)
&lt;/div&gt;

&lt;p&gt;通过这种方法，FFT算法将问题的规模从 &lt;span class="math inline"&gt;N&lt;/span&gt; 逐步减少到 &lt;span class="math inline"&gt;N/2&lt;/span&gt;、&lt;span class="math inline"&gt;N/4&lt;/span&gt;，直到可以直接求解最小规模的DFT。&lt;/p&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;信号长度：经典的Cooley-Tukey FFT算法通常要求输入信号长度为2的幂次方。对于不满足这一条件的信号，通常需要进行零填充（padding）来扩展信号长度。&lt;/li&gt;
&lt;li&gt;窗口效应：FFT假设信号是周期性的，对于非周期信号，直接使用FFT可能会引入伪频谱（leakage）问题。为此，通常会使用窗函数（window function）来减少这种效应。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="laplace-transform"&gt;傅里叶变换 到 拉普拉斯变换（Laplace Transform）&lt;/h2&gt;
&lt;p&gt;傅里叶变换有广泛应用，但也有明显的局限性...&lt;/p&gt;
&lt;h3 id="_11"&gt;傅里叶变换局限性&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;傅里叶变换要求函数在负无穷到正无穷的整个区间上都有定义，并且满足一定的条件，才能保证傅里叶变换的存在和收敛。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;1 函数在整个实数轴上定义： 对于一个信号或函数 &lt;span class="math inline"&gt;f(t)&lt;/span&gt;，其傅里叶变换的定义是基于从 &lt;span class="math inline"&gt;-\infty&lt;/span&gt; 到 &lt;span class="math inline"&gt;\infty&lt;/span&gt; 的积分：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
     F(\omega) = \int_{-\infty}^{\infty} f(t) e^{-i \omega t} dt
&lt;/div&gt;

&lt;p&gt;意味着 &lt;span class="math inline"&gt;f(t)&lt;/span&gt; 必须在整个区间 &lt;span class="math inline"&gt;(-\infty, \infty)&lt;/span&gt; 上有定义。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2 绝对可积性： 傅里叶变换的一个重要条件是绝对可积性，即函数 &lt;span class="math inline"&gt;f(t)&lt;/span&gt; 的绝对值的积分在整个实数范围内必须是有限的：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
     \int_{-\infty}^{\infty} |f(t)| dt &lt; \infty
&lt;/div&gt;

&lt;p&gt;这通常被称为 &lt;strong&gt;狄利赫雷条件（Dirichlet conditions）&lt;/strong&gt; 之一。绝对可积性确保了傅里叶变换的收敛性，即傅里叶变换在频域中的结果（频谱）能有效地存在。&lt;/p&gt;
&lt;h3 id="_12"&gt;考虑&lt;/h3&gt;
&lt;p&gt;对于任意一个函数 &lt;span class="math inline"&gt;g(t)(t\ge 0)&lt;/span&gt;，如何才能做傅里叶变换？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;确保定义域是  &lt;span class="math inline"&gt;(-\infty, \infty)&lt;/span&gt;，乘以阶跃函数&lt;span class="math inline"&gt;u(t)&lt;/span&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="math display"&gt;
g(t)u(t)
&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;要保证绝对可积，再乘以衰减因子&lt;span class="math inline"&gt;\exp (-\beta t)(\beta &amp;gt; 0)&lt;/span&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="math display"&gt;
g(t)u(t)\exp(-\beta t)
&lt;/div&gt;

&lt;p&gt;这样一来，就可以进行变换了：&lt;/p&gt;
&lt;div class="math display"&gt;
\int_{-\infty}^{\infty} g(t)u(t)\exp(-\beta t) e^{-i\omega t}\mathrm{d}t = \int_{0}^{\infty}f(t)e^{pt}\mathrm{d}t
&lt;/div&gt;

&lt;p&gt;其中：&lt;span class="math inline"&gt;f(t)=g(t)u(t)&lt;/span&gt;，&lt;span class="math inline"&gt;p=\beta + i\omega&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id="_13"&gt;拉普拉斯变换&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;拉普拉斯变换&lt;/strong&gt;（&lt;strong&gt;Laplace Transform&lt;/strong&gt;）用于将一个时域信号转换为&lt;strong&gt;复频域信号&lt;/strong&gt;（&lt;strong&gt;complex frequency domain signal&lt;/strong&gt;，复数 &lt;span class="math inline"&gt;s&lt;/span&gt; 的函数）。它比傅里叶变换更广泛，因为它可以处理不仅仅是&lt;strong&gt;稳定信号&lt;/strong&gt;（&lt;strong&gt;stable signals&lt;/strong&gt;），还可以处理&lt;strong&gt;不稳定信号&lt;/strong&gt;（&lt;strong&gt;unstable signals&lt;/strong&gt;），如指数增长的信号。对于时域信号 &lt;span class="math inline"&gt;f(t)&lt;/span&gt;，拉普拉斯变换定义为：&lt;/p&gt;
&lt;div class="math display"&gt;
F(s) = \int_{0}^{\infty} f(t) e^{-st} dt
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;f(t)&lt;/span&gt; 是&lt;strong&gt;时域信号&lt;/strong&gt;（&lt;strong&gt;time-domain signal&lt;/strong&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;F(s)&lt;/span&gt; 是&lt;strong&gt;复频域信号&lt;/strong&gt;（&lt;strong&gt;complex frequency-domain signal&lt;/strong&gt;），&lt;span class="math inline"&gt;s&lt;/span&gt; 是复数，表示为 &lt;span class="math inline"&gt;s = \sigma + i \omega&lt;/span&gt;，其中 &lt;span class="math inline"&gt;\sigma&lt;/span&gt; 是实部，&lt;span class="math inline"&gt;\omega&lt;/span&gt; 是虚部。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;拉普拉斯变换的&lt;strong&gt;逆变换&lt;/strong&gt;（&lt;strong&gt;inverse transform&lt;/strong&gt;）为：&lt;/p&gt;
&lt;div class="math display"&gt;
f(t) = \frac{1}{2\pi i} \int_{\sigma - i \infty}^{\sigma + i \infty} F(s) e^{st} ds
&lt;/div&gt;

&lt;p&gt;其中积分路径通常位于&lt;strong&gt;复平面&lt;/strong&gt;（&lt;strong&gt;complex plane&lt;/strong&gt;）上的某条直线。&lt;/p&gt;
&lt;h3 id="z"&gt;z变换&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Z 变换是离散时间的拉普拉斯变换。通过 &lt;span class="math inline"&gt;z = e^{sT}&lt;/span&gt;（&lt;span class="math inline"&gt;T&lt;/span&gt; 为采样周期），Z 变换可以看作离散系统的拉普拉斯变换。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于一个离散时间信号 &lt;span class="math inline"&gt;x[n]&lt;/span&gt;，其 &lt;strong&gt;Z 变换&lt;/strong&gt; 定义为：&lt;/p&gt;
&lt;div class="math display"&gt;
X(z) = \sum_{n=-\infty}^{\infty} x[n] z^{-n}
&lt;/div&gt;

&lt;p&gt;其中 &lt;span class="math inline"&gt;z&lt;/span&gt; 是复数变量，通常表示为 &lt;span class="math inline"&gt;z = re^{i\omega}&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;逆 Z 变换&lt;/strong&gt;用于将复频域中的信号 &lt;span class="math inline"&gt;X(z)&lt;/span&gt; 转换回时域信号 &lt;span class="math inline"&gt;x[n]&lt;/span&gt;，其定义为：&lt;/p&gt;
&lt;div class="math display"&gt;
x[n] = \frac{1}{2\pi i} \oint_C X(z) z^{n-1} dz
&lt;/div&gt;

&lt;p&gt;其中 &lt;span class="math inline"&gt;C&lt;/span&gt; 是围绕收敛区域的一条闭合路径。&lt;/p&gt;
&lt;h3 id="zdft"&gt;z变换与离散傅里叶变换（DFT）&lt;/h3&gt;
&lt;p&gt;当 &lt;span class="math inline"&gt;z&lt;/span&gt; 落在单位圆 &lt;span class="math inline"&gt;|z| = 1&lt;/span&gt; 上时，Z 变换退化为离散傅里叶变换：&lt;/p&gt;
&lt;div class="math display"&gt;
X(e^{i\omega}) = \sum_{n=-\infty}^{\infty} x[n] e^{-i \omega n}
&lt;/div&gt;

&lt;p&gt;因此，Z 变换是 DFT 的广义形式，可以处理更广泛的信号类型。&lt;/p&gt;
&lt;h2 id="integral-transform"&gt;积分变换（Integral Transform）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;傅里叶变换和拉普拉斯变换都是积分变换的一种，只是核函数不同。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;积分变换&lt;/strong&gt;是通过积分操作将一个函数从一个域（通常是时域或空间域）转换到另一个域（通常是频域或复频域）的数学工具。其定义：&lt;/p&gt;
&lt;div class="math display"&gt;
F(s) = \int_{a}^{b} K(s, t) f(t) dt
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;f(t)&lt;/span&gt; 是待变换的函数。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;F(s)&lt;/span&gt; 是变换后的函数。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;K(s, t)&lt;/span&gt; 是&lt;strong&gt;核函数（Kernel Function）&lt;/strong&gt;，决定了变换的特性。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;s&lt;/span&gt; 是变换后的变量。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对傅里叶变换公式来说，核函数是 &lt;span class="math inline"&gt;e^{-i \omega t}&lt;/span&gt;（其中，&lt;span class="math inline"&gt;\omega&lt;/span&gt; 是频率变量，&lt;span class="math inline"&gt;i&lt;/span&gt; 是虚数单位）：&lt;/p&gt;
&lt;div class="math display"&gt;
F(\omega) = \int_{-\infty}^{\infty} f(t) e^{-i \omega t} dt
&lt;/div&gt;

&lt;p&gt;对拉普拉斯变换公式来说，核函数是&lt;span class="math inline"&gt;e^{-st}&lt;/span&gt;（其中，&lt;span class="math inline"&gt;s&lt;/span&gt; 是复频率变量，可以写作 &lt;span class="math inline"&gt;s = \sigma + i \omega&lt;/span&gt;，包含实部 &lt;span class="math inline"&gt;\sigma&lt;/span&gt; 和虚部 &lt;span class="math inline"&gt;i \omega&lt;/span&gt;）：&lt;/p&gt;
&lt;div class="math display"&gt;
F(s) = \int_{0}^{\infty} f(t) e^{-st} dt
&lt;/div&gt;

&lt;h2 id="convolution"&gt;卷积（Convolution）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;傅里叶变换与卷积关系：傅里叶变换将卷积运算转化为频域中的简单乘积运算，即两个函数的卷积在频域中对应它们傅里叶变换的乘积。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;卷积在物理上描述了如何将一个&lt;strong&gt;输入信号（input signal）&lt;/strong&gt;通过一个&lt;strong&gt;线性时不变系统（linear time-invariant system, LTI）&lt;/strong&gt;，得到&lt;strong&gt;输出信号（output signal）&lt;/strong&gt;。例如，在电子电路中，输入信号通过滤波器后的输出可以用卷积来描述：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;f(t)&lt;/span&gt;：输入信号（input signal）。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;g(t)&lt;/span&gt;：滤波器的时域响应（impulse response）。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;(f * g)(t)&lt;/span&gt;：滤波器对输入信号的输出（output of the filter）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_14"&gt;定义&lt;/h3&gt;
&lt;p&gt;&lt;img alt="convolution" src="https://blog.debao.me/images/science/convolution_of_box_signal_with_itself2.gif"&gt;&lt;/p&gt;
&lt;h4 id="continuous-convolution"&gt;连续卷积（Continuous Convolution）&lt;/h4&gt;
&lt;p&gt;对于两个连续函数 &lt;span class="math inline"&gt;f(t)&lt;/span&gt; 和 &lt;span class="math inline"&gt;g(t)&lt;/span&gt;，它们的&lt;strong&gt;卷积&lt;/strong&gt; &lt;span class="math inline"&gt;(f * g)(t)&lt;/span&gt; 定义为：&lt;/p&gt;
&lt;div class="math display"&gt;
(f * g)(t) = \int_{-\infty}^{\infty} f(\tau) g(t - \tau) d\tau
&lt;/div&gt;

&lt;p&gt;这意味着，函数 &lt;span class="math inline"&gt;f(t)&lt;/span&gt; 在时间 &lt;span class="math inline"&gt;t&lt;/span&gt; 时刻的卷积结果是 &lt;span class="math inline"&gt;g(t)&lt;/span&gt; 的每个时刻与 &lt;span class="math inline"&gt;f(t)&lt;/span&gt; 的整体相互作用的加权和。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;f(t)&lt;/span&gt;：输入信号（input signal）。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;g(t)&lt;/span&gt;：系统的脉冲响应（impulse response）或滤波器（filter）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="discrete-convolution"&gt;离散卷积（Discrete Convolution）&lt;/h4&gt;
&lt;p&gt;对于离散信号 &lt;span class="math inline"&gt;x[n]&lt;/span&gt; 和 &lt;span class="math inline"&gt;h[n]&lt;/span&gt;，它们的卷积 &lt;span class="math inline"&gt;(x * h)[n]&lt;/span&gt; 定义为：&lt;/p&gt;
&lt;div class="math display"&gt;
(x * h)[n] = \sum_{k=-\infty}^{\infty} x[k] h[n - k]
&lt;/div&gt;

&lt;h3 id="convolution-theorem"&gt;卷积定理（Convolution Theorem）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;卷积与傅里叶变换（Fourier Transform）的关系，主要通过&lt;strong&gt;卷积定理（Convolution Theorem）&lt;/strong&gt;来体现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;卷积定理指出：&lt;/p&gt;
&lt;p&gt;时域中的卷积 对应 频域中的乘积：&lt;/p&gt;
&lt;div class="math display"&gt;
  \mathcal{F}\{f(t) * g(t)\} = F(\omega) \cdot G(\omega)
&lt;/div&gt;

&lt;p&gt;即，两个时域信号的卷积，其傅里叶变换等于它们傅里叶变换的乘积。&lt;/p&gt;
&lt;p&gt;频域中的卷积 对应 时域中的乘积：&lt;/p&gt;
&lt;div class="math display"&gt;
  \mathcal{F}^{-1}\{F(\omega) * G(\omega)\} = f(t) \cdot g(t)
&lt;/div&gt;

&lt;p&gt;即，两个频域信号的卷积，其逆傅里叶变换等于它们时域信号的乘积。&lt;/p&gt;
&lt;h3 id="laplace-convolution-theorem"&gt;拉普拉斯卷积定理（Laplace Convolution Theorem）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;拉普拉斯变换主要用于分析&lt;strong&gt;线性时不变系统（linear time-invariant systems, LTI）&lt;/strong&gt;的响应。在这种情况下，输入信号 &lt;span class="math inline"&gt;f(t)&lt;/span&gt; 和系统的单位脉冲响应 &lt;span class="math inline"&gt;h(t)&lt;/span&gt; 的卷积描述了系统的输出。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;时域中的卷积 对应 频域中的拉普拉斯乘积：&lt;/p&gt;
&lt;div class="math display"&gt;
  \mathcal{L}\{f(t) * g(t)\} = F(s) \cdot G(s)
&lt;/div&gt;

&lt;p&gt;即，两个时域信号的卷积，其拉普拉斯变换等于它们拉普拉斯变换的乘积。&lt;/p&gt;
&lt;p&gt;频域中的拉普拉斯卷积 对应 时域中的乘积：&lt;/p&gt;
&lt;div class="math display"&gt;
  \mathcal{L}^{-1}\{F(s) * G(s)\} = f(t) \cdot g(t)
&lt;/div&gt;

&lt;p&gt;即，两个拉普拉斯域信号的卷积，其逆拉普拉斯变换等于它们时域信号的乘积。&lt;/p&gt;
&lt;h2 id="_15"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《Signals &amp;amp; Systems》ALAN V. OPPENHEIM&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=spUNpyF58BY"&gt;2Blue1Brown But what is the Fourier Transform? A visual introduction. &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;https://www.jezzamon.com/fourier/zh-cn.html&lt;/li&gt;
&lt;li&gt;http://www.limit-point.com/blog/2023/epicycles/&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Fourier_transform&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Laplace_transform&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Discrete_Fourier_transform&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Convolution&lt;/li&gt;
&lt;/ul&gt;</content><category term="Science"></category></entry><entry><title>LaTeX在VSCode下使用小记</title><link href="https://blog.debao.me/2024/10/notes-on-latex-usage-in-vscode/" rel="alternate"></link><published>2024-10-16T00:03:00+08:00</published><updated>2024-10-16T00:03:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-10-16:/2024/10/notes-on-latex-usage-in-vscode/</id><summary type="html">&lt;p&gt;LaTeX应该无需多少介绍。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LaTeX 是一种基于 TeX 的排版系统，由 Leslie Lamport 在 1980 年代开发的，广泛用于学术和技术文档的撰写，尤其是在需要复杂公式排版和 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;LaTeX应该无需多少介绍。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LaTeX 是一种基于 TeX 的排版系统，由 Leslie Lamport 在 1980 年代开发的，广泛用于学术和技术文档的撰写，尤其是在需要复杂公式排版和精密排版的领域，如数学、物理、计算机科学等。&lt;/li&gt;
&lt;li&gt;TeX 是一种用于高质量排版的计算机语言，由美国计算机科学家 Donald Knuth 于 1978 年开发。它的设计初衷是为了提供一种能够生成精美排版的工具。&lt;/li&gt;
&lt;li&gt;有不同的发行版可用，Tex Live、MiKTex、MacTex、proTeXt以及TinyTex等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="tex"&gt;简单的Tex文档&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;这个东西不能去类比Word等软件，可以类比C++等语言。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;创建一个简单的文本文档，比如 debao.tex：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;article&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\usepackage&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;amsmath&lt;span class="nb"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;\title&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;Hello LaTex and VSCode&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\author&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;1+1=10&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\date&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\today&lt;/span&gt;&lt;span class="nb"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;\maketitle&lt;/span&gt;

&lt;span class="k"&gt;\section&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;Introduction&lt;span class="nb"&gt;}&lt;/span&gt;
Here is an equation:

&lt;span class="sb"&gt;\[&lt;/span&gt;
&lt;span class="nb"&gt;e^{i&lt;/span&gt;&lt;span class="nv"&gt;\pi&lt;/span&gt;&lt;span class="nb"&gt;} &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="nb"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="s"&gt;\]&lt;/span&gt;

&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;要将.tex转成pdf文件，需要执行一条编译指令，比如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pdflatex&lt;span class="w"&gt; &lt;/span&gt;debao.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;早期的做法是（20年前刚接触latex时）先转成.dvi，而后再转.pdf或.ps格式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;latex&lt;span class="w"&gt; &lt;/span&gt;debao.tex
dvipdf&lt;span class="w"&gt; &lt;/span&gt;debao.dvi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;除了pdflatex，还有xelatex、lualatex等工具。如果我们要使用中文的话，最简单就是使用xelatex&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;ctexart&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\usepackage&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;amsmath&lt;span class="nb"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;\title&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;你好LaTex与VSCode&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\author&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;1+1=10&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\date&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\today&lt;/span&gt;&lt;span class="nb"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;\maketitle&lt;/span&gt;

&lt;span class="k"&gt;\section&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;简介&lt;span class="nb"&gt;}&lt;/span&gt;
一个简单的方程:

&lt;span class="sb"&gt;\[&lt;/span&gt;
&lt;span class="nb"&gt;e^{i&lt;/span&gt;&lt;span class="nv"&gt;\pi&lt;/span&gt;&lt;span class="nb"&gt;} &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="nb"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="s"&gt;\]&lt;/span&gt;

&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;注意文档类使用ctexart、ctexrep、ctexbook取代article、report、book。&lt;/p&gt;
&lt;p&gt;编译：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;xelatex&lt;span class="w"&gt; &lt;/span&gt;debao_cn.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;当有目录或交叉引用时，命令需要执行两次或以上。可以用脚本（比如latexmk)、预置菜谱(recipe)或其他方式进行自动化。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="tex_1"&gt;相关Tex工具：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;pdflatex: 将 .tex 文件直接编译为 PDF 文件。最常用的编译器，适合国外大多数场景【因没有Unicode，对中国用户不太友好】。&lt;/li&gt;
&lt;li&gt;xelatex: 支持 Unicode 编码和 OpenType 字体，适合编写多语言文档或需要使用系统字体的场景。【中文简单】&lt;/li&gt;
&lt;li&gt;lualatex: 与 xelatex 类似，支持更复杂的字体和图形处理，基于 LuaTeX 引擎。&lt;/li&gt;
&lt;li&gt;latex + dvipdf: 先将 .tex 文件编译为 DVI（Device Independent File Format）文件，再将 DVI 转换为 PDF 或 PS 格式。【老旧的工作流】&lt;/li&gt;
&lt;li&gt;bibtex： 一个用于管理文献引用的工具。它通过一个 .bib 文件来存储文献信息，并且可以在 LaTeX 文档中自动生成参考文献列表。&lt;/li&gt;
&lt;li&gt;latexmk：一个perl脚本，会自动运行多次 LaTeX 编译，直到所有引用、索引和参考文献等问题都得到解决。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_1"&gt;在线公式编辑器&lt;/h3&gt;
&lt;p&gt;有很多在线公式编辑器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://latexeditor.lagrida.com/"&gt;https://latexeditor.lagrida.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://editor.codecogs.com/"&gt;https://editor.codecogs.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有一个平台：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.overleaf.com/"&gt;https://www.overleaf.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="latex-workshop"&gt;LaTeX Workshop 扩展&lt;/h2&gt;
&lt;p&gt;LaTeX Workshop 是 VS Code 中最流行的 LaTeX 插件，它可以帮助编写、编译 LaTeX 文档，并提供实时预览、语法高亮、自动补全等功能。&lt;/p&gt;
&lt;p&gt;只要保证Latex在系统环境变量PATH内，在VS Code中安装LaTex Workshop，就直接可以用了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件：新建.tex，并编写内容。确保在编译之前 .tex 文件已保存 (Ctrl+S 或 Cmd+S)。&lt;/li&gt;
&lt;li&gt;编译：按下 Ctrl+Alt+B（Windows/Linux）或 Cmd+Alt+B（macOS），触发 LaTeX Workshop 的编译命令。默认情况下，它会使用 pdflatex 进行编译，并生成一个 PDF 文件。&lt;/li&gt;
&lt;li&gt;预览 PDF：编译完成后，LaTeX Workshop 会自动在 VS Code 中显示生成的 PDF 文件。如果没有自动显示，可以点击右上角的 LaTeX Workshop 面板图标 来手动打开 PDF 预览窗口。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;自定义配置&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;用于熟悉vscode，记录一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;LaTeX Workshop 支持多种编译器，如 pdflatex、xelatex、lualatex 等。通过修改 VS Code 的设置文件 (settings.json)，我们可以根据需要自定义编译命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 VS Code 中，打开命令面板（Ctrl+Shift+P 或 Cmd+Shift+P），在搜索框中输入 Preferences: Open Settings (JSON) 来选择它。&lt;/li&gt;
&lt;li&gt;在打开的 settings.json 中，添加或修改如下配置（注意加在顶层的对象/大括号内）：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;
&lt;span class="normal"&gt;63&lt;/span&gt;
&lt;span class="normal"&gt;64&lt;/span&gt;
&lt;span class="normal"&gt;65&lt;/span&gt;
&lt;span class="normal"&gt;66&lt;/span&gt;
&lt;span class="normal"&gt;67&lt;/span&gt;
&lt;span class="normal"&gt;68&lt;/span&gt;
&lt;span class="normal"&gt;69&lt;/span&gt;
&lt;span class="normal"&gt;70&lt;/span&gt;
&lt;span class="normal"&gt;71&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// 定义工具链（编译器）&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;latex-workshop.latex.tools&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pdflatex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;command&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pdflatex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;args&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-synctex=1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-interaction=nonstopmode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-file-line-error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%DOC%&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;xelatex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;command&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;xelatex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;args&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-synctex=1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-interaction=nonstopmode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-file-line-error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%DOC%&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lualatex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;command&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lualatex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;args&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-synctex=1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-interaction=nonstopmode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-file-line-error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%DOC%&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bibtex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;command&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bibtex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;args&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%DOCFILE%&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;env&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// 定义编译配方（recipes）&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;latex-workshop.latex.recipes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pdflatex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;tools&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pdflatex&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;xelatex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;tools&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;xelatex&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lualatex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;tools&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lualatex&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pdflatex ➞ bibtex ➞ pdflatex`×2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;tools&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pdflatex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bibtex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pdflatex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pdflatex&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;latex-workshop.latex.tools：这个配置项定义了可用的工具（即编译器），例如 pdflatex、xelatex、lualatex。每个工具都有一个名称（name）和对应的命令（command），以及传递给命令的参数（args）。&lt;/p&gt;
&lt;p&gt;latex-workshop.latex.recipes：这个配置项定义了编译的 "食谱"（recipes），即在编译时要调用哪些工具。每个 recipe 都会指定一个或&lt;strong&gt;多个工具&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;要使用自定义工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;按 Ctrl+Shift+P（Windows/Linux）或 Cmd+Shift+P（macOS）打开命令面板。&lt;/li&gt;
&lt;li&gt;输入并选择 LaTeX Workshop: Build with recipe。&lt;/li&gt;
&lt;li&gt;弹出的菜单，会列出前面在 latex-workshop.latex.recipes 中定义的编译器选项（pdflatex、xelatex、lualatex）。&lt;/li&gt;
&lt;li&gt;直接选择需要的编译器，而后VS Code 使用选择的编译器进行编译。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果要固定使用一个，可以在配置文件内配置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;quot;latex-workshop.latex.recipe.default&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;xelatex&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或者&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;quot;latex-workshop.latex.recipe.default&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lastUsed&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="vscodetexxworkstexstudio"&gt;VSCode、TexXworks、TeXstudio&lt;/h2&gt;
&lt;p&gt;这三个可以简单对比一下：VS Code 在灵活性和多语言支持上强于 TeXworks，但在 LaTeX 专用功能和集成方面略逊于 TeXstudio。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性/方面&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;VS Code + LaTeX Workshop&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;TeXworks&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;TeXstudio&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;平台支持&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Windows, macOS, Linux&lt;/td&gt;
&lt;td&gt;Windows, macOS, Linux&lt;/td&gt;
&lt;td&gt;Windows, macOS, Linux&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;安装与配置难度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;中等，需安装 LaTeX Workshop 插件并进行配置&lt;/td&gt;
&lt;td&gt;低，开箱即用&lt;/td&gt;
&lt;td&gt;低，开箱即用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;界面现代化程度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;现代化，支持自定义主题和 UI&lt;/td&gt;
&lt;td&gt;简单且基础&lt;/td&gt;
&lt;td&gt;相对传统，功能丰富但界面较老旧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;LaTeX 功能集成&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;通过插件支持，功能较强但需配置&lt;/td&gt;
&lt;td&gt;基础功能集成，适合初学者&lt;/td&gt;
&lt;td&gt;专为 LaTeX 设计，功能全面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;PDF 预览&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;内置 PDF 预览，支持 SyncTeX&lt;/td&gt;
&lt;td&gt;内置 PDF 预览，支持 SyncTeX&lt;/td&gt;
&lt;td&gt;内置 PDF 预览，支持 SyncTeX&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;语法高亮与自动补全&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;支持语法高亮和自动补全，需插件&lt;/td&gt;
&lt;td&gt;支持基础的 LaTeX 语法高亮&lt;/td&gt;
&lt;td&gt;支持语法高亮、自动补全以及命令建议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;项目管理支持&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;强，支持多文件、多项目工作流&lt;/td&gt;
&lt;td&gt;无项目管理功能&lt;/td&gt;
&lt;td&gt;支持基本的 LaTeX 文档结构和多文件管理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;自动编译&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;通过插件支持（可配置）&lt;/td&gt;
&lt;td&gt;需要手动编译&lt;/td&gt;
&lt;td&gt;支持自动编译功能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;错误提示与调试&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;提供详细的编译错误提示，需插件&lt;/td&gt;
&lt;td&gt;提供基础的错误提示&lt;/td&gt;
&lt;td&gt;提供详细的错误提示和定位功能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;模板支持&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;通过插件或手动配置&lt;/td&gt;
&lt;td&gt;无内置模板支持&lt;/td&gt;
&lt;td&gt;内置丰富的模板库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;扩展性与插件支持&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;高度可扩展，拥有丰富的插件生态系统&lt;/td&gt;
&lt;td&gt;扩展性有限，无法安装插件&lt;/td&gt;
&lt;td&gt;扩展性有限，但自带大量 LaTeX 功能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;版本控制&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;支持 Git 集成，强大的版本控制功能&lt;/td&gt;
&lt;td&gt;不支持 Git 集成&lt;/td&gt;
&lt;td&gt;不支持 Git 集成&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;适用人群&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;需要多语言支持和自定义工作流的用户&lt;/td&gt;
&lt;td&gt;LaTeX 初学者，简单文档需求&lt;/td&gt;
&lt;td&gt;LaTeX 进阶用户，复杂文档管理&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_3"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/James-Yu/LaTeX-Workshop&lt;/li&gt;
&lt;li&gt;https://www.tug.org/texlive/&lt;/li&gt;
&lt;li&gt;https://miktex.org/&lt;/li&gt;
&lt;li&gt;https://mathjiajia.github.io/vscode-and-latex/&lt;/li&gt;
&lt;li&gt;https://jdhao.github.io/2018/03/29/latex-chinese.zh/&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tools"></category><category term="latex"></category><category term="vscode"></category></entry><entry><title>矩阵的计算程序与库小记</title><link href="https://blog.debao.me/2024/10/notes-on-matrix-computation-programs-and-libraries/" rel="alternate"></link><published>2024-10-15T13:24:00+08:00</published><updated>2024-10-15T13:24:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-10-15:/2024/10/notes-on-matrix-computation-programs-and-libraries/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;接前面的&lt;a href="https://blog.debao.me/2024/10/notes-on-matrix/"&gt;矩阵知识小记&lt;/a&gt;，稍微整理一下相关的计算程序或库（不考虑商业版）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;对比&lt;/h2&gt;
&lt;p&gt;涉及矩阵的各种程序和库有很多，暂时关 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;接前面的&lt;a href="https://blog.debao.me/2024/10/notes-on-matrix/"&gt;矩阵知识小记&lt;/a&gt;，稍微整理一下相关的计算程序或库（不考虑商业版）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;对比&lt;/h2&gt;
&lt;p&gt;涉及矩阵的各种程序和库有很多，暂时关注一下如下4个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Maxima&lt;/strong&gt; 是一个计算机代数系统，主要用于符号计算。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NumPy&lt;/strong&gt; 是 Python 中的科学计算库，广泛用于数值计算。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OpenCV&lt;/strong&gt; 是 C++ 用于计算机视觉的库，支持一些矩阵操作，但主要用于图像处理。他有python绑定，但python绑定的矩阵操作主要使用NumPy。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Eigen&lt;/strong&gt; 是 C++ 的矩阵和线性代数库，广泛用于数值计算。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;矩阵常规操作&lt;/h3&gt;
&lt;p&gt;矩阵的创建，矩阵的运算，矩阵的分解...&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Maxima&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;NumPy&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;OpenCV (C++)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Eigen&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵创建&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;matrix([a,b], [c,d])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;np.array([[a, b], [c, d]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cv::Mat A = (cv::Mat_&amp;lt;double&amp;gt;(2,2) &amp;lt;&amp;lt; a, b, c, d);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Eigen::MatrixXd A(2, 2); A &amp;lt;&amp;lt; a, b, c, d;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵加法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A + B&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A + B&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cv::add(A, B, C);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A + B&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵乘法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A . B&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;np.dot(A, B)&lt;/code&gt; 或 &lt;code&gt;A @ B&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;C = A * B;&lt;/code&gt;  或 &lt;code&gt;cv::gemm(A, B, 1.0, cv::Mat(), 0.0, C);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A * B&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵转置&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;transpose(A)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A.T&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cv::transpose(A, B);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A.transpose()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵行列式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;determinant(A)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;np.linalg.det(A)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cv::determinant(A);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A.determinant()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵求逆&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;invert(A)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;np.linalg.inv(A)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cv::invert(A, B);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A.inverse()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵求迹&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;trace(A)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;np.trace(A)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cv::trace(A);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A.trace()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵的LU分解&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;lu_factor(A)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;scipy.linalg.lu(A)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cv::LU(A, B);&lt;/code&gt; (部分功能)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Eigen::FullPivLU&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵的QR分解&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;code&gt;np.linalg.qr(A)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Eigen::HouseholderQR&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵的特征值分解&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;eigenvalues(A)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;np.linalg.eig(A)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cv::eigenNonSymmetric()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Eigen::EigenSolver&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵的SVD分解&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;code&gt;np.linalg.svd(A)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cv::SVDecomp(A, W, U, Vt);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Eigen::JacobiSVD&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵与标量相乘&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;k * A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;k * A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A = A * k;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;k * A&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵拼接&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;augment(A, B)&lt;/code&gt;（水平），&lt;code&gt;stackmatrix(A, B)&lt;/code&gt;（竖直）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;np.hstack((A, B))&lt;/code&gt; (水平)，&lt;code&gt;np.vstack((A, B))&lt;/code&gt; （竖直）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cv::hconcat(A, B, C);&lt;/code&gt; (水平)，&lt;code&gt;cv::vconcat(A, B, C);&lt;/code&gt; （竖直）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Eigen::MatrixXd::hstack(A, B)&lt;/code&gt; ，&lt;code&gt;Eigen::MatrixXd::vstack(A, B)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵求范数&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;code&gt;np.linalg.norm(A)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cv::norm(A);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A.norm()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;单位矩阵&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ident(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;np.eye(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cv::Mat::eye(n, n, CV_64F);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Eigen::MatrixXd::Identity(n, n)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;零矩阵&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;zeromatrix(m, n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;np.zeros((m, n))&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cv::Mat::zeros(m, n, CV_64F);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Eigen::MatrixXd::Zero(m, n)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵元素逐项相乘&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A .* B&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A * B&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cv::multiply(A, B, C);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A.cwiseProduct(B)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵元素逐项取平方&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;code&gt;np.square(A)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cv::pow(A, 2, B);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A.array().square()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵对角线元素&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;diagmatrix(A)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;np.diag(A)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cv::Mat diag = cv::Mat::diag(A);&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A.diagonal()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_3"&gt;存储结构&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;计算机内存是线性的，即内存地址是一个连续的线性空间，但矩阵是二维（或多维）的数据结构。为了将这些多维数据存储在线性内存中，就需要决定如何对数据进行线性化存储，即按行还是按列的顺序存储。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;行主序（Row-major order） 是大多数编程语言（如 C、C++、Python（NumPy 默认））的默认存储方式。这种存储方式更符合线性代数中常见的运算模式，例如矩阵乘法中的行向量和列向量操作。&lt;/li&gt;
&lt;li&gt;列主序（Column-major order） 是 Fortran 和一些数学工具（如 MATLAB 和 Eigen（默认））的选择。这是因为 Fortran 早期广泛用于科学计算，使用列主序可以更好地优化向量化操作和循环性能。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比如：对于 2x2 矩阵：&lt;/p&gt;
&lt;div class="math display"&gt;
A = \begin{pmatrix} 1 &amp; 2 \\ 3 &amp; 4 \end{pmatrix}
&lt;/div&gt;

&lt;p&gt;按 &lt;strong&gt;行主序&lt;/strong&gt; 存储的内存排列为：&lt;code&gt;[1, 2, 3, 4]&lt;/code&gt;；按 &lt;strong&gt;列主序&lt;/strong&gt; 存储的内存排列则为：&lt;code&gt;[1, 3, 2, 4]&lt;/code&gt;。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;库/工具&lt;/th&gt;
&lt;th&gt;默认存储顺序&lt;/th&gt;
&lt;th&gt;如何选择行/列主序&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Maxima&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;无特别存储顺序&lt;/td&gt;
&lt;td&gt;无法选择，列表的列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;NumPy&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;行主序（可选列主序）&lt;/td&gt;
&lt;td&gt;使用 &lt;code&gt;order='C'&lt;/code&gt; 选择行主序，&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;使用 &lt;code&gt;order='F'&lt;/code&gt; 选择列主序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;OpenCV&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;行主序&lt;/td&gt;
&lt;td&gt;无法选择，默认使用行主序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Eigen&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;列主序（可选行主序）&lt;/td&gt;
&lt;td&gt;使用 &lt;code&gt;Eigen::RowMajor&lt;/code&gt; 选择行主序，&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;默认列主序&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="-"&gt;例子-特征值计算&lt;/h2&gt;
&lt;p&gt;以如下矩阵为例，计算其特征值&lt;/p&gt;
&lt;div class="math display"&gt;
A = \begin{pmatrix}
  4 &amp; 0 &amp; 1 \\
  2 &amp; 3 &amp; 2 \\
  1 &amp; 0 &amp; 4
  \end{pmatrix}
&lt;/div&gt;

&lt;p&gt;maxima执行的是符号运算，我们可以使用它模拟手动计算过程：&lt;/p&gt;
&lt;h3 id="_4"&gt;“手动”计算&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;使用charpoly获取特征多项式，也就是&lt;span class="math inline"&gt;\mathbf{A}-t\mathbf{I}&lt;/span&gt;的行列式值&lt;/li&gt;
&lt;li&gt;使用factor对特征多项进行分解，得出 &lt;span class="math inline"&gt;-(t-5)*(t-3)^2&lt;/span&gt;，可以肉眼看出特征值的结果&lt;/li&gt;
&lt;li&gt;使用solve解方程，得出特征值&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;(%&lt;/span&gt;&lt;span class="nt"&gt;i1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;A&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;                                  &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;                                  &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;(%&lt;/span&gt;&lt;span class="nt"&gt;o1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;                             &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;                                  &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;                                  &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;(%&lt;/span&gt;&lt;span class="nt"&gt;i2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;f&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;charpoly&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;A&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;t&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;                                              &lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;(%&lt;/span&gt;&lt;span class="nt"&gt;o2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="nt"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;t&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;t&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;3&lt;/span&gt;
&lt;span class="o"&gt;(%&lt;/span&gt;&lt;span class="nt"&gt;i3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;factor&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;f&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;                                               &lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;(%&lt;/span&gt;&lt;span class="nt"&gt;o3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;                         &lt;/span&gt;&lt;span class="nt"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;(%&lt;/span&gt;&lt;span class="nt"&gt;i4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;solve&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;f&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;t&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;(%&lt;/span&gt;&lt;span class="nt"&gt;o4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;                           &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;如何求解特征向量呢？？&lt;/p&gt;
&lt;p&gt;比如，接上面，我们要继续求解特征值 3 的特征向量，需要解如下方程 &lt;span class="math inline"&gt;(A - 3I) \mathbf{v} = 0&lt;/span&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;(%i12) linsolve([v3+v1=0, 2*v3+2*v1=0, v3+v1=0], [v1,v2,v3]);
(%o12)                 [v1 = - %r1, v2 = %r2, v3 = %r1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;解出来的解是参数形式。据此，将参数用（1,0）和（0,1）带入，可以构造出两个特征向量&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[1, 0, −1], [0, 1, 0]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;同样，对于特征值5，需要解 &lt;span class="math inline"&gt;(A - 5I) \mathbf{v} = 0&lt;/span&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;(%i15) linsolve([v3-v1=0, 2*v3-2*v2+2*v1=0, v1-v3=0], [v1,v2,v3]);
(%o15) [v1 = %r3, v2 = 2 %r3, v3 = %r3]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;接出来的解依然是参数形式，将参数用1带入，可以构造出特征向量&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[1,2,1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="maxima"&gt;maxima自动计算&lt;/h3&gt;
&lt;p&gt;让 maxima 直接计算特征值也很简单：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;(%&lt;/span&gt;&lt;span class="nt"&gt;i1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;A&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;                                  &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;                                  &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;(%&lt;/span&gt;&lt;span class="nt"&gt;o1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;                             &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;                                  &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;                                  &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;(%&lt;/span&gt;&lt;span class="nt"&gt;i2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;eigenvalues&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;A&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;(%&lt;/span&gt;&lt;span class="nt"&gt;o2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;                          &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;真正的特征值是放在结果的第一个list 当中，也就是5 和3。那第二个list 代表什么呢？代表的就是每个特征值的几何重数, 也就是每个特征值对应的特征向量空间之维度。&lt;/p&gt;
&lt;p&gt;如果同时要求出特征向量，可以直接用eigenvectors函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;(%i3) eigenvectors(A);
(%o3) [[[5, 3], [1, 2]], [1, 2, 1], [1, 0, −1], [0, 1, 0]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="numpy"&gt;numpy&lt;/h3&gt;
&lt;p&gt;Python下功能都是现成的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;

&lt;span class="n"&gt;eigenvalues&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linalg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eigvals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# A 的特征值： [3. 5. 3.]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A 的特征值：&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;eigenvalues&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;如果要同时求出特征向量，可以直接用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;eigenvalues&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;eigenvectors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linalg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A 的特征值：&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;eigenvalues&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A 的特征向量：&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;eigenvectors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#A 的特征值： [3. 5. 3.]&lt;/span&gt;
&lt;span class="c1"&gt;#A 的特征向量：&lt;/span&gt;
&lt;span class="c1"&gt;# [[ 0.          0.40824829 -0.70710678]&lt;/span&gt;
&lt;span class="c1"&gt;# [ 1.          0.81649658  0.        ]&lt;/span&gt;
&lt;span class="c1"&gt;# [ 0.          0.40824829  0.70710678]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;特征向量要竖着看（列向量）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="eigen"&gt;Eigen&lt;/h3&gt;
&lt;p&gt;Eigen下使用 EigenSolver 计算矩阵 A 的特征值和特征向量&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;Eigen/Dense&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Eigen&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Matrix3d&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Eigen&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;EigenSolver&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Eigen&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Matrix3d&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;solver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;solver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eigenvalues&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;solver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eigenvectors&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;输出结果&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;(5,0)
(3,0)
(3,0)
 (0.408248,0)  (0.408248,0) (-0.268517,0)
 (0.816497,0) (-0.816497,0) (-0.925093,0)
 (0.408248,0) (-0.408248,0)  (0.268517,0)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;特征向量要竖着看（列向量）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="opencv"&gt;OpenCV&lt;/h3&gt;
&lt;p&gt;在OpenCV中，使用 cv::eigen 或 cv::eigenNonSymmetric 计算特征值和特征向量&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;opencv2/opencv.hpp&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Mat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Mat_&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Mat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;eigenvalues&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;eigenvectors&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;eigenNonSymmetric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;eigenvalues&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;eigenvectors&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;eigenvalues&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;eigenvectors&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;输出结果&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[5;
 3;
 3]
[0.547722557505166, 1.095445115010332, 0.5477225575051659;
 -0.4082482904638631, 0.8164965809277259, 0.4082482904638629;
 -0.5412318472679982, -1.153604282963793, 0.5412318472679984]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;特征向量要竖着看（列向量）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意，上面用的cv::eigenNonSymmetric函数，尽管cv::eigen也能用于特征值求解，但是它只适用于对称矩阵。
如果不小心用错了函数，大致会得到下面这种错误的结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[5.903211925911553;
 3.80606343352537;
 1.290724640563077]
[0.3971125497870069, 0.5206573684395941, 0.7557893406837773;
 0.8876503388204475, -0.4271322870657471, -0.1721478589408799;
 0.233191978407506, 0.7392387395392244, -0.6317812811178029]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="octave"&gt;Octave&lt;/h2&gt;
&lt;p&gt;Octave：Octave 是一个开源的高级编程语言，主要用于数值计算，语法和功能与 MATLAB 高度兼容。有不少在线网站可以用于练习。&lt;/p&gt;
&lt;p&gt;在一定程度上，Octave和Python的Numpy可以类比：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Octave&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Python (NumPy + SciPy)&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵支持&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;原生支持矩阵类型&lt;/strong&gt;，默认情况下一切操作都是基于矩阵&lt;/td&gt;
&lt;td&gt;通过 &lt;strong&gt;NumPy&lt;/strong&gt; 提供矩阵和数组支持，默认是数组（ndarray）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵操作的简洁性&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;矩阵运算非常简洁&lt;/strong&gt;，默认处理为二维矩阵，类似 MATLAB&lt;/td&gt;
&lt;td&gt;NumPy 的数组操作非常灵活，但 Python 本身没有内置矩阵支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵索引&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1 基索引（从 1 开始）&lt;/td&gt;
&lt;td&gt;0 基索引（从 0 开始），符合大多数编程语言的习惯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;线性代数库&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;内置矩阵运算与线性代数函数，如 &lt;code&gt;inv&lt;/code&gt;、&lt;code&gt;eig&lt;/code&gt;、&lt;code&gt;det&lt;/code&gt; 等&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;NumPy&lt;/strong&gt; 和 &lt;strong&gt;SciPy&lt;/strong&gt; 提供了丰富的线性代数函数，如 &lt;code&gt;inv&lt;/code&gt;、&lt;code&gt;eig&lt;/code&gt;、&lt;code&gt;det&lt;/code&gt; 等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;稀疏矩阵支持&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;支持稀疏矩阵，通过 &lt;code&gt;sparse&lt;/code&gt; 函数进行稀疏矩阵运算&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;SciPy&lt;/strong&gt; 提供了强大的稀疏矩阵支持，适合处理大规模稀疏矩阵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;广播机制&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;无自动广播机制，矩阵的维度必须匹配&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;NumPy&lt;/strong&gt; 支持广播机制，可在不同维度的数组之间进行操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵乘法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*&lt;/code&gt; 表示矩阵乘法，&lt;code&gt;.*&lt;/code&gt; 表示元素逐个相乘&lt;/td&gt;
&lt;td&gt;&lt;code&gt;@&lt;/code&gt; 表示矩阵乘法，&lt;code&gt;*&lt;/code&gt; 表示元素逐个相乘（从 Python 3.5+ 开始）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;向量化计算&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;默认支持向量化计算，所有操作都是矩阵或向量的&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;NumPy&lt;/strong&gt; 默认支持向量化计算，避免显式的循环&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;性能&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;针对矩阵运算进行了优化，矩阵操作性能较好&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;NumPy&lt;/strong&gt; 和 &lt;strong&gt;SciPy&lt;/strong&gt; 的矩阵运算经过高度优化，性能非常好，部分操作可以与 Octave 相媲美&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵转置&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;使用 &lt;code&gt;'&lt;/code&gt; 符号进行矩阵转置&lt;/td&gt;
&lt;td&gt;使用 &lt;code&gt;T&lt;/code&gt; 属性进行矩阵转置（如 &lt;code&gt;A.T&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;高级矩阵分解&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;内置支持常见的矩阵分解如 QR、LU、SVD&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;SciPy&lt;/strong&gt; 提供了丰富的矩阵分解功能，如 QR、LU、SVD、Cholesky 等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵求解&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;使用 &lt;code&gt;A\b&lt;/code&gt; 语法求解线性方程组&lt;/td&gt;
&lt;td&gt;使用 &lt;code&gt;np.linalg.solve(A, b)&lt;/code&gt; 进行线性方程组求解&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;性能优化&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;支持与 &lt;strong&gt;BLAS/LAPACK&lt;/strong&gt; 库集成，提升大规模矩阵运算性能&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;NumPy&lt;/strong&gt; 和 &lt;strong&gt;SciPy&lt;/strong&gt; 也可以与 &lt;strong&gt;BLAS/LAPACK&lt;/strong&gt; 集成，提供类似的性能优化&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GPU 支持&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;无原生支持，需要额外配置（如借助 OpenCL）&lt;/td&gt;
&lt;td&gt;可通过 &lt;strong&gt;CuPy&lt;/strong&gt; 等库轻松扩展到 GPU 支持&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_5"&gt;其他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Armadillo：Armadillo 是一个 C++ 线性代数库，提供类似 MATLAB 的简洁语法，适合科学计算和与 BLAS/LAPACK 集成的高效运算。&lt;/li&gt;
&lt;li&gt;Blaze：Blaze 是一个高度优化的 C++ 线性代数库，专注于性能，通过自动向量化和并行化提供极致的矩阵运算效率。&lt;/li&gt;
&lt;li&gt;CuPy 提供了与 NumPy 类似的接口，适合 Python 用户进行 GPU 加速。&lt;/li&gt;
&lt;li&gt;MAGMA 支持混合 CPU 和 GPU 的矩阵运算，适合需要在多核 CPU 和 GPU 上并行执行的高性能任务。&lt;/li&gt;
&lt;li&gt;TensorFlow 和 PyTorch 虽然是机器学习框架，但也可以用于 GPU 上的高效矩阵运算。&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_6"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://maxima.sourceforge.io&lt;/li&gt;
&lt;li&gt;https://numpy.org/&lt;/li&gt;
&lt;li&gt;https://eigen.tuxfamily.org&lt;/li&gt;
&lt;li&gt;https://docs.opencv.org&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Eigenvalues_and_eigenvectors&lt;/li&gt;
&lt;li&gt;https://octave.org/&lt;/li&gt;
&lt;li&gt;https://arma.sourceforge.net/&lt;/li&gt;
&lt;li&gt;https://bitbucket.org/blaze-lib/blaze&lt;/li&gt;
&lt;li&gt;https://octave-online.net/&lt;/li&gt;
&lt;li&gt;https://www.mycompiler.io/new/octave&lt;/li&gt;
&lt;li&gt;https://docs.cupy.dev/en/stable/&lt;/li&gt;
&lt;li&gt;https://icl.utk.edu/magma/&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tools"></category></entry><entry><title>矩阵知识小记</title><link href="https://blog.debao.me/2024/10/notes-on-matrix/" rel="alternate"></link><published>2024-10-14T15:49:00+08:00</published><updated>2024-10-14T15:49:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-10-14:/2024/10/notes-on-matrix/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;理一理矩阵的知识。&lt;a href="https://github.com/kenjihiranabe/The-Art-of-Linear-Algebra"&gt;The Art of Linear Algebra&lt;/a&gt; 对线性代数的知识做了很多很直观的图表，本文中图片全部基于它们（有修改）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="matrix world" src="https://blog.debao.me/images/science/matrix_world.png"&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;矩阵类型&lt;/h2&gt;
&lt;p&gt;矩 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;理一理矩阵的知识。&lt;a href="https://github.com/kenjihiranabe/The-Art-of-Linear-Algebra"&gt;The Art of Linear Algebra&lt;/a&gt; 对线性代数的知识做了很多很直观的图表，本文中图片全部基于它们（有修改）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="matrix world" src="https://blog.debao.me/images/science/matrix_world.png"&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;矩阵类型&lt;/h2&gt;
&lt;p&gt;矩阵有很多类别：对称矩阵、正交矩阵、奇异矩阵、可逆矩阵、方形矩阵、可对角矩阵等等。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;类别&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;英文注解&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;矩阵 (Matrix)&lt;/td&gt;
&lt;td&gt;所有矩阵&lt;span class="math inline"&gt;A \in \mathbb{R}^{m \times n}&lt;/span&gt; 均可进行 QR 分解或 SVD 分解。&lt;/td&gt;
&lt;td&gt;Matrices&lt;span class="math inline"&gt;A \in \mathbb{R}^{m \times n}&lt;/span&gt; can be decomposed using QR or SVD.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方阵 (Square Matrix)&lt;/td&gt;
&lt;td&gt;方阵&lt;span class="math inline"&gt;A \in \mathbb{R}^{n \times n}&lt;/span&gt; 包括可逆矩阵或奇异矩阵。&lt;/td&gt;
&lt;td&gt;Square matrices&lt;span class="math inline"&gt;A \in \mathbb{R}^{n \times n}&lt;/span&gt; can be invertible or singular.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;可逆矩阵 (Invertible Matrix)&lt;/td&gt;
&lt;td&gt;可逆矩阵&lt;span class="math inline"&gt;A^{-1}&lt;/span&gt; 存在，当且仅当 &lt;span class="math inline"&gt;\det(A) \neq 0&lt;/span&gt;。&lt;/td&gt;
&lt;td&gt;An invertible matrix&lt;span class="math inline"&gt;A^{-1}&lt;/span&gt; exists if and only if &lt;span class="math inline"&gt;\det(A) \neq 0&lt;/span&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;奇异矩阵 (Singular Matrix)&lt;/td&gt;
&lt;td&gt;奇异矩阵&lt;span class="math inline"&gt;A^{-1}&lt;/span&gt; 不存在，且 &lt;span class="math inline"&gt;\det(A) = 0&lt;/span&gt;。&lt;/td&gt;
&lt;td&gt;A singular matrix&lt;span class="math inline"&gt;A^{-1}&lt;/span&gt; does not exist, and &lt;span class="math inline"&gt;\det(A) = 0&lt;/span&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;可对角化矩阵 (Diagonalizable Matrix)&lt;/td&gt;
&lt;td&gt;如果方阵&lt;span class="math inline"&gt;A&lt;/span&gt; 有 &lt;span class="math inline"&gt;n&lt;/span&gt; 个线性无关的特征向量，则它是可对角化的，可以表示为 &lt;span class="math inline"&gt;A = X \Lambda X^{-1}&lt;/span&gt;。&lt;/td&gt;
&lt;td&gt;If a square matrix&lt;span class="math inline"&gt;A&lt;/span&gt; has &lt;span class="math inline"&gt;n&lt;/span&gt; linearly independent eigenvectors, it is diagonalizable and can be written as &lt;span class="math inline"&gt;A = X \Lambda X^{-1}&lt;/span&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;正规&lt;/strong&gt;矩阵 (Normal Matrix)&lt;/td&gt;
&lt;td&gt;满足&lt;span class="math inline"&gt;A^T A = A A^T&lt;/span&gt;，可以通过正交矩阵对角化为 &lt;span class="math inline"&gt;A = Q \Lambda Q^{-1}&lt;/span&gt;。&lt;/td&gt;
&lt;td&gt;Satisfies&lt;span class="math inline"&gt;A^T A = A A^T&lt;/span&gt;, and can be diagonalized by an orthogonal matrix as &lt;span class="math inline"&gt;A = Q \Lambda Q^{-1}&lt;/span&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;对称矩阵 (Symmetric Matrix)&lt;/td&gt;
&lt;td&gt;对称矩阵&lt;span class="math inline"&gt;A = A^T&lt;/span&gt; 是正规矩阵的子集，特征值为实数。&lt;/td&gt;
&lt;td&gt;A symmetric matrix&lt;span class="math inline"&gt;A = A^T&lt;/span&gt; is a subset of normal matrices, with real eigenvalues.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;正定&lt;/strong&gt;矩阵 (Positive Definite Matrix)&lt;/td&gt;
&lt;td&gt;正定矩阵的所有特征值&lt;span class="math inline"&gt;\lambda &amp;gt; 0&lt;/span&gt;。&lt;/td&gt;
&lt;td&gt;The eigenvalues of a positive definite matrix satisfy&lt;span class="math inline"&gt;\lambda &amp;gt; 0&lt;/span&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;正半定矩阵 (Positive Semi-Definite Matrix)&lt;/td&gt;
&lt;td&gt;正半定矩阵的所有特征值&lt;span class="math inline"&gt;\lambda \geq 0&lt;/span&gt;。&lt;/td&gt;
&lt;td&gt;The eigenvalues of a positive semi-definite matrix satisfy&lt;span class="math inline"&gt;\lambda \geq 0&lt;/span&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;投影矩阵 (Projection Matrix)&lt;/td&gt;
&lt;td&gt;投影矩阵&lt;span class="math inline"&gt;P&lt;/span&gt; 满足 &lt;span class="math inline"&gt;P^2 = P = P^T&lt;/span&gt;，特征值为 0 或 1。&lt;/td&gt;
&lt;td&gt;A projection matrix&lt;span class="math inline"&gt;P&lt;/span&gt; satisfies &lt;span class="math inline"&gt;P^2 = P = P^T&lt;/span&gt;, and its eigenvalues are 0 or 1.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;正交&lt;/strong&gt;矩阵 (Orthogonal Matrix)&lt;/td&gt;
&lt;td&gt;正交矩阵&lt;span class="math inline"&gt;A^{-1} = A^T&lt;/span&gt;，特征值的模长为 1。&lt;/td&gt;
&lt;td&gt;An orthogonal matrix satisfies&lt;span class="math inline"&gt;A^{-1} = A^T&lt;/span&gt;, with eigenvalues of modulus 1.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;置换矩阵 (Permutation Matrix)&lt;/td&gt;
&lt;td&gt;置换矩阵&lt;span class="math inline"&gt;P&lt;/span&gt;是正交矩阵的子集，是通过重新排列单位矩阵的行或列生成的，且满足 &lt;span class="math inline"&gt;P^{-1} = P^T&lt;/span&gt;。&lt;/td&gt;
&lt;td&gt;A permutation matrix&lt;span class="math inline"&gt;P&lt;/span&gt; is generated by rearranging the rows or columns of the identity matrix, and satisfies &lt;span class="math inline"&gt;P^{-1} = P^T&lt;/span&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;反射矩阵 (Reflection Matrix)&lt;/td&gt;
&lt;td&gt;反射矩阵是正交矩阵的一个子集，特征值为&lt;span class="math inline"&gt;1&lt;/span&gt; 或 &lt;span class="math inline"&gt;-1&lt;/span&gt;。&lt;/td&gt;
&lt;td&gt;A reflection matrix is a subset of orthogonal matrices, with eigenvalues of&lt;span class="math inline"&gt;1&lt;/span&gt; or &lt;span class="math inline"&gt;-1&lt;/span&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;伪逆矩阵 (Pseudo-Inverse Matrix)&lt;/td&gt;
&lt;td&gt;伪逆矩阵&lt;span class="math inline"&gt;A^+&lt;/span&gt; 可以通过奇异值分解表示为 &lt;span class="math inline"&gt;A^+ = V \Sigma^+ U^T&lt;/span&gt;，即使 &lt;span class="math inline"&gt;A&lt;/span&gt; 不是可逆矩阵。&lt;/td&gt;
&lt;td&gt;The pseudo-inverse&lt;span class="math inline"&gt;A^+&lt;/span&gt; can be represented via singular value decomposition as &lt;span class="math inline"&gt;A^+ = V \Sigma^+ U^T&lt;/span&gt;, even if &lt;span class="math inline"&gt;A&lt;/span&gt; is not invertible.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_2"&gt;复数域&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;矩阵类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;复数域上的矩阵&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;实数域上的对应矩阵&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;厄米矩阵&lt;/strong&gt; (&lt;em&gt;Hermitian Matrix&lt;/em&gt;)&lt;/td&gt;
&lt;td&gt;厄米矩阵 &lt;span class="math inline"&gt;A = A^\dagger&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;对称矩阵 &lt;span class="math inline"&gt;A = A^T&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;复数域中，矩阵的共轭转置等于自身；实数域中，转置等于自身。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;酉矩阵&lt;/strong&gt; (&lt;em&gt;Unitary Matrix&lt;/em&gt;)&lt;/td&gt;
&lt;td&gt;酉矩阵 &lt;span class="math inline"&gt;U^\dagger U = U U^\dagger = I&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;正交矩阵 &lt;span class="math inline"&gt;O^T O = O O^T = I&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;复数域中保持内积，实数域中保持正交性。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;正定矩阵&lt;/strong&gt; (&lt;em&gt;Positive Definite Matrix&lt;/em&gt;)&lt;/td&gt;
&lt;td&gt;正定厄米矩阵 &lt;span class="math inline"&gt;z^* A z &amp;gt; 0&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;正定对称矩阵 &lt;span class="math inline"&gt;x^T A x &amp;gt; 0&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;复数域对复向量的二次型为正，实数域对实向量的二次型为正。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;反厄米矩阵&lt;/strong&gt; (&lt;em&gt;Skew-Hermitian Matrix&lt;/em&gt;)&lt;/td&gt;
&lt;td&gt;反厄米矩阵 &lt;span class="math inline"&gt;A^\dagger = -A&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;反对称矩阵 &lt;span class="math inline"&gt;A^T = -A&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;复数域中，矩阵的共轭转置为负；实数域中，转置为负。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;幺模矩阵&lt;/strong&gt; (&lt;em&gt;Unimodular Matrix&lt;/em&gt;)&lt;/td&gt;
&lt;td&gt;幺模矩阵 &lt;span class="math inline"&gt;det(A) = 1&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;幺模矩阵 &lt;span class="math inline"&gt;det(A) = 1&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;行列式绝对值为 1，复数域允许复数行列式，实数域行列式为 1 或 -1。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_3"&gt;特征值&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;特征值&lt;/strong&gt;（Eigenvalue）是一个与线性变换密切相关的重要概念。给定一个方阵 &lt;span class="math inline"&gt;A \in \mathbb{R}^{n \times n}&lt;/span&gt;，特征值描述了矩阵作用在某些特殊向量（即特征向量）上时，仅改变这些向量长度而不改变方向的情况。&lt;/p&gt;
&lt;p&gt;&lt;img alt="eigenvalues" src="https://blog.debao.me/images/science/matrix_eigenvalues.png"&gt;&lt;/p&gt;
&lt;h4 id="_4"&gt;特征值的定义&lt;/h4&gt;
&lt;p&gt;对于一个方阵 &lt;span class="math inline"&gt;A&lt;/span&gt;，如果存在一个非零向量 &lt;span class="math inline"&gt;v \in \mathbb{R}^n&lt;/span&gt; 和一个标量 &lt;span class="math inline"&gt;\lambda&lt;/span&gt;，使得：&lt;/p&gt;
&lt;div class="math display"&gt;
A v = \lambda v
&lt;/div&gt;

&lt;p&gt;那么 &lt;span class="math inline"&gt;\lambda&lt;/span&gt; 就被称为矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 的&lt;strong&gt;特征值&lt;/strong&gt;，而 &lt;span class="math inline"&gt;v&lt;/span&gt; 被称为与特征值 &lt;span class="math inline"&gt;\lambda&lt;/span&gt; 对应的&lt;strong&gt;特征向量&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id="_5"&gt;几何意义&lt;/h4&gt;
&lt;p&gt;特征值在矩阵的几何变换中的物理意义。&lt;/p&gt;
&lt;p&gt;考虑一个矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 作用在空间中的向量 &lt;span class="math inline"&gt;v&lt;/span&gt; 上：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果 &lt;span class="math inline"&gt;\lambda &amp;gt; 1&lt;/span&gt;，说明矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 对向量 &lt;span class="math inline"&gt;v&lt;/span&gt; 进行了拉伸。&lt;/li&gt;
&lt;li&gt;如果 &lt;span class="math inline"&gt;0 &amp;lt; \lambda &amp;lt; 1&lt;/span&gt;，则矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 对向量 &lt;span class="math inline"&gt;v&lt;/span&gt; 进行了压缩。&lt;/li&gt;
&lt;li&gt;如果 &lt;span class="math inline"&gt;\lambda = 1&lt;/span&gt;，向量 &lt;span class="math inline"&gt;v&lt;/span&gt; 在矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 作用下保持不变。&lt;/li&gt;
&lt;li&gt;如果 &lt;span class="math inline"&gt;\lambda = -1&lt;/span&gt;，则矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 将向量 &lt;span class="math inline"&gt;v&lt;/span&gt; 的方向反转。&lt;/li&gt;
&lt;li&gt;如果 &lt;span class="math inline"&gt;\lambda = 0&lt;/span&gt;，则矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 将向量 &lt;span class="math inline"&gt;v&lt;/span&gt; 压缩为零向量。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_6"&gt;特征值性质&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数量&lt;/strong&gt;：一个 &lt;span class="math inline"&gt;n \times n&lt;/span&gt; 的方阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 通常有 &lt;span class="math inline"&gt;n&lt;/span&gt; 个特征值（包括复数特征值和重数）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;重数&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;代数重数&lt;/strong&gt;：特征值在特征多项式中作为根的重数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;几何重数&lt;/strong&gt;：与特征值对应的线性无关特征向量的数量，即特征空间的维数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;迹和行列式&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;一个矩阵的&lt;strong&gt;迹&lt;/strong&gt;是其所有特征值之和，即 &lt;span class="math inline"&gt;\text{tr}(A) = \sum_{i=1}^{n} \lambda_i&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;一个矩阵的&lt;strong&gt;行列式&lt;/strong&gt;是其所有特征值的乘积，即 &lt;span class="math inline"&gt;\det(A) = \prod_{i=1}^{n} \lambda_i&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_7"&gt;矩阵分解&lt;/h2&gt;
&lt;p&gt;&lt;img alt="factorization" src="https://blog.debao.me/images/science/matrix_factorization.png"&gt;&lt;/p&gt;
&lt;p&gt;好端端的矩阵为什么要分解？？&lt;/p&gt;
&lt;h3 id="_8"&gt;求解线性方程组&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;对于线性方程组 &lt;span class="math inline"&gt;Ax = b&lt;/span&gt;，直接使用矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 的逆矩阵 &lt;span class="math inline"&gt;A^{-1}&lt;/span&gt; 来求解，即 &lt;span class="math inline"&gt;x = A^{-1}b&lt;/span&gt;，就可以了。但为什么在实际应用中，直接用矩阵的逆来解方程并不常见？？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原因：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;计算复杂度高&lt;/strong&gt;：直接求逆矩阵的计算复杂度较高，尤其对于大规模矩阵，求逆操作的计算开销可能非常大。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数值不稳定性&lt;/strong&gt;：求逆操作容易引入数值误差，尤其是当矩阵接近奇异时，逆矩阵的数值误差会非常明显。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;效率低&lt;/strong&gt;：相比于 LU 分解、QR 分解或 Cholesky 分解，直接求逆非常低效。通过分解矩阵，可利用三角矩阵的快速求解方法。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="lu"&gt;LU分解&lt;/h4&gt;
&lt;p&gt;LU 分解将矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 分解为&lt;strong&gt;下三角矩阵&lt;/strong&gt; &lt;span class="math inline"&gt;L&lt;/span&gt; 和&lt;strong&gt;上三角矩阵&lt;/strong&gt; &lt;span class="math inline"&gt;U&lt;/span&gt;，即 &lt;span class="math inline"&gt;A = LU&lt;/span&gt;。这样可以将原方程 &lt;span class="math inline"&gt;Ax = b&lt;/span&gt; 转化为两个更容易求解的三角方程：&lt;/p&gt;
&lt;div class="math display"&gt;
A x = b \quad \Rightarrow \quad LU x = b
&lt;/div&gt;

&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;下三角和上三角矩阵的方程组可以通过&lt;strong&gt;前代&lt;/strong&gt;和&lt;strong&gt;回代&lt;/strong&gt;方法快速求解&lt;/li&gt;
&lt;li&gt;如果需要针对不同的右边向量 &lt;span class="math inline"&gt;b&lt;/span&gt; 求解多个方程组 &lt;span class="math inline"&gt;Ax = b&lt;/span&gt;，只需要对矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 做一次 LU 分解&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="qr"&gt;QR分解&lt;/h4&gt;
&lt;p&gt;QR 分解将矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 分解为&lt;strong&gt;正交矩阵&lt;/strong&gt; &lt;span class="math inline"&gt;Q&lt;/span&gt; 和&lt;strong&gt;上三角矩阵&lt;/strong&gt; &lt;span class="math inline"&gt;R&lt;/span&gt;，即 &lt;span class="math inline"&gt;A = QR&lt;/span&gt;。这样可以将原方程 &lt;span class="math inline"&gt;Ax = b&lt;/span&gt; 转化为：&lt;/p&gt;
&lt;div class="math display"&gt;
Ax = b \quad \Rightarrow \quad QRx = b
&lt;/div&gt;

&lt;p&gt;通过乘以 &lt;span class="math inline"&gt;Q^T&lt;/span&gt;，将方程变为 &lt;span class="math inline"&gt;Rx = Q^T b&lt;/span&gt;，即：&lt;/p&gt;
&lt;div class="math display"&gt;
QR x = b \quad \Rightarrow \quad R x = Q^T b
&lt;/div&gt;

&lt;p&gt;由于 &lt;span class="math inline"&gt;R&lt;/span&gt; 是上三角矩阵，使用&lt;strong&gt;回代&lt;/strong&gt;法可以快速求解 &lt;span class="math inline"&gt;x&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;稳定性高&lt;/strong&gt;：QR 分解在数值计算中比 LU 分解更稳定，尤其在处理&lt;strong&gt;病态矩阵&lt;/strong&gt;（即条件数很大的矩阵）时，它能够更好地避免误差的积累。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最小二乘法&lt;/strong&gt;：QR 分解特别适合用于求解&lt;strong&gt;过定方程组&lt;/strong&gt;（即方程的数量多于未知数的情况），这种情况下可以通过最小二乘法来求解，而 QR 分解是最常用的最小二乘法工具之一。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_9"&gt;降维与压缩&lt;/h3&gt;
&lt;p&gt;在数据降维和压缩领域。通过矩阵分解技术，可以有效地减少数据的维度或存储空间，同时保留大部分信息。&lt;/p&gt;
&lt;h4 id="svd"&gt;奇异值分解 (SVD)：&lt;/h4&gt;
&lt;p&gt;SVD 将矩阵 &lt;span class="math inline"&gt;A \in \mathbb{R}^{m \times n}&lt;/span&gt; 分解为三个矩阵的乘积：&lt;/p&gt;
&lt;div class="math display"&gt;
A = U \Sigma V^T
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;U&lt;/span&gt; 是 &lt;span class="math inline"&gt;m \times m&lt;/span&gt; 的正交矩阵，表示&lt;strong&gt;左奇异向量&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\Sigma&lt;/span&gt; 是 &lt;span class="math inline"&gt;m \times n&lt;/span&gt; 的&lt;strong&gt;对角矩阵&lt;/strong&gt;，包含矩阵的&lt;strong&gt;奇异值&lt;/strong&gt;（按大小排序）。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;V^T&lt;/span&gt; 是 &lt;span class="math inline"&gt;n \times n&lt;/span&gt; 的正交矩阵，表示&lt;strong&gt;右奇异向量&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;通过 SVD 分解矩阵，奇异值矩阵 &lt;span class="math inline"&gt;\Sigma&lt;/span&gt; 的对角元素（奇异值）按大小递减排列。较大的奇异值对应了数据中的重要信息，而较小的奇异值对应了噪声或冗余信息。通过&lt;strong&gt;截断较小的奇异值&lt;/strong&gt;，可以减少矩阵的维度，但保留大部分原始数据的结构。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果只保留前 &lt;span class="math inline"&gt;k&lt;/span&gt; 个最大的奇异值和对应的奇异向量，得到的矩阵 &lt;span class="math inline"&gt;A_k&lt;/span&gt; 是原矩阵的低秩近似（降维）：&lt;/p&gt;
&lt;div class="math display"&gt;
A_k = U_k \Sigma_k V_k^T
&lt;/div&gt;

&lt;p&gt;其中 &lt;span class="math inline"&gt;U_k&lt;/span&gt; 和 &lt;span class="math inline"&gt;V_k&lt;/span&gt; 只保留前 &lt;span class="math inline"&gt;k&lt;/span&gt; 列，&lt;span class="math inline"&gt;\Sigma_k&lt;/span&gt; 是前 &lt;span class="math inline"&gt;k&lt;/span&gt; 个奇异值构成的对角矩阵。&lt;/p&gt;
&lt;h2 id="_10"&gt;矩阵&lt;/h2&gt;
&lt;p&gt;Matrix 中文翻译成矩阵，日文翻译为行列（ぎょうれつ，gyōretsu），而 Determinant 在中文和日文中都是行列式。&lt;/p&gt;
&lt;p&gt;Vector 在中文中翻译比较乱：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数学：向量。向 表示方向；量 表示大小和数量&lt;/li&gt;
&lt;li&gt;物理：矢量。矢 表示箭头，暗示方向；量 表示大小和数量。&lt;/li&gt;
&lt;li&gt;C++：动态数组&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_11"&gt;矩阵定义&lt;/h3&gt;
&lt;p&gt;一个 &lt;span class="math inline"&gt;m \times n&lt;/span&gt; 的矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 是一个包含 &lt;span class="math inline"&gt;m&lt;/span&gt; 行 &lt;span class="math inline"&gt;n&lt;/span&gt; 列的二维数组，可以表示为：&lt;/p&gt;
&lt;div class="math display"&gt;
A = \begin{bmatrix}
a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1n} \\
a_{21} &amp; a_{22} &amp; \cdots &amp; a_{2n} \\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\
a_{m1} &amp; a_{m2} &amp; \cdots &amp; a_{mn}
\end{bmatrix}
&lt;/div&gt;

&lt;p&gt;其中，&lt;span class="math inline"&gt;a_{ij}&lt;/span&gt; 表示矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 的第 &lt;span class="math inline"&gt;i&lt;/span&gt; 行、第 &lt;span class="math inline"&gt;j&lt;/span&gt; 列的元素。&lt;span class="math inline"&gt;A&lt;/span&gt; 的&lt;strong&gt;维度&lt;/strong&gt;或&lt;strong&gt;大小&lt;/strong&gt;为 &lt;span class="math inline"&gt;m \times n&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id="_12"&gt;向量定义&lt;/h3&gt;
&lt;p&gt;向量可用&lt;strong&gt;列向量&lt;/strong&gt;或&lt;strong&gt;行向量&lt;/strong&gt;。但是 &lt;strong&gt;列向量&lt;/strong&gt;更为常见：&lt;/p&gt;
&lt;div class="math display"&gt;
  \mathbf{v} = \begin{bmatrix}
  v_1 \\
  v_2 \\
  \vdots \\
  v_n
  \end{bmatrix}
&lt;/div&gt;

&lt;p&gt;列向量相对于行向量的好处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;线性代数的标准惯例&lt;/strong&gt;：列向量是线性代数中的标准表示法，符合大多数教材和学术文献的习惯。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;矩阵运算的兼容性&lt;/strong&gt;：在矩阵乘法中，矩阵通常是左乘列向量的，这使得矩阵运算更方便和直观。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;线性变换的表示&lt;/strong&gt;：线性变换通常用矩阵作用在列向量上，列向量更符合这种变换的顺序。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;向量空间的表示&lt;/strong&gt;：向量空间的基向量通常按列排列，列向量有助于更清晰地表达向量的线性组合。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_13"&gt;视角！！&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/kenjihiranabe/The-Art-of-Linear-Algebra"&gt;The Art of Linear Algebra&lt;/a&gt; 很大篇幅在以不同视角可视化矩阵的运算。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1个 (mxn) 的矩阵，可以视为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1个矩阵&lt;/li&gt;
&lt;li&gt;mn个数&lt;/li&gt;
&lt;li&gt;n个列&lt;/li&gt;
&lt;li&gt;m个行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1个向量通常用列向量表示，行向量可以用列向量的转置表示。&lt;/p&gt;
&lt;p&gt;对于乘法，可以结合多视角看待：&lt;/p&gt;
&lt;p&gt;&lt;img alt="matrix_multiplication" src="https://blog.debao.me/images/science/matrix_multiplication.png"&gt;&lt;/p&gt;
&lt;h3 id="_14"&gt;基本运算&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;矩阵加法 (Matrix Addition)&lt;/strong&gt;：两个相同大小矩阵的元素对应相加。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;矩阵乘法 (Matrix Multiplication)&lt;/strong&gt;：两个矩阵相乘，按行列对应的内积计算。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;标量乘法 (Scalar Multiplication)&lt;/strong&gt;：矩阵的每个元素乘以一个标量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;矩阵转置 (Matrix Transposition)&lt;/strong&gt;：将矩阵的行和列互换。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;矩阵的逆 (Matrix Inversion)&lt;/strong&gt;：对于可逆矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt;，找到 &lt;span class="math inline"&gt;A^{-1}&lt;/span&gt;，使得 &lt;span class="math inline"&gt;A \times A^{-1} = I&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;迹 (Trace)&lt;/strong&gt;：方阵主对角线元素的和。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;行列式 (Determinant)&lt;/strong&gt;：方阵的一个标量值，用于判断矩阵是否可逆。【行列式是一个值】&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_15"&gt;复数域矩阵&lt;/h2&gt;
&lt;p&gt;在复数域，矩阵有如下运算：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;共轭操作&lt;/strong&gt;（Conjugation）:将每个元素替换为其复共轭。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;共轭转置&lt;/strong&gt;（Conjugate Transpose / Hermitian Transpose）：先对矩阵进行转置，然后对每个元素取复共轭&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;操作&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;复数域&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;实数域&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;复共轭&lt;/strong&gt; (&lt;em&gt;Conjugation&lt;/em&gt;)&lt;/td&gt;
&lt;td&gt;对矩阵元素取复数共轭 &lt;span class="math inline"&gt;\overline{A}&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;无此操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;共轭转置&lt;/strong&gt; (&lt;em&gt;Conjugate Transpose&lt;/em&gt;)&lt;/td&gt;
&lt;td&gt;共轭转置 &lt;span class="math inline"&gt;A^\dagger = (\overline{A})^T&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;退化为普通转置 &lt;span class="math inline"&gt;A^T&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;特征值和特征向量&lt;/strong&gt; (&lt;em&gt;Eigenvalues and Eigenvectors&lt;/em&gt;)&lt;/td&gt;
&lt;td&gt;允许复数特征值和复数特征向量&lt;/td&gt;
&lt;td&gt;特征值可能是复数，但特征向量是实数的线性组合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;对角化&lt;/strong&gt; (&lt;em&gt;Diagonalization&lt;/em&gt;)&lt;/td&gt;
&lt;td&gt;所有矩阵都可以在复数域上对角化或化成约当标准形&lt;/td&gt;
&lt;td&gt;不是所有矩阵都可对角化&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;旋转和相位&lt;/strong&gt; (&lt;em&gt;Rotation and Phase&lt;/em&gt;)&lt;/td&gt;
&lt;td&gt;支持复数相位旋转 &lt;span class="math inline"&gt;e^{i\theta}&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;仅支持实数旋转&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_16"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/kenjihiranabe/The-Art-of-Linear-Algebra&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Matrix_(mathematics)&lt;/li&gt;
&lt;li&gt;https://github.com/Visualize-ML/Book4_Power-of-Matrix&lt;/li&gt;
&lt;/ul&gt;</content><category term="Science"></category></entry><entry><title>李群和李代数学习小记</title><link href="https://blog.debao.me/2024/10/learning-notes-on-lie-groups-and-lie-algebras/" rel="alternate"></link><published>2024-10-13T00:49:00+08:00</published><updated>2024-10-13T00:49:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-10-13:/2024/10/learning-notes-on-lie-groups-and-lie-algebras/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;老是感觉啥啥都不懂，杂七杂八边学边记吧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;李群（Lie group）是一类&lt;strong&gt;既是&lt;/strong&gt;群（Group），&lt;strong&gt;又是&lt;/strong&gt;光滑流形（Smooth Manifold）的对象。这意味着李群&lt;strong&gt;既具有&lt;/strong&gt;代 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;老是感觉啥啥都不懂，杂七杂八边学边记吧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;李群（Lie group）是一类&lt;strong&gt;既是&lt;/strong&gt;群（Group），&lt;strong&gt;又是&lt;/strong&gt;光滑流形（Smooth Manifold）的对象。这意味着李群&lt;strong&gt;既具有&lt;/strong&gt;代数结构（群的运算：乘法和逆元），&lt;strong&gt;又具&lt;/strong&gt;有几何结构（可以微分的光滑结构）&lt;/li&gt;
&lt;li&gt;李群的另一个重要伴随结构是李代数（Lie algebra）。李代数&lt;strong&gt;可看作&lt;/strong&gt;是李群的“局部化线性化”版本（"localized linearized" version），描述的是李群在单位元（identity element）附近的性质。李代数与李群之间的&lt;strong&gt;关系类似于&lt;/strong&gt;切空间（tangent space）与流形（manifold）之间的关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;走马观花&lt;/h2&gt;
&lt;p&gt;不同类型的李群和李代数可以在不同的数域上定义，如实数ℝ、复数ℂ、四元数ℍ以及更高维的八元数𝕆。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;李群&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;李代数&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;数系的可用性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;群的定义&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;代数的定义&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;维数&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;名称缩写的来源&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;GL(n)&lt;/td&gt;
&lt;td&gt;𝔤𝔩(n)&lt;/td&gt;
&lt;td&gt;ℝ, ℂ&lt;/td&gt;
&lt;td&gt;n × n 的可逆矩阵。&lt;/td&gt;
&lt;td&gt;n × n 矩阵的全体，李括号为 [A, B] = AB - BA。&lt;/td&gt;
&lt;td&gt;n²&lt;/td&gt;
&lt;td&gt;一般线性群（General Linear Group）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SL(n)&lt;/td&gt;
&lt;td&gt;𝔰𝔩(n)&lt;/td&gt;
&lt;td&gt;ℝ, ℂ&lt;/td&gt;
&lt;td&gt;行列式为 1 的 n × n 矩阵。&lt;/td&gt;
&lt;td&gt;迹为 0 的 n × n 矩阵。&lt;/td&gt;
&lt;td&gt;n² - 1&lt;/td&gt;
&lt;td&gt;特殊线性群（Special Linear Group）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;O(n)&lt;/td&gt;
&lt;td&gt;𝔬(n)&lt;/td&gt;
&lt;td&gt;ℝ&lt;/td&gt;
&lt;td&gt;保持 n 维欧几里得空间内积不变的正交矩阵。&lt;/td&gt;
&lt;td&gt;反对称的 n × n 矩阵。&lt;/td&gt;
&lt;td&gt;n(n - 1) / 2&lt;/td&gt;
&lt;td&gt;正交群（Orthogonal Group）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SO(n)&lt;/td&gt;
&lt;td&gt;𝔰𝔬(n)&lt;/td&gt;
&lt;td&gt;ℝ&lt;/td&gt;
&lt;td&gt;保持 n 维欧几里得空间内积不变的正交矩阵，且行列式为 1。&lt;/td&gt;
&lt;td&gt;反对称的 n × n 矩阵。&lt;/td&gt;
&lt;td&gt;n(n - 1) / 2&lt;/td&gt;
&lt;td&gt;特殊正交群（Special Orthogonal Group）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;U(n)&lt;/td&gt;
&lt;td&gt;𝔲(n)&lt;/td&gt;
&lt;td&gt;ℂ&lt;/td&gt;
&lt;td&gt;n × n 酉矩阵。&lt;/td&gt;
&lt;td&gt;n × n 反厄米矩阵。&lt;/td&gt;
&lt;td&gt;n²&lt;/td&gt;
&lt;td&gt;酉群（Unitary Group）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SU(n)&lt;/td&gt;
&lt;td&gt;𝔰𝔲(n)&lt;/td&gt;
&lt;td&gt;ℂ&lt;/td&gt;
&lt;td&gt;行列式为 1 的 n × n 酉矩阵。&lt;/td&gt;
&lt;td&gt;迹为 0 的 n × n 反厄米矩阵。&lt;/td&gt;
&lt;td&gt;n² - 1&lt;/td&gt;
&lt;td&gt;特殊酉群（Special Unitary Group）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sp(2n)&lt;/td&gt;
&lt;td&gt;𝔰𝔭(2n)&lt;/td&gt;
&lt;td&gt;ℝ, ℍ&lt;/td&gt;
&lt;td&gt;保持辛形式不变的 2n × 2n 矩阵。&lt;/td&gt;
&lt;td&gt;满足 AᵀJ + JA = 0 的矩阵，其中 J 是辛矩阵。&lt;/td&gt;
&lt;td&gt;n(2n + 1)&lt;/td&gt;
&lt;td&gt;辛群（Symplectic Group）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SE(n)&lt;/td&gt;
&lt;td&gt;𝔰𝔢(n)&lt;/td&gt;
&lt;td&gt;ℝ&lt;/td&gt;
&lt;td&gt;n 维欧氏空间中的刚体运动，包括旋转和平移。&lt;/td&gt;
&lt;td&gt;旋转和平移的无穷小生成元，包含 𝔰𝔬(n) 和 ℝⁿ。&lt;/td&gt;
&lt;td&gt;n(n - 1) / 2 + n&lt;/td&gt;
&lt;td&gt;特殊欧氏群（Special Euclidean Group in n dimensions）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spin(n)&lt;/td&gt;
&lt;td&gt;𝔰𝔭𝔦𝔫(n)&lt;/td&gt;
&lt;td&gt;ℝ, ℍ&lt;/td&gt;
&lt;td&gt;SO(n) 的二重覆盖群，描述旋转群的自旋表示。&lt;/td&gt;
&lt;td&gt;与 𝔰𝔬(n) 相同，但涉及旋量表示。&lt;/td&gt;
&lt;td&gt;n(n - 1) / 2&lt;/td&gt;
&lt;td&gt;自旋群（Spin Group）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ℝⁿ (加法群)&lt;/td&gt;
&lt;td&gt;ℝⁿ&lt;/td&gt;
&lt;td&gt;ℝ&lt;/td&gt;
&lt;td&gt;实数向量的加法群。&lt;/td&gt;
&lt;td&gt;实数向量空间，李括号恒为 0。&lt;/td&gt;
&lt;td&gt;n&lt;/td&gt;
&lt;td&gt;实数向量加法群（Additive Group of Real Numbers）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;𝒫 或 ISO(1, 3)&lt;/td&gt;
&lt;td&gt;𝔭𝔬𝔦𝔫&lt;/td&gt;
&lt;td&gt;ℝ&lt;/td&gt;
&lt;td&gt;描述洛伦兹变换与平移的时空对称性群。&lt;/td&gt;
&lt;td&gt;洛伦兹代数与平移代数的结合。&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;庞加莱群（Poincaré Group）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;𝒢ₙ 或 Hₙ&lt;/td&gt;
&lt;td&gt;𝔥ₙ&lt;/td&gt;
&lt;td&gt;ℝ, ℂ&lt;/td&gt;
&lt;td&gt;描述量子力学中位置和动量对易关系的群。&lt;/td&gt;
&lt;td&gt;具有 [X, P] = iℏ 的代数结构。&lt;/td&gt;
&lt;td&gt;2n + 1&lt;/td&gt;
&lt;td&gt;海森堡群（Heisenberg Group）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Diff(M)&lt;/td&gt;
&lt;td&gt;—&lt;/td&gt;
&lt;td&gt;无明确数系&lt;/td&gt;
&lt;td&gt;光滑流形 M 上的微分同胚群。&lt;/td&gt;
&lt;td&gt;无李代数，非局部群。&lt;/td&gt;
&lt;td&gt;无限维&lt;/td&gt;
&lt;td&gt;微分同胚群（Diffeomorphism Group）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;G₂&lt;/td&gt;
&lt;td&gt;𝔤₂&lt;/td&gt;
&lt;td&gt;ℝ, 𝕆&lt;/td&gt;
&lt;td&gt;14 维例外李群，与八元数自同构群相关。&lt;/td&gt;
&lt;td&gt;复杂结构，与八元数相关。&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;例外李群 G₂（Exceptional Lie Group G₂）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;大部分都是和n阶矩阵相关的，ℝⁿ 向量也可以看作行或列为1的矩阵。这些通过矩阵构造的李群，属于经典李群（Classical Lie groups），它们在几何学和物理学中有广泛应用。&lt;/p&gt;
&lt;p&gt;经典李群包括以下几类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一般线性群 GL(n, ℝ)、GL(n, ℂ)：全体 n×n 可逆矩阵构成的群。&lt;/li&gt;
&lt;li&gt;特殊线性群 SL(n, ℝ)、SL(n, ℂ)：行列式为 1 的 n×n 矩阵构成的群。&lt;/li&gt;
&lt;li&gt;正交群 O(n)、特殊正交群 SO(n)：保持实数域上欧几里得内积不变的矩阵群。&lt;/li&gt;
&lt;li&gt;酉群 U(n)、特殊酉群 SU(n)：保持复数域上欧几里得内积不变的矩阵群。&lt;/li&gt;
&lt;li&gt;辛群 Sp(n)：保持辛结构不变的矩阵群。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;历史&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1869-1873 - &lt;strong&gt;索菲斯·李（Sophus Lie）&lt;/strong&gt;与费利克斯·克莱因（Felix Klein）密切合作，形成李群（Lie Group）和李代数（Lie Algebra）的&lt;strong&gt;早期思想&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;1873-1874 - 李群理论（Lie Group Theory）和李代数&lt;strong&gt;理论诞生&lt;/strong&gt;，索菲斯·李开始系统研究连续群（continuous group）及其局部对称性。&lt;/li&gt;
&lt;li&gt;1884 - 李宣称已完成主要成果，包括李代数的部分理论，弗里德里希·恩格尔（Friedrich Engel）开始与李合作。&lt;/li&gt;
&lt;li&gt;1888 - 威廉·基林（Wilhelm Killing）提出半单李代数（semisimple Lie algebra）的分类，推动李代数结构理论的重大进展。&lt;/li&gt;
&lt;li&gt;1893 - "李群"（groupes de Lie）和李代数一词&lt;strong&gt;首次出现&lt;/strong&gt;在阿图尔·特雷斯（Arthur Tresse）的论文中。&lt;/li&gt;
&lt;li&gt;20世纪初 - 赫尔曼·外尔（Hermann Weyl）系统研究李群与李代数（Lie Algebra）的关系，发展了李代数表示理论（representation theory of Lie algebras）。&lt;/li&gt;
&lt;li&gt;20世纪中期 - 埃利·嘉当（Élie Cartan）进一步完善了李代数的分类，特别是对半单李代数和对称空间（symmetric spaces）的研究。&lt;/li&gt;
&lt;li&gt;20世纪中期 - 克劳德·谢瓦莱（Claude Chevalley）用现代数学语言系统化了李群和李代数的理论。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;概念&lt;/h2&gt;
&lt;h3 id="algebra"&gt;代数（algebra）是什么东西？？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;中学有《代数》课程，大学有《线性代数》《高等代数》等课程，代数是个什么东西？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在&lt;strong&gt;广义&lt;/strong&gt;上，它可以指代包括&lt;strong&gt;初等代数&lt;/strong&gt;（&lt;em&gt;elementary algebra&lt;/em&gt;，中学接触的代数，处理变量、方程和简单运算）、&lt;strong&gt;抽象代数&lt;/strong&gt;（&lt;em&gt;abstract algebra&lt;/em&gt;，研究一般的代数结构如&lt;strong&gt;群&lt;/strong&gt;（&lt;em&gt;group&lt;/em&gt;）、&lt;strong&gt;环&lt;/strong&gt;（&lt;em&gt;ring&lt;/em&gt;）、&lt;strong&gt;域&lt;/strong&gt;（&lt;em&gt;field&lt;/em&gt;）、&lt;strong&gt;模&lt;/strong&gt;（&lt;em&gt;module&lt;/em&gt;）、和&lt;strong&gt;代数&lt;/strong&gt;（&lt;em&gt;algebra&lt;/em&gt;）等）在内的多个领域，涉及数和运算的性质。&lt;/p&gt;
&lt;p&gt;在&lt;strong&gt;狭义&lt;/strong&gt;上，&lt;strong&gt;代数&lt;/strong&gt;（&lt;em&gt;algebra&lt;/em&gt;）通常指一个&lt;strong&gt;向量空间&lt;/strong&gt;（&lt;em&gt;vector space&lt;/em&gt;），并且配备了一个&lt;strong&gt;双线性运算&lt;/strong&gt;（&lt;em&gt;bilinear operation&lt;/em&gt;）。这个运算可以是&lt;strong&gt;结合的&lt;/strong&gt;（&lt;em&gt;associative&lt;/em&gt;）、&lt;strong&gt;非结合的&lt;/strong&gt;（&lt;em&gt;non-associative&lt;/em&gt;）、&lt;strong&gt;交换的&lt;/strong&gt;（&lt;em&gt;commutative&lt;/em&gt;）或&lt;strong&gt;非交换的&lt;/strong&gt;（&lt;em&gt;non-commutative&lt;/em&gt;），具体取决于代数的类型。&lt;/p&gt;
&lt;h4 id="_4"&gt;代数(狭义)&lt;/h4&gt;
&lt;p&gt;代数指的是一个向量空间（通常定义在某个域上，如&lt;span class="math inline"&gt;\mathbb{R}&lt;/span&gt; 或 &lt;span class="math inline"&gt;\mathbb{C}&lt;/span&gt; 上），并且向量空间上定义了一个乘法运算&lt;span class="math inline"&gt;\cdot&lt;/span&gt;，这个乘法运算需要满足以下条件：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;双线性性&lt;/strong&gt;（&lt;em&gt;Bilinearity&lt;/em&gt;）：&lt;/p&gt;
&lt;p&gt;对于任何 &lt;span class="math inline"&gt; a, b, c \in A &lt;/span&gt; 和标量 &lt;span class="math inline"&gt; \lambda, \mu \in K &lt;/span&gt;，有：&lt;/p&gt;
&lt;div class="math display"&gt;
(\lambda a + \mu b) \cdot c = \lambda (a \cdot c) + \mu (b \cdot c)
\\
c \cdot (\lambda a + \mu b) = \lambda (c \cdot a) + \mu (c \cdot b)
&lt;/div&gt;

&lt;h4 id="_5"&gt;线性代数？&lt;/h4&gt;
&lt;p&gt;《线性代数》&lt;strong&gt;本身并不是通常所说的“代数”结构&lt;/strong&gt;，而是一门数学分支，主要研究向量空间及其上的线性变换。&lt;/p&gt;
&lt;p&gt;但《线性代数》研究的对象中有很多确实属于代数结构，一般的线代教材中都会有：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;研究对象&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;代数结构类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;简要介绍&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;向量空间&lt;/strong&gt;（&lt;em&gt;Vector Space&lt;/em&gt;）&lt;/td&gt;
&lt;td&gt;空间&lt;/td&gt;
&lt;td&gt;由向量组成的集合，具有向量加法和标量乘法运算，满足线性性和分配律等公理。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;线性变换&lt;/strong&gt;（&lt;em&gt;Linear Transformation&lt;/em&gt;）&lt;/td&gt;
&lt;td&gt;环&lt;/td&gt;
&lt;td&gt;两个向量空间之间保持加法和标量乘法的映射，所有线性变换在复合运算下形成一个环。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵代数&lt;/strong&gt;（&lt;em&gt;Matrix Algebra&lt;/em&gt;）&lt;/td&gt;
&lt;td&gt;代数&lt;/td&gt;
&lt;td&gt;由矩阵加法和矩阵乘法构成的结合代数，特别是 n × n 矩阵在这些运算下是一个结合代数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;内积空间&lt;/strong&gt;（&lt;em&gt;Inner Product Space&lt;/em&gt;）&lt;/td&gt;
&lt;td&gt;空间&lt;/td&gt;
&lt;td&gt;向量空间的一种特殊形式，定义了内积运算，用于度量向量之间的角度和长度。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如下研究对象尽管和线性代数相关，但一般出现在各个高级课程中：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;研究对象&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;代数结构类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;简要介绍&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;外代数&lt;/strong&gt;（&lt;em&gt;Exterior Algebra&lt;/em&gt;）&lt;/td&gt;
&lt;td&gt;代数&lt;/td&gt;
&lt;td&gt;从向量空间构造出的代数，定义了外积（wedge product），用于研究向量空间的多重线性性质。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;张量代数&lt;/strong&gt;（&lt;em&gt;Tensor Algebra&lt;/em&gt;）&lt;/td&gt;
&lt;td&gt;代数&lt;/td&gt;
&lt;td&gt;通过在向量空间上构造张量来形成的代数，广泛用于物理和几何中处理高阶结构。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;对称代数&lt;/strong&gt;（&lt;em&gt;Symmetric Algebra&lt;/em&gt;）&lt;/td&gt;
&lt;td&gt;代数&lt;/td&gt;
&lt;td&gt;由向量空间生成的代数结构，使用对称积（symmetric product）定义运算，通常用于多项式函数的研究。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;李代数&lt;/strong&gt;（&lt;em&gt;Lie Algebra&lt;/em&gt;）&lt;/td&gt;
&lt;td&gt;代数&lt;/td&gt;
&lt;td&gt;带有李括号的代数结构，李括号是一个双线性、反对称的运算，常用于研究连续对称性。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="manifold"&gt;流形（manifold）是什么东西？&lt;/h3&gt;
&lt;p&gt;Manifold 一词在英文中的原意源自于“many”和“fold”，直译过来可以理解为“多折的”或“多面的”。在数学中，尤其是拓扑学和微分几何中，流形（Manifold）是一个抽象的几何对象。&lt;/p&gt;
&lt;p&gt;"Manifold" 在日语中通常被翻译为 "多様体"（たようたい，tayoutai）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;流形是一种拓扑空间。拓扑空间 作为最基础的结构，定义了点与点之间的邻域和连续性的概念。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="_6"&gt;流形 光滑流形&lt;/h4&gt;
&lt;p&gt;流形有不同的可微分等级：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;可微分等级&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;符号&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;要求&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;性质&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;应用领域&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;拓扑流形&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;C^0&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;过渡映射是&lt;strong&gt;连续的&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;仅定义了连续性，不能讨论导数和微分结构&lt;/td&gt;
&lt;td&gt;拓扑学、连通性、紧致性等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;span class="math inline"&gt;C^k&lt;/span&gt; 流形&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;C^k&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;过渡映射是&lt;strong&gt;&lt;span class="math inline"&gt;k&lt;/span&gt; 次连续可微的&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;允许讨论前&lt;span class="math inline"&gt;k&lt;/span&gt; 阶导数，&lt;span class="math inline"&gt;k = 1&lt;/span&gt; 时可以定义切空间&lt;/td&gt;
&lt;td&gt;可微分几何、切空间、有限阶导数应用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;光滑流形&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;C^\infty&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;过渡映射是&lt;strong&gt;无限次可微的&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;允许进行无穷次微分运算，定义向量场、微分形式、黎曼几何等&lt;/td&gt;
&lt;td&gt;微分几何、广义相对论、连续对称性、物理场&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;解析流形&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;C^\omega&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;过渡映射是&lt;strong&gt;解析的&lt;/strong&gt;（可用幂级数展开）&lt;/td&gt;
&lt;td&gt;过渡映射不仅无穷次可微，且具有更强的全局性&lt;/td&gt;
&lt;td&gt;代数几何、解析几何、数学物理&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="lie-group"&gt;李群（Lie Group）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;李群结合了&lt;strong&gt;代数结构&lt;/strong&gt;（群）和&lt;strong&gt;几何结构&lt;/strong&gt;（光滑流形），在几何结构上定义了定了了代数群运算，适用于描述连续对称性和无穷小变换。这个定义...头大&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个 &lt;strong&gt;李群&lt;/strong&gt; &lt;span class="math inline"&gt;G&lt;/span&gt; 是一个&lt;strong&gt;光滑流形&lt;/strong&gt;（smooth manifold），并且在这个流形上定义了一个使得以下两个条件成立的&lt;strong&gt;群运算&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;群结构&lt;/strong&gt;：&lt;span class="math inline"&gt;G&lt;/span&gt; 是一个群，即集合 &lt;span class="math inline"&gt;G&lt;/span&gt; 上的运算满足封闭性、结合性、单位元存在性和逆元存在性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;光滑性&lt;/strong&gt;：群运算 &lt;span class="math inline"&gt;\cdot: G \times G \to G&lt;/span&gt; 和取逆运算 &lt;span class="math inline"&gt;\text{inv}: G \to G&lt;/span&gt; 是&lt;strong&gt;光滑映射&lt;/strong&gt;（smooth maps），也就是说它们在流形的坐标系下是可微的。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="group"&gt;什么是群 (Group)&lt;/h4&gt;
&lt;p&gt;一个 &lt;strong&gt;群&lt;/strong&gt; &lt;span class="math inline"&gt;(G, \cdot)&lt;/span&gt; 是一个集合 &lt;span class="math inline"&gt;G&lt;/span&gt; 和一个二元运算 &lt;span class="math inline"&gt;\cdot&lt;/span&gt;（通常称为&lt;strong&gt;乘法&lt;/strong&gt;或&lt;strong&gt;群运算&lt;/strong&gt;），满足以下四个条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;封闭性&lt;/strong&gt;（Closure）：对于所有 &lt;span class="math inline"&gt;a, b \in G&lt;/span&gt;，有 &lt;span class="math inline"&gt;a \cdot b \in G&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;结合性&lt;/strong&gt;（Associativity）：对于所有 &lt;span class="math inline"&gt;a, b, c \in G&lt;/span&gt;，有 &lt;span class="math inline"&gt;(a \cdot b) \cdot c = a \cdot (b \cdot c)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;单位元&lt;/strong&gt;（Identity Element）：存在一个元素 &lt;span class="math inline"&gt;e \in G&lt;/span&gt; （称为单位元），使得对于所有 &lt;span class="math inline"&gt;a \in G&lt;/span&gt;，有 &lt;span class="math inline"&gt;e \cdot a = a \cdot e = a&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;逆元&lt;/strong&gt;（Inverse Element）：对于每一个 &lt;span class="math inline"&gt;a \in G&lt;/span&gt;，存在一个元素 &lt;span class="math inline"&gt;b \in G&lt;/span&gt; 使得 &lt;span class="math inline"&gt;a \cdot b = b \cdot a = e&lt;/span&gt;，其中 &lt;span class="math inline"&gt;e&lt;/span&gt; 是单位元。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;简而言之，&lt;strong&gt;群&lt;/strong&gt;是一个有封闭二元运算的集合，且该运算具有结合性，并且存在单位元和每个元素的逆元。&lt;/p&gt;
&lt;h3 id="lie-algebra"&gt;李代数（Lie Algebra）&lt;/h3&gt;
&lt;p&gt;李代数是一个更抽象的代数结构，主要用于描述连续对称性和无穷小变换。它最常与李群相关联。一个李代数是一个向量空间，但它配备了一种特殊的二元运算，称为李括号（Lie bracket）。&lt;/p&gt;
&lt;p&gt;对李代数中的两个元素 &lt;span class="math inline"&gt;X&lt;/span&gt; 和 &lt;span class="math inline"&gt;Y&lt;/span&gt;，它们可以是矩阵、向量场或者其他满足李代数结构的对象。那么它们的李括号 &lt;span class="math inline"&gt;[X, Y]&lt;/span&gt; 定义为：&lt;/p&gt;
&lt;div class="math display"&gt;
[X, Y] = XY - YX
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;也就是说，李括号是两个矩阵的&lt;strong&gt;交换子&lt;/strong&gt;（commutator），它表示 &lt;span class="math inline"&gt;X&lt;/span&gt; 和 &lt;span class="math inline"&gt;Y&lt;/span&gt; 以不同顺序相乘时的差异。与普通乘法不同，李括号是&lt;strong&gt;非交换的&lt;/strong&gt;，即 &lt;span class="math inline"&gt;[X, Y] \neq 0&lt;/span&gt; 通常成立。注意在，&lt;span class="math inline"&gt;so(n)&lt;/span&gt;中，它等同于向量叉乘。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;该运算满足以下性质：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;双线性（bilinearity）【代数（狭义）的内在要求】&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于任意 &lt;span class="math inline"&gt;X,Y,Z \in \mathfrak{g}&lt;/span&gt; 和标量 &lt;span class="math inline"&gt;a,b \in \mathbb{R}&lt;/span&gt; 或 &lt;span class="math inline"&gt;\mathbb{C}&lt;/span&gt;，有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;[aX + bY, Z] = a [X, Z] + b [Y, Z]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;[Z, aX + bY] = a [Z, X] + b [Z, Y]&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;反对称性（antisymmetry）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于所有 &lt;span class="math inline"&gt;X, Y \in \mathfrak{g}&lt;/span&gt;，有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;[X, Y] = -[Y, X]&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;雅可比恒等式（Jacobi identity）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于所有 &lt;span class="math inline"&gt;X, Y, Z \in \mathfrak{g}&lt;/span&gt;，有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;[X, [Y, Z]] + [Y, [Z, X]] + [Z, [X, Y]] = 0&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="generator"&gt;生成元（generator）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;在最基本的层面，生成元描述的是如何通过一组元素及其组合来构建出一个更大的结构。在线性代数中，任何一组基（basis）都可以视为生成元（generators）,因为基向量通过线性组合可以生成整个向量空间中的所有向量。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="generators-in-group-theory"&gt;群论中的生成元（Generators in Group Theory）&lt;/h3&gt;
&lt;p&gt;在&lt;strong&gt;群论&lt;/strong&gt;（&lt;strong&gt;group theory&lt;/strong&gt;）中，生成元是一组元素，通过&lt;strong&gt;群运算&lt;/strong&gt;（&lt;strong&gt;group operation&lt;/strong&gt;，如乘法或加法）可以生成整个群的所有元素。一个群可以由一个或多个生成元生成。&lt;/p&gt;
&lt;p&gt;若 &lt;span class="math inline"&gt;G&lt;/span&gt; 是一个群，集合 &lt;span class="math inline"&gt;S \subseteq G&lt;/span&gt; 的元素通过有限次的群运算生成整个 &lt;span class="math inline"&gt;G&lt;/span&gt;，则称 &lt;span class="math inline"&gt;S&lt;/span&gt; 为 &lt;span class="math inline"&gt;G&lt;/span&gt; 的生成集合（generating set）。我们记作 &lt;span class="math inline"&gt;G = \langle S \rangle&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;循环群 &lt;span class="math inline"&gt;\mathbb{Z}_4&lt;/span&gt;&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;span class="math inline"&gt;\mathbb{Z}_4&lt;/span&gt; 是模 4 的加法群，元素为 &lt;span class="math inline"&gt;\{0, 1, 2, 3\}&lt;/span&gt;，群运算是加法模 4。生成元是 &lt;span class="math inline"&gt;1&lt;/span&gt;，因为通过反复加 &lt;span class="math inline"&gt;1&lt;/span&gt;，可以得到所有元素：&lt;/p&gt;
&lt;div class="math display"&gt;
  1 + 1 = 2, \quad 1 + 1 + 1 = 3, \quad 1 + 1 + 1 + 1 = 0
&lt;/div&gt;

&lt;p&gt;因此，&lt;span class="math inline"&gt;\mathbb{Z}_4 = \langle 1 \rangle&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对称群 &lt;span class="math inline"&gt;S_3&lt;/span&gt;&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;span class="math inline"&gt;S_3&lt;/span&gt; 是对 3 个元素的排列群，它有 6 个元素，表示为 &lt;span class="math inline"&gt;S_3 = \{(), (12), (13), (23), (123), (132)\}&lt;/span&gt;。其中，&lt;span class="math inline"&gt;(12)&lt;/span&gt; 表示交换第 1 和第 2 个元素，而 &lt;span class="math inline"&gt;(123)&lt;/span&gt; 表示 1 → 2 → 3 的循环排列。&lt;/p&gt;
&lt;p&gt;通过&lt;strong&gt;交换&lt;/strong&gt; &lt;span class="math inline"&gt;(12)&lt;/span&gt; 和&lt;strong&gt;循环&lt;/strong&gt; &lt;span class="math inline"&gt;(123)&lt;/span&gt; 的组合，可以生成 &lt;span class="math inline"&gt;S_3&lt;/span&gt; 的所有元素：&lt;/p&gt;
&lt;div class="math display"&gt;
  S_3 = \langle (12), (123) \rangle
&lt;/div&gt;

&lt;h3 id="generators-in-lie-algebras"&gt;李代数中的生成元（Generators in Lie Algebras）&lt;/h3&gt;
&lt;p&gt;李代数中的生成元是一组基向量，通过某种运算（主要是李括号）可以生成整个李代数的所有元素。&lt;/p&gt;
&lt;p&gt;下面以特殊正交李代数&lt;span class="math inline"&gt;\mathfrak{so}(3)&lt;/span&gt;为例子看一看。&lt;/p&gt;
&lt;h4 id="so3"&gt;特殊正交李代数 so(3)&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="math inline"&gt;\mathfrak{so}(3)&lt;/span&gt; 是三维旋转群 &lt;span class="math inline"&gt;SO(3)&lt;/span&gt; 的李代数，描述了三维空间中的无穷小旋转。该李代数的生成元对应绕 &lt;span class="math inline"&gt;x&lt;/span&gt;、&lt;span class="math inline"&gt;y&lt;/span&gt; 和 &lt;span class="math inline"&gt;z&lt;/span&gt; 轴的无穷小旋转。生成元是描述这些无穷小变换的反对称矩阵，它们通过李括号运算生成整个李代数的所有元素。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class="math inline"&gt;\mathfrak{so}(3)&lt;/span&gt; 是由所有 &lt;span class="math inline"&gt;3 \times 3&lt;/span&gt; &lt;strong&gt;反对称矩阵&lt;/strong&gt;组成的向量空间，满足条件：&lt;/p&gt;
&lt;div class="math display"&gt;
A^T = -A
&lt;/div&gt;

&lt;p&gt;其中 &lt;span class="math inline"&gt;A^T&lt;/span&gt; 是矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 的转置矩阵。&lt;/p&gt;
&lt;p&gt;反对称矩阵的形式为：&lt;/p&gt;
&lt;div class="math display"&gt;
  A = \begin{pmatrix}
  0 &amp; -a_3 &amp; a_2 \\
  a_3 &amp; 0 &amp; -a_1 \\
  -a_2 &amp; a_1 &amp; 0
  \end{pmatrix}
&lt;/div&gt;

&lt;p&gt;其中 &lt;span class="math inline"&gt;a_1, a_2, a_3&lt;/span&gt; 是实数，表示无穷小旋转的参数。&lt;/p&gt;
&lt;h4 id="so3_1"&gt;so(3) 的生成元&lt;/h4&gt;
&lt;p&gt;李代数 &lt;span class="math inline"&gt;\mathfrak{so}(3)&lt;/span&gt; 的生成元描述了三维空间中的无穷小旋转。&lt;span class="math inline"&gt;L_x&lt;/span&gt;、 &lt;span class="math inline"&gt;L_y&lt;/span&gt;  和 &lt;span class="math inline"&gt;L_z&lt;/span&gt; 分别描述了绕 &lt;span class="math inline"&gt;x&lt;/span&gt;轴、&lt;span class="math inline"&gt;y&lt;/span&gt; 轴和 &lt;span class="math inline"&gt;z&lt;/span&gt; 轴的无穷小旋转。它们都是反对称矩阵。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;绕 &lt;span class="math inline"&gt;x&lt;/span&gt; 轴的生成元 &lt;span class="math inline"&gt;L_x&lt;/span&gt;&lt;/strong&gt;：&lt;/p&gt;
&lt;div class="math display"&gt;
L_x = \begin{pmatrix}
0 &amp; 0 &amp; 0 \\
0 &amp; 0 &amp; -1 \\
0 &amp; 1 &amp; 0
\end{pmatrix}
&lt;/div&gt;

&lt;p&gt;&lt;span class="math inline"&gt;L_x&lt;/span&gt; 描述的是绕 &lt;span class="math inline"&gt;x&lt;/span&gt; 轴的无穷小旋转。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;绕 &lt;span class="math inline"&gt;y&lt;/span&gt; 轴的生成元 &lt;span class="math inline"&gt;L_y&lt;/span&gt;&lt;/strong&gt;：&lt;/p&gt;
&lt;div class="math display"&gt;
L_y = \begin{pmatrix}
0 &amp; 0 &amp; 1 \\
0 &amp; 0 &amp; 0 \\
-1 &amp; 0 &amp; 0
\end{pmatrix}
&lt;/div&gt;

&lt;p&gt;&lt;span class="math inline"&gt;L_y&lt;/span&gt; 描述的是绕 &lt;span class="math inline"&gt;y&lt;/span&gt; 轴的无穷小旋转。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;绕 &lt;span class="math inline"&gt;z&lt;/span&gt; 轴的生成元 &lt;span class="math inline"&gt;L_z&lt;/span&gt;&lt;/strong&gt;：&lt;/p&gt;
&lt;div class="math display"&gt;
L_z = \begin{pmatrix}
0 &amp; -1 &amp; 0 \\
1 &amp; 0 &amp; 0 \\
0 &amp; 0 &amp; 0
\end{pmatrix}
&lt;/div&gt;

&lt;p&gt;这三个生成元 &lt;span class="math inline"&gt;L_x&lt;/span&gt;、&lt;span class="math inline"&gt;L_y&lt;/span&gt;、&lt;span class="math inline"&gt;L_z&lt;/span&gt; 之间满足以下李括号（交换子）关系：&lt;/p&gt;
&lt;div class="math display"&gt;
[L_x, L_y] = L_z, \quad [L_y, L_z] = L_x, \quad [L_z, L_x] = L_y
&lt;/div&gt;

&lt;p&gt;这些关系表明，不同轴的旋转生成元组合会产生另一个轴的旋转，这符合三维空间中旋转的组合规律。&lt;/p&gt;
&lt;h4 id="z"&gt;推导：绕z轴的生成元&lt;/h4&gt;
&lt;p&gt;绕 &lt;span class="math inline"&gt;z&lt;/span&gt; 轴的旋转矩阵 &lt;span class="math inline"&gt;R_z(\theta)&lt;/span&gt; 描述的是点绕 &lt;span class="math inline"&gt;z&lt;/span&gt; 轴旋转 &lt;span class="math inline"&gt;\theta&lt;/span&gt; 角度后的坐标变化，形式为：&lt;/p&gt;
&lt;div class="math display"&gt;
R_z(\theta) = \begin{pmatrix}
\cos \theta &amp; -\sin \theta &amp; 0 \\
\sin \theta &amp; \cos \theta &amp; 0 \\
0 &amp; 0 &amp; 1
\end{pmatrix}
&lt;/div&gt;

&lt;p&gt;当 &lt;span class="math inline"&gt;\theta&lt;/span&gt; 很小时，使用泰勒展开：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\cos \theta \approx 1&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\sin \theta \approx \theta&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是我们得到绕 &lt;span class="math inline"&gt;z&lt;/span&gt; 轴的&lt;strong&gt;无穷小旋转矩阵&lt;/strong&gt;（即 &lt;span class="math inline"&gt;\theta \to 0&lt;/span&gt; 的极限情况）：&lt;/p&gt;
&lt;div class="math display"&gt;
R_z(\theta) \approx \begin{pmatrix}
1 &amp; -\theta &amp; 0 \\
\theta &amp; 1 &amp; 0 \\
0 &amp; 0 &amp; 1
\end{pmatrix}
&lt;/div&gt;

&lt;p&gt;这个矩阵可以写成：&lt;/p&gt;
&lt;div class="math display"&gt;
R_z(\theta) \approx I + \theta L_z
&lt;/div&gt;

&lt;p&gt;其中 &lt;span class="math inline"&gt;I&lt;/span&gt; 是单位矩阵，&lt;span class="math inline"&gt;L_z&lt;/span&gt; 是旋转的生成元。通过比较可以看出，绕 &lt;span class="math inline"&gt;z&lt;/span&gt; 轴的&lt;strong&gt;生成元&lt;/strong&gt; &lt;span class="math inline"&gt;L_z&lt;/span&gt; 是：&lt;/p&gt;
&lt;div class="math display"&gt;
L_z = \begin{pmatrix}
0 &amp; -1 &amp; 0 \\
1 &amp; 0 &amp; 0 \\
0 &amp; 0 &amp; 0
\end{pmatrix}
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;物理意义&lt;/strong&gt;：&lt;span class="math inline"&gt;L_z&lt;/span&gt; 表示绕 &lt;span class="math inline"&gt;z&lt;/span&gt; 轴的无穷小旋转。它作用于三维向量时，会改变 &lt;span class="math inline"&gt;x&lt;/span&gt; 和 &lt;span class="math inline"&gt;y&lt;/span&gt; 分量，而 &lt;span class="math inline"&gt;z&lt;/span&gt; 分量保持不变。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;反对称性&lt;/strong&gt;：矩阵 &lt;span class="math inline"&gt;L_z&lt;/span&gt; 是反对称的，即 &lt;span class="math inline"&gt;L_z^T = -L_z&lt;/span&gt;，这符合旋转矩阵的性质：无穷小旋转不改变向量的模长。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;李括号关系&lt;/strong&gt;：&lt;span class="math inline"&gt;L_z&lt;/span&gt; 与其他生成元 &lt;span class="math inline"&gt;L_x&lt;/span&gt; 和 &lt;span class="math inline"&gt;L_y&lt;/span&gt; 之间满足以下李括号关系：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
  [L_z, L_x] = L_y, \quad [L_z, L_y] = -L_x
&lt;/div&gt;

&lt;p&gt;这些关系反映了三维空间中不同方向的旋转组合的规律。&lt;/p&gt;
&lt;h2 id="_7"&gt;李群 与 李代数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;李群表示的是系统的有限变换，例如物体的最终旋转状态。&lt;/li&gt;
&lt;li&gt;李代数表示的是系统的无穷小变化，例如物体旋转时的瞬时角速度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_8"&gt;二者联系&lt;/h3&gt;
&lt;p&gt;虽然李群和李代数的生成元是不同的概念，它们之间的联系可以通过无穷小变换和指数映射来理解：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;李群的无穷小变换&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于一个连续李群，可以通过考虑该群的无穷小变换来得到它的李代数。李代数的生成元可以看作是这些无穷小变换的表示。&lt;/p&gt;
&lt;p&gt;例如，在前面提到的特殊正交群（三维旋转群） &lt;span class="math inline"&gt;SO(3)&lt;/span&gt; 中，绕 &lt;span class="math inline"&gt;x&lt;/span&gt;、&lt;span class="math inline"&gt;y&lt;/span&gt;、&lt;span class="math inline"&gt;z&lt;/span&gt; 轴的无穷小旋转可以用李代数 &lt;span class="math inline"&gt;\mathfrak{so}(3)&lt;/span&gt; 的生成元 &lt;span class="math inline"&gt;L_x&lt;/span&gt;，&lt;span class="math inline"&gt;L_y&lt;/span&gt;，&lt;span class="math inline"&gt;L_z&lt;/span&gt; 来描述。这些生成元是 &lt;span class="math inline"&gt;3 \times 3&lt;/span&gt; 的反对称矩阵，代表无穷小旋转。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;指数映射&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;李代数的元素通过指数映射生成李群中的元素。具体来说，对于李代数中的一个元素 &lt;span class="math inline"&gt;X&lt;/span&gt;，我们可以通过指数映射 &lt;span class="math inline"&gt;e^X&lt;/span&gt; 得到李群中的一个元素。通过这种方式，李代数的生成元与李群中的有限变换有了联系。&lt;/p&gt;
&lt;p&gt;例如，李群 &lt;span class="math inline"&gt;SO(3)&lt;/span&gt; 中的有限旋转可以通过李代数 &lt;span class="math inline"&gt;\mathfrak{so}(3)&lt;/span&gt; 中的生成元的指数映射来生成。&lt;/p&gt;
&lt;h3 id="_9"&gt;指数映射例子&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;李群 &lt;span class="math inline"&gt;SO(3)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math inline"&gt;SO(3)&lt;/span&gt; 是描述三维空间中所有保持长度的旋转构成的群。它的元素是 &lt;span class="math inline"&gt;3 \times 3&lt;/span&gt; 的正交矩阵，满足 &lt;span class="math inline"&gt;R^T R = I&lt;/span&gt; 且 &lt;span class="math inline"&gt;\det(R) = 1&lt;/span&gt;。该群包含了所有可能的三维旋转。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;李代数 &lt;span class="math inline"&gt;\mathfrak{so}(3)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math inline"&gt;\mathfrak{so}(3)&lt;/span&gt; 是李群 &lt;span class="math inline"&gt;SO(3)&lt;/span&gt; 的李代数，它由所有 &lt;span class="math inline"&gt;3 \times 3&lt;/span&gt; 的反对称矩阵组成。李代数的元素描述了无穷小旋转。具体来说，&lt;span class="math inline"&gt;\mathfrak{so}(3)&lt;/span&gt; 的生成元 &lt;span class="math inline"&gt;L_x&lt;/span&gt;，&lt;span class="math inline"&gt;L_y&lt;/span&gt;，&lt;span class="math inline"&gt;L_z&lt;/span&gt; 对应绕 &lt;span class="math inline"&gt;x&lt;/span&gt;、&lt;span class="math inline"&gt;y&lt;/span&gt;、&lt;span class="math inline"&gt;z&lt;/span&gt; 轴的无穷小旋转。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从李代数到李群：指数映射&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;李代数 &lt;span class="math inline"&gt;\mathfrak{so}(3)&lt;/span&gt; 中的元素通过&lt;strong&gt;指数映射&lt;/strong&gt;生成李群 &lt;span class="math inline"&gt;SO(3)&lt;/span&gt; 中的有限旋转。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class="math inline"&gt;\mathfrak{so}(3)&lt;/span&gt; 中的任意元素 &lt;span class="math inline"&gt;X&lt;/span&gt;，我们可以通过指数映射 &lt;span class="math inline"&gt;e^X&lt;/span&gt; 得到李群 &lt;span class="math inline"&gt;SO(3)&lt;/span&gt; 中的一个元素。对于矩阵李群，这个指数映射可以通过矩阵指数定义：&lt;/p&gt;
&lt;div class="math display"&gt;
e^X = I + X + \frac{1}{2!}X^2 + \frac{1}{3!}X^3 + \cdots
&lt;/div&gt;

&lt;p&gt;其中，&lt;span class="math inline"&gt;X&lt;/span&gt; 是李代数中的一个矩阵，&lt;span class="math inline"&gt;e^X&lt;/span&gt; 是李群中的一个旋转矩阵。&lt;/p&gt;
&lt;p&gt;例如，绕 &lt;span class="math inline"&gt;z&lt;/span&gt; 轴的有限旋转矩阵 &lt;span class="math inline"&gt;R_z(\theta)&lt;/span&gt; 可以通过李代数中的生成元 &lt;span class="math inline"&gt;L_z&lt;/span&gt; 的指数映射生成：&lt;/p&gt;
&lt;div class="math display"&gt;
R_z(\theta) = e^{\theta L_z} = I + \theta L_z + \frac{\theta^2}{2!} L_z^2 + \cdots
&lt;/div&gt;

&lt;p&gt;通过计算 &lt;span class="math inline"&gt;L_z^2&lt;/span&gt;、&lt;span class="math inline"&gt;L_z^3&lt;/span&gt; 以及 &lt;span class="math inline"&gt;L_z^4&lt;/span&gt; 的结果，可以将这个展开式分解为两个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;含偶数次幂的项（包括 &lt;span class="math inline"&gt;L_z^2&lt;/span&gt;、&lt;span class="math inline"&gt;L_z^4&lt;/span&gt; 等）：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
  I + \frac{\theta^2}{2!} L_z^2 + \frac{\theta^4}{4!} L_z^4 + \cdots
  = \begin{pmatrix}
  1 &amp; 0 &amp; 0 \\
  0 &amp; 1 &amp; 0 \\
  0 &amp; 0 &amp; 1
  \end{pmatrix} + \frac{\theta^2}{2!} \begin{pmatrix} -1 &amp; 0 &amp; 0 \\ 0 &amp; -1 &amp; 0 \\ 0 &amp; 0 &amp; 0 \end{pmatrix} + \cdots
  = \begin{pmatrix}
  \cos \theta &amp; 0 &amp; 0 \\
  0 &amp; \cos \theta &amp; 0 \\
  0 &amp; 0 &amp; 1
  \end{pmatrix}
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;含奇数次幂的项（包括 &lt;span class="math inline"&gt;L_z&lt;/span&gt;、&lt;span class="math inline"&gt;L_z^3&lt;/span&gt; 等）：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
  \theta L_z + \frac{\theta^3}{3!} L_z^3 + \cdots
  = \theta \begin{pmatrix} 0 &amp; -1 &amp; 0 \\ 1 &amp; 0 &amp; 0 \\ 0 &amp; 0 &amp; 0 \end{pmatrix} + \frac{\theta^3}{3!} \begin{pmatrix} 0 &amp; 1 &amp; 0 \\ -1 &amp; 0 &amp; 0 \\ 0 &amp; 0 &amp; 0 \end{pmatrix} + \cdots
  = \begin{pmatrix}
  0 &amp; -\sin \theta &amp; 0 \\
  \sin \theta &amp; 0 &amp; 0 \\
  0 &amp; 0 &amp; 0
  \end{pmatrix}
&lt;/div&gt;

&lt;p&gt;可以看到矩阵的各个项对应&lt;span class="math inline"&gt;sin\theta&lt;/span&gt;和&lt;span class="math inline"&gt;cos\theta&lt;/span&gt;泰勒展开式，进而得到：&lt;/p&gt;
&lt;div class="math display"&gt;
R_z(\theta) = \begin{pmatrix}
\cos \theta &amp; -\sin \theta &amp; 0 \\
\sin \theta &amp; \cos \theta &amp; 0 \\
0 &amp; 0 &amp; 1
\end{pmatrix}
&lt;/div&gt;

&lt;p&gt;这就是绕 &lt;span class="math inline"&gt;z&lt;/span&gt; 轴旋转角度 &lt;span class="math inline"&gt;\theta&lt;/span&gt; 的旋转矩阵。&lt;/p&gt;
&lt;p&gt;类似地，绕 &lt;span class="math inline"&gt;x&lt;/span&gt; 轴和 &lt;span class="math inline"&gt;y&lt;/span&gt; 轴的有限旋转也可以通过 &lt;span class="math inline"&gt;L_x&lt;/span&gt; 和 &lt;span class="math inline"&gt;L_y&lt;/span&gt; 的指数映射生成。&lt;/p&gt;
&lt;h3 id="so3_2"&gt;so(3)下李括号与向量叉乘&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;在三维旋转群 &lt;span class="math inline"&gt;\text{SO}(3)&lt;/span&gt; 的李代数 &lt;span class="math inline"&gt;\mathfrak{so}(3)&lt;/span&gt; 中，&lt;strong&gt;李括号（Lie bracket）&lt;/strong&gt; 实际上与三维向量的 &lt;strong&gt;叉乘&lt;/strong&gt;（Cross product）是等价的。这种对应关系反映了三维旋转的代数结构与三维向量之间的紧密联系。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 &lt;span class="math inline"&gt;\mathfrak{so}(3)&lt;/span&gt; 中，元素是 &lt;strong&gt;反对称矩阵&lt;/strong&gt;，即满足 &lt;span class="math inline"&gt;A^T = -A&lt;/span&gt; 的 &lt;span class="math inline"&gt;3 \times 3&lt;/span&gt; 矩阵。任何 &lt;span class="math inline"&gt;\mathfrak{so}(3)&lt;/span&gt; 的元素 &lt;span class="math inline"&gt;A&lt;/span&gt; 都可以写成如下形式：&lt;/p&gt;
&lt;div class="math display"&gt;
A = \begin{pmatrix}
0 &amp; -a_3 &amp; a_2 \\
a_3 &amp; 0 &amp; -a_1 \\
-a_2 &amp; a_1 &amp; 0
\end{pmatrix}
&lt;/div&gt;

&lt;p&gt;其中，&lt;span class="math inline"&gt;\mathbf{a} = (a_1, a_2, a_3)&lt;/span&gt; 是一个三维向量。我们可以将这个矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 与向量 &lt;span class="math inline"&gt;\mathbf{a}&lt;/span&gt; 关联起来，称 &lt;span class="math inline"&gt;A&lt;/span&gt; 是向量 &lt;span class="math inline"&gt;\mathbf{a}&lt;/span&gt; 的“反对称矩阵表示”。&lt;/p&gt;
&lt;p&gt;在 &lt;span class="math inline"&gt;\mathfrak{so}(3)&lt;/span&gt; 中，两个反对称矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 和 &lt;span class="math inline"&gt;B&lt;/span&gt; 的&lt;strong&gt;李括号&lt;/strong&gt;定义为矩阵的交换子：&lt;/p&gt;
&lt;div class="math display"&gt;
[A, B] = AB - BA
&lt;/div&gt;
&lt;p&gt;假设矩阵 &lt;span class="math inline"&gt;A&lt;/span&gt; 和 &lt;span class="math inline"&gt;B&lt;/span&gt; 分别对应于向量 &lt;span class="math inline"&gt;\mathbf{a}&lt;/span&gt; 和 &lt;span class="math inline"&gt;\mathbf{b}&lt;/span&gt; 的反对称矩阵表示：&lt;/p&gt;
&lt;div class="math display"&gt;
A = \begin{pmatrix}
0 &amp; -a_3 &amp; a_2 \\
a_3 &amp; 0 &amp; -a_1 \\
-a_2 &amp; a_1 &amp; 0
\end{pmatrix}, \quad
B = \begin{pmatrix}
0 &amp; -b_3 &amp; b_2 \\
b_3 &amp; 0 &amp; -b_1 \\
-b_2 &amp; b_1 &amp; 0
\end{pmatrix}
&lt;/div&gt;

&lt;p&gt;计算 &lt;span class="math inline"&gt;[A, B]&lt;/span&gt; 的结果仍然是一个反对称矩阵。事实上，得到的这个矩阵对应于向量 &lt;span class="math inline"&gt;\mathbf{c} = \mathbf{a} \times \mathbf{b}&lt;/span&gt; 的反对称矩阵表示。&lt;/p&gt;
&lt;p&gt;两个向量 &lt;span class="math inline"&gt;\mathbf{a} = (a_1, a_2, a_3)&lt;/span&gt; 和 &lt;span class="math inline"&gt;\mathbf{b} = (b_1, b_2, b_3)&lt;/span&gt;，它们的&lt;strong&gt;叉乘&lt;/strong&gt;定义为：&lt;/p&gt;
&lt;div class="math display"&gt;
\mathbf{a} \times \mathbf{b} = \begin{pmatrix}
a_2 b_3 - a_3 b_2 \\
a_3 b_1 - a_1 b_3 \\
a_1 b_2 - a_2 b_1
\end{pmatrix}
&lt;/div&gt;

&lt;h2 id="_10"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Lie_group&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Algebra&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Linear_algebra&lt;/li&gt;
&lt;/ul&gt;</content><category term="Science"></category></entry><entry><title>神秘的自然常数e</title><link href="https://blog.debao.me/2024/10/the-mysterious-natural-constant-e/" rel="alternate"></link><published>2024-10-11T09:39:00+08:00</published><updated>2024-10-11T09:39:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-10-11:/2024/10/the-mysterious-natural-constant-e/</id><summary type="html">&lt;p&gt;数字 &lt;span class="math inline"&gt;e&lt;/span&gt; 在数学中具有重要的地位，与 0、1、&lt;span class="math inline"&gt;\pi&lt;/span&gt; 和 &lt;span class="math inline"&gt;i&lt;/span&gt; 并列。这五个数都出现在欧拉恒等式 &lt;span class="math inline"&gt;e^{i\pi} + 1 = 0&lt;/span&gt; 这一个公式中。但 &lt;span class="math inline"&gt;e&lt;/span&gt; 不像 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;数字 &lt;span class="math inline"&gt;e&lt;/span&gt; 在数学中具有重要的地位，与 0、1、&lt;span class="math inline"&gt;\pi&lt;/span&gt; 和 &lt;span class="math inline"&gt;i&lt;/span&gt; 并列。这五个数都出现在欧拉恒等式 &lt;span class="math inline"&gt;e^{i\pi} + 1 = 0&lt;/span&gt; 这一个公式中。但 &lt;span class="math inline"&gt;e&lt;/span&gt; 不像其他数学常数具有清晰几何意义，它的发现源于对增长和变化的研究，其值约为 &lt;code&gt;2.718281828459045…&lt;/code&gt;，是一个无理数和超越数，无法用分数表示，也不满足任何代数方程。&lt;/p&gt;
&lt;p&gt;它有多个指代名称：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自然常数（Natural constant）/自然底数（Natural base）&lt;/li&gt;
&lt;li&gt;欧拉数（Euler's number）&lt;/li&gt;
&lt;li&gt;纳皮尔常数（Napier's constant）&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;使用欧拉数称呼它时要注意上下文，也需要和欧拉常数γ区分。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;历史&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="math inline"&gt;e&lt;/span&gt; 的发现通常归功于 17 世纪后期的雅各布·伯努利（Jacob Bernoulli），他在研究复利（compound interest)问题时偶然发现了它。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1614年&lt;/strong&gt;: 约翰·纳皮尔（John Napier）发明了&lt;strong&gt;对数&lt;/strong&gt;，间接推动了 &lt;span class="math inline"&gt;e&lt;/span&gt; 的发现。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1683年&lt;/strong&gt;: 雅各布·伯努利（Jacob Bernoulli）在研究复利时首次接触到自然常数 &lt;span class="math inline"&gt;e&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1690年代&lt;/strong&gt;: 莱布尼茨（Leibniz）在微积分中为后来发现 &lt;span class="math inline"&gt;e^x&lt;/span&gt; 的导数性质奠定了基础。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1731年&lt;/strong&gt;: 莱昂哈德·欧拉（Leonhard Euler）首次使用符号 &lt;span class="math inline"&gt;e&lt;/span&gt; 表示该常数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1737年&lt;/strong&gt;: 欧拉系统化了 &lt;span class="math inline"&gt;e&lt;/span&gt; 的定义，并推广了其在数学中的应用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1748年&lt;/strong&gt;: 欧拉推导出著名的欧拉公式 &lt;span class="math inline"&gt;e^{ix} = \cos(x) + i \sin(x)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1873年&lt;/strong&gt;：夏尔·埃尔米特（Charles Hermite）证明 &lt;span class="math inline"&gt;e&lt;/span&gt; 为超越数（transcendental number），这是数学史上的里程碑式成就。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;超越数（transcendental number）：指的是不满足任何有理系数的多项式方程的实数或复数。换句话说，超越数不是代数数（algebraic number），不能是任何整系数多项式的根。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_2"&gt;定义&lt;/h2&gt;
&lt;p&gt;&lt;span class="math inline"&gt;e&lt;/span&gt; 一般使用复利增长的概念进行定义，也可以使用级数展开方式。&lt;/p&gt;
&lt;h3 id="_3"&gt;通过极限&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;这是源自&lt;strong&gt;复利增长&lt;/strong&gt;的一个定义。当复利的计算频率趋向无穷时，复利的极限值就是自然常数 &lt;span class="math inline"&gt;e&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;假设初始金额 &lt;span class="math inline"&gt;P = ¥1&lt;/span&gt;，年利率 &lt;span class="math inline"&gt;r = 100%&lt;/span&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;复利频率&lt;/th&gt;
&lt;th&gt;每年复利次数&lt;/th&gt;
&lt;th&gt;公式&lt;/th&gt;
&lt;th&gt;1年后的金额&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;每年&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;1 \left(1 + \frac{1}{1}\right)^{1} = 2&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;¥2.00000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;每半年&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;1 \left(1 + \frac{1}{2}\right)^{2} = \left(\frac{3}{2}\right)^2 = 2.25&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;¥2.25000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;每季度&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;1 \left(1 + \frac{1}{4}\right)^{4} = \left(\frac{5}{4}\right)^4 \approx 2.44140625&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;¥2.44140625&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;每月&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;1 \left(1 + \frac{1}{12}\right)^{12} \approx 2.61303529&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;¥2.61303529&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;每周&lt;/td&gt;
&lt;td&gt;52&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;1 \left(1 + \frac{1}{52}\right)^{52} \approx 2.692596954&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;¥2.692596954&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;每天&lt;/td&gt;
&lt;td&gt;365&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;1 \left(1 + \frac{1}{365}\right)^{365} \approx 2.714567482&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;¥2.714567482&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;每小时&lt;/td&gt;
&lt;td&gt;8760&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;1 \left(1 + \frac{1}{8760}\right)^{8760} \approx 2.718126693&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;¥2.718126693&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;每分钟&lt;/td&gt;
&lt;td&gt;525600&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;1 \left(1 + \frac{1}{525600}\right)^{525600} \approx 2.718279243&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;¥2.718279243&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;随着复利频率的增加，金额逐渐逼近自然常数，可以通过以下极限定义：&lt;/p&gt;
&lt;div class="math display"&gt;
e = \lim_{n \to \infty} \left( 1 + \frac{1}{n} \right)^n
&lt;/div&gt;

&lt;h3 id="_4"&gt;通过级数展开&lt;/h3&gt;
&lt;p&gt;也可以通过其&lt;strong&gt;泰勒级数&lt;/strong&gt;展开来定义：&lt;/p&gt;
&lt;div class="math display"&gt;
e^x = \sum_{n=0}^{\infty} \frac{x^n}{n!}
&lt;/div&gt;

&lt;p&gt;当 &lt;span class="math inline"&gt;x = 1&lt;/span&gt; 时，我们可以得到 &lt;span class="math inline"&gt;e&lt;/span&gt; 的级数展开：&lt;/p&gt;
&lt;div class="math display"&gt;
e = 1 + 1 + \frac{1}{2!} + \frac{1}{3!} + \frac{1}{4!} + \cdots
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;这个无穷级数可以用于计算 &lt;span class="math inline"&gt;e&lt;/span&gt; 的精确值，并且它收敛得非常快。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_5"&gt;微分性质&lt;/h2&gt;
&lt;p&gt;&lt;span class="math inline"&gt;e&lt;/span&gt; 是&lt;strong&gt;唯一一个&lt;/strong&gt;满足其导数等于自身的函数。即对于函数 &lt;span class="math inline"&gt;f(x) = e^x&lt;/span&gt; ，有：&lt;/p&gt;
&lt;div class="math display"&gt;
\frac{d}{dx} e^x = e^x
&lt;/div&gt;

&lt;p&gt;这一特性使得 &lt;span class="math inline"&gt;e&lt;/span&gt; 在微积分中的应用非常广泛。&lt;/p&gt;
&lt;p&gt;看两个例子：&lt;/p&gt;
&lt;h3 id="_6"&gt;齐次常系数微分方程&lt;/h3&gt;
&lt;p&gt;齐次常系数微分方程(homogeneous constant-coefficient differential equation)指的是所有项都与未知函数及其导数有关，且系数为常数，且方程右侧等于零的微分方程。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;常系数微分方程有点像y的多项式，只不过它用的是y的导数，而不是幂。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="_7"&gt;一阶齐次常系数微分方程&lt;/h4&gt;
&lt;div class="math display"&gt;
\frac{dy}{dx} + py = 0
&lt;/div&gt;

&lt;p&gt;解的形式：&lt;/p&gt;
&lt;div class="math display"&gt;
y(x) = C e^{-px}
&lt;/div&gt;

&lt;h4 id="_8"&gt;二阶齐次常系数微分方程&lt;/h4&gt;
&lt;div class="math display"&gt;
y'' + p y' + q y = 0
&lt;/div&gt;

&lt;p&gt;根据其特征方程：&lt;/p&gt;
&lt;div class="math display"&gt;
r^2 + pr + q = 0
&lt;/div&gt;

&lt;p&gt;分别讨论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;两个不同实根&lt;/strong&gt; &lt;span class="math inline"&gt;r_1&lt;/span&gt; 和 &lt;span class="math inline"&gt;r_2&lt;/span&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
y(x) = C_1 e^{r_1 x} + C_2 e^{r_2 x}
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;两个相同实根&lt;/strong&gt; &lt;span class="math inline"&gt;r_1 = r_2 = r&lt;/span&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
y(x) = (C_1 + C_2 x) e^{r x}
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;两个共轭复根&lt;/strong&gt; &lt;span class="math inline"&gt;r_1 = \alpha + i\beta&lt;/span&gt;，&lt;span class="math inline"&gt;r_2 = \alpha - i\beta&lt;/span&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
y(x) = e^{\alpha x} (C_1 \cos(\beta x) + C_2 \sin(\beta x))
&lt;/div&gt;

&lt;h3 id="_9"&gt;泰勒级数&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="math inline"&gt;e^x&lt;/span&gt;这个微分特性配合泰勒级数/麦克劳林级数很容易展开。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;泰勒级数&lt;/strong&gt;是将一个函数在某点附近通过无穷级数展开的方式来近似表示。给定函数 &lt;span class="math inline"&gt;f(x)&lt;/span&gt; 在点 &lt;span class="math inline"&gt;a&lt;/span&gt; 处，如果该函数在 &lt;span class="math inline"&gt;a&lt;/span&gt; 附近具有足够的导数，那么它可以用以下形式的&lt;strong&gt;泰勒级数&lt;/strong&gt;表示：&lt;/p&gt;
&lt;div class="math display"&gt;
f(x) = f(a) + f'(a)(x - a) + \frac{f''(a)}{2!}(x - a)^2 + \frac{f^{(3)}(a)}{3!}(x - a)^3 + \cdots
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;f^{(n)}(a)&lt;/span&gt; 表示函数 &lt;span class="math inline"&gt;f(x)&lt;/span&gt; 在点 &lt;span class="math inline"&gt;a&lt;/span&gt; 处的第 &lt;span class="math inline"&gt;n&lt;/span&gt; 阶导数。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;n!&lt;/span&gt; 表示 &lt;span class="math inline"&gt;n&lt;/span&gt; 的阶乘，即 &lt;span class="math inline"&gt;n! = n \cdot (n-1) \cdot \dots \cdot 1&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;当 &lt;span class="math inline"&gt;a = 0&lt;/span&gt; 时，泰勒级数简化为&lt;strong&gt;麦克劳林级数&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;函数 &lt;span class="math inline"&gt;e^x&lt;/span&gt; 在 &lt;span class="math inline"&gt;a = 0&lt;/span&gt; 处的麦克劳林级数为：&lt;/p&gt;
&lt;div class="math display"&gt;
e^x = 1 + x + \frac{x^2}{2!} + \frac{x^3}{3!} + \frac{x^4}{4!} + \cdots
&lt;/div&gt;

&lt;p&gt;这个级数在整个实数范围内收敛，并且是 &lt;span class="math inline"&gt;e^x&lt;/span&gt; 的精确表示。&lt;/p&gt;
&lt;h2 id="_10"&gt;自然对数&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;在16世纪末和17世纪初，科学、天文学和航海等领域需要进行大量的复杂计算，尤其是涉及到乘法、除法、乘方和开方的计算。这些计算在没有现代计算工具的情况下非常耗时且容易出错。为了简化这些繁琐的计算，纳皮尔提出对数，它可以将乘法运算转换为加法，将除法运算转换为减法，极大地减少计算的复杂性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_11"&gt;对数&lt;/h3&gt;
&lt;p&gt;对于任意正数 &lt;span class="math inline"&gt;x&lt;/span&gt; 和底数 &lt;span class="math inline"&gt;b&lt;/span&gt;（&lt;span class="math inline"&gt;b &amp;gt; 0&lt;/span&gt; 且 &lt;span class="math inline"&gt;b \neq 1&lt;/span&gt;），&lt;span class="math inline"&gt;b&lt;/span&gt; 的对数可以定义为：&lt;/p&gt;
&lt;div class="math display"&gt;
\log_b(x) = y \quad \text{当且仅当} \quad b^y = x
&lt;/div&gt;

&lt;p&gt;常用的对数有以10为底数和以自然常数为底的。&lt;/p&gt;
&lt;h3 id="_12"&gt;自然对数的底&lt;/h3&gt;
&lt;p&gt;自然常数也是&lt;strong&gt;自然对数&lt;/strong&gt;（&lt;span class="math inline"&gt;\ln(x)&lt;/span&gt;）的底数。自然对数是 &lt;span class="math inline"&gt;e^x&lt;/span&gt; 的反函数：&lt;/p&gt;
&lt;div class="math display"&gt;
\ln(e) = 1
&lt;/div&gt;

&lt;p&gt;涉及自然对数一些恒等式（注意大于0的条件），可放个全家福：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;恒等式&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;解释&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math inline"&gt;\ln(1) = 0&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;自然对数 1 的值为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math inline"&gt;\ln(e) = 1&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;自然对数&lt;span class="math inline"&gt;e&lt;/span&gt; 的值为 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math inline"&gt;\ln(ab) = \ln(a) + \ln(b)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;自然对数将乘法转化为加法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math inline"&gt;\ln\left(\frac{a}{b}\right) = \ln(a) - \ln(b)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;自然对数将除法转化为减法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math inline"&gt;\ln(a^b) = b \cdot \ln(a)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;对数的幂可以作为系数提到前面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math inline"&gt;\ln(e^x) = x&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;自然对数与指数函数互为反函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math inline"&gt;e^{\ln(x)} = x&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;指数运算和自然对数互为反函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math inline"&gt;\log_b(a) = \frac{\ln(a)}{\ln(b)}&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;任意底数&lt;span class="math inline"&gt;b&lt;/span&gt; 的对数通过自然对数转换【换底公式】&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math inline"&gt;\frac{d}{dx} \ln(x) = \frac{1}{x}&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;自然对数函数的导数【神奇】&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="math inline"&gt;\int \ln(x) \, dx = x \ln(x) - x + C&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;自然对数函数的积分公式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="1x"&gt;1/x 的积分&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;难以想象，&lt;span class="math inline"&gt;1/x&lt;/span&gt;的积分会是自然对数 &lt;span class="math inline"&gt;\ln(x)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在微积分中，幂函数 &lt;span class="math inline"&gt;f(x) = x^n&lt;/span&gt; 的积分通常遵循一个简单的规则，称为&lt;strong&gt;幂函数积分法则&lt;/strong&gt;。对于 &lt;span class="math inline"&gt;n \neq -1&lt;/span&gt; 的幂函数，积分公式为：&lt;/p&gt;
&lt;div class="math display"&gt;
\int x^n \, dx = \frac{x^{n+1}}{n+1} + C
&lt;/div&gt;

&lt;p&gt;当 &lt;span class="math inline"&gt;n = -1&lt;/span&gt; 时，直接使用幂函数积分法则会导致分母为零（&lt;span class="math inline"&gt;n + 1 = 0&lt;/span&gt;），因此该公式不适用。这就使得 &lt;span class="math inline"&gt;\frac{1}{x}&lt;/span&gt;（即 &lt;span class="math inline"&gt;x^{-1}&lt;/span&gt;）变得特别，它的积分必须通过其他方法来处理。&lt;/p&gt;
&lt;div class="math display"&gt;
\int \frac{1}{x} \, dx = \ln |x| + C
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;注意公式中的绝对值，这可以写成一个分段函数，而且两段的 &lt;span class="math inline"&gt;C&lt;/span&gt; 的值还不一样。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这一性质源自对数函数的定义。自然对数函数 &lt;span class="math inline"&gt;\ln(x)&lt;/span&gt; 是 &lt;span class="math inline"&gt;e^x&lt;/span&gt; 的反函数，并且它的导数恰好是 &lt;span class="math inline"&gt;\frac{1}{x}&lt;/span&gt;：&lt;/p&gt;
&lt;div class="math display"&gt;
\frac{d}{dx} \ln(x) = \frac{1}{x}
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;该公式的证明直接使用导数定义（并配合对数法则）进行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_13"&gt;与复数（三角函数）的关系&lt;/h2&gt;
&lt;p&gt;在&lt;strong&gt;欧拉公式&lt;/strong&gt;中：&lt;/p&gt;
&lt;div class="math display"&gt;
e^{i\theta} = \cos(\theta) + i\sin(\theta)
&lt;/div&gt;

&lt;p&gt;当 &lt;span class="math inline"&gt;\theta = \pi&lt;/span&gt; 时，欧拉公式推导出一个非常美丽的结果，称为&lt;strong&gt;欧拉恒等式&lt;/strong&gt;：&lt;/p&gt;
&lt;div class="math display"&gt;
e^{i\pi} + 1 = 0
&lt;/div&gt;

&lt;p&gt;这个公式将数学中五个最重要的常数 &lt;span class="math inline"&gt;e&lt;/span&gt;、&lt;span class="math inline"&gt;\pi&lt;/span&gt;、&lt;span class="math inline"&gt;i&lt;/span&gt;、1 和 0 联系在了一起。&lt;/p&gt;
&lt;h3 id="_14"&gt;复平面点坐标&lt;/h3&gt;
&lt;p&gt;在复平面极坐标系内，坐标点用&lt;span class="math inline"&gt;(r, \theta)&lt;/span&gt;表示，可以通过如下公式转到笛卡尔坐标系：&lt;/p&gt;
&lt;div class="math display"&gt;
x = r\cos(\theta)
\\
y = r\sin(\theta)
&lt;/div&gt;

&lt;p&gt;所以，复数&lt;/p&gt;
&lt;div class="math display"&gt;
z = x + iy= r\cos(\theta) + r\sin(\theta)
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;前面欧拉公式右侧是复平面单位圆上点的坐标。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果 &lt;span class="math inline"&gt;(r, \theta)&lt;/span&gt; 和 &lt;span class="math inline"&gt;(x,y)&lt;/span&gt;是同一个点，有&lt;/p&gt;
&lt;div class="math display"&gt;
x + iy = r e^{i\theta}
&lt;/div&gt;

&lt;h3 id="_15"&gt;欧拉公式证明&lt;/h3&gt;
&lt;p&gt;将&lt;span class="math inline"&gt;e^{ix}&lt;/span&gt; 的幂级数展开：&lt;/p&gt;
&lt;div class="math display"&gt;
e^{ix} = \sum_{n=0}^{\infty} \frac{(ix)^n}{n!}
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;当 &lt;span class="math inline"&gt;n&lt;/span&gt; 为偶数时，&lt;span class="math inline"&gt;(ix)^n = i^n \cdot x^n = (-1)^{n/2} \cdot x^n&lt;/span&gt;，因为 &lt;span class="math inline"&gt;i^2 = -1&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;当 &lt;span class="math inline"&gt;n&lt;/span&gt; 为奇数时，&lt;span class="math inline"&gt;(ix)^n = i^n \cdot x^n = (-1)^{(n-1)/2} \cdot i \cdot x^n&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 &lt;span class="math inline"&gt;e^{ix}&lt;/span&gt; 的幂级数展开为偶数项和奇数项：&lt;/p&gt;
&lt;div class="math display"&gt;
e^{ix} = \sum_{n=0}^{\infty} \frac{(ix)^n}{n!} = \sum_{n=0}^{\infty} \frac{(-1)^{n} x^{2n}}{(2n)!} + i \sum_{n=0}^{\infty} \frac{(-1)^n x^{2n+1}}{(2n+1)!}
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实部，是所有偶数幂项的和。它正是 &lt;span class="math inline"&gt;\cos(x)&lt;/span&gt;的泰勒展开式。&lt;/li&gt;
&lt;li&gt;虚部，是所有奇数幂项的和。它正是 &lt;span class="math inline"&gt;\sin(x)&lt;/span&gt;的泰勒展开式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_16"&gt;双曲函数&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;双曲函数（&lt;strong&gt;hyperbolic functions&lt;/strong&gt;）与三角函数类似，但定义在指数函数的基础上。最常用的双曲函数是&lt;strong&gt;双曲正弦&lt;/strong&gt; &lt;span class="math inline"&gt;\sinh(x)&lt;/span&gt; 和&lt;strong&gt;双曲余弦&lt;/strong&gt; &lt;span class="math inline"&gt;\cosh(x)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;三角函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\cos(\theta) = \frac{e^{i\theta} + e^{-i\theta}}{2}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\sin(\theta) = \frac{e^{i\theta} - e^{-i\theta}}{2i}&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;双曲函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\sinh(x) = \frac{e^x - e^{-x}}{2}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\cosh(x) = \frac{e^x + e^{-x}}{2}&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_17"&gt;应用&lt;/h2&gt;
&lt;p&gt;放几个微分相关例子&lt;/p&gt;
&lt;h3 id="_18"&gt;电路中的电容放电&lt;/h3&gt;
&lt;p&gt;电容器的放电过程遵循一阶齐次微分方程。考虑一个电容通过电阻放电的电路，根据电流连续性，可列电压 &lt;span class="math inline"&gt;V(t)&lt;/span&gt; 随时间的变化方程：&lt;/p&gt;
&lt;div class="math display"&gt;
C\frac{dV}{dt} + \frac{V}{R} = 0
&lt;/div&gt;

&lt;p&gt;即：&lt;/p&gt;
&lt;div class="math display"&gt;
\frac{dV}{dt} + \frac{1}{RC} V = 0
&lt;/div&gt;

&lt;p&gt;解的形式为：&lt;/p&gt;
&lt;div class="math display"&gt;
V(t) = V_0 e^{-\frac{t}{RC}}
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;V_0&lt;/span&gt; 是初始电压，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;R&lt;/span&gt; 是电阻，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;C&lt;/span&gt; 是电容。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_19"&gt;牛顿冷却定律&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;牛顿冷却定律&lt;/strong&gt;描述了物体的温度变化速率与其温度 &lt;span class="math inline"&gt;T(t)&lt;/span&gt; 和环境温度 &lt;span class="math inline"&gt;T_{\text{env}}&lt;/span&gt; 之间的差异成正比：&lt;/p&gt;
&lt;div class="math display"&gt;
\frac{dT}{dt} = -k \left( T(t) - T_{\text{env}} \right)
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;T(t)&lt;/span&gt; 是物体在时刻 &lt;span class="math inline"&gt;t&lt;/span&gt; 的温度。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;T_{\text{env}}&lt;/span&gt; 是环境温度（常数）。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;k&lt;/span&gt; 是冷却常数，代表冷却的速度。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其解：&lt;/p&gt;
&lt;div class="math display"&gt;
T(t) = T_{\text{env}} + (T_0 - T_{\text{env}}) e^{-kt}
&lt;/div&gt;

&lt;h3 id="rlc"&gt;RLC电路中的振荡&lt;/h3&gt;
&lt;p&gt;RLC电路的响应可以用二阶齐次常系数微分方程来描述。根据回路电压和为零，RLC串联电路的电流 &lt;span class="math inline"&gt;I(t)&lt;/span&gt; 满足以下方程：&lt;/p&gt;
&lt;div class="math display"&gt;
L \frac{dI}{dt} + R I + \frac{1}{C} \int I(t) dt = 0
&lt;/div&gt;

&lt;p&gt;执行一次微分操作消除积分，可以得到方程：&lt;/p&gt;
&lt;div class="math display"&gt;
L \frac{d^2I}{dt^2} + R \frac{dI}{dt} + \frac{1}{C} I = 0
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;L&lt;/span&gt; 是电感，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;R&lt;/span&gt; 是电阻，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;C&lt;/span&gt; 是电容。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;特征方程为：&lt;/p&gt;
&lt;div class="math display"&gt;
Lr^2 + Rr + \frac{1}{C} = 0
&lt;/div&gt;

&lt;p&gt;根据判别式 &lt;span class="math inline"&gt;\Delta = R^2 - 4L/C&lt;/span&gt; 的值，电路可以表现出：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;欠阻尼振荡&lt;/strong&gt;（振荡电流随时间逐渐衰减）；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;过阻尼&lt;/strong&gt;（电流缓慢趋于零）；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;临界阻尼&lt;/strong&gt;（最快的无振荡衰减）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_20"&gt;机械系统中的振动&lt;/h4&gt;
&lt;p&gt;在机械工程中，简单的&lt;strong&gt;阻尼振子&lt;/strong&gt;（如弹簧-阻尼系统）可以用二阶齐次常系数微分方程来描述。方程形式为：&lt;/p&gt;
&lt;div class="math display"&gt;
m\frac{d^2x}{dt^2} + c\frac{dx}{dt} + kx = 0
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;m&lt;/span&gt; 是质量，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;c&lt;/span&gt; 是阻尼系数，阻尼力和速度成正比，方向相反。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;k&lt;/span&gt; 是弹簧常数。弹力和位移成正比，方向相反。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这就是&lt;strong&gt;阻尼振动方程&lt;/strong&gt;，其特征方程为：&lt;/p&gt;
&lt;div class="math display"&gt;
mr^2 + cr + k = 0
&lt;/div&gt;

&lt;p&gt;根据判别式的不同，解可以是&lt;strong&gt;欠阻尼&lt;/strong&gt;、&lt;strong&gt;临界阻尼&lt;/strong&gt;或&lt;strong&gt;过阻尼&lt;/strong&gt;的形式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;欠阻尼&lt;/strong&gt;：&lt;span class="math inline"&gt;x(t) = e^{-\alpha t} (C_1 \cos(\omega t) + C_2 \sin(\omega t))&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;临界阻尼&lt;/strong&gt;：&lt;span class="math inline"&gt;x(t) = (C_1 + C_2 t) e^{-\alpha t}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;过阻尼&lt;/strong&gt;：&lt;span class="math inline"&gt;x(t) = C_1 e^{r_1 t} + C_2 e^{r_2 t}&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_21"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/E_(mathematical_constant)&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Linear_differential_equation&lt;/li&gt;
&lt;/ul&gt;</content><category term="Science"></category></entry><entry><title>集合、群、环、域、空间 等都是什么鬼？</title><link href="https://blog.debao.me/2024/10/what-the-heck-are-sets-groups-rings-fields-and-spaces/" rel="alternate"></link><published>2024-10-10T13:06:00+08:00</published><updated>2024-10-10T13:06:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-10-10:/2024/10/what-the-heck-are-sets-groups-rings-fields-and-spaces/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;查查资料，梳理一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果一个集合具有一种或几种代数运算，并满足若干运算法则（公理），则称为一个代数结构（Algebraic Structure）。群、环、域 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;查查资料，梳理一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果一个集合具有一种或几种代数运算，并满足若干运算法则（公理），则称为一个代数结构（Algebraic Structure）。群、环、域和向量空间都是代数结构。集合不是代数结构，但它是构建代数结构的基础。拓扑空间是几何结构而不是代数结构。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;集合 (Set)：由德国数学家 &lt;strong&gt;康托尔 (Georg Cantor)&lt;/strong&gt; 在19世纪末提出，集合论奠定了现代数学的基础。&lt;/li&gt;
&lt;li&gt;群 (Group)：由法国数学家 &lt;strong&gt;伽罗瓦 (Évariste Galois)&lt;/strong&gt; 在19世纪初引入，起源于代数方程对称性的研究。&lt;/li&gt;
&lt;li&gt;环 (Ring)：由19世纪的数论研究发展而来，&lt;strong&gt;戴德金 (Richard Dedekind)&lt;/strong&gt; 和 &lt;strong&gt;克罗内克 (Leopold Kronecker)&lt;/strong&gt; 等人推动了环论的发展。&lt;/li&gt;
&lt;li&gt;域 (Field)：&lt;strong&gt;伽罗瓦(Évariste Galois)&lt;/strong&gt; 和 &lt;strong&gt;阿贝尔 (Niels Henrik Abel)&lt;/strong&gt; 在19世纪通过解决代数方程的根问题扩展了域的理论。&lt;/li&gt;
&lt;li&gt;空间 (Space)：&lt;strong&gt;赫尔穆特·哈斯 (Hermann Grassmann)&lt;/strong&gt; 在19世纪提出向量空间，后由 &lt;strong&gt;希尔伯特 (David Hilbert)&lt;/strong&gt; 推广，应用于量子力学和泛函分析。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;空间名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;符号表示&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;所属空间种类&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;欧几里得空间&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ℝⁿ&lt;/td&gt;
&lt;td&gt;具有 n 个实数坐标的向量空间，通常用于描述 n 维几何空间。&lt;/td&gt;
&lt;td&gt;向量空间，度量空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;希尔伯特空间&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;𝐻 或 L²&lt;/td&gt;
&lt;td&gt;带有内积的完备向量空间。常见的希尔伯特空间包括平方可积函数空间 L² 空间。&lt;/td&gt;
&lt;td&gt;内积空间，巴拿赫空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵空间&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;𝑀ₘₓₙ&lt;/td&gt;
&lt;td&gt;所有 m × n 维矩阵的集合。&lt;/td&gt;
&lt;td&gt;向量空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;酉空间&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ℂⁿ 或 𝐻ₘ&lt;/td&gt;
&lt;td&gt;复数向量空间，配备复数内积，满足酉变换的条件。&lt;/td&gt;
&lt;td&gt;内积空间，希尔伯特空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;辛空间&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ℝ²ⁿ&lt;/td&gt;
&lt;td&gt;一个偶数维的实向量空间，配备辛形式。通常描述物理系统中的相空间。&lt;/td&gt;
&lt;td&gt;辛几何，向量空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;拓扑空间&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;(𝑋, τ)&lt;/td&gt;
&lt;td&gt;一个集合 𝑋 和一个拓扑 τ 的组合，定义了开集和闭集的结构。&lt;/td&gt;
&lt;td&gt;拓扑空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;度量空间&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;(𝑋, 𝑑)&lt;/td&gt;
&lt;td&gt;一个集合 𝑋 和一个度量 𝑑 的组合，定义了元素之间的距离。&lt;/td&gt;
&lt;td&gt;度量空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;巴拿赫空间&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;𝐵 或 Lᵖ&lt;/td&gt;
&lt;td&gt;一个带有范数的完备向量空间。Lᵖ 空间是常见的巴拿赫空间，表示可测函数的某种范数可积空间。&lt;/td&gt;
&lt;td&gt;范数空间，巴拿赫空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;范数空间&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;(𝑉, ∥·∥)&lt;/td&gt;
&lt;td&gt;配备了范数 ∥·∥ 的向量空间，用于测量向量的大小。&lt;/td&gt;
&lt;td&gt;范数空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;向量空间&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;𝑉&lt;/td&gt;
&lt;td&gt;具有向量加法和标量乘法运算的向量集合。&lt;/td&gt;
&lt;td&gt;向量空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;射影空间&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ℙⁿ&lt;/td&gt;
&lt;td&gt;n 维射影空间，表示所有非零向量的集合，按比例关系进行分组。&lt;/td&gt;
&lt;td&gt;射影空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;李群&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;𝐺&lt;/td&gt;
&lt;td&gt;既是群又是流形的结构，通常用于描述连续对称性。&lt;/td&gt;
&lt;td&gt;拓扑群，流形，李群&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;张量积空间&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;𝑉 ⊗ 𝑊&lt;/td&gt;
&lt;td&gt;两个向量空间 𝑉 和 𝑊 的张量积，表示两个空间的组合，用于多线性代数中。&lt;/td&gt;
&lt;td&gt;向量空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;外积空间&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Λᵏ 𝑉&lt;/td&gt;
&lt;td&gt;向量空间 𝑉 的 k 次外积，通常用于描述几何和物理中的体积和面积等概念。&lt;/td&gt;
&lt;td&gt;向量空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;函数空间&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;𝐶(𝑋) 或 Lᵖ(𝑋)&lt;/td&gt;
&lt;td&gt;定义在集合 𝑋 上的函数的空间。𝐶(𝑋) 表示连续函数空间，Lᵖ(𝑋) 表示 p 次可积函数空间。&lt;/td&gt;
&lt;td&gt;函数空间，巴拿赫空间&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="set"&gt;集合（Set)&lt;/h2&gt;
&lt;p&gt;集合（set）可以被定义为一组对象的集合，这些对象可以是任何东西，从数字、字母、点、线，到更抽象的概念。集合中的对象称为元素（element）或成员（member）。&lt;/p&gt;
&lt;h3 id="_1"&gt;表示法&lt;/h3&gt;
&lt;p&gt;集合有多种表示法&lt;/p&gt;
&lt;h4 id="roster-or-tabular-form"&gt;列举法（Roster or Tabular Form)&lt;/h4&gt;
&lt;p&gt;直接将集合的所有元素写在一对大括号 {} 里面，元素之间用逗号分隔。比如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;集合 A={1,2,3,4,5}&lt;/li&gt;
&lt;li&gt;集合 B={苹果,香蕉,桔子}&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="set-builder-noation"&gt;描述法（Set-builder Noation）&lt;/h4&gt;
&lt;p&gt;用一个条件来描述集合中的元素，而不是一一列出它们&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A={x∣x 是大于0且小于6的整数}&lt;/li&gt;
&lt;li&gt;B={x∣x 是奇数且 x&amp;lt;10}&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_2"&gt;符号表示法&lt;/h4&gt;
&lt;p&gt;常见的集合，有一些约定俗称的符号&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ℕ — 自然数集合 (Set of Natural Numbers)&lt;/li&gt;
&lt;li&gt;ℤ — 整数集合 (Set of Integers)&lt;/li&gt;
&lt;li&gt;ℚ — 有理数集合 (Set of Rational Numbers)&lt;/li&gt;
&lt;li&gt;ℝ — 实数集合 (Set of Real Numbers)&lt;/li&gt;
&lt;li&gt;ℂ — 复数集合 (Set of Complex Numbers)&lt;/li&gt;
&lt;li&gt;ℤ⁺ — 正整数集合 (Set of Positive Integers)&lt;/li&gt;
&lt;li&gt;ℕ₀ — 非负整数集合 (Set of Non-negative Integers)&lt;/li&gt;
&lt;li&gt;∅ — 空集 (Empty Set)&lt;/li&gt;
&lt;li&gt;𝒫(A) — 幂集 (Power Set)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;幂集（Power Set）是指某个集合的所有子集组成的集合。换句话说，给定一个集合 A，它的幂集 𝒫(A) 包含了A 的所有可能的子集，包括空集和集合本身。比如 A={1,2}，那么 𝒫(A)={∅,{1},{2},{1,2}} 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_3"&gt;集合性质&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;名称 (Name)&lt;/th&gt;
&lt;th&gt;定义 (Definition)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;∈&lt;/td&gt;
&lt;td&gt;属于 (Element of)&lt;/td&gt;
&lt;td&gt;如果元素 x 属于集合 A，则记作 x ∈ A。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;∉&lt;/td&gt;
&lt;td&gt;不属于 (Not an element of)&lt;/td&gt;
&lt;td&gt;如果元素 x 不属于集合 A，则记作 x ∉ A。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⊆&lt;/td&gt;
&lt;td&gt;子集 (Subset)&lt;/td&gt;
&lt;td&gt;如果集合 A 的所有元素都属于集合 B，则记作 A ⊆ B。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⊂&lt;/td&gt;
&lt;td&gt;真子集 (Proper Subset)&lt;/td&gt;
&lt;td&gt;如果集合 A 是集合 B 的子集且 A ≠ B，则记作 A ⊂ B。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⊇&lt;/td&gt;
&lt;td&gt;包含 (Superset)&lt;/td&gt;
&lt;td&gt;如果集合 A 包含集合 B 的所有元素，则记作 A ⊇ B。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⊃&lt;/td&gt;
&lt;td&gt;真包含 (Proper Superset)&lt;/td&gt;
&lt;td&gt;如果集合 A 真包含集合 B，且 A ≠ B，则记作 A ⊃ B。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;∪&lt;/td&gt;
&lt;td&gt;并集 (Union)&lt;/td&gt;
&lt;td&gt;集合 A 和 B 的并集是 A ∪ B，包含 A 和 B 的所有元素。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;∩&lt;/td&gt;
&lt;td&gt;交集 (Intersection)&lt;/td&gt;
&lt;td&gt;集合 A 和 B 的交集是 A ∩ B，包含 A 和 B 的共同元素。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;∖或-&lt;/td&gt;
&lt;td&gt;差集 (Difference)&lt;/td&gt;
&lt;td&gt;集合 A 和 B 的差集是 A ∖ B，包含属于 A 但不属于 B 的元素。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;𝐴ᶜ 或 𝐴̅&lt;/td&gt;
&lt;td&gt;补集 (Complement)&lt;/td&gt;
&lt;td&gt;集合 A 的补集是 Aᶜ 或 A̅，包含全集中不属于 A 的元素。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="cardinal-numbercardinality"&gt;基数（Cardinal Number）/势（Cardinality）&lt;/h3&gt;
&lt;p&gt;势（Cardinality）用来表示某个集合的大小或元素的个数。记作 |A| 或 card(A)。它不仅适用于有限集合，也适用于无限集合。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;初次看到这个 &lt;strong&gt;势&lt;/strong&gt; 这个术语时是蒙的，它受日文翻译影响。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="_4"&gt;有限集合&lt;/h4&gt;
&lt;p&gt;对于有限集合，基数就是集合中元素的数量。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若 A = {1, 2, 3}，则 |A| = 3 。&lt;/li&gt;
&lt;li&gt;若 B = {a, b, c, d, e} ，则 |B| = 5 。&lt;/li&gt;
&lt;li&gt;若 C = ∅ （空集），则 |C| = 0 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_5"&gt;无限集合&lt;/h4&gt;
&lt;p&gt;对于无限集合，基数可以分为两类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;可数无限集&lt;/strong&gt;（Countably Infinite Set）：这些集合的基数与自然数集  ℕ 的基数相同，记作 &lt;strong&gt;ℵ₀&lt;/strong&gt;（读作“阿列夫零”）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不可数无限集&lt;/strong&gt;（Uncountably Infinite Set）：这些集合的基数比自然数集大，例如实数集  ℝ 的基数，通常记作 &lt;strong&gt;𝔠&lt;/strong&gt; 或 &lt;strong&gt;2^ℵ₀&lt;/strong&gt;，表示连续统的基数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="groupringfield"&gt;群（Group)、环（Ring）、域（Field）&lt;/h2&gt;
&lt;p&gt;先列个表格：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;结构&lt;/th&gt;
&lt;th&gt;运算数量 Num&lt;/th&gt;
&lt;th&gt;运算符 Operator&lt;/th&gt;
&lt;th&gt;元素 Element&lt;/th&gt;
&lt;th&gt;主要性质 Structure&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;群&lt;/strong&gt; Group&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;o1 (加法/乘法)&lt;/td&gt;
&lt;td&gt;单位元, 有逆&lt;/td&gt;
&lt;td&gt;封闭性, 结合律&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;环&lt;/strong&gt; Ring&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;o1 (加法), o2 (乘法)&lt;/td&gt;
&lt;td&gt;加法单位元, 加法有逆&lt;/td&gt;
&lt;td&gt;加法为阿贝尔群,&lt;code&gt;乘法封闭, 结合律,&lt;/code&gt;分配律&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;域&lt;/strong&gt; Field&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;o1 (加法), o2 (乘法)&lt;/td&gt;
&lt;td&gt;加法单位元, 加法有逆，&lt;code&gt;乘法单位元, 乘法有逆 | 加法为阿贝尔群,&lt;/code&gt;乘法为阿贝尔群 (0 除外), ``分配律&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;再对照一下：在数系范围内&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最小的数域是有理数域&lt;/li&gt;
&lt;li&gt;最大的数域是复数域&lt;/li&gt;
&lt;li&gt;自然数都构不成一个群，只能是半群、幺半群。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数系&lt;/th&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;所属代数结构&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;自然数&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ℕ&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;半群&lt;/strong&gt;（Semigroup），&lt;strong&gt;幺半群&lt;/strong&gt;（Monoid）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;整数&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ℤ&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;群&lt;/strong&gt;（Group），&lt;strong&gt;环&lt;/strong&gt;（Ring）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;有理数&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ℚ&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;群&lt;/strong&gt;（Group），&lt;strong&gt;环&lt;/strong&gt;（Ring），&lt;strong&gt;域&lt;/strong&gt;（Field）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;实数&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ℝ&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;群&lt;/strong&gt;（Group），&lt;strong&gt;环&lt;/strong&gt;（Ring），&lt;strong&gt;域&lt;/strong&gt;（Field）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;复数&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ℂ&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;群&lt;/strong&gt;（Group），&lt;strong&gt;环&lt;/strong&gt;（Ring），&lt;strong&gt;域&lt;/strong&gt;（Field）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="group"&gt;群（Group）&lt;/h3&gt;
&lt;p&gt;&lt;img alt="group" src="https://blog.debao.me/images/science/math_basic_group.png"&gt;&lt;/p&gt;
&lt;h4 id="_6"&gt;定义&lt;/h4&gt;
&lt;p&gt;一个&lt;strong&gt;群&lt;/strong&gt;（&lt;strong&gt;Group&lt;/strong&gt;）  是由一个&lt;strong&gt;集合&lt;/strong&gt;（&lt;strong&gt;Set&lt;/strong&gt;） 和一个&lt;strong&gt;二元运算&lt;/strong&gt;（&lt;strong&gt;Binary Operation&lt;/strong&gt;）组成的代数结构，它满足以下四个条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;封闭性&lt;/strong&gt;（&lt;strong&gt;Closure&lt;/strong&gt;）：对于任意 a, b ∈ G，有 a ∘ b ∈ G。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;结合律&lt;/strong&gt;（&lt;strong&gt;Associativity&lt;/strong&gt;）：对于任意 a, b, c ∈ G，有 (a ∘ b) ∘ c = a ∘ (b ∘ c)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;单位元&lt;/strong&gt;（&lt;strong&gt;Identity Element&lt;/strong&gt;）：存在一个元素 e ∈ G，使得对任意 a ∈ G，有 e ∘ a = a ∘ e = a。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;逆元&lt;/strong&gt;（&lt;strong&gt;Inverse Element&lt;/strong&gt;）：对于任意 a ∈ G，存在一个元素 b ∈ G，使得 a ∘ b = b ∘ a = e。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果群的运算还满足&lt;strong&gt;交换律&lt;/strong&gt;（&lt;strong&gt;Commutativity&lt;/strong&gt;，即 a ∘ b = b ∘ a），则称为&lt;strong&gt;阿贝尔群&lt;/strong&gt;（&lt;strong&gt;Abelian Group&lt;/strong&gt;）。&lt;/p&gt;
&lt;h4 id="_7"&gt;群、半群、幺半群&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;半群（Semigroup）：集合上的二元运算满足结合律，没有单位元或逆元的要求。&lt;/li&gt;
&lt;li&gt;幺半群（Monoid）：是一个包含单位元的半群，但不要求每个元素有逆元。&lt;/li&gt;
&lt;li&gt;群（Group）：不仅有单位元，而且每个元素都有逆元。如果二元运算满足交换律，则称为阿贝尔群（Abelian Group）。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;性质&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;半群（Semigroup）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;幺半群（Monoid）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;群（Group）&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;集合&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;一个集合 S&lt;/td&gt;
&lt;td&gt;一个集合 M&lt;/td&gt;
&lt;td&gt;一个集合 G&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;二元运算&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;定义在 S 上的二元运算&lt;/td&gt;
&lt;td&gt;定义在 M 上的二元运算&lt;/td&gt;
&lt;td&gt;定义在 G 上的二元运算&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;结合律&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;满足结合律&lt;/td&gt;
&lt;td&gt;满足结合律&lt;/td&gt;
&lt;td&gt;满足结合律&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;单位元&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;不要求存在单位元&lt;/td&gt;
&lt;td&gt;存在单位元&lt;/td&gt;
&lt;td&gt;存在单位元&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;逆元&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;不要求存在逆元&lt;/td&gt;
&lt;td&gt;不要求存在逆元&lt;/td&gt;
&lt;td&gt;每个元素都有逆元&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;交换律&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;不要求&lt;/td&gt;
&lt;td&gt;不要求&lt;/td&gt;
&lt;td&gt;如果满足交换律，则为阿贝尔群&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id="_8"&gt;李群&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;得名于挪威数学家索菲斯·李（Sophus Lie，1842-1899）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;李群（Lie Group）是一个结合了群的代数结构和光滑流形的几何结构的数学对象，李群特别擅长描述连续对称性。&lt;/p&gt;
&lt;p&gt;一些李群的例子？&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;群类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;符号&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;特点&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;应用&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;一般线性群 (General Linear Group)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;GL(n, ℝ) 或 GL(n, ℂ)&lt;/td&gt;
&lt;td&gt;所有&lt;span class="math inline"&gt; n \times n &lt;/span&gt; 的可逆矩阵组成的群，运算是矩阵乘法。&lt;/td&gt;
&lt;td&gt;非交换李群，描述一般线性变换。&lt;/td&gt;
&lt;td&gt;线性代数、物理中的变换理论、控制论。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;特殊线性群 (Special Linear Group)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;SL(n, ℝ) 或 SL(n, ℂ)&lt;/td&gt;
&lt;td&gt;所有行列式为 1 的&lt;span class="math inline"&gt; n \times n &lt;/span&gt; 可逆矩阵组成的群。&lt;/td&gt;
&lt;td&gt;非交换李群，描述体积保持的线性变换。&lt;/td&gt;
&lt;td&gt;物理学（守恒定律）、几何学、量子场论。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;正交群 (Orthogonal Group)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;O(n)&lt;/td&gt;
&lt;td&gt;所有保持欧几里得距离不变的&lt;span class="math inline"&gt; n \times n &lt;/span&gt; 矩阵（正交矩阵）组成的群。&lt;/td&gt;
&lt;td&gt;非交换李群，包含旋转和反射。&lt;/td&gt;
&lt;td&gt;物理学（对称性）、计算机图形学、信号处理。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;特殊正交群 (Special Orthogonal Group)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;SO(n)&lt;/td&gt;
&lt;td&gt;所有保持距离且行列式为 1 的&lt;span class="math inline"&gt; n \times n &lt;/span&gt; 正交矩阵（纯旋转）。&lt;/td&gt;
&lt;td&gt;非交换李群，描述纯旋转。&lt;/td&gt;
&lt;td&gt;物理学（旋转对称性）、计算机图形学、航天航空。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;酉群 (Unitary Group)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;U(n)&lt;/td&gt;
&lt;td&gt;所有保持复数内积的&lt;span class="math inline"&gt; n \times n &lt;/span&gt; 酉矩阵组成的群。&lt;/td&gt;
&lt;td&gt;非交换李群，描述复数空间中的对称性。&lt;/td&gt;
&lt;td&gt;量子力学、量子信息、随机矩阵理论。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;特殊酉群 (Special Unitary Group)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;SU(n)&lt;/td&gt;
&lt;td&gt;所有行列式为 1 的&lt;span class="math inline"&gt; n \times n &lt;/span&gt; 酉矩阵组成的群。&lt;/td&gt;
&lt;td&gt;非交换李群，描述复数空间中的体积保持变换。&lt;/td&gt;
&lt;td&gt;量子力学（自旋对称性）、粒子物理、规范场论。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;洛伦兹群 (Lorentz Group)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;O(1, 3)&lt;/td&gt;
&lt;td&gt;保持狭义相对论时空距离不变的变换群。&lt;/td&gt;
&lt;td&gt;非交换李群，描述空间和时间的对称性。&lt;/td&gt;
&lt;td&gt;狭义相对论、量子场论、广义相对论。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;庞加莱群 (Poincaré Group)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;—&lt;/td&gt;
&lt;td&gt;洛伦兹群和平移群的半直积，描述四维时空中的对称变换。&lt;/td&gt;
&lt;td&gt;非交换李群，包含空间转动、时间平移等。&lt;/td&gt;
&lt;td&gt;相对论物理学、量子场论、粒子物理。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;圆周群 (Circle Group)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;U(1)&lt;/td&gt;
&lt;td&gt;所有单位模的复数组成的群，运算是复数乘法。&lt;/td&gt;
&lt;td&gt;交换李群，描述一维复数向量的相位旋转。&lt;/td&gt;
&lt;td&gt;电磁学、量子力学（U(1) 规范对称性）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;三维特殊酉群 (Special Unitary Group in 3D)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;SU(3)&lt;/td&gt;
&lt;td&gt;所有行列式为 1 的 3 × 3 酉矩阵组成的群。&lt;/td&gt;
&lt;td&gt;非交换李群，描述三维复数空间中的对称性。&lt;/td&gt;
&lt;td&gt;粒子物理学（强相互作用，量子色动力学）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;仿射群 (Affine Group)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Aff(n)&lt;/td&gt;
&lt;td&gt;由&lt;span class="math inline"&gt; n &lt;/span&gt;-维空间的线性变换和平移组成的群。&lt;/td&gt;
&lt;td&gt;非交换李群，描述线性变换和平移。&lt;/td&gt;
&lt;td&gt;计算机视觉、几何学、机器人学。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如何直观理解？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;旋转：假设你在二维平面上旋转一个物体。所有可能的旋转可以形成一个连续的对称性群，即李群。你可以通过一个连续的角度来描述旋转，比如从0度开始逐渐增加到360度，然后再回到原点。这种旋转形成了一个李群，通常记作 &lt;strong&gt;SO(2)&lt;/strong&gt;，表示二维空间中的旋转群。&lt;/li&gt;
&lt;li&gt;平移：类似地，在一条直线上任意移动一个物体，所有可能的平移也组成了一个李群。你可以通过平移的距离来描述对称性，这种李群通常记作 &lt;strong&gt;R&lt;/strong&gt;，即实数在加法下形成的群。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_9"&gt;非李群例子？&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;先找一些内容放上，以后再说&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;群类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;符号&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;特点&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;应用&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;对称群 (Symmetric Group)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Sₙ&lt;/td&gt;
&lt;td&gt;n 个元素的全排列构成的群，运算是排列的复合。&lt;/td&gt;
&lt;td&gt;非交换群（当 n ≥ 3 时）。&lt;/td&gt;
&lt;td&gt;化学（分子对称性）、物理学、组合数学。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;二面体群 (Dihedral Group)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Dₙ&lt;/td&gt;
&lt;td&gt;描述正 n 边形的旋转和反射的对称群。&lt;/td&gt;
&lt;td&gt;非交换群，具有 2n 个元素。&lt;/td&gt;
&lt;td&gt;图像处理、晶体学、机器人学。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;阿贝尔群 (Abelian Group)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ℤ, +&lt;/td&gt;
&lt;td&gt;满足交换律的群，如整数加法群。&lt;/td&gt;
&lt;td&gt;交换群，但通常没有乘法结构。&lt;/td&gt;
&lt;td&gt;密码学（ECC）、网络编码、物理学（守恒定律）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;有限循环群 (Finite Cyclic Group)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ℤₙ&lt;/td&gt;
&lt;td&gt;由一个生成元生成的有限阶交换群。&lt;/td&gt;
&lt;td&gt;交换群，通常没有加法结构。&lt;/td&gt;
&lt;td&gt;密码学（Diffie-Hellman）、编码理论、图像处理。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;四元数群 (Quaternion Group)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Q₈&lt;/td&gt;
&lt;td&gt;包含 8 个元素的非交换群，元素有 {1, -1, i, -i, j, -j, k, -k} 。&lt;/td&gt;
&lt;td&gt;非交换有限群，没有加法结构。&lt;/td&gt;
&lt;td&gt;计算机图形学（旋转）、物理学（自旋）、控制理论。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="ring"&gt;环（Ring）&lt;/h3&gt;
&lt;p&gt;环（Ring）是一个代数结构，其中加法部分形成一个阿贝尔群，乘法部分满足封闭性、结合律和分配律。&lt;/p&gt;
&lt;p&gt;&lt;img alt="ring and field" src="https://blog.debao.me/images/science/math_basic_ring_field.png"&gt;&lt;/p&gt;
&lt;h4 id="_10"&gt;定义&lt;/h4&gt;
&lt;p&gt;一个&lt;strong&gt;环&lt;/strong&gt;（&lt;strong&gt;Ring&lt;/strong&gt;）是由一个&lt;strong&gt;集合&lt;/strong&gt;（&lt;strong&gt;Set&lt;/strong&gt;） 和两个&lt;strong&gt;二元运算&lt;/strong&gt;（&lt;strong&gt;Binary Operations&lt;/strong&gt;）——加法和乘法组成的代数结构，它满足以下条件：&lt;/p&gt;
&lt;p&gt;加法部分：形成阿贝尔群（&lt;strong&gt;Additive Group&lt;/strong&gt;）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;加法封闭性&lt;/strong&gt;（&lt;strong&gt;Closure under Addition&lt;/strong&gt;）：对于任意 a, b ∈ R，有 a + b ∈ R。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加法结合律&lt;/strong&gt;（&lt;strong&gt;Associativity of Addition&lt;/strong&gt;）：对于任意 a, b, c ∈ R，有 (a + b) + c = a + (b + c)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加法交换律&lt;/strong&gt;（&lt;strong&gt;Commutativity of Addition&lt;/strong&gt;）：对于任意 a, b ∈ R，有 a + b = b + a。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加法单位元&lt;/strong&gt;（&lt;strong&gt;Additive Identity&lt;/strong&gt;）：存在一个元素 0 ∈ R，使得对任意 a ∈ R，有 a + 0 = 0 + a = a。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加法逆元&lt;/strong&gt;（&lt;strong&gt;Additive Inverse&lt;/strong&gt;）：对于任意 a ∈ R，存在一个元素 -a ∈ R，使得 a + (-a) = (-a) + a = 0。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;乘法部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;乘法封闭性&lt;/strong&gt;（&lt;strong&gt;Closure under Multiplication&lt;/strong&gt;）：对于任意 a, b ∈ R，有 a ∘ b ∈ R。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;乘法结合律&lt;/strong&gt;（&lt;strong&gt;Associativity of Multiplication&lt;/strong&gt;）：对于任意 a, b, c ∈ R，有 (a ∘ b) ∘ c = a ∘ (b ∘ c)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;加法和乘法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;分配律&lt;/strong&gt;（&lt;strong&gt;Distributivity&lt;/strong&gt;）：对于任意 a, b, c ∈ R，有 a ∘ (b + c) = (a ∘ b) + (a ∘ c) 和 (a + b) ∘ c = (a ∘ c) + (b ∘ c)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果乘法也满足&lt;strong&gt;交换律&lt;/strong&gt;（&lt;strong&gt;Commutativity of Multiplication&lt;/strong&gt;），即对于所有 a, b ∈ R 有 a ∘ b = b ∘ a ，则称为&lt;strong&gt;交换环&lt;/strong&gt;（&lt;strong&gt;Commutative Ring&lt;/strong&gt;）。&lt;/li&gt;
&lt;li&gt;如果 R 中存在一个乘法单位元 1 使得对所有 a ∈ R 有 1 ∘ a = a ∘ 1 = a， 则称 R 为&lt;strong&gt;含幺环&lt;/strong&gt;（&lt;strong&gt;Ring with Unity&lt;/strong&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_11"&gt;环的例子？&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;环类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;符号&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;特点&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;应用&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;整数环 (Integer Ring)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ℤ&lt;/td&gt;
&lt;td&gt;包含所有整数，运算是通常的加法和乘法。&lt;/td&gt;
&lt;td&gt;交换环，整除理论完善。&lt;/td&gt;
&lt;td&gt;数论、同余、模运算、质数分解。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;多项式环 (Polynomial Ring)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;R[x]&lt;/td&gt;
&lt;td&gt;由系数来自环 R 的多项式构成的环。&lt;/td&gt;
&lt;td&gt;交换环，如果 R 是整环，则 R[x] 是唯一分解整环。&lt;/td&gt;
&lt;td&gt;代数几何、计算机代数、控制理论。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;矩阵环 (Matrix Ring)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Mₙ(R)&lt;/td&gt;
&lt;td&gt;包含所有 n × n 矩阵的集合，矩阵的元素来自环 R。&lt;/td&gt;
&lt;td&gt;非交换环，矩阵乘法不满足交换律。&lt;/td&gt;
&lt;td&gt;线性代数、量子力学、控制理论、图像处理。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;高斯整数环 (Gaussian Integer Ring)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ℤ[i]&lt;/td&gt;
&lt;td&gt;由形如 a + bi 的复数构成，其中 a 和 b 是整数，i 是虚数单位。&lt;/td&gt;
&lt;td&gt;交换环，但不是域，没有乘法逆元。&lt;/td&gt;
&lt;td&gt;数论，特别是二次形式、素数分解。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;模 n 环 (Ring of Integers Modulo n)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ℤ/nℤ 或 ℤₙ&lt;/td&gt;
&lt;td&gt;包含整数 0, 1, 2, ..., n-1，运算按模 n 进行。&lt;/td&gt;
&lt;td&gt;有限环，n 为素数时是域，n 非素数时是环。&lt;/td&gt;
&lt;td&gt;密码学、编码理论、数论、计算机科学。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;欧几里得环 (Euclidean Ring)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;多种符号&lt;/td&gt;
&lt;td&gt;可以使用欧几里得算法计算最大公因数的环，例如 ℤ、R[x]。&lt;/td&gt;
&lt;td&gt;交换环，可以定义“度量”或“大小”的概念。&lt;/td&gt;
&lt;td&gt;数论、多项式环、代数几何。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;唯一分解整环 (UFD, Unique Factorization Domain)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;多种符号&lt;/td&gt;
&lt;td&gt;元素可以唯一地分解为不可约元素的乘积，如 ℤ 和 R[x]。&lt;/td&gt;
&lt;td&gt;交换环，类似素数分解的唯一分解性质。&lt;/td&gt;
&lt;td&gt;代数几何、数论、代数拓扑。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;余数环 (Quotient Ring)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;R/I&lt;/td&gt;
&lt;td&gt;通过在一个环 R 上对某个理想 I 进行商构造出的环。&lt;/td&gt;
&lt;td&gt;交换或非交换，取决于母环 R 的性质。&lt;/td&gt;
&lt;td&gt;理想结构、代数几何、模论。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;布尔环 (Boolean Ring)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;满足 a² = a 的环，所有元素的平方等于自身。&lt;/td&gt;
&lt;td&gt;交换环，常用于逻辑和组合代数。&lt;/td&gt;
&lt;td&gt;逻辑学、组合数学、数字电路设计。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;幂零环 (Nilpotent Ring)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;一个环中，存在某个正整数 k 使得所有元素的 k 次幂为 0。&lt;/td&gt;
&lt;td&gt;非交换环，通常用于研究代数的奇异性质。&lt;/td&gt;
&lt;td&gt;奇异代数结构、代数几何中的奇点。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id="divisibility-theory-in-rings"&gt;环的整除理论 (Divisibility Theory in Rings)&lt;/h4&gt;
&lt;p&gt;虽然一般的环没有除法运算，但在某些环中，我们可以定义和研究类似于整数中的整除性质。这些环允许我们讨论因数、最大公因数、素元素等概念。常见的环中具有整除理论的例子包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;整数环 ℤ (Integer Ring)&lt;/strong&gt;：这是最常见的环，包含所有的整数。在这个环中，我们有完整的整除理论，例如素数、最大公因数、最小公倍数等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;欧几里得环 (Euclidean Ring)&lt;/strong&gt;：如果一个环中可以定义一种“度量”或“大小”的概念，使得能够像在整数环中那样使用欧几里得算法来计算最大公因数，那么这个环就称为欧几里得环。例如，多项式环 𝑅[𝑥] (Polynomial Ring over Real Numbers) 和高斯整数环 ℤ[𝑖] (Gaussian Integer Ring) 都是欧几里得环。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;唯一分解整环（UFD, Unique Factorization Domain）&lt;/strong&gt;：在这些环中，元素可以唯一地分解为不可约元素的乘积，类似于整数的素数分解。比如，整数环 ℤ 和多项式环 𝑘[𝑥] (Polynomial Ring over a Field 𝑘)（其中 𝑘 是一个域）都是唯一分解整环。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="field"&gt;域（Field）&lt;/h3&gt;
&lt;p&gt;域（Field）是一个更严格的结构，不仅加法部分形成阿贝尔群，乘法部分（不包括 0）也形成阿贝尔群，并且加法和乘法之间有分配律。&lt;/p&gt;
&lt;h4 id="_12"&gt;定义&lt;/h4&gt;
&lt;p&gt;一个&lt;strong&gt;域&lt;/strong&gt;（&lt;strong&gt;Field&lt;/strong&gt;）是一个&lt;strong&gt;集合&lt;/strong&gt;（&lt;strong&gt;Set&lt;/strong&gt;）和两个&lt;strong&gt;二元运算&lt;/strong&gt;（&lt;strong&gt;Binary Operations&lt;/strong&gt;）——加法和乘法，它满足以下条件：&lt;/p&gt;
&lt;p&gt;加法部分：形成阿贝尔群（&lt;strong&gt;Additive Group&lt;/strong&gt;）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;加法封闭性&lt;/strong&gt;（&lt;strong&gt;Closure under Addition&lt;/strong&gt;）：对于任意 a, b ∈ F，有 a + b ∈ F。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加法结合律&lt;/strong&gt;（&lt;strong&gt;Associativity of Addition&lt;/strong&gt;）：对于任意 a, b, c ∈ F，有 (a + b) + c = a + (b + c)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加法交换律&lt;/strong&gt;（&lt;strong&gt;Commutativity of Addition&lt;/strong&gt;）：对于任意 a, b ∈ F，有 a + b = b + a。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加法单位元&lt;/strong&gt;（&lt;strong&gt;Additive Identity&lt;/strong&gt;）：存在一个元素 0 ∈ F，使得对任意 a ∈ F，有 a + 0 = 0 + a = a。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加法逆元&lt;/strong&gt;（&lt;strong&gt;Additive Inverse&lt;/strong&gt;）：对于任意 a ∈ F，存在一个元素 -a ∈ F，使得 a + (-a) = (-a) + a = 0。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;乘法部分：形成阿贝尔群（不含 0 元素）（&lt;strong&gt;Multiplicative Group&lt;/strong&gt;）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;乘法封闭性&lt;/strong&gt;（&lt;strong&gt;Closure under Multiplication&lt;/strong&gt;）：对于任意 a, b ∈ F，有 a ∘ b ∈ F。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;乘法结合律&lt;/strong&gt;（&lt;strong&gt;Associativity of Multiplication&lt;/strong&gt;）：对于任意 a, b, c ∈ F，有 (a ∘ b) ∘ c = a ∘ (b ∘ c)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;乘法交换律&lt;/strong&gt;（&lt;strong&gt;Commutativity of Multiplication&lt;/strong&gt;）：对于任意 a, b ∈ F，有 a ∘ b = b ∘ a。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;乘法单位元&lt;/strong&gt;（&lt;strong&gt;Multiplicative Identity&lt;/strong&gt;）：存在一个元素 1 ∈ F，使得对任意 a ∈ F，有 a ∘ 1 = 1 ∘ a = a。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;乘法逆元&lt;/strong&gt;（&lt;strong&gt;Multiplicative Inverse&lt;/strong&gt;）：对于任意 a ≠ 0 ∈ F，存在一个元素 a⁻¹ ∈ F，使得 a ∘ a⁻¹ = a⁻¹ ∘ a = 1。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;加法和乘法：分配律（&lt;strong&gt;Distributivity&lt;/strong&gt;）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于任意 a, b, c ∈ F，有 a ∘ (b + c) = (a ∘ b) + (a ∘ c) 和 (a + b) ∘ c = (a ∘ c) + (b ∘ c)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_13"&gt;分类&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;先列上，混个脸熟&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;无限域 (Infinite Fields)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有理数域 (Rational number field, ℚ)：包含所有形如 a/b 的数，其中 a, b ∈ ℤ，且 b ≠ 0。&lt;/li&gt;
&lt;li&gt;实数域 (Real number field, ℝ)：包含所有实数，包括有理数和无理数。&lt;/li&gt;
&lt;li&gt;复数域 (Complex number field, ℂ)：包含所有形如 a + bi 的数，其中 a, b ∈ ℝ，且 i² = -1。&lt;/li&gt;
&lt;li&gt;有理函数域 (Field of rational functions, ℝ(x) 或 ℂ(x))：由域上的有理函数（两个多项式的比）构成。&lt;/li&gt;
&lt;li&gt;p进数域 (p-adic number field, ℚₚ)：基于质数 p 的进制展开的有理数扩展。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;有限域 (Finite Fields)&lt;/strong&gt;，也称为伽罗瓦域（Galois Field），是指包含有限个元素的域。每个有限域的元素个数（阶，order）为某个质数
p 的幂。注意所有的有限域都具有特征p，反之不成立。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;素域 (Prime field, 𝔽ₚ 或 ℤ/pℤ)：包含 p 个元素的有限域，其中 p 为质数。&lt;/li&gt;
&lt;li&gt;扩展有限域 (Extended finite field, 𝔽ₚⁿ)：包含 pⁿ 个元素的有限域，p 为质数，n 为正整数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;特征为 0 的域 (Fields of Characteristic 0)&lt;/strong&gt;，是指一个域中的加法运算没有任何有限次的重复加法能够得到 0，也就是说，域中的单位元 1 不能通过有限次的加法得到 0。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有理数域 (Rational number field, ℚ)：特征为 0，无法通过有限次加法得到 1。&lt;/li&gt;
&lt;li&gt;实数域 (Real number field, ℝ)：完备有序域，特征为 0。&lt;/li&gt;
&lt;li&gt;复数域 (Complex number field, ℂ)：代数闭域，特征为 0。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;特征为 p 的域 (Fields of Characteristic p)&lt;/strong&gt;，是指加法运算下，最小的正整数p 使得任意元素加自己p 次等于 0。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有限域 (Finite field, 𝔽ₚ)：包含 p 个元素，特征为 p。&lt;/li&gt;
&lt;li&gt;扩展有限域 (Extended finite field, 𝔽ₚⁿ)：包含 pⁿ 个元素，特征为 p。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;代数闭域 (Algebraically Closed Fields)&lt;/strong&gt;，每个非常数多项式都可以在这个域中分解为一组一次多项式的乘积。这意味着多项式的所有根都在这个域中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;复数域 (Complex number field, ℂ)：每个非零多项式在该域上都有解。&lt;/li&gt;
&lt;li&gt;有限域的代数闭包 (Algebraic closure of finite field, 𝔽̅ₚ)：包含所有有限域 𝔽ₚ 的代数扩展。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;完备域 (Complete Fields)&lt;/strong&gt;：是指在某种度量或拓扑结构下，所有的柯西序列（Cauchy sequences）都收敛到该域中的某个元素的域。有理数域不完备。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实数域 (Real number field, ℝ)：完备有序域，所有柯西序列在该域中收敛。&lt;/li&gt;
&lt;li&gt;p进数域 (p-adic number field, ℚₚ)：在 p-进数度量下完备。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;函数域 (Function Fields)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有理函数域 (Field of rational functions, ℝ(x) 或 ℂ(x))：由域上的 &lt;strong&gt;有理函数（两个多项式的比）&lt;/strong&gt; 构成。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;超复数域 (Hypercomplex Fields)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;四元数域 (Quaternion field, ℍ)：由复数扩展而成，包含非交换乘法的代数结构。&lt;/li&gt;
&lt;li&gt;克利福德代数 (Clifford algebra)：实数或复数域的扩展，包含更高维的乘法结构。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="space"&gt;空间（Space）&lt;/h2&gt;
&lt;p&gt;空间 (space) = 集合（set） + 结构（structure）&lt;/p&gt;
&lt;p&gt;&lt;img alt="space" src="https://blog.debao.me/images/science/math_basic_space.png"&gt;&lt;/p&gt;
&lt;h3 id="_14"&gt;什么是空间？&lt;/h3&gt;
&lt;p&gt;一个空间是由一个集合以及定义在这个集合上的某种结构所组成的。根据不同的数学领域和研究的对象，结构的类型可以不同，从而产生不同类型的空间。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;集合：空间的基础是一个集合。集合中的元素可以是点、向量、函数、序列、矩阵等。集合本身只是元素的一个无序集合，它没有任何额外的结构或性质。&lt;/li&gt;
&lt;li&gt;结构：为了给集合引入更多的性质和规则，我们在集合上定义某种结构。不同的结构使得集合具备不同的几何或代数意义。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结构的种类很多，常见的包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拓扑结构(Topological Structure)：定义开集与闭集，研究点的邻域、收敛与连续等概念。&lt;/li&gt;
&lt;li&gt;度量结构(Metric Structure)：定义两个点之间的距离，研究距离相关的性质，如长度、极限、连续等。&lt;/li&gt;
&lt;li&gt;内积结构(Inner Product Structure)：定义向量之间的内积，研究角度、正交性、投影等问题。&lt;/li&gt;
&lt;li&gt;线性结构(Linear Structure)：定义向量的加法与标量乘法，研究线性组合、线性变换等。&lt;/li&gt;
&lt;li&gt;范数结构(Norm Structure)：定义向量的长度，研究向量的大小和收敛性等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线性结构/向量结构 是一个代数结构，研究向量的线性组合、加法和标量乘法。&lt;/li&gt;
&lt;li&gt;拓扑结构 是一个几何结构，研究集合的拓扑性质，如连续性和收敛性。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;拓扑学是Topology的音译，如果意译的话，是不是会叫 连续形态学，或空间结构学？？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_15"&gt;距离，范数，内积&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;距离：用来度量两个点之间的“远近”。&lt;/li&gt;
&lt;li&gt;范数：用来衡量向量的长度或大小。&lt;/li&gt;
&lt;li&gt;内积：用来衡量两个向量之间的夹角或相似性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它们之间的关系是：&lt;strong&gt;内积&lt;/strong&gt;可以导出&lt;strong&gt;范数&lt;/strong&gt;，&lt;strong&gt;范数&lt;/strong&gt;可以导出&lt;strong&gt;距离&lt;/strong&gt;，而&lt;strong&gt;内积&lt;/strong&gt;也可以直接定义&lt;strong&gt;距离&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;列个表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;概念&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;距离 (Distance)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;范数 (Norm)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;内积 (Inner Product)&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;两个点之间的度量，用来衡量它们之间的“远近”。通常定义在&lt;strong&gt;度量空间 (Metric Space)&lt;/strong&gt; 中。&lt;/td&gt;
&lt;td&gt;向量的长度或大小的度量，定义在&lt;strong&gt;赋范向量空间 (Normed Vector Space)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;两个向量之间的乘积，用来衡量它们的相似性或夹角。定义在&lt;strong&gt;内积空间 (Inner Product Space)&lt;/strong&gt; 中。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;主要性质&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.&lt;strong&gt;非负性&lt;/strong&gt;: 𝑑(𝑥, 𝑦) ≥ 0 &lt;br/&gt;2. &lt;strong&gt;对称性&lt;/strong&gt;: 𝑑(𝑥, 𝑦) = 𝑑(𝑦, 𝑥) &lt;br/&gt;3. &lt;strong&gt;同一性&lt;/strong&gt;: 𝑑(𝑥, 𝑦) = 0 当且仅当 𝑥 = 𝑦 &lt;br/&gt;4. &lt;strong&gt;三角不等式&lt;/strong&gt;: 𝑑(𝑥, 𝑧) ≤ 𝑑(𝑥, 𝑦) + 𝑑(𝑦, 𝑧)&lt;/td&gt;
&lt;td&gt;1.&lt;strong&gt;非负性&lt;/strong&gt;: ∥𝑥∥ ≥ 0 &lt;br/&gt;2. &lt;strong&gt;齐次性&lt;/strong&gt;: ∥𝛼𝑥∥ = |𝛼| ∥𝑥∥ &lt;br/&gt;3. &lt;strong&gt;三角不等式&lt;/strong&gt;: ∥𝑥 + 𝑦∥ ≤ ∥𝑥∥ + ∥𝑦∥ &lt;br/&gt;4. &lt;strong&gt;同一性&lt;/strong&gt;: ∥𝑥∥ = 0 当且仅当 𝑥 = 0&lt;/td&gt;
&lt;td&gt;1.&lt;strong&gt;共轭对称性&lt;/strong&gt;: ⟨𝑥, 𝑦⟩ = ⟨𝑦, 𝑥⟩̅ &lt;br/&gt;2. &lt;strong&gt;线性性&lt;/strong&gt;: 对第一个变量是线性的 &lt;br/&gt;3. &lt;strong&gt;正定性&lt;/strong&gt;: ⟨𝑥, 𝑥⟩ ≥ 0，且 ⟨𝑥, 𝑥⟩ = 0 当且仅当 𝑥 = 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;作用&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;衡量点与点之间的距离，定义了空间中的几何结构。&lt;/td&gt;
&lt;td&gt;衡量向量的长度或大小，定义了向量空间中的几何结构。&lt;/td&gt;
&lt;td&gt;衡量两个向量之间的夹角或相似性，定义了向量空间中的角度和正交性。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;与其他概念的关系&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1. 距离可以从范数中导出：𝑑(𝑥, 𝑦) = ∥𝑥 − 𝑦∥（如果空间带有范数）。 &lt;br/&gt;2. 距离可以通过内积诱导：𝑑(𝑥, 𝑦) = √⟨𝑥 − 𝑦, 𝑥 − 𝑦⟩（如果空间带有内积）。&lt;/td&gt;
&lt;td&gt;1. 范数可以从内积中导出：∥𝑥∥ = √⟨𝑥, 𝑥⟩（如果空间带有内积）。 &lt;br/&gt;2. 范数可以诱导距离：𝑑(𝑥, 𝑦) = ∥𝑥 − 𝑦∥。&lt;/td&gt;
&lt;td&gt;1. 内积可以诱导范数：∥𝑥∥ = √⟨𝑥, 𝑥⟩ &lt;br/&gt;2. 内积可以诱导距离：𝑑(𝑥, 𝑦) = √⟨𝑥 − 𝑦, 𝑥 − 𝑦⟩。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;欧几里得空间中的距离：𝑑(𝑥, 𝑦) = √((𝑥₁ − 𝑦₁)² + (𝑥₂ − 𝑦₂)² + … + (𝑥ₙ − 𝑦ₙ)²)。&lt;/td&gt;
&lt;td&gt;欧几里得空间中的范数：∥𝑥∥ = √(𝑥₁² + 𝑥₂² + … + 𝑥ₙ²)。&lt;/td&gt;
&lt;td&gt;欧几里得空间中的内积：⟨𝑥, 𝑦⟩ = 𝑥₁𝑦₁ + 𝑥₂𝑦₂ + … + 𝑥ₙ𝑦ₙ。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_16"&gt;一些空间？&lt;/h3&gt;
&lt;h4 id="vector-space"&gt;&lt;strong&gt;线性空间 (Vector Space)&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;线性空间是一个由向量组成的集合，且在该集合中定义了向量的加法和标量乘法运算。它满足加法与标量乘法的封闭性、交换律、结合律、单位元和逆元等性质。&lt;/p&gt;
&lt;p&gt;比如：欧几里得空间 ℝⁿ 是一个线性空间。&lt;/p&gt;
&lt;h4 id="topological-space"&gt;&lt;strong&gt;拓扑空间 (Topological Space)&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;拓扑空间是一个集合 𝑋 和一组称为“开集”的子集构成的结构，满足以下条件：空集和整个集合都是开集；任意开集的并集是开集；有限个开集的交集是开集。这种结构允许我们讨论连续性、收敛性等概念。&lt;/p&gt;
&lt;p&gt;比如：实数集 ℝ 配备标准拓扑是一个拓扑空间。&lt;/p&gt;
&lt;h4 id="metric-space"&gt;&lt;strong&gt;度量空间 (Metric Space)&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;度量空间是一个集合 𝑋，配备了一个度量（或称距离函数） 𝑑(𝑥, 𝑦)，该度量函数满足非负性、同一性、对称性和三角不等式。度量空间定义了集合中元素之间的距离。&lt;/p&gt;
&lt;p&gt;比如：欧几里得空间 ℝⁿ 配备欧几里得度量 𝑑(𝑥, 𝑦) = √((𝑥₁ − 𝑦₁)² + … + (𝑥ₙ − 𝑦ₙ)²) 是一个度量空间。&lt;/p&gt;
&lt;h4 id="hilbert-space"&gt;&lt;strong&gt;希尔伯特空间 (Hilbert Space)&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;希尔伯特空间是带有内积的完备向量空间，其中内积定义了向量的长度和两个向量之间的夹角。完备性是指每个柯西序列在该空间中收敛。&lt;/p&gt;
&lt;p&gt;比如：有限维欧几里得空间 ℝⁿ 是一个希尔伯特空间；常见的无穷维希尔伯特空间是 𝐿² 空间（平方可积函数空间）。&lt;/p&gt;
&lt;h4 id="euclidean-space"&gt;&lt;strong&gt;欧几里得空间 (Euclidean Space)&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;欧几里得空间是一个带有标准内积的有限维实向量空间，通常表示为 ℝⁿ。它是我们日常几何直觉中的空间，具有内积、范数和距离的概念。&lt;/p&gt;
&lt;p&gt;比如：ℝ² 和 ℝ³ 是常见的欧几里得空间，用来描述平面和三维空间。&lt;/p&gt;
&lt;h4 id="unitary-space"&gt;&lt;strong&gt;酉空间 (Unitary Space)&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;酉空间是带有复数内积的向量空间，通常是复数域上的希尔伯特空间。它的内积满足共轭对称性和正定性。酉空间中的变换保持内积不变。&lt;/p&gt;
&lt;p&gt;比如：复数向量空间 ℂⁿ 配备标准复数内积是一个酉空间。&lt;/p&gt;
&lt;h4 id="symplectic-space"&gt;&lt;strong&gt;辛空间 (Symplectic Space)&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;辛空间是一个偶数维的实向量空间，配备一个非退化的、反对称的双线性形式（称为辛形式）。辛几何用于描述经典力学中的相空间。&lt;/p&gt;
&lt;p&gt;比如：在经典力学中，位置和动量的相空间 ℝ²ⁿ 配备辛形式 ω = ∑(dpᵢ ∧ dqᵢ) 是一个辛空间。&lt;/p&gt;</content><category term="Science"></category></entry><entry><title>半导体PN结知识小记</title><link href="https://blog.debao.me/2024/09/notes-on-pn-junction/" rel="alternate"></link><published>2024-09-29T22:33:00+08:00</published><updated>2024-09-29T22:33:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-09-29:/2024/09/notes-on-pn-junction/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;记录一下，备忘&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;概念&lt;/h2&gt;
&lt;h3 id="_2"&gt;能级的一些概念&lt;/h3&gt;
&lt;p&gt;硅的能级图（E-k) 图长下面这个样子：&lt;/p&gt;
&lt;p&gt;&lt;img alt="si_banddiagram" src="https://blog.debao.me/images/science/si_banddiagram.png"&gt;&lt;/p&gt;
&lt;p&gt;图中涉及太多是固体物理的内容，我也不懂：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;横轴展 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;记录一下，备忘&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;概念&lt;/h2&gt;
&lt;h3 id="_2"&gt;能级的一些概念&lt;/h3&gt;
&lt;p&gt;硅的能级图（E-k) 图长下面这个样子：&lt;/p&gt;
&lt;p&gt;&lt;img alt="si_banddiagram" src="https://blog.debao.me/images/science/si_banddiagram.png"&gt;&lt;/p&gt;
&lt;p&gt;图中涉及太多是固体物理的内容，我也不懂：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;横轴展示了能量随波矢（k）的变化，波矢取值沿着不同的高对称方向，如Γ、L、X、K等点。其中 Γ：布里渊区的中心，对应于k = 0。L、X、K：布里渊区的边界点，对应于特定对称方向。&lt;/li&gt;
&lt;li&gt;k是布洛赫波函数的波矢，与电子的准动量直接相关（p = ℏk）。k空间，也称为波矢空间，倒易空间或动量空间，是描述晶体中电子波函数的空间，是实空间的傅里叶变换。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;涉及PN结时，经常看到类似下面的图：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电子向费米能量较低的材料中移动，空穴则向相反方向移动。&lt;/li&gt;
&lt;li&gt;积累空间电荷并相应地调整电势，直到费米能量在各处都相同。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="pn_junction1" src="https://blog.debao.me/images/science/pn_junction1.png"&gt;&lt;/p&gt;
&lt;p&gt;涉及到能级的一些术语：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;导带底&lt;span class="math inline"&gt;E_C&lt;/span&gt;（Conduction Band Minimum）：导带底是导带中最低的能量状态。导带是半导体或绝缘体中电子可以自由移动的能带。&lt;/li&gt;
&lt;li&gt;价带顶&lt;span class="math inline"&gt;E_V&lt;/span&gt;（Valence Band maximum）：价带顶是价带中最高的能量状态。价带中的电子一般在较低能量状态下被束缚，不能自由移动。价带顶是电子最容易被激发到导带的位置&lt;/li&gt;
&lt;li&gt;费米能级&lt;span class="math inline"&gt;E_F&lt;/span&gt;（Fermi Level）：是在绝对零度（0K）下，电子占据能量状态的最高能量水平。在不同的温度下，它表示能量为该值的状态有50%几率被电子占据。费米能级在N型和P型半导体中位置不同。&lt;ul&gt;
&lt;li&gt;在本征半导体中位于导带和价带的中间；&lt;/li&gt;
&lt;li&gt;在N型半导体中因导带的电子浓度较高，费米能级靠近导带；&lt;/li&gt;
&lt;li&gt;在P型半导体中，因为价带的空穴浓度较高，费米能级靠近价带，&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;真空能级&lt;span class="math inline"&gt;E_{vac}&lt;/span&gt;（Vacuum Level)：电子完全脱离材料进入真空所需的最小能量基准，常用于表征材料的表面特性。&lt;/li&gt;
&lt;li&gt;本征费米能级&lt;span class="math inline"&gt;E_i&lt;/span&gt;（Intrinsic Fermi Level）：本征半导体（即未掺杂的纯半导体）中，电子和空穴浓度相等时的费米能级位置。&lt;/li&gt;
&lt;li&gt;施主能级（Donor Level）：位于导带边缘之下，距离导带很近。施主杂质的电子室温下很容易被激发到导带。主要用于N型半导体，施主杂质通常是五价元素。&lt;/li&gt;
&lt;li&gt;受主能级（Acceptor Level）：位于价带边缘之上，距离价带非常近。价带中电子很容易被激发到受主能级，价带中生成空穴。主要用于P型半导体，受主杂质通常是三价元素。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="pn"&gt;pn结一些概念&lt;/h3&gt;
&lt;p&gt;PN结（pn-junction）是由P型半导体和N型半导体接触形成的一种结构，具有单向导电特性。它通过在交界处形成的耗尽区（Depletion Region），也叫空间电荷区（Space Charge Region）阻止电流的自由流动。注意P区和N区都是电中性区。&lt;/p&gt;
&lt;p&gt;&lt;img alt="biased_junction" src="https://blog.debao.me/images/science/biased_junction.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;载流子 (Carriers)：半导体中能够移动并传导电流的粒子，包括电子和空穴。&lt;/li&gt;
&lt;li&gt;多数载流子 (Majority Carriers)：半导体中占主导地位的载流子。&lt;/li&gt;
&lt;li&gt;少数载流子 (Minority Carriers)：半导体中浓度较低的载流子。&lt;/li&gt;
&lt;li&gt;扩散 (Diffusion)：载流子因浓度差异自发从高浓度向低浓度区域移动。&lt;/li&gt;
&lt;li&gt;漂移 (Drift)：载流子在电场作用下沿电场方向移动。（注意纵轴是电子能量，电子往能量低的地方漂移。电位方向与之相反）。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;电子和空穴都趋向于它们各自的低能量位置：电子向导带的较低能量位置移动，空穴向价带的较高能量位置移动。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_3"&gt;势垒电容、扩散电容&lt;/h2&gt;
&lt;p&gt;PN结存在两种电容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;结电容（Junction Capacitance）也称为势垒电容或耗尽电容，是由PN结的耗尽区电荷积累形成的电容。它在反向偏置或弱正向偏置时较为显著。&lt;/li&gt;
&lt;li&gt;扩散电容（Diffusion Capacitance）是由于载流子在PN结的正向偏置下积累而产生的电容，主要与多数载流子的扩散相关。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;结电容 (Junction Capacitance)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;扩散电容 (Diffusion Capacitance)&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;出现条件&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;主要在&lt;strong&gt;反向偏置&lt;/strong&gt;下显著&lt;/td&gt;
&lt;td&gt;主要在&lt;strong&gt;正向偏置&lt;/strong&gt;下显著&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;物理机制&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;由于反向偏置下，PN结内的&lt;strong&gt;耗尽区&lt;/strong&gt;扩展，固定正负离子产生电场，类似于平行板电容的结构&lt;/td&gt;
&lt;td&gt;正向偏置时，少数载流子从P区扩散到N区（反之亦然），在两侧积累，形成电荷存储效应&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;电容与电压的关系&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;随着反向偏置电压增加，耗尽区宽度增大，电容&lt;strong&gt;减小&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;随着正向电流增加，少数载流子积累增多，电容&lt;strong&gt;增大&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;电流依赖性&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;与电流无关，主要由反向偏置电压控制&lt;/td&gt;
&lt;td&gt;与电流密切相关，电流越大，扩散电容越大&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;电容值大小&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;通常较小，范围在&lt;strong&gt;皮法拉 (pF)&lt;/strong&gt; 量级&lt;/td&gt;
&lt;td&gt;通常较大，范围在&lt;strong&gt;纳法拉 (nF)&lt;/strong&gt; 到 &lt;strong&gt;微法拉 (μF)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;电容变化公式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt; C_J = \frac{\varepsilon A}{W} &lt;/span&gt; ，与耗尽区宽度W 成反比&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt; C_D = \frac{dQ}{dV} &lt;/span&gt; ，与存储的少数载流子量成正比&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;频率响应&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;主要影响&lt;strong&gt;高频&lt;/strong&gt;下的响应&lt;/td&gt;
&lt;td&gt;主要影响&lt;strong&gt;低频&lt;/strong&gt;和&lt;strong&gt;中频&lt;/strong&gt;下的响应&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;典型应用场景&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;在反向偏置的高速开关电路和高频电路中显著&lt;/td&gt;
&lt;td&gt;在正向偏置的二极管导通时显著，影响开关速度和信号放大&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;正向偏置下的表现&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;正向偏置时存在但不明显，通常&lt;strong&gt;被忽略&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;正向偏置时为&lt;strong&gt;主导电容&lt;/strong&gt;，尤其在电荷积累显著时&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_4"&gt;温度效应&lt;/h2&gt;
&lt;p&gt;&lt;img alt="pn_temp_effect" src="https://blog.debao.me/images/science/pn_temp_effect.jpg"&gt;&lt;/p&gt;
&lt;p&gt;图片来自：&lt;a href="https://people.iitism.ac.in/~sarun/notes/phc504/17_pn.html"&gt;iitism.ac.in&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;温度升高的影响&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;反向饱和电流&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;反向饱和电流会&lt;strong&gt;显著增加&lt;/strong&gt;，大约每升高 10°C，反向饱和电流会&lt;strong&gt;增加一倍&lt;/strong&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;正向导通电压&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;正向导通电压会&lt;strong&gt;降低&lt;/strong&gt;，对于硅二极管，每升高 1°C，导通电压约降低 &lt;strong&gt;2mV&lt;/strong&gt;（可用于测温）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;载流子迁移率&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;载流子的迁移率会&lt;strong&gt;降低&lt;/strong&gt;，因为热振动加剧，导致电流携带粒子的移动速度减慢。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;击穿电压&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;击穿电压会&lt;strong&gt;降低&lt;/strong&gt;，温度升高使得雪崩击穿或齐纳击穿更容易发生。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;结电容&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;结电容会&lt;strong&gt;变化&lt;/strong&gt;，因为温度升高影响耗尽区宽度，反向偏置电容依赖于耗尽区的变化。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;扩散电容&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;扩散电容会&lt;strong&gt;增加&lt;/strong&gt;，因为正向偏置下，温度升高会导致更多的少数载流子注入耗尽区。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;带隙能量&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;带隙能量会&lt;strong&gt;降低&lt;/strong&gt;，硅的带隙能量每升高 1°C 大约降低 &lt;strong&gt;0.00023eV&lt;/strong&gt;，使得PN结更容易导通。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;热击穿（Thermal Runaway）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;温度升高可能造成&lt;strong&gt;热失控&lt;/strong&gt;，电流增加导致温度进一步升高，可能引发器件失效，尤其在高功率应用中。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="diode"&gt;Diode&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Diode 的字面意思是&lt;strong&gt;“两端有通路的装置”&lt;/strong&gt;，即它有两个电极：阳极 (Anode) 和 阴极 (Cathode)，电流在其中只能沿一个方向流动。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;半导体Diode可以和早期的真空管Diode做个比较&lt;/p&gt;
&lt;p&gt;&lt;img alt="diode" src="https://blog.debao.me/images/science/vacuum_diode_vs_zener_diode.png"&gt;&lt;/p&gt;
&lt;h3 id="_5"&gt;历史&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;时间&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;电子管二极管&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;半导体二极管&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1873年&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;爱迪生效应&lt;/strong&gt;：托马斯·爱迪生发现热电子发射现象&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1904年&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;弗莱明发明电子管二极管&lt;/strong&gt;，用于整流交流电&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1906年&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;皮卡德发明点接触二极管&lt;/strong&gt;，用于无线电信号检波&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1920-1940s&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;广泛应用于收音机、整流器、放大器等电子设备中&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1947年&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;晶体管发明&lt;/strong&gt;，标志着半导体元件时代的开端&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1950s&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;仍在高功率设备中使用&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;半导体二极管&lt;/strong&gt;逐渐取代电子管，成为主流整流和信号处理器件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1962年&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;发光二极管（LED）&lt;/strong&gt;发明，开创了新的应用领域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;20世纪后期&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;被半导体二极管和晶体管逐渐取代&lt;/td&gt;
&lt;td&gt;半导体二极管成为现代电子设备的核心元件，广泛应用于各类电路中&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_6"&gt;特点&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;电子管二极管&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;半导体二极管&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;导电机制&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;通过&lt;strong&gt;阴极热电子发射&lt;/strong&gt;，电子在真空中运动&lt;/td&gt;
&lt;td&gt;通过&lt;strong&gt;PN结&lt;/strong&gt;内的载流子运动&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;工作环境&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;需要在&lt;strong&gt;真空&lt;/strong&gt;中工作，通常在真空玻璃管内&lt;/td&gt;
&lt;td&gt;基于&lt;strong&gt;固态半导体材料&lt;/strong&gt;（如硅、锗）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;导通电压&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;需要对阴极加热，导通前需要一定的启动时间&lt;/td&gt;
&lt;td&gt;硅二极管的&lt;strong&gt;正向导通电压&lt;/strong&gt;约为 &lt;strong&gt;0.7V&lt;/strong&gt;，锗二极管约为 &lt;strong&gt;0.3V&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;尺寸&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;通常体积较大，且需要高电压供电&lt;/td&gt;
&lt;td&gt;尺寸小，易于集成到现代电路中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;寿命与可靠性&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;相对较短，阴极材料会老化，且加热器可能损坏&lt;/td&gt;
&lt;td&gt;半导体材料稳定，寿命长&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;应用场景&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;早期的&lt;strong&gt;收音机、放大器、整流器&lt;/strong&gt;中广泛使用，现已较少使用&lt;/td&gt;
&lt;td&gt;现代电子设备中广泛使用，如&lt;strong&gt;整流、信号调制、保护电路等&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_7"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.tf.uni-kiel.de/matwis/amat/semi_en/kap_2/backbone/r2.html"&gt;Semiconductor Physics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://km2000.us/franklinduan/articles/ecee.colorado.edu/~bart/book/book/contents.htm"&gt;Principles of Semiconductor Devices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;https://www.chu.berkeley.edu/wp-content/uploads/2020/01/Chenming-Hu-ch1-slides.pdf&lt;/li&gt;
&lt;li&gt;https://www.physics-and-radio-electronics.com/electronic-devices-and-circuits/semiconductor-diodes/junctioncapacitance-transitioncapacitance-diffusioncapacitance.html&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/P%E2%80%93n_junction&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/P%E2%80%93n_diode&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Band_diagram&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Band_bending&lt;/li&gt;
&lt;li&gt;《半导体物理学》刘恩科&lt;/li&gt;
&lt;/ul&gt;</content><category term="Science"></category></entry><entry><title>氢原子中电子云小记</title><link href="https://blog.debao.me/2024/09/a-brief-note-on-the-electron-cloud-of-the-hydrogen-atom/" rel="alternate"></link><published>2024-09-25T09:10:00+08:00</published><updated>2024-09-25T09:10:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-09-25:/2024/09/a-brief-note-on-the-electron-cloud-of-the-hydrogen-atom/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;只接触过大学物理，没学过量子力学，胡乱记录一些基础东西...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在量子力学，通过薛定谔方程可以来理解电子云的分布。氢原 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;只接触过大学物理，没学过量子力学，胡乱记录一些基础东西...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在量子力学，通过薛定谔方程可以来理解电子云的分布。氢原子是最简单的原子系统，只有一个质子和一个电子，薛定谔方程可以有解析解。而氦原子有两个电子，就已经超级复杂，只能用近似方法求解了。&lt;/p&gt;
&lt;h2 id="_1"&gt;概念&lt;/h2&gt;
&lt;p&gt;粒子的量子态是由波函数&lt;span class="math inline"&gt;\psi(\mathbf{r}, t)&lt;/span&gt;来描述的。这个波函数包含了这个粒子可能有的一切信息。&lt;/p&gt;
&lt;p&gt;&lt;img alt="spherical_harmonics_y_2_3" src="https://blog.debao.me/images/science/spherical_harmonics_y_2_3.png"&gt;&lt;/p&gt;
&lt;h3 id="_2"&gt;薛定谔方程&lt;/h3&gt;
&lt;p&gt;薛定谔方程是量子力学的基本方程，它描述了量子系统中粒子的波动行为。其一般形式为：&lt;/p&gt;
&lt;div class="math display"&gt;
i\hbar \frac{\partial}{\partial t} \psi(\mathbf{r}, t) = \hat{H} \psi(\mathbf{r}, t)
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;i&lt;/span&gt; 是虚数单位，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\hbar&lt;/span&gt; 是约化普朗克常数，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\frac{\partial}{\partial t}&lt;/span&gt; 是对时间的偏导数，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\psi(\mathbf{r}, t)&lt;/span&gt; 是波函数，依赖于位置 &lt;span class="math inline"&gt;\mathbf{r}&lt;/span&gt; 和时间 &lt;span class="math inline"&gt;t&lt;/span&gt;，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\hat{H}&lt;/span&gt; 是哈密顿算符，它描述了系统的总能量（包括动能和势能）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于一个质量为&lt;span class="math inline"&gt;m&lt;/span&gt;的粒子在势场 &lt;span class="math inline"&gt;V(\mathbf{r}, t)&lt;/span&gt; 中运动的情况，哈密顿算符通常可以表示为：&lt;/p&gt;
&lt;div class="math display"&gt;
\hat{H} = -\frac{\hbar^2}{2m} \nabla^2 + V(\mathbf{r}, t)
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;m&lt;/span&gt; 是粒子的质量，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\nabla^2&lt;/span&gt; 是拉普拉斯算符（描述空间中的二阶导数），&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;V(\mathbf{r}, t)&lt;/span&gt; 是势能函数，依赖于位置和时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_3"&gt;时间无关薛定谔方程&lt;/h3&gt;
&lt;p&gt;如果粒子的势能&lt;span class="math inline"&gt;V(\mathbf{r})&lt;/span&gt;与时间无关，那么，哈密顿算符可以表示&lt;/p&gt;
&lt;div class="math display"&gt;
\hat{H} = -\frac{\hbar^2}{2m} \nabla^2 + V(\mathbf{r}, t)
&lt;/div&gt;

&lt;p&gt;可以证明此时薛定谔方程有如下形式的解：&lt;/p&gt;
&lt;div class="math display"&gt;
\psi(\mathbf{r}, t) = \phi(\mathbf{r})\chi(t)
&lt;/div&gt;

&lt;p&gt;只考虑&lt;span class="math inline"&gt;\phi(\mathbf{r})&lt;/span&gt;，薛定谔方程可以简化为时间无关的形式：&lt;/p&gt;
&lt;div class="math display"&gt;
\hat{H}\phi(\mathbf{r}) = E\phi(\mathbf{r})
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;E&lt;/span&gt; 是系统的总能量（一个常数），&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\phi(\mathbf{r})&lt;/span&gt; 是空间依赖的波函数，通常称为&lt;strong&gt;定态波函数&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意，简单起见，后面统一使用符号 &lt;span class="math inline"&gt;\psi(\mathbf{r})&lt;/span&gt; 表示此处的  &lt;span class="math inline"&gt;\phi(\mathbf{r})&lt;/span&gt;&lt;/p&gt;
&lt;h3 id="_4"&gt;球坐标系&lt;/h3&gt;
&lt;p&gt;&lt;img alt="3d_spherical" src="https://blog.debao.me/images/science/3d_spherical.svg"&gt;&lt;/p&gt;
&lt;p&gt;图片来自&lt;a href="https://en.wikipedia.org/wiki/Spherical_coordinate_system"&gt;wikipedia&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意此处用的物理中的使用惯例(ISO 80000-2:2019)，和数学中用的惯例的可能不一致。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;r&lt;/span&gt; 是径向坐标，表示原点到某一点的距离，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\theta&lt;/span&gt; 是极角，表示从 &lt;span class="math inline"&gt;z&lt;/span&gt; 轴向下的夹角（在 &lt;span class="math inline"&gt;[0, \pi]&lt;/span&gt; 的范围内），&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\phi&lt;/span&gt; 是方位角，表示在 &lt;span class="math inline"&gt;xy&lt;/span&gt; 平面内从 &lt;span class="math inline"&gt;x&lt;/span&gt; 轴开始的夹角（在 &lt;span class="math inline"&gt;[0, 2\pi]&lt;/span&gt; 的范围内）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在&lt;strong&gt;球坐标系&lt;/strong&gt; &lt;span class="math inline"&gt;(r, \theta, \phi)&lt;/span&gt; 下，&lt;strong&gt;拉普拉斯算符&lt;/strong&gt; &lt;span class="math inline"&gt;\nabla^2&lt;/span&gt; 的形式比直角坐标系中的形式稍微复杂一些。它的具体表达式为：&lt;/p&gt;
&lt;div class="math display"&gt;
\nabla^2 = \frac{1}{r^2} \frac{\partial}{\partial r} \left( r^2 \frac{\partial}{\partial r} \right) + \frac{1}{r^2 \sin \theta} \frac{\partial}{\partial \theta} \left( \sin \theta \frac{\partial}{\partial \theta} \right) + \frac{1}{r^2 \sin^2 \theta} \frac{\partial^2}{\partial \phi^2}
&lt;/div&gt;

&lt;p&gt;此时，时间无关的薛定谔方程，变成了：&lt;/p&gt;
&lt;div class="math display"&gt;
-\frac{\hbar^2}{2m} \left( \frac{1}{r^2} \frac{\partial}{\partial r} \left( r^2 \frac{\partial}{\partial r} \right) + \frac{1}{r^2 \sin \theta} \frac{\partial}{\partial \theta} \left( \sin \theta \frac{\partial}{\partial \theta} \right) + \frac{1}{r^2 \sin^2 \theta} \frac{\partial^2}{\partial \phi^2} \right) \psi(r, \theta, \phi)
+ V(r) \psi(r, \theta, \phi) = E \psi(r, \theta, \phi)
&lt;/div&gt;

&lt;h3 id="_5"&gt;径向方程与角度方程&lt;/h3&gt;
&lt;p&gt;使用&lt;strong&gt;分离变量法&lt;/strong&gt;，假设波函数可以分离为径向部分和角度部分：&lt;/p&gt;
&lt;p&gt;&lt;span class="math inline"&gt;\psi(r, \theta, \phi) = R(r) Y(\theta, \phi)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;R(r)&lt;/span&gt; 是径向波函数，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;Y(\theta, \phi)&lt;/span&gt; 是角度部分波函数（球谐函数）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代入薛定谔方程后，方程可以分离为两个独立的部分：一个是径向方程，另一个是角度方程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;径向方程&lt;/strong&gt;：&lt;/p&gt;
&lt;div class="math display"&gt;
\frac{d}{dr} \left( r^2 \frac{dR(r)}{dr} \right) + \left( \frac{2mr^2}{\hbar^2} \left( E - V(r) \right) - l(l+1) \right) R(r) = 0
&lt;/div&gt;

&lt;p&gt;这个方程描述了电子在径向方向上的行为，解这个方程可以得到电子在不同能级下的径向波函数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;角度方程&lt;/strong&gt;：&lt;/p&gt;
&lt;div class="math display"&gt;
\frac{1}{\sin \theta} \frac{\partial}{\partial \theta} \left( \sin \theta \frac{\partial Y(\theta, \phi)}{\partial \theta} \right) + \frac{1}{\sin^2 \theta} \frac{\partial^2 Y(\theta, \phi)}{\partial \phi^2} = -l(l+1) Y(\theta, \phi)
&lt;/div&gt;

&lt;p&gt;其解是&lt;strong&gt;球谐函数&lt;/strong&gt; &lt;span class="math inline"&gt;Y_l^m(\theta, \phi)&lt;/span&gt;，其中 &lt;span class="math inline"&gt;l&lt;/span&gt; 是轨道角动量量子数，&lt;span class="math inline"&gt;m&lt;/span&gt; 是磁量子数。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;球谐函数&lt;/strong&gt;是定义在球面上的特殊函数，广泛用于物理和数学领域，尤其是在球对称问题中，如量子力学中的原子轨道、经典力学中的引力场和电场，以及计算机图形学中的全局光照。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_6"&gt;径向波函数&lt;/h2&gt;
&lt;p&gt;对于氢原子，前面的径向方程中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;E&lt;/span&gt; 是电子的能量，与量子数&lt;span class="math inline"&gt;n&lt;/span&gt;有关。对氢原子来说，能级公式&lt;span class="math inline"&gt;E_n=-\frac{13.6\text{eV}}{n^2}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;V(r) = -\frac{e^2}{4 \pi \epsilon_0 r}&lt;/span&gt; 是库仑势能，&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过一堆看不懂的数学技巧，最终可以解出来&lt;/p&gt;
&lt;div class="math display"&gt;
R_{n,l}(r) = N_{n,l} \left( \frac{r}{a_0} \right)^l e^{-\frac{r}{n a_0}} L_{n-l-1}^{2l+1} \left( \frac{2r}{n a_0} \right)
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;L_{n-l-1}^{2l+1} \left( \frac{2r}{n a_0} \right)&lt;/span&gt; 是&lt;strong&gt;拉盖尔多项式&lt;/strong&gt;，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;n&lt;/span&gt; 是主量子数，表示电子的能级。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;a_0&lt;/span&gt;是波尔半径 &lt;span class="math inline"&gt;\frac{4 \pi \epsilon_0 \hbar^2}{me^2}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;N_{n,l}&lt;/span&gt; 是归一化系数，公式附下面：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
N_{n,l} = \left( \frac{2}{n a_0} \right)^{3/2} \sqrt{\frac{(n - l - 1)!}{2n (n + l)!}}
&lt;/div&gt;

&lt;p&gt;这样一来，就可以写python代码了（AI基本可以直接生成）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy.special&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;genlaguerre&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;factorial&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy.constants&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;physical_constants&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;

&lt;span class="c1"&gt;# Get the Bohr radius a_0&lt;/span&gt;
&lt;span class="n"&gt;a_0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;physical_constants&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Bohr radius&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Calculate the normalization constant N_{n,l}&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;normalization_constant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a_0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;denom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;denom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Define the radial wavefunction R_{n,l}(r)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;radial_wavefunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;rho&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a_0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Compute the dimensionless variable rho&lt;/span&gt;
    &lt;span class="n"&gt;laguerre_polynomial&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;genlaguerre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Generalized Laguerre polynomial&lt;/span&gt;
    &lt;span class="n"&gt;normalization&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;normalization_constant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Normalization constant&lt;/span&gt;
    &lt;span class="n"&gt;radial_part&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rho&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rho&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;laguerre_polynomial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rho&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Main part of the radial wavefunction&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;normalization&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;radial_part&lt;/span&gt;

&lt;span class="c1"&gt;# Function to plot the radial wavefunction for given n and l&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;plot_radial_wavefunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Define the range of r values&lt;/span&gt;
    &lt;span class="n"&gt;r_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a_0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# From 0 to 50 * a_0&lt;/span&gt;

    &lt;span class="c1"&gt;# Compute the radial wavefunction&lt;/span&gt;
    &lt;span class="n"&gt;R_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;radial_wavefunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r_values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Plot the result&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r_values&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;a_0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;R_values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;R_&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;(r)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$r / a_0$&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$R_{n,l}(r)$&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Radial Wavefunction for n=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, l=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Example usage: Plot for n = 2, l = 0&lt;/span&gt;
&lt;span class="n"&gt;plot_radial_wavefunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_7"&gt;角向波函数（球谐函数）&lt;/h2&gt;
&lt;p&gt;球谐函数 &lt;span class="math inline"&gt;Y_{l}^{m}(\theta, \phi)&lt;/span&gt; 是球坐标系下的两变量函数，定义在角度变量 &lt;span class="math inline"&gt;\theta&lt;/span&gt; 和 &lt;span class="math inline"&gt;\phi&lt;/span&gt; 上。其一般形式为：&lt;/p&gt;
&lt;div class="math display"&gt;
Y_{l}^{m}(\theta, \phi) = \sqrt{\frac{(2l+1)}{4\pi} \frac{(l-m)!}{(l+m)!}} P_{l}^{m}(\cos\theta) e^{im\phi}
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;l&lt;/span&gt; 是非负整数，称为&lt;strong&gt;角量子数&lt;/strong&gt;或&lt;strong&gt;多极子阶数&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;m&lt;/span&gt; 是整数，满足 &lt;span class="math inline"&gt;-l \leq m \leq l&lt;/span&gt;，称为&lt;strong&gt;磁量子数&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\theta&lt;/span&gt; 是极角，取值范围 &lt;span class="math inline"&gt;[0, \pi]&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\phi&lt;/span&gt; 是方位角，取值范围 &lt;span class="math inline"&gt;[0, 2\pi]&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;P_{l}^{m}(\cos\theta)&lt;/span&gt; 是&lt;strong&gt;连带勒让德多项式&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个函数在python中有现成的，所以AI直接给出代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;
&lt;span class="normal"&gt;63&lt;/span&gt;
&lt;span class="normal"&gt;64&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;mpl_toolkits.mplot3d&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Axes3D&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy.special&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sph_harm&lt;/span&gt;

&lt;span class="c1"&gt;# Function to visualize both the magnitude and real part of the spherical harmonic&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;plot_spherical_harmonic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Generate the range of angles&lt;/span&gt;
    &lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Polar angle θ from 0 to π&lt;/span&gt;
    &lt;span class="n"&gt;phi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Azimuthal angle φ from 0 to 2π&lt;/span&gt;
    &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;meshgrid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Create a meshgrid of angles&lt;/span&gt;

    &lt;span class="c1"&gt;# Compute the spherical harmonic Y_l^m(θ, φ)&lt;/span&gt;
    &lt;span class="n"&gt;Y_lm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sph_harm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Calculate the magnitude |Y_l^m| (for one plot)&lt;/span&gt;
    &lt;span class="n"&gt;r_magnitude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y_lm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Calculate the real part Re(Y_l^m) (for the other plot)&lt;/span&gt;
    &lt;span class="n"&gt;r_real&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;real&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y_lm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Convert spherical coordinates to Cartesian coordinates for magnitude plot&lt;/span&gt;
    &lt;span class="n"&gt;x_mag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r_magnitude&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;y_mag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r_magnitude&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;z_mag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r_magnitude&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Convert spherical coordinates to Cartesian coordinates for real part plot&lt;/span&gt;
    &lt;span class="n"&gt;x_real&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r_real&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;y_real&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r_real&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;z_real&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r_real&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Create a figure with two subplots&lt;/span&gt;
    &lt;span class="n"&gt;fig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;# Subplot 1: Magnitude |Y_l^m|&lt;/span&gt;
    &lt;span class="n"&gt;ax1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;121&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;projection&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;3d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot_surface&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_mag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_mag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z_mag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;facecolors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;viridis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r_magnitude&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;r_magnitude&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; 
                     &lt;span class="n"&gt;rstride&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cstride&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;edgecolor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;none&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Spherical Harmonic Magnitude: $|Y_&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;^&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;|$&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_xlim&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;ax1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ylim&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;ax1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_zlim&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;ax1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;X&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_zlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Subplot 2: Real part Re(Y_l^m)&lt;/span&gt;
    &lt;span class="n"&gt;ax2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;122&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;projection&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;3d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot_surface&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_real&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_real&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z_real&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;facecolors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;viridis&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;r_real&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;r_real&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r_real&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;r_real&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;())),&lt;/span&gt; 
                     &lt;span class="n"&gt;rstride&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cstride&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;edgecolor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;none&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Spherical Harmonic Real Part: $Re(Y_&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;^&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)$&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_xlim&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;ax2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ylim&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;ax2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_zlim&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;ax2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;X&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_zlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Show the figure&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tight_layout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Example: Plot both magnitude and real part for l = 3, m = 2&lt;/span&gt;
&lt;span class="n"&gt;plot_spherical_harmonic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="spherical_harmonics_y_2_3" src="https://blog.debao.me/images/science/spherical_harmonics_y_2_3.png"&gt;&lt;/p&gt;
&lt;h2 id="_8"&gt;氢原子电子云&lt;/h2&gt;
&lt;p&gt;电子云图是电子在原子内的概率分布的可视化，它展示了电子在不同位置出现的概率。需要同时考虑径向和角向波函数。概率密度与波函数模平方成正比。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成随机点（三维坐标下，用球坐标表示）&lt;/li&gt;
&lt;li&gt;计算每个点的概率密度（计算波函数模值）&lt;/li&gt;
&lt;li&gt;概率筛选（删除概率小的点）&lt;/li&gt;
&lt;li&gt;转换为笛卡尔坐标&lt;/li&gt;
&lt;li&gt;绘制点云&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_9"&gt;复数轨道&lt;/h3&gt;
&lt;p&gt;注意：此处绘制的是复数轨道的模平方，因为球谐函数通常是复数，具有实部和虚部。复数波函数带有相位信息，但其物理含义通常通过波函数模平方来体现。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;
&lt;span class="normal"&gt;63&lt;/span&gt;
&lt;span class="normal"&gt;64&lt;/span&gt;
&lt;span class="normal"&gt;65&lt;/span&gt;
&lt;span class="normal"&gt;66&lt;/span&gt;
&lt;span class="normal"&gt;67&lt;/span&gt;
&lt;span class="normal"&gt;68&lt;/span&gt;
&lt;span class="normal"&gt;69&lt;/span&gt;
&lt;span class="normal"&gt;70&lt;/span&gt;
&lt;span class="normal"&gt;71&lt;/span&gt;
&lt;span class="normal"&gt;72&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy.special&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sph_harm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;genlaguerre&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;factorial&lt;/span&gt;

&lt;span class="c1"&gt;# Constants&lt;/span&gt;
&lt;span class="n"&gt;a0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;  &lt;span class="c1"&gt;# Bohr radius (in atomic units)&lt;/span&gt;

&lt;span class="c1"&gt;# Radial wavefunction R_{n,l}(r) for hydrogen atom&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hydrogen_radial_wavefunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Radial part of the wavefunction for hydrogen atom&lt;/span&gt;
    &lt;span class="n"&gt;rho&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# Normalization constant&lt;/span&gt;
    &lt;span class="n"&gt;norm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="c1"&gt;# Radial wavefunction&lt;/span&gt;
    &lt;span class="n"&gt;radial_part&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;norm&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rho&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;rho&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;genlaguerre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;rho&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;radial_part&lt;/span&gt;

&lt;span class="c1"&gt;# Probability density function for hydrogen atom&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hydrogen_wavefunction_squared&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Radial part&lt;/span&gt;
    &lt;span class="n"&gt;R_nl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hydrogen_radial_wavefunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# Angular part (spherical harmonics)&lt;/span&gt;
    &lt;span class="n"&gt;Y_lm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sph_harm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# Return the square of the wavefunction (probability density)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R_nl&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Y_lm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="c1"&gt;# Generate random points in spherical coordinates&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;random_points_in_sphere&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Generate random spherical coordinates&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a0&lt;/span&gt;  &lt;span class="c1"&gt;# Random radius within a reasonable range&lt;/span&gt;
    &lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arccos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Uniformly distributed cos(theta)&lt;/span&gt;
    &lt;span class="n"&gt;phi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;  &lt;span class="c1"&gt;# Uniformly distributed phi&lt;/span&gt;

    &lt;span class="c1"&gt;# Compute the probability density at each point&lt;/span&gt;
    &lt;span class="n"&gt;prob_density&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hydrogen_wavefunction_squared&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Normalize the probabilities&lt;/span&gt;
    &lt;span class="n"&gt;prob_density&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="n"&gt;prob_density&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# Filter points based on probability density (Monte Carlo sampling)&lt;/span&gt;
    &lt;span class="n"&gt;mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;prob_density&lt;/span&gt;

    &lt;span class="c1"&gt;# Keep only the points that passed the filter&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Convert spherical to Cartesian coordinates&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;spherical_to_cartesian&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;

&lt;span class="c1"&gt;# Main function to plot the hydrogen atom electron cloud&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;plot_hydrogen_cloud&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Generate random points in spherical coordinates&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random_points_in_sphere&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Convert spherical coordinates to Cartesian&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;spherical_to_cartesian&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Plot the points&lt;/span&gt;
    &lt;span class="n"&gt;fig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;projection&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;3d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;X&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_zlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hydrogen Atom Electron Cloud: n=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;, l=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;, m=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Example: Plot the electron cloud for the 2p orbital (n=2, l=1, m=0)&lt;/span&gt;
&lt;span class="n"&gt;plot_hydrogen_cloud&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="hydrogen_electron_cloud_2_1_0" src="https://blog.debao.me/images/science/hydrogen_electron_cloud_2_1_0.png"&gt;&lt;/p&gt;
&lt;h3 id="_10"&gt;实数轨道&lt;/h3&gt;
&lt;p&gt;实轨道是通过将复数球谐函数的线性组合转换为实数形式来表示的。虽然球谐函数本质上是复数函数，但通过适当的线性组合，可以得到仅包含实数的轨道，这些轨道更符合直观的物理图像。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;s-轨道&lt;/strong&gt;：球对称的，只有 &lt;span class="math inline"&gt;l=0&lt;/span&gt; 的情况，没有角动量方向，波函数是实数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;p-轨道&lt;/strong&gt;：通过将复数球谐函数的线性组合转换为实数形式，我们可以得到三个常用的实轨道 &lt;span class="math inline"&gt;p_x&lt;/span&gt;、&lt;span class="math inline"&gt;p_y&lt;/span&gt;、&lt;span class="math inline"&gt;p_z&lt;/span&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;p_x&lt;/span&gt;: 对应 &lt;span class="math inline"&gt;Y_1^1 + Y_1^{-1}&lt;/span&gt; 的线性组合。（需要归一化？）&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;p_y&lt;/span&gt;: 对应 &lt;span class="math inline"&gt;Y_1^1 - Y_1^{-1}&lt;/span&gt; 的线性组合。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;p_z&lt;/span&gt;: 对应 &lt;span class="math inline"&gt;Y_1^0&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些轨道是直观的、方向明确的电子云形状，分别沿着 &lt;span class="math inline"&gt;x&lt;/span&gt;、&lt;span class="math inline"&gt;y&lt;/span&gt;、&lt;span class="math inline"&gt;z&lt;/span&gt; 轴方向对称。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;d-轨道&lt;/strong&gt;：类似地，&lt;span class="math inline"&gt;d&lt;/span&gt;-轨道可以通过 &lt;span class="math inline"&gt;l=2&lt;/span&gt; 的复数球谐函数的线性组合得到五个实数轨道，如 &lt;span class="math inline"&gt;d_{xy}&lt;/span&gt;、&lt;span class="math inline"&gt;d_{xz}&lt;/span&gt;、&lt;span class="math inline"&gt;d_{yz}&lt;/span&gt;、&lt;span class="math inline"&gt;d_{z^2}&lt;/span&gt;、&lt;span class="math inline"&gt;d_{x^2 - y^2}&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;AI给出参考代码如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;
&lt;span class="normal"&gt;63&lt;/span&gt;
&lt;span class="normal"&gt;64&lt;/span&gt;
&lt;span class="normal"&gt;65&lt;/span&gt;
&lt;span class="normal"&gt;66&lt;/span&gt;
&lt;span class="normal"&gt;67&lt;/span&gt;
&lt;span class="normal"&gt;68&lt;/span&gt;
&lt;span class="normal"&gt;69&lt;/span&gt;
&lt;span class="normal"&gt;70&lt;/span&gt;
&lt;span class="normal"&gt;71&lt;/span&gt;
&lt;span class="normal"&gt;72&lt;/span&gt;
&lt;span class="normal"&gt;73&lt;/span&gt;
&lt;span class="normal"&gt;74&lt;/span&gt;
&lt;span class="normal"&gt;75&lt;/span&gt;
&lt;span class="normal"&gt;76&lt;/span&gt;
&lt;span class="normal"&gt;77&lt;/span&gt;
&lt;span class="normal"&gt;78&lt;/span&gt;
&lt;span class="normal"&gt;79&lt;/span&gt;
&lt;span class="normal"&gt;80&lt;/span&gt;
&lt;span class="normal"&gt;81&lt;/span&gt;
&lt;span class="normal"&gt;82&lt;/span&gt;
&lt;span class="normal"&gt;83&lt;/span&gt;
&lt;span class="normal"&gt;84&lt;/span&gt;
&lt;span class="normal"&gt;85&lt;/span&gt;
&lt;span class="normal"&gt;86&lt;/span&gt;
&lt;span class="normal"&gt;87&lt;/span&gt;
&lt;span class="normal"&gt;88&lt;/span&gt;
&lt;span class="normal"&gt;89&lt;/span&gt;
&lt;span class="normal"&gt;90&lt;/span&gt;
&lt;span class="normal"&gt;91&lt;/span&gt;
&lt;span class="normal"&gt;92&lt;/span&gt;
&lt;span class="normal"&gt;93&lt;/span&gt;
&lt;span class="normal"&gt;94&lt;/span&gt;
&lt;span class="normal"&gt;95&lt;/span&gt;
&lt;span class="normal"&gt;96&lt;/span&gt;
&lt;span class="normal"&gt;97&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy.special&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sph_harm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;factorial&lt;/span&gt;

&lt;span class="c1"&gt;# Constants&lt;/span&gt;
&lt;span class="n"&gt;a0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;  &lt;span class="c1"&gt;# Bohr radius (in atomic units)&lt;/span&gt;

&lt;span class="c1"&gt;# Radial wavefunction R_{n,l}(r) for hydrogen atom&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hydrogen_radial_wavefunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;rho&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;norm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="n"&gt;radial_part&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;norm&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rho&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;rho&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;radial_part&lt;/span&gt;

&lt;span class="c1"&gt;# Probability density function for hydrogen atom&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hydrogen_wavefunction_squared&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;R_nl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hydrogen_radial_wavefunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;Y_lm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sph_harm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R_nl&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Y_lm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="c1"&gt;# Generate random points in spherical coordinates&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;random_points_in_sphere&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a0&lt;/span&gt;  &lt;span class="c1"&gt;# Random radius within a reasonable range&lt;/span&gt;
    &lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arccos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Uniformly distributed cos(theta)&lt;/span&gt;
    &lt;span class="n"&gt;phi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;  &lt;span class="c1"&gt;# Uniformly distributed phi&lt;/span&gt;
    &lt;span class="n"&gt;prob_density&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hydrogen_wavefunction_squared&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Check if max(prob_density) is non-zero before normalizing&lt;/span&gt;
    &lt;span class="n"&gt;max_density&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;prob_density&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;max_density&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="c1"&gt;# Avoid division by zero&lt;/span&gt;
        &lt;span class="n"&gt;prob_density&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="n"&gt;max_density&lt;/span&gt;

    &lt;span class="c1"&gt;# Loosen filtering condition&lt;/span&gt;
    &lt;span class="n"&gt;mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;prob_density&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="c1"&gt;# Loosen the filtering condition&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Number of points before filtering: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, after filtering: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Convert spherical to Cartesian coordinates&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;spherical_to_cartesian&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;

&lt;span class="c1"&gt;# Real spherical harmonics (p_x, p_y, p_z orbitals)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;real_spherical_harmonics&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;p_x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# p_x: Re(Y_1^1 + Y_1^-1)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sph_harm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;real&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sph_harm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;real&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;p_y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# p_y: Im(Y_1^1 - Y_1^-1)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sph_harm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imag&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;sph_harm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;p_z&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# p_z: Re(Y_1^0)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;sph_harm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;real&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d_xy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;sph_harm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imag&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d_xz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;sph_harm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;real&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d_yz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;sph_harm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imag&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d_z2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;sph_harm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;real&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d_x2_y2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;sph_harm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;real&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Unsupported orbital&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Main function to plot the hydrogen atom real orbitals&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;plot_real_hydrogen_orbital&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random_points_in_sphere&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# m=0, radial sampling&lt;/span&gt;
    &lt;span class="c1"&gt;# Real spherical harmonics&lt;/span&gt;
    &lt;span class="n"&gt;Y_lm_real&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;real_spherical_harmonics&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;prob_density&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hydrogen_radial_wavefunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Y_lm_real&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;

    &lt;span class="c1"&gt;# Check if max(prob_density) is non-zero before normalizing&lt;/span&gt;
    &lt;span class="n"&gt;max_density&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;prob_density&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;max_density&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="c1"&gt;# Avoid division by zero&lt;/span&gt;
        &lt;span class="n"&gt;prob_density&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="n"&gt;max_density&lt;/span&gt;

    &lt;span class="c1"&gt;# Convert spherical to Cartesian coordinates&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;spherical_to_cartesian&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Plot the points&lt;/span&gt;
    &lt;span class="n"&gt;fig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;projection&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;3d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;X&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_zlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hydrogen Atom Real Orbital: n=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;, l=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;, m=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Example: Plot the real orbital for the p_x orbital (n=2, l=1, m=&amp;#39;p_x&amp;#39;)&lt;/span&gt;
&lt;span class="n"&gt;plot_real_hydrogen_orbital&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;p_x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_11"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://liam-ilan.github.io/electron-orbitals/&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Wave_function#Hydrogen_atom&lt;/li&gt;
&lt;li&gt;https://ssebastianmag.medium.com/computational-physics-with-python-hydrogen-wavefunctions-electron-density-plots-8fede44b7b12&lt;/li&gt;
&lt;li&gt;https://www.researchgate.net/publication/375039550_Quantum_Mechanical_Hydrogen_Atom_Model_Visualised_using_Python&lt;/li&gt;
&lt;li&gt;https://physics.stackexchange.com/questions/190726/what-is-the-difference-between-real-orbital-complex-orbital/190730#190730&lt;/li&gt;
&lt;li&gt;https://github.com/PyCOMPLETE/PyECLOUD&lt;/li&gt;
&lt;li&gt;https://github.com/Niuskir/Electron-Orbitals-Blender-3D&lt;/li&gt;
&lt;li&gt;https://github.com/damontallen/Orbitals/blob/master/Hydrogen%20Orbitals%20(Feb%2018,%202014)%20(dynamic%20entry).ipynb&lt;/li&gt;
&lt;li&gt;https://in2infinity.com/2d-orbital-geometry-of-the-electron-cloud/&lt;/li&gt;
&lt;/ul&gt;</content><category term="Science"></category></entry><entry><title>电磁波频谱小记</title><link href="https://blog.debao.me/2024/09/notes-on-electromagnetic-spectrum/" rel="alternate"></link><published>2024-09-24T23:34:00+08:00</published><updated>2024-09-24T23:34:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-09-24:/2024/09/notes-on-electromagnetic-spectrum/</id><summary type="html">&lt;p&gt;电磁频谱是根据频率或波长排列的电磁辐射的完整范围。频谱被划分为多个波段，每个波段中的电磁波都有特定的名称 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;电磁频谱是根据频率或波长排列的电磁辐射的完整范围。频谱被划分为多个波段，每个波段中的电磁波都有特定的名称。从低频到高频依次为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无线电波（Radio waves）&lt;/li&gt;
&lt;li&gt;微波（Microwaves）&lt;/li&gt;
&lt;li&gt;红外线（Infrared）&lt;/li&gt;
&lt;li&gt;可见光（Visible light）&lt;/li&gt;
&lt;li&gt;紫外线（Ultraviolet）&lt;/li&gt;
&lt;li&gt;X射线（X-rays）&lt;/li&gt;
&lt;li&gt;伽马射线（Gamma rays）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="em_spectrum_properties" src="https://blog.debao.me/images/ee/em_spectrum_properties_zh_cn.svg"&gt;&lt;/p&gt;
&lt;h3 id="_1"&gt;分类及相关参数&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;电磁频谱的各个波段之间没有明确的边界，它们像彩虹中的颜色一样逐渐过渡。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;缩写&lt;/th&gt;
&lt;th&gt;波长范围（λ）&lt;/th&gt;
&lt;th&gt;频率范围（f）&lt;/th&gt;
&lt;th&gt;每光子能量（E）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;伽马射线&lt;/strong&gt;（Gamma rays）&lt;/td&gt;
&lt;td&gt;γ&lt;/td&gt;
&lt;td&gt;10 pm – 100 pm&lt;/td&gt;
&lt;td&gt;30 EHz – 3 EHz&lt;/td&gt;
&lt;td&gt;124 keV – 12.4 keV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;硬X射线&lt;/strong&gt;（Hard X-rays）&lt;/td&gt;
&lt;td&gt;HX&lt;/td&gt;
&lt;td&gt;100 pm – 10 nm&lt;/td&gt;
&lt;td&gt;3 EHz – 30 PHz&lt;/td&gt;
&lt;td&gt;12.4 keV – 124 eV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;软X射线&lt;/strong&gt;（Soft X-rays）&lt;/td&gt;
&lt;td&gt;SX&lt;/td&gt;
&lt;td&gt;10 nm – 121 nm&lt;/td&gt;
&lt;td&gt;30 PHz – 3 PHz&lt;/td&gt;
&lt;td&gt;124 eV – 10.2 eV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;极紫外线&lt;/strong&gt;（Extreme ultraviolet）&lt;/td&gt;
&lt;td&gt;EUV&lt;/td&gt;
&lt;td&gt;121 nm&lt;/td&gt;
&lt;td&gt;3 PHz&lt;/td&gt;
&lt;td&gt;10.2 eV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;近紫外线&lt;/strong&gt;（Near ultraviolet）&lt;/td&gt;
&lt;td&gt;NUV&lt;/td&gt;
&lt;td&gt;400 nm&lt;/td&gt;
&lt;td&gt;750 THz&lt;/td&gt;
&lt;td&gt;—&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;可见光谱&lt;/strong&gt;（Visible spectrum）&lt;/td&gt;
&lt;td&gt;—&lt;/td&gt;
&lt;td&gt;400 nm – 700 nm&lt;/td&gt;
&lt;td&gt;750 THz – 480 THz&lt;/td&gt;
&lt;td&gt;—&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;近红外线&lt;/strong&gt;（Near infrared）&lt;/td&gt;
&lt;td&gt;NIR&lt;/td&gt;
&lt;td&gt;700 nm – 1 μm&lt;/td&gt;
&lt;td&gt;480 THz – 300 THz&lt;/td&gt;
&lt;td&gt;1.24 eV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;中红外线&lt;/strong&gt;（Mid infrared）&lt;/td&gt;
&lt;td&gt;MIR&lt;/td&gt;
&lt;td&gt;1 μm – 10 μm&lt;/td&gt;
&lt;td&gt;300 THz – 30 THz&lt;/td&gt;
&lt;td&gt;1.24 eV – 124 meV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;远红外线&lt;/strong&gt;（Far infrared）&lt;/td&gt;
&lt;td&gt;FIR&lt;/td&gt;
&lt;td&gt;10 μm – 1 mm&lt;/td&gt;
&lt;td&gt;30 THz – 300 GHz&lt;/td&gt;
&lt;td&gt;124 meV – 1.24 meV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;极高频微波&lt;/strong&gt;（Extremely high frequency）&lt;/td&gt;
&lt;td&gt;EHF&lt;/td&gt;
&lt;td&gt;1 cm&lt;/td&gt;
&lt;td&gt;30 GHz&lt;/td&gt;
&lt;td&gt;124 μeV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;超高频微波&lt;/strong&gt;（Super high frequency）&lt;/td&gt;
&lt;td&gt;SHF&lt;/td&gt;
&lt;td&gt;1 dm&lt;/td&gt;
&lt;td&gt;3 GHz&lt;/td&gt;
&lt;td&gt;12.4 μeV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;超高频&lt;/strong&gt;（Ultra high frequency）&lt;/td&gt;
&lt;td&gt;UHF&lt;/td&gt;
&lt;td&gt;1 m&lt;/td&gt;
&lt;td&gt;300 MHz&lt;/td&gt;
&lt;td&gt;1.24 μeV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;甚高频&lt;/strong&gt;（Very high frequency）&lt;/td&gt;
&lt;td&gt;VHF&lt;/td&gt;
&lt;td&gt;10 m&lt;/td&gt;
&lt;td&gt;30 MHz&lt;/td&gt;
&lt;td&gt;124 neV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;高频&lt;/strong&gt;（High frequency）&lt;/td&gt;
&lt;td&gt;HF&lt;/td&gt;
&lt;td&gt;100 m&lt;/td&gt;
&lt;td&gt;3 MHz&lt;/td&gt;
&lt;td&gt;12.4 neV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;中频&lt;/strong&gt;（Medium frequency）&lt;/td&gt;
&lt;td&gt;MF&lt;/td&gt;
&lt;td&gt;1 km&lt;/td&gt;
&lt;td&gt;300 kHz&lt;/td&gt;
&lt;td&gt;1.24 neV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;低频&lt;/strong&gt;（Low frequency）&lt;/td&gt;
&lt;td&gt;LF&lt;/td&gt;
&lt;td&gt;10 km&lt;/td&gt;
&lt;td&gt;30 kHz&lt;/td&gt;
&lt;td&gt;124 peV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;甚低频&lt;/strong&gt;（Very low frequency）&lt;/td&gt;
&lt;td&gt;VLF&lt;/td&gt;
&lt;td&gt;100 km&lt;/td&gt;
&lt;td&gt;3 kHz&lt;/td&gt;
&lt;td&gt;12.4 peV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;超低频&lt;/strong&gt;（Ultra low frequency）&lt;/td&gt;
&lt;td&gt;ULF&lt;/td&gt;
&lt;td&gt;1 Mm&lt;/td&gt;
&lt;td&gt;300 Hz&lt;/td&gt;
&lt;td&gt;1.24 peV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;极低频&lt;/strong&gt;（Super low frequency）&lt;/td&gt;
&lt;td&gt;SLF&lt;/td&gt;
&lt;td&gt;10 Mm&lt;/td&gt;
&lt;td&gt;30 Hz&lt;/td&gt;
&lt;td&gt;124 feV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;极低频&lt;/strong&gt;（Extremely low frequency）&lt;/td&gt;
&lt;td&gt;ELF&lt;/td&gt;
&lt;td&gt;100 Mm&lt;/td&gt;
&lt;td&gt;3 Hz&lt;/td&gt;
&lt;td&gt;12.4 feV&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;X射线与伽马射线的区别部分基于其来源：由核衰变或其他核和次核/粒子过程产生的光子总是被称为伽马射线，而由高能内层原子电子的电子跃迁产生的光子则称为X射线。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_2"&gt;各波段发现历史&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;波段&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;可见光&lt;/strong&gt;（Visible light）&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1666年&lt;/strong&gt;，艾萨克·牛顿（Isaac Newton）：通过棱镜分解白光，首次提出光是由不同颜色组成的频谱。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;红外线&lt;/strong&gt;（Infrared radiation）&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1800年&lt;/strong&gt;，威廉·赫歇尔（William Herschel）：通过棱镜实验发现红外线，测量不同颜色光的温度，发现红光之外的区域温度最高。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;紫外线&lt;/strong&gt;（Ultraviolet radiation）&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1801年&lt;/strong&gt;，约翰·里特（Johann Ritter）：发现紫光之外的“化学射线”，即紫外线。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;无线电波&lt;/strong&gt;（Radio waves）&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1886年&lt;/strong&gt;，海因里希·赫兹（Heinrich Hertz）：通过实验生成并探测到无线电波，验证了麦克斯韦的电磁波理论。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;微波&lt;/strong&gt;（Microwaves）&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1888年&lt;/strong&gt;，海因里希·赫兹（Heinrich Hertz）：通过实验产生并测量了微波的反射和折射特性。&lt;br/&gt;1930-1940年代，雷达技术发展推动微波技术实用化。&lt;br/&gt;1945年，斯宾塞发明微波炉，用于加热食物&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;X射线&lt;/strong&gt;（X-rays）&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1895年&lt;/strong&gt;，威廉·伦琴（Wilhelm Röntgen）：在实验中偶然发现X射线，X射线能够穿透软组织但被骨骼阻挡。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;伽马射线&lt;/strong&gt;（Gamma rays）&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1900年&lt;/strong&gt;，保罗·维拉德（Paul Villard）：在研究镭的放射性时发现伽马射线。 &lt;br/&gt;&lt;strong&gt;1910年&lt;/strong&gt;，威廉·亨利·布拉格（William Henry Bragg）：证明伽马射线是电磁辐射。&lt;br/&gt; &lt;strong&gt;1914年&lt;/strong&gt;，欧内斯特·卢瑟福（Ernest Rutherford）和爱德华·安德拉德（Edward Andrade）：测量了伽马射线的波长，发现它们比X射线波长更短，具有更高的能量。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;不同段的频谱被赋予了不同的名称，是因为历史上发现的频谱的不同区域与物质的相互作用方式各不相同，使得它们仿佛是不同类型的辐射。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;波段&lt;/th&gt;
&lt;th&gt;与物质的相互作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;无线电波&lt;/strong&gt;（Radio）&lt;/td&gt;
&lt;td&gt;集体振荡的电荷载流子（如天线中的电子振荡传播），等离子体振荡（Plasma oscillation）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;微波至远红外&lt;/strong&gt;（Microwave through far infrared）&lt;/td&gt;
&lt;td&gt;等离子体振荡，分子旋转（Molecular rotation）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;近红外&lt;/strong&gt;（Near infrared）&lt;/td&gt;
&lt;td&gt;分子振动（Molecular vibration），等离子体振荡（仅在金属中）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;可见光&lt;/strong&gt;（Visible）&lt;/td&gt;
&lt;td&gt;分子电子激发（Molecular electron excitation，包含人类视网膜中的色素分子），等离子体振荡（仅在金属中）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;紫外线&lt;/strong&gt;（Ultraviolet）&lt;/td&gt;
&lt;td&gt;分子和原子价电子的激发，包含电子逸出（光电效应，Photoelectric effect）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;X射线&lt;/strong&gt;（X-rays）&lt;/td&gt;
&lt;td&gt;核心原子电子的激发与逸出，康普顿散射（Compton scattering，适用于低原子序数物质）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;伽马射线&lt;/strong&gt;（Gamma rays）&lt;/td&gt;
&lt;td&gt;高能核心电子的逸出（重元素），康普顿散射（适用于所有原子序数），原子核激发，包含原子核解离（Nuclear dissociation）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;高能伽马射线&lt;/strong&gt;（High-energy gamma rays）&lt;/td&gt;
&lt;td&gt;粒子-反粒子对的生成；在非常高的能量下，单个光子可通过与物质相互作用产生高能粒子与反粒子簇射。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="alphabetagamma"&gt;alpha、beta、gamma&lt;/h2&gt;
&lt;p&gt;不同于γ射线是电磁辐射，α射线和β射线是粒子辐射，但不妨碍一块看看：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;α射线：1899年，卢瑟福 发现并命名；1908年，通过实验确认其本质是 氦原子核（He²⁺）。&lt;/li&gt;
&lt;li&gt;β射线：1896年，贝克勒尔 首次发现放射性；1899年，卢瑟福 命名 β射线；1900年，让·佩兰 和 卢瑟福 确认其本质是 电子（β⁻）或 正电子（β⁺）。&lt;/li&gt;
&lt;li&gt;γ射线：1900年，保罗·维拉德 发现；1903年，卢瑟福 命名为 γ射线；1914年，卢瑟福与安德拉德 通过实验确认其是 高能电磁波。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;α射线（Alpha Rays）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;β射线（Beta Rays）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;γ射线（Gamma Rays）&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;组成&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2个质子 + 2个中子（氦原子核）&lt;/td&gt;
&lt;td&gt;高速电子（β⁻）或正电子（β⁺）&lt;/td&gt;
&lt;td&gt;高能电磁波（光子）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;电荷&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;带正电荷&lt;/td&gt;
&lt;td&gt;带负电荷（电子）或正电荷（正电子）&lt;/td&gt;
&lt;td&gt;不带电荷&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;质量&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;较大，约4个原子质量单位&lt;/td&gt;
&lt;td&gt;较小，电子或正电子的质量&lt;/td&gt;
&lt;td&gt;没有静止质量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;穿透力&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;弱，能被纸张或皮肤表层挡住&lt;/td&gt;
&lt;td&gt;中等，能被几毫米厚的铝板或塑料挡住&lt;/td&gt;
&lt;td&gt;强，需厚重的铅板或混凝土才能有效阻挡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;来源&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;重原子核的放射性衰变（如铀、镭）&lt;/td&gt;
&lt;td&gt;放射性同位素的β衰变&lt;/td&gt;
&lt;td&gt;伴随α或β衰变的核跃迁产生&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;危害&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;对外部危害小，但若进入体内危害极大&lt;/td&gt;
&lt;td&gt;对皮肤和浅层组织有较大危害，体内损害DNA&lt;/td&gt;
&lt;td&gt;穿透力强，能深度损害体内器官&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;屏蔽材料&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;纸张、皮肤、几厘米空气&lt;/td&gt;
&lt;td&gt;铝板、塑料、较厚的金属&lt;/td&gt;
&lt;td&gt;厚重的铅板或混凝土&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;应用&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;烟雾探测器、核能&lt;/td&gt;
&lt;td&gt;医学成像、辐射治疗、放射性示踪&lt;/td&gt;
&lt;td&gt;医疗成像（如CT扫描）、食品消毒、工业无损检测&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_3"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Electromagnetic_spectrum&lt;/li&gt;
&lt;li&gt;https://physics.info/em-spectrum/&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Gamma_ray&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Radiation&lt;/li&gt;
&lt;/ul&gt;</content><category term="Science"></category></entry><entry><title>电子的认知小记</title><link href="https://blog.debao.me/2024/09/the-discovery-and-evolution-of-electrons/" rel="alternate"></link><published>2024-09-21T01:00:00+08:00</published><updated>2024-09-21T01:00:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-09-21:/2024/09/the-discovery-and-evolution-of-electrons/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;电子是现代物理学的重要组成部分。但是电子的发现与研究并不是一蹴而就的，它经历了一个漫长而曲折的历史过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;电子是现代物理学的重要组成部分。但是电子的发现与研究并不是一蹴而就的，它经历了一个漫长而曲折的历史过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在粒子物理的标准模型中，电子属于轻子家族，是第一代轻子，同时也是费米子。电子参与电磁相互作用和弱相互作用，但不参与强相互作用。&lt;/p&gt;
&lt;h2 id="_1"&gt;电子发现与名字起源？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1838年，英国自然哲学家理查德·拉明（Richard Laming）首次提出了不可分割的电荷单位的概念，以解释原子的化学性质。&lt;/li&gt;
&lt;li&gt;1858年，德国物理学家普吕克尔（Julius Plücker）就首次观察到了阴极射线（电子）在磁场中的偏转。他的工作表明阴极射线可以被磁场影响，但当时并不知道这些射线的本质是什么。&lt;/li&gt;
&lt;li&gt;1891年，爱尔兰物理学家乔治·约翰斯通·斯托尼（George Johnstone Stoney）研究电解时，认为存在一种基本的电荷单位，并为这种电荷单位命名为“electron”。【英文 “electron” 是从 希腊语 “ἤλεκτρον” (ēlektron) 演变而来的，原意为“琥珀”。早在古希腊时期，人们就发现摩擦琥珀可以吸引轻小物体，这也是人类最早接触到的与电现象相关的实验现象之一。】&lt;/li&gt;
&lt;li&gt;1897年，J.J.汤姆森（J. J. Thomson）及其英国物理学家团队通过阴极射线管发现一种比氢原子轻得多的带负电的粒子。最初并没有直接称其为 “electron”，而是将这些粒子称为 “corpuscles” （意为“微粒”或“粒子”），由于这个词早在十七世纪的 “微粒学说”（Corpuscular Theory）中就被广泛使用，所以在汤姆森的时代它就已经带有一些过时的色彩，且容易与之前的概念混淆。最终“electron”获得众多科学家支持。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;電子（でんし，denshi）这个翻译最早起源于 日本。随后，中国的学者和翻译家沿用了日本翻译的许多科学术语，包括“电子”这个词。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_2"&gt;原子中电子模型进化历史?&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;序号&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;模型名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;提出年份&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;特点&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;背景&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;道尔顿原子模型&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1803 年&lt;/td&gt;
&lt;td&gt;1. 原子是不可再分的实心小球。&lt;br/&gt;2. 不同元素的原子具有不同的质量和性质。&lt;/td&gt;
&lt;td&gt;基于&lt;strong&gt;质量守恒定律&lt;/strong&gt;、&lt;strong&gt;定比定律&lt;/strong&gt;和&lt;strong&gt;倍比定律&lt;/strong&gt;，表明化学反应中物质以固定比例组合。道尔顿的气体研究揭示了物质由微小粒子（原子）组成。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;汤姆孙“葡萄干布丁”模型&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1897 年&lt;/td&gt;
&lt;td&gt;1. 原子是一个带正电的球体，电子像“葡萄干”一样嵌在其中。&lt;br/&gt;2. 电子带负电，原子整体保持电中性。&lt;/td&gt;
&lt;td&gt;通过&lt;strong&gt;阴极射线实验&lt;/strong&gt;发现电子，证明原子由更小的带电粒子组成。该模型试图解释原子中的正负电荷分布。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;拉塞福核式原子模型&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1911 年&lt;/td&gt;
&lt;td&gt;1. 原子的质量和正电荷集中在一个非常小的核心（原子核）。&lt;br/&gt;2. 电子像行星绕太阳一样绕着这个正电核旋转。&lt;/td&gt;
&lt;td&gt;拉塞福通过&lt;strong&gt;α粒子散射金箔实验&lt;/strong&gt;发现，大多数α粒子穿过金箔，少数发生强烈偏转，表明原子的质量集中在小核内，电子围绕核运动。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;玻尔量子化轨道模型&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1913 年&lt;/td&gt;
&lt;td&gt;1. 电子只能在特定的量子化轨道上绕核旋转。&lt;br/&gt;2. 电子从一个轨道跃迁到另一个轨道时，会吸收或释放能量，解释了氢原子的光谱。&lt;/td&gt;
&lt;td&gt;玻尔结合了&lt;strong&gt;普朗克量子理论&lt;/strong&gt;和拉塞福行星模型，提出电子能量是量子化的。该模型成功解释了氢原子的光谱，但无法解释多电子原子的复杂光谱。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;索末菲椭圆轨道模型&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1916 年&lt;/td&gt;
&lt;td&gt;1. 电子可以沿椭圆形轨道运动，而不仅限于圆形轨道。&lt;br/&gt;2. 引入了相对论效应，解释了氢原子光谱的精细结构和能级分裂。&lt;/td&gt;
&lt;td&gt;索末菲扩展了玻尔模型，提出电子可以沿椭圆轨道运动，并考虑了&lt;strong&gt;相对论效应&lt;/strong&gt;。该模型改进了玻尔模型，进一步解释了氢原子的光谱精细结构。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;现代量子力学电子云模型&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;20 世纪中期&lt;/td&gt;
&lt;td&gt;1. 电子不再有固定轨道，而是以概率云的形式分布在原子核周围。&lt;br/&gt;2. 电子的位置和动量无法同时精确测定（不确定性原理）。&lt;br/&gt;3. 电子具有波粒二象性（物质波理论）。&lt;/td&gt;
&lt;td&gt;基于&lt;strong&gt;薛定谔方程&lt;/strong&gt;、&lt;strong&gt;海森堡不确定性原理&lt;/strong&gt;和&lt;strong&gt;德布罗意波粒二象性&lt;/strong&gt;理论。电子云模型用概率描述电子的分布，取代了经典的确定性轨道概念。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="4"&gt;电子的 4 个量子数&lt;/h2&gt;
&lt;p&gt;电子的状态在原子内部可以通过 4 个量子数 来完全描述，它们分别是：主量子数、角量子数、磁量子数和自旋量子数。这些量子数描述了电子的能量、轨道的形状、方向以及自旋方向。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;主量子数&lt;/strong&gt;：主量子数n由玻尔模型提出的，用来解释氢原子的离散能级。但在量子力学中，主量子数是通过求解薛定谔方程的径向部分得到的，它决定了电子的能量层次和平均径向距离。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;角量子数&lt;/strong&gt;：通过薛定谔方程引入，描述电子的轨道角动量和轨道形状。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;磁量子数&lt;/strong&gt;：通过求解薛定谔方程的角向部分得到，描述电子轨道角动量在特定方向上的投影。塞曼效应验证了磁量子数的存在。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自旋量子数&lt;/strong&gt;：通过斯特恩-盖拉赫实验引入，描述电子的自旋角动量。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;在求解氢原子的薛定谔方程时，波函数 ψ(r, θ, ϕ) 可以分离为角向部分（θ, ϕ）和径向部分（r）。通过对角向和径向部分分别进行求解，可以得到三个量子数：主量子数 n、角量子数 l 和 磁量子数 mₗ。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;量子数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;符号&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;意义&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;取值范围&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;主量子数&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;n&lt;/td&gt;
&lt;td&gt;决定电子所在轨道的&lt;strong&gt;能量层级&lt;/strong&gt;，即电子距离原子核的远近。&lt;/td&gt;
&lt;td&gt;n = 1, 2, 3, … &lt;br/&gt;（正整数，越大表示能量越高，离核越远）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;角量子数&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;l&lt;/td&gt;
&lt;td&gt;决定电子轨道的&lt;strong&gt;形状&lt;/strong&gt;（对应不同的轨道种类：s, p, d, f）。&lt;/td&gt;
&lt;td&gt;l = 0, 1, 2, …, (n-1) &lt;br/&gt;（与主量子数相关，l = 0 表示 s 轨道，l = 1 表示 p 轨道等）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;磁量子数&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;mₗ&lt;/td&gt;
&lt;td&gt;决定电子轨道在空间中的&lt;strong&gt;取向&lt;/strong&gt;，即轨道在外部磁场中的方向。&lt;/td&gt;
&lt;td&gt;mₗ = -l, -(l-1), …, 0, …, (l-1), l &lt;br/&gt;（从 -l 到 l 的整数）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;自旋量子数&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;mₛ&lt;/td&gt;
&lt;td&gt;描述电子的&lt;strong&gt;自旋方向&lt;/strong&gt;，即电子自旋的角动量方向。&lt;/td&gt;
&lt;td&gt;mₛ = +½, -½ &lt;br/&gt;（只有两个可能的取值：上自旋或下自旋）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="n"&gt;主量子数 n&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;引入背景：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1913年，&lt;strong&gt;尼尔斯·玻尔（Niels Bohr）&lt;/strong&gt; 提出了 &lt;strong&gt;玻尔模型&lt;/strong&gt;，首次引入了主量子数 n，用来解释氢原子的离散能级。他假设电子只能在某些特定的轨道上绕核运动，轨道对应于不同的能量层。&lt;/li&gt;
&lt;li&gt;玻尔模型成功解释了氢原子光谱的 &lt;strong&gt;巴耳末系&lt;/strong&gt;，但无法解释更复杂的原子。&lt;/li&gt;
&lt;li&gt;随后，&lt;strong&gt;薛定谔方程（Schrödinger Equation）&lt;/strong&gt; 的求解为主量子数提供了更深刻的量子力学基础，确认电子在原子中的能级是离散的，并且与 n 相关。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;实验验证：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;氢原子的光谱线（如巴耳末系）实验直接验证了主量子数的存在，每个光谱线对应电子从一个能量层跃迁到另一个层。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="l"&gt;角量子数 l&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;引入背景：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;玻尔模型虽能解释氢原子光谱，但无法解释光谱中的 &lt;strong&gt;精细结构&lt;/strong&gt;（同一条光谱线的微小分裂）。&lt;/li&gt;
&lt;li&gt;为了解释这种精细结构，薛定谔通过解决氢原子的波动方程（薛定谔方程），引入了角量子数 l 来描述轨道的角动量。&lt;/li&gt;
&lt;li&gt;角量子数 l 决定了电子轨道的形状和角动量的大小。它是通过量子力学中的轨道角动量算符的特征值引入的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;实验验证：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过精细光谱（如氢原子光谱的精细分裂），科学家观察到不同的轨道形状和角动量，这为角量子数的引入提供了实验支持。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;电子的轨道运动&lt;/strong&gt; 并不仅仅是简单的绕核旋转，而是受到量子力学约束的复杂运动，具有不同的形状和角动量。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ml"&gt;磁量子数 mₗ&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;引入背景：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1896年，&lt;strong&gt;彼得·塞曼（Pieter Zeeman）&lt;/strong&gt; 发现，当原子处于外部磁场中时，其光谱线会发生分裂，这一效应被称为 &lt;strong&gt;塞曼效应（Zeeman Effect）&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;塞曼效应表明，电子的轨道角动量在外部磁场中有不同的取向，这导致光谱线分裂为多个不同的成分。&lt;/li&gt;
&lt;li&gt;为解释这种现象，量子力学引入了磁量子数 mₗ，它描述了轨道角动量在磁场中的投影。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;实验验证：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;塞曼效应的实验直接验证了磁量子数的存在。不同的 mₗ 值对应于轨道在磁场中不同的取向，导致光谱线的分裂。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ms"&gt;自旋量子数 mₛ&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;引入背景：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1922年，&lt;strong&gt;斯特恩-盖拉赫实验（Stern-Gerlach Experiment）&lt;/strong&gt; 发现，当银原子束通过非均匀磁场时，束流分裂为两束。这一现象无法通过当时的轨道角动量理论解释。&lt;/li&gt;
&lt;li&gt;为解释这一现象，1925年，&lt;strong&gt;乔治·乌伦贝克（George Uhlenbeck）&lt;/strong&gt; 和 &lt;strong&gt;塞缪尔·古德斯密特（Samuel Goudsmit）&lt;/strong&gt; 提出了电子具有一种新的内禀属性，称为 &lt;strong&gt;自旋（Spin）&lt;/strong&gt;，并且自旋只有两个可能的取向。&lt;/li&gt;
&lt;li&gt;自旋量子数 mₛ 是电子固有的量子属性，与电子的轨道无关。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;实验验证：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;斯特恩-盖拉赫实验直接证明了自旋的存在，表明电子在磁场中的行为不仅与轨道角动量有关，还与自旋角动量有关。&lt;/li&gt;
&lt;li&gt;电子的自旋与 &lt;strong&gt;泡利不相容原理&lt;/strong&gt; 结合，解释了多电子原子的电子排布规律。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;电子的自旋是通过量子数来描述的。尽管自旋的大小固定为 ℏ/2，它在某个特定方向（比如 z 轴）上的投影却只能取离散的值 ±ℏ/2（即正方向和反方向）。【在经典物理中，角动量分量可以连续变化，但在量子力学中，自旋的投影只能取离散的值。】&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_3"&gt;电子其他属性&lt;/h2&gt;
&lt;p&gt;在粒子物理的 标准模型（Standard Model） 中，电子属于 轻子家族（lepton family），是第一代轻子（first-generation lepton），同时也是 费米子（fermion）。电子参与 电磁相互作用（electromagnetic interaction） 和 弱相互作用（weak interaction），但不参与 强相互作用（strong interaction）。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;证实方法&lt;/th&gt;
&lt;th&gt;实验描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;电荷（Charge）&lt;/td&gt;
&lt;td&gt;密立根油滴实验（Millikan Oil Drop Experiment, 1909）&lt;/td&gt;
&lt;td&gt;测量油滴在电场中的平衡，确定了单个电子的电荷量。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;质量（Mass）&lt;/td&gt;
&lt;td&gt;J.J. 汤姆森阴极射线实验（Cathode Ray Experiment, 1897）&lt;/td&gt;
&lt;td&gt;通过阴极射线的偏转计算电子的电荷质量比，结合密立根实验得出电子的质量。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;自旋（Spin）&lt;/td&gt;
&lt;td&gt;斯特恩-盖拉赫实验（Stern-Gerlach Experiment, 1922）&lt;/td&gt;
&lt;td&gt;银原子通过不均匀磁场分为两束，证明了电子的自旋量子数为 1/2。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;电磁相互作用（EM Interaction）&lt;/td&gt;
&lt;td&gt;洛伦兹力定律的验证（Lorentz Force Law Verification）&lt;/td&gt;
&lt;td&gt;电子在电场和磁场中受到洛伦兹力，偏转路径证实电磁相互作用。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;弱相互作用（Weak Interaction）&lt;/td&gt;
&lt;td&gt;β 衰变实验（Beta Decay Experiments）&lt;/td&gt;
&lt;td&gt;中子衰变为质子并释放电子，证明电子参与弱相互作用。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;不参与强相互作用（No Strong Interaction）&lt;/td&gt;
&lt;td&gt;粒子对撞实验（Particle Collider Experiments）&lt;/td&gt;
&lt;td&gt;高能物理实验中，电子不参与强相互作用，只感应电磁和弱相互作用。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;波粒二象性（Wave-Particle Duality）&lt;/td&gt;
&lt;td&gt;电子双缝实验（Electron Double-Slit Experiment, 1927）&lt;/td&gt;
&lt;td&gt;电子通过双缝产生干涉图样，表明电子具有波粒二象性。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;磁矩（Magnetic Moment）&lt;/td&gt;
&lt;td&gt;磁共振实验（Magnetic Resonance Experiments）&lt;/td&gt;
&lt;td&gt;通过电子自旋共振（ESR）和核磁共振（NMR）测量电子的磁矩。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;稳定性（Stability）&lt;/td&gt;
&lt;td&gt;实验观测（Experimental Observation）&lt;/td&gt;
&lt;td&gt;电子在自然界中极为稳定，实验没有观测到电子自发衰变。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;反粒子（Antiparticle）&lt;/td&gt;
&lt;td&gt;正电子的发现（Positron Discovery, 1932）&lt;/td&gt;
&lt;td&gt;卡尔·安德森在宇宙射线中发现了正电子，这是一种带正电的反粒子。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;能级跃迁（Energy Level Transitions）&lt;/td&gt;
&lt;td&gt;原子光谱实验（Atomic Spectroscopy）&lt;/td&gt;
&lt;td&gt;电子在不同能级之间跃迁，吸收或发射特定频率的光，形成离散的光谱线。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;参与化学键（Chemical Bonding）&lt;/td&gt;
&lt;td&gt;X射线衍射与量子化学实验（X-ray Diffraction and Quantum Chemistry）&lt;/td&gt;
&lt;td&gt;通过 X 射线衍射实验和分子轨道理论，证明电子的排列决定了化学键的形成。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;参与电流（Electrical Current）&lt;/td&gt;
&lt;td&gt;欧姆定律与电路实验（Ohm's Law and Circuit Experiments）&lt;/td&gt;
&lt;td&gt;自由电子在导体中流动形成电流，符合欧姆定律 V=IR。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;参与热传导（Thermal Conductivity）&lt;/td&gt;
&lt;td&gt;金属热导率实验（Thermal Conductivity of Metals）&lt;/td&gt;
&lt;td&gt;通过测量金属的热导率，发现电子在传递热量中起主要作用，符合 Wiedemann-Franz 定律。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_4"&gt;电子半径&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;电子半径问题是现代理论物理学中一个具有挑战性的问题。假设电子具有有限半径与相对论理论的前提不兼容。另一方面，一个点状电子（零半径）会引发严重的数学困难，因为电子的自能趋于无穷大。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;经典电动力学计算出的经典电子半径约为 2.8179×10⁻¹⁵ 米，但这是基于简化模型，并不反映电子的真实结构。经典半径是通过假设电子的静止能量完全由其电场能量贡献得出的。然而，当前的高能物理实验给出的电子半径上限为小于 10⁻²² 米，这表明电子在实验中表现得像一个点粒子，没有可观测的空间扩展。&lt;/p&gt;
&lt;p&gt;假设电子有有限半径与狭义相对论不兼容，因为相对论要求粒子的质量和电荷在任何速度下保持不变。如果电子有有限的半径，随着速度增加，电子的形状和电荷分布可能会发生变化，这与实验观测结果不符。&lt;/p&gt;
&lt;p&gt;在量子力学中，电子通常被视为点粒子，即没有空间扩展，半径为零。但这种假设会引发数学上的困难，例如在经典电动力学框架下，电子的电场能量会趋于无穷大（即所谓的自能问题）。这一点在量子电动力学（QED）中通过重整化（Renormalization）方法得到了解决？？&lt;/p&gt;
&lt;h2 id="_5"&gt;原子核外电子壳层结构&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;电子的壳层结构是用来描述电子在原子中如何分布的模型。根据量子力学，电子并不是像行星围绕太阳那样沿着确定的轨道绕原子核运动，而是以一定的概率分布在分层的能级上。这些分层的能级就是我们所说的壳层。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;电子围绕原子核的排列遵循以下规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主量子数 n 决定了电子的能级或壳层。主电子层从内向外分别是：K,L,M,N,O,P以及Q，或记作1,2,3,4,5,6以及7。&lt;/li&gt;
&lt;li&gt;每个壳层 包含不同的亚层，由 角量子数 l 决定，分别对应 s、p、d、f 等。&lt;/li&gt;
&lt;li&gt;每个亚层 包含不同数量的轨道，且每个轨道中最多容纳 2 个电子。&lt;/li&gt;
&lt;li&gt;电子的排列 遵循 能量最低原则 和 泡利不相容原理，这决定了电子如何填充各个壳层和亚层。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="klm"&gt;主量子数 与 KLM&lt;/h3&gt;
&lt;p&gt;在玻尔提出他的模型后，查尔斯·巴克拉（Charles Barkla）通过 X 射线吸收实验，进一步印证了电子层的存在。他发现不同元素对 X 射线的吸收和发射具有不同的特性，并且这种行为可以归因于电子的壳层分布。&lt;/p&gt;
&lt;p&gt;巴克拉将这些壳层称为 K 层、L 层 和 M 层，按照字母顺序排列。这些壳层名称后来与主量子数 n 值对应，并用于描述电子的能级。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这些字母没有特定的物理含义，巴克拉只是从字母表的中间（K）开始命名，以避免与其他已有标记混淆。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;需注意的是，巴克拉的实验独立于玻尔模型，但为电子层的存在提供了实验支持。巴克拉的研究表明，电子确实分布在不同的壳层中，并且壳层的排列与 X 射线的吸收和发射特性紧密相关。&lt;/p&gt;
&lt;h3 id="spdf"&gt;角量子数 与 spdf&lt;/h3&gt;
&lt;p&gt;s、p、d、f 这些字母实际上来源于历史上光谱学的研究。在研究原子的光谱时，科学家们观察到不同的原子会发射或吸收不同的光线，这些光线在光谱仪上表现为一系列的光谱线。根据光谱线的特点，早期的光谱学家给这些线分成了几类，并且用字母来表示。具体来说：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;s：sharp（尖锐的），最早用于描述光谱中较为清晰、锐利的光谱线。&lt;/li&gt;
&lt;li&gt;p：principal（主线的），用于表示光谱中的主线。&lt;/li&gt;
&lt;li&gt;d：diffuse（弥散的），用于描述那些较为宽广、模糊的光谱线。&lt;/li&gt;
&lt;li&gt;f：fundamental（基本的），用于表示更复杂的光谱线。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些字母后来被沿用下来，用来标记电子的不同 亚层（轨道种类），并与 角量子数  l 相关联。&lt;/p&gt;
&lt;p&gt;每个亚层包含不同数量的轨道，轨道的数量由磁量子数 mₗ 决定，每个轨道最多容纳 2 个电子。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;角量子数 l&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;亚层（轨道种类）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;轨道数&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;轨道形状&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;球形&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;p&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;哑铃形&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;四叶草形（例外：dz² 形状像甜甜圈）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;f&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;复杂形状&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;g&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;更复杂形状&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;h&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;极其复杂形状&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;由量子数n、l确定的亚层通常这样表示：把n的数值写在前面，并排写出代表l值的字母，如1s、2s、2p、3s、3p、...等。&lt;/p&gt;
&lt;h3 id="_6"&gt;电子填充规则&lt;/h3&gt;
&lt;p&gt;由于泡利不相容原理，每个轨道中最多只能容纳两个自旋相反的电子。因此，每个轨道最多容纳 2 个电子。&lt;/p&gt;
&lt;p&gt;结合前面的轨道数量，每个亚壳层能够容纳的电子数量如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;s ：1 个轨道，最多容纳 2 个电子。&lt;/li&gt;
&lt;li&gt;p ：3 个轨道，最多容纳 6 个电子。&lt;/li&gt;
&lt;li&gt;d ：5 个轨道，最多容纳 10 个电子。&lt;/li&gt;
&lt;li&gt;f ：7 个轨道，最多容纳 14 个电子。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;电子在原子中的填充顺序遵循能量最低原则，即电子优先填充到能量最低的轨道。能量较低的壳层和亚壳层会先被电子填充，然后才是能量较高的壳层。&lt;/p&gt;
&lt;p&gt;电子填充的顺序可以用&lt;strong&gt;奥夫鲍原则（Aufbau Principle）&lt;/strong&gt;来描述，它遵循以下顺序：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="err"&gt;→&lt;/span&gt;&lt;span class="mf"&gt;2&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="err"&gt;→&lt;/span&gt;&lt;span class="mf"&gt;2&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="err"&gt;→&lt;/span&gt;&lt;span class="mf"&gt;3&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="err"&gt;→&lt;/span&gt;&lt;span class="mf"&gt;3&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="err"&gt;→&lt;/span&gt;&lt;span class="mf"&gt;4&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="err"&gt;→&lt;/span&gt;&lt;span class="mf"&gt;3&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="err"&gt;→&lt;/span&gt;&lt;span class="mf"&gt;4&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="err"&gt;→&lt;/span&gt;&lt;span class="mf"&gt;5&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="err"&gt;→&lt;/span&gt;&lt;span class="mf"&gt;4&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="err"&gt;→&lt;/span&gt;&lt;span class="mf"&gt;5&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="err"&gt;…&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;注意，虽然 3d 轨道属于第三壳层，但它的能量比 4s 高，因此 4s 轨道会先填满，之后才是 3d 轨道&lt;/p&gt;
&lt;h3 id="_7"&gt;元素周期表&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;电子填充规则决定了元素周期表的结构。元素周期表的每个周期对应主量子数 n，而每个族的元素具有相似的最外层电子排布，因此化学性质相似。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;元素周期表的&lt;strong&gt;周期（Period）&lt;/strong&gt;代表元素的主量子数 n，即最外层电子所在的壳层。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第 1 周期的元素（氢和氦）对应 n=1，即电子填充在 1s 轨道。&lt;/li&gt;
&lt;li&gt;第 2 周期的元素（锂到氖）对应 n=2，即电子填充在 2s 和 2p 轨道。&lt;/li&gt;
&lt;li&gt;第 3 周期的元素（钠到氩）对应 n=3，即电子填充在 3s 和 3p 轨道。&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;元素周期表的族（Group）与元素的外层电子数密切相关。相同族的元素具有相似的化学性质，因为它们的最外层电子数（价电子数）相同。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第 1 族（碱金属）：这些元素的电子排布都以 ns¹ 结尾，最外层有 1 个电子。它们都非常活泼，容易失去这个电子形成 +1 价离子。&lt;/li&gt;
&lt;li&gt;第 2 族（碱土金属）：这些元素的电子排布都以 ns² 结尾，最外层有 2 个电子。它们容易失去这两个电子形成 +2 价离子。&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;li&gt;第 17 族（卤素）：这些元素的电子排布都以 ns²np⁵ 结尾，最外层有 7 个电子。它们非常活泼，容易得到 1 个电子形成 −1 价离子。&lt;/li&gt;
&lt;li&gt;第 18 族（稀有气体）：这些元素的电子排布都以 ns²np⁶ 结尾（氦是 1s²），它们的最外层电子已满，因此化学性质非常稳定，不容易发生化学反应。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-energy-band"&gt;固体中电子-能带（Energy Band）&lt;/h2&gt;
&lt;p&gt;在孤立原子中，电子占据离散的能级，例如 1s、2s、2p 等。但是，当许多原子靠近并形成晶体时，原子轨道之间会发生相互重叠和相互作用，导致原子能级分裂为一系列非常密集的能级。由于这些能级非常接近，因此可以认为它们形成了连续的能带。&lt;/p&gt;
&lt;p&gt;能带理论是描述固体中电子行为的核心理论。它解释了导体、绝缘体和半导体的导电机制。能带理论的发展经历了多个重要阶段&lt;/p&gt;
&lt;h3 id="_8"&gt;能带历史？&lt;/h3&gt;
&lt;h4 id="drude-model-lorentz-model-1900"&gt;早期的经典模型：德鲁德模型（Drude Model） 和洛伦兹模型（Lorentz Model） (1900 年代)&lt;/h4&gt;
&lt;p&gt;最早的金属导电模型是由 &lt;strong&gt;保罗·德鲁德（Paul Drude）&lt;/strong&gt; 和 &lt;strong&gt;亨德里克·洛伦兹（Hendrik Lorentz）&lt;/strong&gt; 提出的 &lt;strong&gt;自由电子模型（Free Electron Model）&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;德鲁德模型（1900 年）&lt;/strong&gt;：将金属中的电子看作自由运动的粒子，类似于理想气体中的分子。这些电子被认为能够在金属中自由移动，只有在遇到离子核时才会发生碰撞。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;洛伦兹的贡献&lt;/strong&gt;：将德鲁德模型扩展到了经典电磁学框架内，并通过此模型解释了金属中的电导率和热导率关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然而，这些经典模型无法解释某些现象，如电子的热容量与实验结果的差异，以及电导率对温度的依赖性。这些问题为后来的量子理论提出了挑战。&lt;/p&gt;
&lt;h4 id="sommerfeld-model-1928"&gt;量子力学的引入：索末菲模型（Sommerfeld Model） (1928 年)&lt;/h4&gt;
&lt;p&gt;随着量子力学的发展，&lt;strong&gt;阿诺·索末菲（Arnold Sommerfeld）&lt;/strong&gt; 在 1928 年提出了 &lt;strong&gt;量子自由电子模型&lt;/strong&gt;，对德鲁德模型进行了量子化修正，形成了 &lt;strong&gt;索末菲模型&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;量子自由电子模型&lt;/strong&gt;：引入了 &lt;strong&gt;费米-狄拉克统计（Fermi-Dirac Statistics）&lt;/strong&gt;，从量子力学角度解释了金属中电子的分布。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;费米能级（Fermi Level）&lt;/strong&gt; 的概念被引入，指出电子在金属中遵循费米-狄拉克分布，并且只有接近费米能级的电子能够参与导电。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;尽管索末菲模型改进了对金属导电性的解释，但仍然没有解释为何某些材料是 &lt;strong&gt;绝缘体（Insulators）&lt;/strong&gt; 或 &lt;strong&gt;半导体（Semiconductors）&lt;/strong&gt;，而另一些是 &lt;strong&gt;导体（Conductors）&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id="felix-bloch-1928"&gt;布洛赫定理和能带理论的基础：费利克斯·布洛赫（Felix Bloch） (1928 年)&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;费利克斯·布洛赫（Felix Bloch）&lt;/strong&gt; 在 1928 年提出了&lt;strong&gt;布洛赫定理（Bloch's Theorem）&lt;/strong&gt;，为能带理论奠定了基础。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;布洛赫定理指出，在 &lt;strong&gt;周期性晶格（Periodic Lattice）&lt;/strong&gt; 中，电子的波函数可以表示为周期性函数的乘积。这意味着电子的运动会受到晶格周期性势场的调制。&lt;/li&gt;
&lt;li&gt;由于晶体中势场的周期性，电子不再具有连续的能量，而是形成了离散的 &lt;strong&gt;能带（Energy Bands）&lt;/strong&gt;，其中电子能量只能处于某些允许的能量范围内。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;布洛赫定理首次解释了电子在晶体中的量子行为，并且指出在晶体中电子的能量状态会形成 &lt;strong&gt;允许带（Allowed Bands）&lt;/strong&gt; 和 &lt;strong&gt;禁带（Forbidden Bands，或 Band Gaps）&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A.H. 威尔逊（Alan Herries Wilson）&lt;/strong&gt; 在 1931 年进一步发展了能带理论，特别是对 &lt;strong&gt;半导体（Semiconductors）&lt;/strong&gt; 和 &lt;strong&gt;绝缘体（Insulators）&lt;/strong&gt; 的导电机制进行了详细的量子力学描述。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;威尔逊通过能带结构解释了不同材料的导电性差异。他指出，材料的导电性取决于 &lt;strong&gt;费米能级（Fermi Level）&lt;/strong&gt; 和 &lt;strong&gt;导带（Conduction Band）&lt;/strong&gt; 与 &lt;strong&gt;价带（Valence Band）&lt;/strong&gt; 之间的 &lt;strong&gt;禁带宽度（Band Gap Width）&lt;/strong&gt;。&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;导体（Conductors）&lt;/strong&gt;：价带和导带重叠，电子可以自由地进入导带并参与导电。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;绝缘体（Insulators）&lt;/strong&gt;：导带和价带之间的禁带很宽，电子无法轻易跃迁到导带，因此无法导电。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;半导体（Semiconductors）&lt;/strong&gt;：导带和价带之间的禁带较窄，电子可以通过温度或光的激发跃迁到导带，因此具有一定的导电性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;威尔逊的贡献为半导体材料的理解提供了理论基础，并为半导体器件的发明奠定了框架。&lt;/p&gt;
&lt;h4 id="1940-1950"&gt;半导体物理的发展：晶体管与信息技术革命（1940-1950 年代）&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;半导体物理学&lt;/strong&gt; 的发展在 20 世纪 40 年代和 50 年代进一步推动了能带理论的应用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;晶体管（Transistor）&lt;/strong&gt; 的发明依赖于对半导体能带结构的理解，这标志着固态电子学的兴起，进而引发了 &lt;strong&gt;信息技术革命&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;半导体材料的导电性可以通过 &lt;strong&gt;掺杂（Doping）&lt;/strong&gt; 控制，形成 &lt;strong&gt;n 型半导体（n-type Semiconductors）&lt;/strong&gt; 和 &lt;strong&gt;p 型半导体（p-type Semiconductors）&lt;/strong&gt;，这进一步推动了半导体器件的发展。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="dft-topological-insulators"&gt;其他：密度泛函理论（DFT） 和拓扑绝缘体（Topological Insulators）&lt;/h4&gt;
&lt;p&gt;随着计算能力的提高，科学家们能够通过数值方法精确计算材料的能带结构。现代能带理论的进一步发展包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;密度泛函理论（Density Functional Theory, DFT）&lt;/strong&gt;：自 1960 年代以来，DFT 成为计算固体材料电子结构的重要工具，广泛应用于能带结构的计算和预测。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;拓扑绝缘体（Topological Insulators）&lt;/strong&gt;：近年来，科学家发现了拓扑绝缘体这种特殊的材料，它们在体内是绝缘体，但在表面上具有导电性。这为能带理论带来了新的研究方向。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_9"&gt;重要近似&lt;/h3&gt;
&lt;p&gt;理论上，薛定谔方程精确描述了一个系统的运动状态。只要对其求解，就能得到任何想要的可观测量。但对含有N个原子的晶体而言，求解不现实。为此，需要对晶体中的电子状态做了重要的近似，使其变得简洁可解。&lt;/p&gt;
&lt;h4 id="born-oppenheimer"&gt;Born-Oppenheimer 绝热近似&lt;/h4&gt;
&lt;p&gt;假设离子实是静止不动的，因为原子核质量大、运动速度（振动幅度）慢，电子的运动可以在固定的离子势场中处理。&lt;/p&gt;
&lt;h4 id="_10"&gt;单电子近似&lt;/h4&gt;
&lt;p&gt;将多电子系统简化为单电子系统，假设每个电子独立地在由离子实和其他电子产生的平均势场中运动。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;通过平均场理论（如 Hartree-Fock 近似或局域密度近似），电子间的相互作用被平均化处理，而不是完全忽略。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="_11"&gt;周期场近似&lt;/h4&gt;
&lt;p&gt;假设晶体中的原子按照周期性排列，形成周期性势场。电子的运动问题简化为“单电子在周期势场中的运动”。&lt;/p&gt;
&lt;h3 id="fermi-level"&gt;费米能级（Fermi Level）&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;费米能级&lt;/strong&gt; 是固体物理中的重要概念，表示在 &lt;strong&gt;绝对零度（0 K）&lt;/strong&gt; 时，材料中电子的最高能量状态。&lt;/p&gt;
&lt;h4 id="-fermi-dirac-distribution"&gt;费米-狄拉克分布（Fermi-Dirac Distribution）&lt;/h4&gt;
&lt;p&gt;费米-狄拉克分布描述了任意温度下电子占据能级的概率：&lt;/p&gt;
&lt;div class="math display"&gt;
f(E) = \frac{1}{e^{(E - E_F) / k_B T} + 1}
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;E_F&lt;/span&gt; 是费米能级，&lt;span class="math inline"&gt;f(E)&lt;/span&gt; 是能级 &lt;span class="math inline"&gt;E&lt;/span&gt; 被占据的概率。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 &lt;strong&gt;0 K&lt;/strong&gt; 时，能量低于 &lt;span class="math inline"&gt;E_F&lt;/span&gt; 的能级被完全占据，高于 &lt;span class="math inline"&gt;E_F&lt;/span&gt; 的能级为空。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;费米能级是 &lt;strong&gt;0 K&lt;/strong&gt; 时，电子填满的最高能级。对于不同材料，费米能级的位置决定了其导电性能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="_12"&gt;费米能级在不同材料中的位置&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;导体（Conductor）&lt;/strong&gt;：费米能级位于导带中，电子可以自由移动，材料导电性强。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;半导体（Semiconductor）&lt;/strong&gt;：费米能级位于 &lt;strong&gt;禁带（Band Gap）&lt;/strong&gt; 中，通过热激发或掺杂，电子可以跃迁到导带。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;绝缘体（Insulator）&lt;/strong&gt;：费米能级位于宽禁带中，电子很难跃迁，材料不导电。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;在半导体器件中，通过掺杂调节费米能级，可以改变半导体器件的特性。费米能级决定了电子是否能跃迁到导带并参与导电。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_13"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Electron_shell&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Electron_configuration&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Atom&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/History_of_atomic_theory&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Electronic_band_structure&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Electron&lt;/li&gt;
&lt;li&gt;https://zhuanlan.zhihu.com/p/511274994&lt;/li&gt;
&lt;/ul&gt;</content><category term="Science"></category></entry><entry><title>真空磁导率与真空介电常数小记</title><link href="https://blog.debao.me/2024/09/notes-on-vacuum-magnetic-permeability-and-vacuum-permittivity/" rel="alternate"></link><published>2024-09-19T23:12:00+08:00</published><updated>2024-09-19T23:12:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-09-19:/2024/09/notes-on-vacuum-magnetic-permeability-and-vacuum-permittivity/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;似乎很杂、很乱。简单捋一捋&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;真空介电常数是从静电力常量中推导出来的，而静电力常量最早通过库伦扭秤测量的。真空磁 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;似乎很杂、很乱。简单捋一捋&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;真空介电常数是从静电力常量中推导出来的，而静电力常量最早通过库伦扭秤测量的。真空磁导率是人为规定的（为了在SI单位制中引入安培）。这两个量在麦克斯韦方程中有和光速直接联系上（尽管麦克斯韦当时用的不是SI单位制，原始方程中也没有这两个常数）。&lt;/p&gt;
&lt;h2 id="_1"&gt;简单看看&lt;/h2&gt;
&lt;p&gt;真空磁导率vacuum magnetic permeability（也称为真空导率、自由空间导率、真空的导率、磁常数）是一个物理常数，通常用 μ₀ 表示。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2019年之后：μ₀ 是一个试验测定的常数 &lt;code&gt;μ₀ = 4π × 0.99999999987(16)×10⁻⁷ H/m&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;2019年之前：μ₀ 拥有一个定义值 &lt;code&gt;μ₀ = 4π × 10⁻⁷ H/m&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;真空介电常数vacuum permittivity，通常表示为ε₀，是经典真空的绝对介电常数值。它也可以称为自由空间的介电常数、电常数或真空的分布电容。它的数值由 μ₀ 和 真空中的光速确定&lt;/p&gt;
&lt;div class="math display"&gt;
\epsilon_0 = \frac{1}{\mu_0c^2}
&lt;/div&gt;

&lt;p&gt;在新的 SI 单位制中，普朗克常数 ℎ、光速 c 和 基本电荷 e 都是定义值，因此可以通过精细结构常数（Fine structure constant） α 来推导出 μ₀ 和 ε₀：&lt;/p&gt;
&lt;div class="math display"&gt;
\alpha = \frac{2 \varepsilon_0 h c}{e^2} = \frac{2 h}{\mu_0 e^2 c}
&lt;/div&gt;

&lt;h2 id="_2"&gt;背景&lt;/h2&gt;
&lt;p&gt;在19世纪末至20世纪中期，物理学家们主要使用的是CGS单位制（厘米-克-秒制）。在 CGS 单位制中，电磁学的方程并没有引入像 &lt;code&gt;μ₀&lt;/code&gt;  这样的常数。取而代之的是，物理学家通过直接的实验关系来定义电磁量。比如在 CGS 单位制下，磁感应强度 𝐵 和磁场强度 𝐻 的单位是相同的（高斯单位），这种情况下 𝐵 和 𝐻 在真空中的关系相对简单：它们数值上是相等的。&lt;/p&gt;
&lt;h3 id="cgs"&gt;CGS 下的定律&lt;/h3&gt;
&lt;p&gt;在 CGS 单位制中，电磁学有两个主要的子系统：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静电单位制（ESU）：用于描述静电现象。&lt;/li&gt;
&lt;li&gt;电磁单位制（EMU）：用于描述电流和磁场的相互作用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;statampere 和 abampere 是在这两个不同子系统中分别定义的电流单位：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;statampere（esu/s）：基于电荷流动的静电学定义，量纲是电荷（esu）除以时间（秒）。&lt;/li&gt;
&lt;li&gt;abampere（abA）：基于安培力定律，通过电流产生的磁场和磁力效应定义，量纲是力（dyne）和长度（cm）的平方根。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_3"&gt;安培力定律&lt;/h4&gt;
&lt;p&gt;在 &lt;strong&gt;CGS 单位制&lt;/strong&gt;中，安培力定律的表达式不包含 &lt;code&gt;μ₀&lt;/code&gt; 这样的常数，因为该单位制下的电流单位与力的单位直接相关。&lt;/p&gt;
&lt;div class="math display"&gt;
F_m = 2\frac{I_1 I_2}{r}
&lt;/div&gt;

&lt;p&gt;其中 &lt;span class="math inline"&gt;F_m&lt;/span&gt; 的单位用 dyne 表示，r 单位用 cm 表示，可以直接推导出电荷单位 &lt;span class="math inline"&gt;\text{abampere} = (\text{cm}\cdot\text{dyne})^{1/2}&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在CGS电磁单位制（emu, electromagnetic units）下，电流的单位是电磁单位电流，通常称为 abampere 或 biot，符号为 abA。1 abampere 是指在 CGS 单位制下，产生 1 达因每厘米的磁力的电流。具体来说，两个相距 1 厘米的平行导线中，若各流过 1 abampere 的电流，则它们之间的磁力为 2 达因。1 abampere 的大小相当于 10 安培（1 abA = 10 A）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="_4"&gt;库伦定律&lt;/h4&gt;
&lt;p&gt;在 &lt;strong&gt;CGS 单位制&lt;/strong&gt;中，库仑定律的表达式不包含 &lt;code&gt;ε₀&lt;/code&gt; 这样的常数，因为该单位制下的电荷单位与力的单位直接相关。&lt;/p&gt;
&lt;div class="math display"&gt;
F = \frac{q_1 q_2}{r^2}
&lt;/div&gt;

&lt;p&gt;在库伦定律中，F 的单位用 dyne 表示，r 单位用 cm 表示，可以直接推导出电荷单位 &lt;span class="math inline"&gt;\text{esu} = \text{cm}\cdot\text{dyne}^{1/2}&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在静电单位制（esu, electrostatic units）下，电流的单位被定义为每秒通过的电荷量。电流单位是静电单位电流，记作 esu/s 或 statampere。1 esu/s 是指每秒钟通过一个 esu 的电荷量（静电单位电荷）。由于 1 esu = 3.33564 × 10⁻¹⁰ 库仑，因此 1 esu/s 大约等于 3.33564 × 10⁻¹⁰ 安培。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="si"&gt;SI 单位制&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;statampere 和 abampere 在 CGS 单位制下的量纲不一致，是促使 SI 单位制引入统一的&lt;strong&gt;安培（A）&lt;/strong&gt;作为电流基本单位的原因??&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当物理学家们转向国际单位制（SI制）时，电场和磁场的单位不再直接兼容。1948年之后，为了统一电磁学中的单位，并使得电流、电场、磁场和力之间的关系更加明确，因此引入了物理常数 &lt;code&gt;μ₀&lt;/code&gt; 和 &lt;code&gt;ε₀&lt;/code&gt; 来转换这些量度：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;μ₀：真空磁导率，用来描述磁场和电流之间的比例关系。&lt;/li&gt;
&lt;li&gt;ε₀：真空介电常数，用来描述电场和电荷之间的比例关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_5"&gt;真空磁导率&lt;/h2&gt;
&lt;p&gt;“磁常数”这一名称也曾被标准组织短暂使用，目的是避免使用具有物理意义的术语“导率”和“真空”。因为 μ₀ 在2019年之前是一个定义的值，而不是实验测量的结果。&lt;/p&gt;
&lt;h3 id="_6"&gt;安培力定律&lt;/h3&gt;
&lt;p&gt;在 SI 单位制中，电磁学中引入了物理常数 &lt;code&gt;μ₀&lt;/code&gt; 来连接电流、磁场和力的关系。尽管在 CGS 单位制中，这些关系通过实验定义的单位直接反映出来，因此不需要额外的常数。&lt;/p&gt;
&lt;div class="math display"&gt;
F_m = \frac{\mu_0}{2\pi} \frac{I_1 I_2}{r}
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;从 1948 年到 2019 年，安培被定义为“如果在真空中保持两个无限长、具有可忽略圆截面的平行导线之间的恒定电流，并使它们相距 1 米，则这些导线之间每米长度的力为 2×10⁻⁷ 牛顿”。这相当于定义 μ₀ 为精确的 4π×10⁻⁷ H/m&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;安培力定律 可以根据比奥-萨法尔定律和洛伦兹力定律导出，不过洛伦兹力定律则是在电磁学发展较为成熟之后，由洛伦兹在19世纪末提出的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;比奥-萨法尔定律 —— 1820年&lt;/li&gt;
&lt;li&gt;安培力定律 —— 1820年&lt;/li&gt;
&lt;li&gt;洛伦兹力定律 —— 1895年&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_7"&gt;磁场强度、磁感应强度&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;μ₀&lt;/code&gt; 的引入给人的感觉似乎是为了解决H和B的关系。但是它们关系和相对磁导率关系更大。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;磁感应强度B：描述了磁场的实际效应，直接影响带电粒子的运动，通过洛伦兹力定律与它们的相互作用。&lt;/li&gt;
&lt;li&gt;磁场强度H：主要描述了外部电流产生的磁场，在材料中的表现还需要考虑材料的磁化效应。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;历史？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;早期磁学与电学独立发展 - 磁现象和电现象分别独立研究，尚未发现两者的联系。&lt;/li&gt;
&lt;li&gt;奥斯特的发现（1820年） - 奥斯特发现电流能够产生磁场，揭示了电与磁的关系，但当时尚未明确区分 H 和 B。&lt;/li&gt;
&lt;li&gt;安培的贡献（1820年） - 安培通过实验揭示了电流与磁场的定量关系，提出安培定律，为后来的 H 的定义奠定了理论基础。&lt;/li&gt;
&lt;li&gt;法拉第的贡献（1831年） - 法拉第发现电磁感应现象，提出磁力线概念，这为 B 作为磁通密度的概念奠定了基础。&lt;/li&gt;
&lt;li&gt;麦克斯韦的统一理论（1873年） - 麦克斯韦通过方程组统一了电场和磁场的描述，并首次明确区分了磁场强度 H 和磁感应强度 B，其中 H 描述了外部电流产生的磁场，而 B 则包括了材料的磁化效应。&lt;/li&gt;
&lt;li&gt;现代电磁学 - H 和 B 成为电磁学的基础概念，广泛应用于理论和技术领域，H 反映磁场的源头，而 B 则反映磁场的实际效应。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_8"&gt;相对磁导率&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;与电介质对电场的作用相比，磁性物质对磁场的作用更有趣一些：许多磁性材料中的磁场对所施加的磁场更强。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在19世纪早期，尤其是安培和法拉第等人的实验中，科学家们已经开始认识到不同材料对磁场的响应不同，因此相对磁导率（relative permeability）的概念逐渐被提出，用来描述材料相对于真空的磁化能力。&lt;/p&gt;
&lt;p&gt;相对磁导率 的概念比 真空磁导率的历史更为悠久。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;性质&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;顺磁性（Paramagnetism）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;抗磁性（Diamagnetism）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;铁磁性（Ferromagnetism）&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;相对磁导率&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;略大于 1，比如铝1.00002&lt;/td&gt;
&lt;td&gt;略小于 1，比如金0.99997&lt;/td&gt;
&lt;td&gt;远大于 1，比如纯铁5000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;磁化方向&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;与外部磁场方向&lt;strong&gt;一致&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;与外部磁场方向&lt;strong&gt;相反&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;与外部磁场方向&lt;strong&gt;一致&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;磁性强度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;弱磁性&lt;/strong&gt;（轻微吸引）&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;极弱磁性&lt;/strong&gt;（轻微排斥）&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;强磁性&lt;/strong&gt;（强烈吸引，且可永久磁化）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;外部磁场移除后&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;不保留磁性&lt;/td&gt;
&lt;td&gt;不保留磁性&lt;/td&gt;
&lt;td&gt;可能保留磁性（剩磁）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;温度影响&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;随温度升高磁性减弱&lt;/td&gt;
&lt;td&gt;温度对抗磁性影响不大&lt;/td&gt;
&lt;td&gt;高于居里温度时失去磁性，转变为顺磁性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;典型材料&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;铝、铂、氧气&lt;/td&gt;
&lt;td&gt;金、银、铜&lt;/td&gt;
&lt;td&gt;铁、钴、镍、钕铁硼&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_9"&gt;真空介电常数&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;世界第一次接触到真空介电常数并不是通过库仑定律，而是通过电容器的工作原理，它是电量Q与电压U的比例系数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;库伦定律的系数，为什么包含 &lt;span class="math inline"&gt;4\pi&lt;/span&gt; 因子？&lt;/li&gt;
&lt;li&gt;真空电容率？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_10"&gt;库伦定律&lt;/h3&gt;
&lt;p&gt;在 &lt;strong&gt;CGS 单位制&lt;/strong&gt;中，库仑定律的表达式不包含 &lt;code&gt;ε₀&lt;/code&gt; 这样的常数，因为该单位制下的电荷单位与力的单位直接相关。&lt;/p&gt;
&lt;p&gt;库伦定律指出 F 与 距离 r 平方成反比。&lt;/p&gt;
&lt;div class="math display"&gt;
F \propto \frac{q_1 q_2}{r^2}
&lt;/div&gt;

&lt;p&gt;库仑定律在1835年衍生出了高斯定律（Gauss' Law），它表明单个带电粒子产生的静电力并不只朝向第二个电荷，它以球对称的方式向所有方向扩散。&lt;/p&gt;
&lt;p&gt;这种扩散随着距离的增加应该逐渐变得稀薄，这种变化遵循平方反比定律，其前沿是一个球面。球面的面积为 &lt;span class="math inline"&gt;4\pi r^2&lt;/span&gt; ，其中 r 是半径。自学成才的天才&lt;strong&gt;奥利弗·赫维赛德（Oliver Heaviside）&lt;/strong&gt;提出，更合理的方式是将库仑定律表示为：&lt;/p&gt;
&lt;div class="math display"&gt;
F \propto \frac{q_1 q_2}{4\pi r^2}
&lt;/div&gt;

&lt;p&gt;这样一来，&lt;span class="math inline"&gt;\epsilon_0&lt;/span&gt; 和 &lt;span class="math inline"&gt;4\pi&lt;/span&gt; 就不那么突兀了。&lt;/p&gt;
&lt;div class="math display"&gt;
F = \frac{1}{\epsilon_0} \frac{q_1 q_2}{4\pi r^2}
&lt;/div&gt;

&lt;h3 id="_11"&gt;真空电容率&lt;/h3&gt;
&lt;p&gt;当亚历山德罗·伏特（Alessandro Volta）在1798年发明电池时，他观察到，如果我们在电容器的平行板之间施加电压
U，那么一定量的负电荷将从正极板移动到负极板。一块板带上正电，另一块带上负电，板之间产生了电场。他将电池将相反电荷强行拉开的能力称为“电动势”（Electromotive Force，EMF）。&lt;/p&gt;
&lt;p&gt;迈克尔·法拉第（Michael Faraday）对电容器的行为进行了深入研究，发现板之间传递的电荷量取决于板之间介质的性质，这个介质甚至可以是真空。通过测量不同的电压 U，而不改变板的尺寸和间距，法拉第发现传递的电荷量正比于电压，即&lt;/p&gt;
&lt;div class="math display"&gt;
Q \propto U
&lt;/div&gt;

&lt;p&gt;在 SI 单位制下，真空下电容公式：&lt;/p&gt;
&lt;div class="math display"&gt;
C = \frac {Q} {U} = \frac {\epsilon_0 S}{d}
&lt;/div&gt;

&lt;p&gt;如果考虑一个形状为“单位立方体”的电容器，其两个正方形板的面积均为1平方米，板之间的距离为1米的真空，那么C数值上等于&lt;span class="math inline"&gt;\epsilon_0&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id="_12"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Vacuum_permeability&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Vacuum_permittivity&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Fine-structure_constant&lt;/li&gt;
&lt;li&gt;https://www.quora.com/What-does-the-permittivity-of-a-vacuum-mean&lt;/li&gt;
&lt;/ul&gt;</content><category term="Science"></category></entry><entry><title>Qt下的图表库小记</title><link href="https://blog.debao.me/2024/09/a-brief-note-on-chart-libraries-in-qt/" rel="alternate"></link><published>2024-09-18T15:44:00+08:00</published><updated>2024-09-18T15:44:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-09-18:/2024/09/a-brief-note-on-chart-libraries-in-qt/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;简单罗列一下...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Qt对LGPL用户已经很不友好。官方的图表库均不采用LGPL授权。幸好还有几个第三方的可供Qt的LGPL用户使用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;KD Chart【KDAB的商业产品，2022年8月份改为MIT协议】&lt;/li&gt;
&lt;li&gt;Qwt 【不活跃，样式老旧】&lt;/li&gt;
&lt;li&gt;JKQtPlotter&lt;/li&gt;
&lt;li&gt;PyQtGraph 【Python下面】&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;列表&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;图表 …&lt;/strong&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;/table&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;简单罗列一下...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Qt对LGPL用户已经很不友好。官方的图表库均不采用LGPL授权。幸好还有几个第三方的可供Qt的LGPL用户使用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;KD Chart【KDAB的商业产品，2022年8月份改为MIT协议】&lt;/li&gt;
&lt;li&gt;Qwt 【不活跃，样式老旧】&lt;/li&gt;
&lt;li&gt;JKQtPlotter&lt;/li&gt;
&lt;li&gt;PyQtGraph 【Python下面】&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;列表&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;图表库名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;许可类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Qt Charts&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;GPLv3 / Commercial&lt;/td&gt;
&lt;td&gt;Qt官方出品，对LGPL用户不友好&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;QCustomPlot&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;GPLv3 / Commercial&lt;/td&gt;
&lt;td&gt;对LGPL用户不友好&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Qwt&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Qwt License&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;开源免费，可以在开源和闭源项目中使用。Qwt License 类似 LGPL，允许在闭源项目中动态链接使用。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;KD Chart&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;MIT&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;KDAB出品，从3.0.0版本【2022年8月份】开始，采用MIT授权。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;JKQtPlotter&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;LGPL&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;对LGPL用户友好&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;QwtPlot3D&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;zlib&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;采用zlib协议，对LGPL友好，不过开发早已停顿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ChartDirector&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Commercial&lt;/td&gt;
&lt;td&gt;需要商业许可，适用于商业用途。提供免费试用版本，但需要购买许可证才能在正式项目中使用。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="qt"&gt;Qt&lt;/h2&gt;
&lt;p&gt;Qt官方有2D和3D图表库，但都不支持LGPL。&lt;/p&gt;
&lt;h3 id="qt-charts"&gt;Qt Charts&lt;/h3&gt;
&lt;p&gt;Qt Charts 从Qt5.7 开始出现，官方出品，支持C++和QML。但是它采用GPLv3和商业授权发布，对LGPL用户不友好。&lt;/p&gt;
&lt;h3 id="qt-data-visualization"&gt;Qt Data Visualization&lt;/h3&gt;
&lt;p&gt;Qt Data Visualization 是 Qt 官方提供的一个模块，依赖于OpenGL，用于创建 三维数据可视化 应用。它使开发者能够轻松地将三维数据集可视化，支持多种三维图表类型，如 柱状图、散点图 和 曲面图 等。&lt;/p&gt;
&lt;p&gt;采用GPLv3发布，对LGPL用户不友好。&lt;/p&gt;
&lt;h3 id="qt-graphs"&gt;Qt Graphs&lt;/h3&gt;
&lt;p&gt;是 Qt Data visualization 的后续版本。依赖qrhi抽象层，而不是直接依赖OpenGL。同样对LGPL用户不友好。&lt;/p&gt;
&lt;h2 id="kdab"&gt;KDAB&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;KDAB 公司对Qt支持还是很不错的。只不过其在Qt5中开发的Qt3D模块，在Qt6中要退役了，比较可惜。Qt公司新的基于QtQucik的3D模块也不再支持LGPL。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="kd-chart"&gt;KD Chart&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/KDAB/KDChart"&gt;https://github.com/KDAB/KDChart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KD Chart是KDAB的商业产品，在经历长期的开发停顿后，2022年发布3.0.0，变更为MIT授权。支持二维图表和甘特图。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，KDAB 的 KDreports 也改为MIT授权方式发布。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="kdiagram"&gt;kdiagram&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/KDE/kdiagram"&gt;https://github.com/KDE/kdiagram&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是KDE克隆的KD Chart的早期版本，采用 &lt;strong&gt;GPL&lt;/strong&gt; 发布。&lt;/p&gt;
&lt;h2 id="jkqtplotter"&gt;JKQtPlotter&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jkriege2/JKQtPlotter"&gt;https://github.com/jkriege2/JKQtPlotter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JKQTPlotter 是一个基于 Qt 的开源库，专门用于绘制 二维科学图表。采用LGPL协议发布。&lt;/p&gt;
&lt;h2 id="qcustomplot"&gt;QCustomPlot&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.qcustomplot.com/"&gt;https://www.qcustomplot.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;QCustomPlot 是一个基于 Qt 的开源 C++ 图形绘制库，专注于 二维数据可视化。它主要用于在 Qt Widgets 应用中嵌入高性能的自定义绘图功能，如 折线图、柱状图、散点图、直方图 等。有轻量和高效的特性。采用GPLv3和商业授权发布，对LGPL用户不友好。&lt;/p&gt;
&lt;h2 id="qwt"&gt;Qwt&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qwt.sourceforge.io/"&gt;https://qwt.sourceforge.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Qwt（Qt Widgets for Technical Applications）是一个基于 Qt 的开源库，专门用于在应用程序中创建 技术性图表 和 科学可视化工具。Qwt 提供了各种小部件（Widgets），帮助开发者绘制复杂的二维图表和进行数据可视化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对LGPL用户友好&lt;/li&gt;
&lt;li&gt;长期没有更新，界面不够现代&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="qwtplot3d"&gt;QwtPlot3D&lt;/h3&gt;
&lt;p&gt;基于Qt3、Qt4和OpenGL的3D图表库。开发早已停止。采用zlip协议&lt;/p&gt;
&lt;h2 id="qchartviewer"&gt;QChartViewer&lt;/h2&gt;
&lt;p&gt;QChartViewer 及其底层库 ChartDirector 由 Advanced Software Engineering Ltd. (ASE) 开发。这家公司专注于提供高性能的图表和可视化解决方案，ChartDirector 是其核心产品之一，广泛用于商业和技术应用中的数据可视化。&lt;/p&gt;
&lt;p&gt;ChartDirector 是一个支持包括C++、C#、Python、perl、PHP、Java等多种编程语言的图表库的商业产品。&lt;/p&gt;
&lt;h2 id="vtk"&gt;vtk&lt;/h2&gt;
&lt;p&gt;尽管和图表库没多大关系，还是先列出来。vtk采用BSD授权协议。对LGPL用户友好。&lt;/p&gt;
&lt;h2 id="python"&gt;Python&lt;/h2&gt;
&lt;p&gt;在Python下，除了可以使用各个C++图表库的python绑定，还有一些特色库可用。有的是原生，有的是HTML和javascript。&lt;/p&gt;
&lt;p&gt;部分列表如下&lt;/p&gt;
&lt;h3 id="pyqtgraph"&gt;PyQtGraph&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.pyqtgraph.org/"&gt;https://www.pyqtgraph.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyQtGraph 是一个用于 快速绘制交互式图表 和 数据可视化 的 Python 库，它基于 PyQt 或 PySide（Qt 的 Python 绑定），并且专注于 高性能的实时数据可视化。&lt;/p&gt;
&lt;p&gt;采用 MIT 授权&lt;/p&gt;
&lt;h3 id="matplotlib"&gt;matplotlib&lt;/h3&gt;
&lt;p&gt;matplotlib 支持使用Qt作为后端，可以和PyQt以及PySide集成。&lt;/p&gt;
&lt;p&gt;另外还有一些基于matplotlib的库：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://seaborn.pydata.org/&lt;/li&gt;
&lt;li&gt;https://mpld3.github.io/&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="plotly"&gt;plotly&lt;/h3&gt;
&lt;p&gt;Plotly 的图表是通过 HTML 和 JavaScript 渲染的。无论是在 Python、R 还是 其他语言 中使用，Plotly 最终都会生成一段 HTML 文档，其中嵌入了 JavaScript 代码，用于在 Web 浏览器中渲染图表。采用MIT授权。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Plotly Python 库：用于数据可视化的客户端库。&lt;/li&gt;
&lt;li&gt;Plotly.js：用于前端渲染的 JavaScript 库。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="bokeh"&gt;bokeh&lt;/h3&gt;
&lt;p&gt;Bokeh 是一个专注于 Python 的可视化库，能够与 Python 生态系统中的工具（如 NumPy、Pandas、Dask、Scikit-Learn 等）无缝集成。用户可以使用这些工具处理和分析数据，并将结果通过 Bokeh 转换为可视化图表。&lt;/p&gt;
&lt;p&gt;Bokeh 的核心工作原理是将 Python 代码中的数据和图表配置转换为浏览器可以理解的 HTML 和 JavaScript。Bokeh 提供了一个 Bokeh.js 库，这个库在前端使用 JavaScript 渲染图表。Bokeh 会自动处理 Python 端和浏览器端的通信，用户只需编写 Python 代码，无需编写 JavaScript。&lt;/p&gt;
&lt;h3 id="vega-altair"&gt;Vega-Altair&lt;/h3&gt;
&lt;p&gt;Altair 是一个声明式的可视化库，基于 Vega 和 Vega-Lite。Altair 允许用户通过简洁的语法创建复杂的可视化图表，专注于统计可视化。&lt;/p&gt;
&lt;h2 id="_2"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://doc.qt.io/qt-6/qtcharts-index.html&lt;/li&gt;
&lt;li&gt;https://www.qcustomplot.com/&lt;/li&gt;
&lt;li&gt;https://qwt.sourceforge.io/&lt;/li&gt;
&lt;li&gt;https://github.com/jkriege2/JKQtPlotter&lt;/li&gt;
&lt;li&gt;https://www.kdab.com/development-resources/qt-tools/kd-chart/&lt;/li&gt;
&lt;li&gt;https://github.com/KDAB/KDChart&lt;/li&gt;
&lt;li&gt;https://github.com/KDAB/KDReports&lt;/li&gt;
&lt;li&gt;https://qwtplot3d.sourceforge.net/&lt;/li&gt;
&lt;li&gt;https://www.advsofteng.com/doc/cdcppdoc/QChartViewer.htm&lt;/li&gt;
&lt;li&gt;https://github.com/KDE/kdiagram&lt;/li&gt;
&lt;li&gt;https://www.pyqtgraph.org/&lt;/li&gt;
&lt;li&gt;https://matplotlib.org/stable/gallery/user_interfaces/embedding_in_qt_sgskip.html&lt;/li&gt;
&lt;li&gt;https://github.com/plotly/plotly.py&lt;/li&gt;
&lt;li&gt;https://bokeh.org/&lt;/li&gt;
&lt;li&gt;https://altair-viz.github.io/&lt;/li&gt;
&lt;/ul&gt;</content><category term="Qt"></category><category term="Qt"></category></entry><entry><title>SI基本单位小记</title><link href="https://blog.debao.me/2024/09/notes-on-si-base-unit/" rel="alternate"></link><published>2024-09-17T22:32:00+08:00</published><updated>2024-09-17T22:32:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-09-17:/2024/09/notes-on-si-base-unit/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;负责国际单位制（SI）的机构是国际计量委员会（CIPM, International Committee for Weights and Measures），该委员会是 &lt;strong&gt;国际度量衡局（BIPM, Bureau International des Poids et Mesures）&lt;/strong&gt; 的组成部分。BIPM …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;负责国际单位制（SI）的机构是国际计量委员会（CIPM, International Committee for Weights and Measures），该委员会是 &lt;strong&gt;国际度量衡局（BIPM, Bureau International des Poids et Mesures）&lt;/strong&gt; 的组成部分。BIPM 是一个国际组织，负责确保全球范围内的单位和标准的统一与一致性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="7"&gt;7个物理量&lt;/h2&gt;
&lt;h3 id="_1"&gt;列表&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;物理量（中英文）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;物理量符号&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;单位名称（中英文）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;单位符号&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;长度（Length）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;l, x, r&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;米（Meter）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;m&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;质量（Mass）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;m&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;千克（Kilogram）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;kg&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;时间（Time）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;t&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;秒（Second）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;电流（Electric Current）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;I, i&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;安培（Ampere）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;热力学温度（Thermodynamic Temperature）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;开尔文（Kelvin）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;K&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;物质的量（Amount of Substance）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;n&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;摩尔（Mole）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;mol&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;发光强度（Luminous Intensity）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;I_v&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;坎德拉（Candela）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;cd&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="2019"&gt;2019定义变化&lt;/h3&gt;
&lt;p&gt;2019年，国际单位制（SI）进行了重大修订，标志着测量单位定义方式的一次重要变革。这次修订的主要特点是全部基本单位的定义都 &lt;strong&gt;基于自然界的基本物理常数&lt;/strong&gt; ，而不再依赖于物理实物标准。这种方法使得单位的定义更加精准、稳定，并且可以通过实验来更好地复现。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;物理量&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;单位&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;历史定义&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;现代定义&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;长度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;米 (m)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1793年：地球子午线长度的千万分之一&lt;/td&gt;
&lt;td&gt;1983年：光在真空中在&lt;span class="math inline"&gt;1/299,792,458&lt;/span&gt; 秒内传播的距离&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;质量&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;千克 (kg)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1795年：国际原型千克（铂制原型）&lt;/td&gt;
&lt;td&gt;2019年：基于普朗克常数&lt;span class="math inline"&gt;h = 6.62607015 × 10^{-34}&lt;/span&gt; 焦耳·秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;时间&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;秒 (s)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1956年：地球自转周期的&lt;span class="math inline"&gt;1/86,400&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;1967年：铯-133 原子基态两个超精细能级跃迁对应的&lt;span class="math inline"&gt;9,192,631,770&lt;/span&gt; 次振荡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;电流&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;安培 (A)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1881年：通过电磁力的实验定义&lt;/td&gt;
&lt;td&gt;2019年：基于基本电荷&lt;span class="math inline"&gt;e = 1.602176634 × 10^{-19}&lt;/span&gt; 库仑的固定值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;热力学温度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;开尔文 (K)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1954年：水三相点的热力学温度定义为&lt;span class="math inline"&gt;273.16K&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;2019年：基于玻尔兹曼常数&lt;span class="math inline"&gt;k_B = 1.380649 × 10^{-23}&lt;/span&gt; 焦耳每开尔文的固定值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;物质的量&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;摩尔 (mol)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1971年：含有与&lt;span class="math inline"&gt;0.012&lt;/span&gt; 千克碳-12同样多的实体颗粒数定义为1摩尔&lt;/td&gt;
&lt;td&gt;2019年：基于阿伏伽德罗常数&lt;span class="math inline"&gt;N_A = 6.02214076 × 10^{23}&lt;/span&gt; 粒子的固定值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;发光强度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;坎德拉 (cd)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1946年：基于黑体辐射，温度为&lt;span class="math inline"&gt;2046K&lt;/span&gt; 的铂在凝固点时的发光强度定义&lt;/td&gt;
&lt;td&gt;1979年：基于频率&lt;span class="math inline"&gt;540 × 10^{12}&lt;/span&gt; 赫兹的单色光源在每单位立体角内的辐射强度为 &lt;span class="math inline"&gt;1/683&lt;/span&gt; 瓦每平方弧度的值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_2"&gt;关系图？&lt;/h3&gt;
&lt;p&gt;1983:&lt;/p&gt;
&lt;p&gt;&lt;img alt="unit_relations_in_the_1983_si" src="https://blog.debao.me/images/ee/unit_relations_in_the_1983_si.svg"&gt;&lt;/p&gt;
&lt;p&gt;2019：&lt;/p&gt;
&lt;p&gt;&lt;img alt="unit_relations_in_the_2019_si" src="https://blog.debao.me/images/ee/unit_relations_in_the_2019_si.svg"&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;定义&lt;/h2&gt;
&lt;h3 id="seconds"&gt;时间（秒，second，单位符号：s）&lt;/h3&gt;
&lt;p&gt;秒是铯-133 原子的振动9,192,631,770次所需要的时间。&lt;/p&gt;
&lt;div class="math display"&gt;
1 \text{s} = {{9192631770} \over  {\Delta \nu_{Cs}}}
&lt;/div&gt;

&lt;p&gt;铯-133（&lt;strong&gt;&lt;span class="math inline"&gt;^{133}Cs&lt;/span&gt;&lt;/strong&gt;）原子基态两个超精细能级之间的跃迁频率通常用符号 &lt;strong&gt;&lt;span class="math inline"&gt;\Delta \nu_{\text{Cs}}&lt;/span&gt;&lt;/strong&gt; 表示，单位是赫兹（Hz），表示每秒的振荡次数，其数值固定为：&lt;/p&gt;
&lt;div class="math display"&gt;
\Delta \nu_{\text{Cs}} = 9,192,631,770 \, \text{Hz}
&lt;/div&gt;

&lt;h4 id="_4"&gt;演变&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;17世纪：&lt;strong&gt;秒&lt;/strong&gt;作为时间单位被引入，定义为&lt;strong&gt;一天的1/86,400&lt;/strong&gt;，基于地球自转。&lt;/li&gt;
&lt;li&gt;1956年：秒被重新定义为&lt;strong&gt;回归年（地球绕太阳一周的平均时间）1/31,556,925.9747&lt;/strong&gt;，以提高精度。&lt;/li&gt;
&lt;li&gt;1967年：&lt;strong&gt;铯原子钟&lt;/strong&gt;定义被引入，秒被重新定义为&lt;strong&gt;铯-133原子基态的两个超精细能级间跃迁对应辐射周期的9,192,631,770倍&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="meterm"&gt;长度（米，meter，单位符号：m）&lt;/h3&gt;
&lt;p&gt;米是光在真空中用&lt;strong&gt;1/299,792,458&lt;/strong&gt;秒时间走过的距离。&lt;/p&gt;
&lt;div class="math display"&gt;
1 \text{m} = ({c \over 299792458}) \text{s} = {9192631770 \over {299792458}}{c \over {\Delta \nu_{Cs}}}
&lt;/div&gt;

&lt;p&gt;光速（&lt;strong&gt;&lt;span class="math inline"&gt;c&lt;/span&gt;&lt;/strong&gt;）是在真空中光传播的速度，其数值是一个&lt;strong&gt;固定常数&lt;/strong&gt;，定义为：&lt;/p&gt;
&lt;div class="math display"&gt;
c = 299,792,458 \, \text{m/s}
&lt;/div&gt;

&lt;h4 id="_5"&gt;演变&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;1793年：米被定义为&lt;strong&gt;地球从北极到赤道的子午线长度的四千万分之一&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;1799年：米被重新定义为&lt;strong&gt;一根铂金属杆的长度&lt;/strong&gt;，称为米原器。&lt;/li&gt;
&lt;li&gt;1889年：米被重新定义为&lt;strong&gt;国际米原器&lt;/strong&gt;的长度，该原器由铂铱合金制成。&lt;/li&gt;
&lt;li&gt;1960年：米被重新定义为&lt;strong&gt;氪-86原子辐射的波长的1,650,763.73倍&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;1983年：米被重新定义为&lt;strong&gt;光在真空中以1/299,792,458秒的时间传播的距离&lt;/strong&gt;，基于光速。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="kilogramkg"&gt;质量（千克，kilogram，单位符号：kg）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Kibble天平&lt;/strong&gt;（Kibble Balance，也称为&lt;strong&gt;瓦特天平&lt;/strong&gt;）是一种用于精确测量质量的实验仪器，它在2019年国际单位制（SI）重新定义千克时起到了关键作用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;千克通过一个叫做普朗克常数的物理常数来定义的。当其以单位 &lt;strong&gt;J·s&lt;/strong&gt; 表示时，其等于 &lt;strong&gt;kg·m²·s⁻¹&lt;/strong&gt;。它是在&lt;strong&gt;米&lt;/strong&gt;和&lt;strong&gt;秒&lt;/strong&gt;已分别通过光速 &lt;span class="math inline"&gt;c&lt;/span&gt; 和铯-133跃迁频率 &lt;span class="math inline"&gt;\Delta \nu_{\text{Cs}}&lt;/span&gt; 来定义的基础上定义的。&lt;/p&gt;
&lt;div class="math display"&gt;
1 \text{kg} = ({h \over {6.62607015 \times 10^{-34}}}) \text{m}^{-2}\text{s} = {{299792458^2} \over {6.62607015 \times 10^{-34} \times {9192631770}}} {h {\Delta \nu_{Cs}} \over {c^2}}
&lt;/div&gt;

&lt;h4 id="_6"&gt;普朗克常数&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;普朗克常数&lt;/strong&gt;（符号：&lt;span class="math inline"&gt;h&lt;/span&gt;）是量子力学中的一个&lt;strong&gt;基本常数&lt;/strong&gt;，它描述了&lt;strong&gt;能量&lt;/strong&gt;（&lt;span class="math inline"&gt;E&lt;/span&gt;）与&lt;strong&gt;频率&lt;/strong&gt;（&lt;span class="math inline"&gt;\nu&lt;/span&gt;）之间的关系。其数值为：&lt;/p&gt;
&lt;div class="math display"&gt;
h = 6.62607015 \times 10^{-34} \, \text{J} \cdot \text{s}
&lt;/div&gt;

&lt;p&gt;普朗克常数通过以下公式将能量与频率联系起来：&lt;/p&gt;
&lt;p&gt;&lt;span class="math inline"&gt;E = h \nu&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;span class="math inline"&gt;E&lt;/span&gt;&lt;/strong&gt;：能量（单位：焦耳，J）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;span class="math inline"&gt;\nu&lt;/span&gt;&lt;/strong&gt;：频率（单位：赫兹，Hz）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_7"&gt;演变&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;1795年：千克最初定义为&lt;strong&gt;1立方分米（1升）水在4°C时的质量&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;1889年：千克被重新定义为&lt;strong&gt;国际千克原器&lt;/strong&gt;的质量，国际千克原器是一块由铂-铱合金制成的圆柱体。&lt;/li&gt;
&lt;li&gt;20世纪中后期：由于国际千克原器的微小质量变化，科学家开始寻求基于自然常数的新定义。&lt;/li&gt;
&lt;li&gt;2018年：第26届国际计量大会通过决议，千克将不再依赖实物基准，而是基于&lt;strong&gt;普朗克常数&lt;/strong&gt;重新定义。&lt;/li&gt;
&lt;li&gt;2019年5月20日：千克的新定义正式生效，基于&lt;strong&gt;普朗克常数（h）&lt;/strong&gt;的固定值，通过&lt;strong&gt;瓦特天平&lt;/strong&gt;等精密仪器实现质量的测量。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="kgg"&gt;为什么kg而不是g？&lt;/h4&gt;
&lt;p&gt;历史原因？？法国大革命时期将质量的单位定义为1立方分米（1升）水在4°C时的质量。&lt;/p&gt;
&lt;h3 id="amperea"&gt;电流（安培，ampere，单位符号：A）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;安培单位的名称来自法国物理学家安德烈-玛丽·安培（André-Marie Ampère，1775–1836），他是电磁学的奠基者之一。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;安培&lt;/strong&gt;的定义依赖于基本电荷 &lt;span class="math inline"&gt;e&lt;/span&gt; 的固定数值。通过测量每秒钟通过导体横截面的电荷量，可以定义电流的大小。如果每秒通过 &lt;span class="math inline"&gt;1/e&lt;/span&gt; 个基本电荷的电量，就是1安培的电流。&lt;/p&gt;
&lt;div class="math display"&gt;
1 \text{A} = ({e \over {1.602176634 \times 10^{-19}}}) \text{s}^{-1}={1 \over {9192631770 \times 1.602176634 \times 10^{-19}}}e{\Delta \nu_{Cs}}
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;基本电荷&lt;/strong&gt; &lt;span class="math inline"&gt;e&lt;/span&gt; 的固定数值为 &lt;span class="math inline"&gt;1.602176634 \times 10^{-19}&lt;/span&gt;，单位以&lt;strong&gt;库仑&lt;/strong&gt;（C）表示，等于&lt;strong&gt;安培秒&lt;/strong&gt;（A·s）。&lt;/p&gt;
&lt;h4 id="_8"&gt;演变&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;1820年代：法国物理学家&lt;strong&gt;安德烈-玛丽·安培&lt;/strong&gt;通过实验发现电流与磁场之间的关系，提出了&lt;strong&gt;安培定律&lt;/strong&gt;，为电磁学的理论奠定了基础，电流单位“安培”因此得名。&lt;/li&gt;
&lt;li&gt;1881年：安培作为电流的单位被&lt;strong&gt;国际电工委员会（IEC）&lt;/strong&gt;正式采纳，开始在国际范围内使用。&lt;/li&gt;
&lt;li&gt;1908年：安培被正式确立为&lt;strong&gt;国际单位制（SI）&lt;/strong&gt;中的基本电流单位，成为全球通用的标准电流单位之一。&lt;strong&gt;定义1秒时间间隔内从&lt;/strong&gt;硝酸银溶液中能电解出1.1180002毫克银的恒定电流为1安培，又称国际安培。&lt;/li&gt;
&lt;li&gt;1948年：安培的定义被描述为：两根&lt;strong&gt;无限长&lt;/strong&gt;、&lt;strong&gt;平行导体&lt;/strong&gt;在真空中相距&lt;strong&gt;1米&lt;/strong&gt;时，产生每米&lt;strong&gt;2 × 10⁻⁷牛顿&lt;/strong&gt;的力。这是一个基于力学的实验定义。&lt;/li&gt;
&lt;li&gt;1950-2010年代：随着科学技术的发展，安培的测量精度不断提升，达到了&lt;strong&gt;千万分之一&lt;/strong&gt;的精度，推动了高精度电流测量技术的发展。&lt;/li&gt;
&lt;li&gt;2018年：在&lt;strong&gt;国际单位制大会&lt;/strong&gt;上，安培的定义被重新确定为基于&lt;strong&gt;基本电荷（e）&lt;/strong&gt;的物理常数，以提高科学计量的精确性和一致性。&lt;/li&gt;
&lt;li&gt;2019年：从&lt;strong&gt;5月20日&lt;/strong&gt;起，安培的新定义正式生效，定义为：&lt;strong&gt;1安培&lt;/strong&gt;是每秒通过某一导体横截面的&lt;strong&gt;1库仑电荷&lt;/strong&gt;，即&lt;strong&gt;6.241 × 10¹⁸&lt;/strong&gt;个基本电荷通过某一点。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_9"&gt;为什么是安培而不是库伦？&lt;/h4&gt;
&lt;p&gt;在早期实验中，电流的测量相对更为简单和直接。例如，电流可以通过电磁效应测量（如安培的实验），而电荷（库仑）通常需要通过复杂的静电实验来测定。电流的测量简单而精确，使其成为定义电学单位的一个实用选择。&lt;/p&gt;
&lt;h3 id="kelvink"&gt;热力学温度（开尔文，kelvin，单位符号：K）&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;开尔文&lt;/strong&gt;基于玻尔兹曼常数 &lt;span class="math inline"&gt;k&lt;/span&gt; 的固定数值。&lt;/p&gt;
&lt;div class="math display"&gt;
1 \text{K} = ({ {1.380 649 \times 10^{-23}} \over {k} }) \text{kg}\,\text{m}^2\text{s}^{-2}={{{1.380 649 \times 10^{-23}} \over {6.62607015 \times 10^{-34} \times {9192631770}}}} {{h {\Delta \nu_{Cs}}} \over k}
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;玻尔兹曼常数（Boltzmann constant）&lt;/strong&gt; &lt;span class="math inline"&gt;k&lt;/span&gt; 的固定数值为 &lt;span class="math inline"&gt;1.380 649 \times 10^{-23}&lt;/span&gt;，单位以 &lt;span class="math inline"&gt;\text{J}\cdot\text{K}^{-1}&lt;/span&gt; 表示，等于 &lt;span class="math inline"&gt;\text{kg}\cdot\text{m}^2\text{s}^{-2}\text{K}^{-1}&lt;/span&gt;。它将物质的温度与分子或原子的平均动能联系起来。在微观尺度上，温度实际上反映了分子或原子的运动强度，而玻尔兹曼常数则将这种运动的能量量化。&lt;/p&gt;
&lt;h4 id="_10"&gt;演变&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;1848年：威廉·汤姆森（后来的开尔文勋爵）提出绝对温标的概念，基于热力学第二定律和卡诺循环。&lt;/li&gt;
&lt;li&gt;1850年代：汤姆森进一步发展了热力学理论，推动了对绝对零度的认识，即所有分子运动停止的最低温度。&lt;/li&gt;
&lt;li&gt;1860年代：汤姆森的绝对温标逐渐被科学界接受，并用于描述热力学过程中的温度。&lt;/li&gt;
&lt;li&gt;1892年：汤姆森被封为开尔文勋爵，以纪念他对物理学，特别是热力学的贡献。&lt;/li&gt;
&lt;li&gt;1968年：国际单位制（SI）将开尔文温标命名为&lt;strong&gt;“Kelvin”，以表彰开尔文勋爵的贡献，符号为K&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;1954年：开尔文被正式定义为水的三相点的热力学温度的1/273.16。&lt;/li&gt;
&lt;li&gt;2019年：开尔文被重新定义为基于玻尔兹曼常数的单位，确保其与物质热力学能量的直接关联。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="molemol"&gt;物质的量（摩尔，mole，单位符号：mol）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;摩尔这个术语直到1900年左右才出现，源自德语单词“Molekül”（分子）的缩写Mol。摩尔在化学和物理学中扮演了一个桥梁角色&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一摩尔包含精确的 &lt;span class="math inline"&gt;6.02214076 \times 10^{23}&lt;/span&gt; 个基本实体。这个数值是&lt;strong&gt;阿伏伽德罗常数&lt;/strong&gt; 。一个基本实体可以是一个原子、一个分子、一个离子、一个电子、任何其他粒子或指定的粒子组。&lt;/p&gt;
&lt;div class="math display"&gt;
1 \text{mol} = {{6.02214076 \times 10^{23}} \over {N_A}}
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;阿伏伽德罗常数&lt;/strong&gt; &lt;span class="math inline"&gt;N_A&lt;/span&gt; 的固定数值&lt;span class="math inline"&gt;6.02214076 \times 10^{23}&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id="_11"&gt;演变&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;1811年：阿伏伽德罗假设 - 提出相同温度和压力下，等体积的气体含有相同数量的分子。&lt;/li&gt;
&lt;li&gt;1865年：洛施米特估算分子数量 - 洛施米特首次估算单位体积气体中的分子数量，开启了阿伏伽德罗常数的测定之路。&lt;/li&gt;
&lt;li&gt;1909年：让·佩兰测定阿伏伽德罗常数 - 通过布朗运动实验，佩兰首次精确测定了阿伏伽德罗常数&lt;/li&gt;
&lt;li&gt;20世纪初：密立根油滴实验与普朗克常数 - 密立根通过油滴实验测定电子电荷，普朗克通过黑体辐射研究间接验证阿伏伽德罗常数。&lt;/li&gt;
&lt;li&gt;1971年：摩尔成为SI基本单位 - 摩尔被定义为含有与12克碳-12中原子数相同的基本实体的物质的量。&lt;/li&gt;
&lt;li&gt;2019年：摩尔重新定义 - 摩尔被定义为包含6.02214076 × 10²³个基本实体的物质的量，不再依赖特定物质。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="candelacd"&gt;发光强度（坎德拉，candela，单位符号：cd）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;坎德拉是光度学photometry（即通过人眼视觉系统感知的光的科学）的SI基本单位。它不代表物体发出的总光量——我们使用流明，来表示总光通量。它不用于测量所有类型的电磁辐射（比如对于无线电波、X射线等我们的眼睛无法检测的光）——我们使用瓦特来表示。坎德拉的特殊之处在于，它只测量我们能看到的光，来自我们能看到的光源，直接进入我们眼睛的光。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;坎德拉&lt;/strong&gt;（符号：cd）是发光强度的单位。发光强度描述的是光源在特定方向上发出的可见光的强度。坎德拉的定义基于人眼对光的响应，特别是在绿光（频率为 &lt;span class="math inline"&gt;540 \times 10^{12}&lt;/span&gt; 赫兹）频率下（因为人眼对这个频率最为敏感）。&lt;/p&gt;
&lt;div class="math display"&gt;
1 \text{cd} = ({{K_{cd}}\over {683}}) \text{kg}\,\text{m}^2\text{s}^{-3}\text{sr}^{-1}={1 \over {6.62607015 \times 10^{-34} \times 9192631770^2 \times 683}}(\Delta \nu_{\text{Cs}})^2hK_{cd}
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;光效&lt;/strong&gt; &lt;span class="math inline"&gt;K_{\text{cd}}&lt;/span&gt; 的固定数值为 683，单位用 &lt;span class="math inline"&gt;\text{lm}\cdot\text{W}^{-1}&lt;/span&gt; 表示，等于 &lt;span class="math inline"&gt;\text{cd}\cdot\text{sr}\cdot\text{W}^{-1}&lt;/span&gt;，或 &lt;span class="math inline"&gt;\text{cd}\cdot\text{sr}\cdot\text{kg}^{-1}\text{m}^{-2}\text{s}^{3}&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id="_12"&gt;演变？&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;坎德拉的名字源自拉丁语中的“蜡烛”。一个一坎德拉的光源在人眼看来仍然像是过去的蜡烛一样明亮。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;蜡烛标准（Candlepower）：最早的坎德拉是基于蜡烛的亮度。不同国家使用不同的蜡烛作为参考，比如英国的鲸脂蜡烛和德国的赫夫纳灯。但由于蜡烛燃烧不稳定，亮度差异较大。&lt;/li&gt;
&lt;li&gt;国际烛光（1909年）：为了统一标准，美国、英国和法国采用了基于碳丝灯泡的“国际烛光”。这个定义比蜡烛稳定，但仍然不够精确。&lt;/li&gt;
&lt;li&gt;黑体辐射标准（1937年）：科学家转向更精确的标准，定义坎德拉为在铂熔点（1770℃）下，黑体（理想的光辐射体）发出的光强度。这种方法更为精确和稳定。&lt;/li&gt;
&lt;li&gt;现代定义（1979年）：坎德拉的定义与人眼的感知相结合，基于绿色单色光（频率为 &lt;span class="math inline"&gt;540 \times 10^{12}&lt;/span&gt; 赫兹），并定义为该方向上辐射强度为1/683 瓦每球面度的光源亮度。绿色被选中是因为人眼对它最敏感。&lt;/li&gt;
&lt;li&gt;重新定义（2019年）：坎德拉的定义进一步精确化，并与其他国际单位（如千克和秒）挂钩。虽然定义的数学表达更复杂，但实际亮度并没有变化，仍然基于特定频率的光辐射。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_13"&gt;光度学与辐射度量学&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;光度学（Photometry）：测量的是人眼能够感知的光，即与人类视觉相关的光量。&lt;/li&gt;
&lt;li&gt;辐射度量学（Radiometry）：测量的是电磁辐射的总能量，包括可见光和不可见的辐射（如红外线、紫外线等），与人眼的感知无关。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;物理量&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;光度学（Photometry）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;辐射度量学（Radiometry）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;光度学单位&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;辐射度量学单位&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;辐射功率/光通量&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;光通量（Luminous Flux）&lt;/td&gt;
&lt;td&gt;辐射功率（Radiant Power）&lt;/td&gt;
&lt;td&gt;流明（&lt;strong&gt;lm&lt;/strong&gt;）&lt;/td&gt;
&lt;td&gt;瓦特（&lt;strong&gt;W&lt;/strong&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;辐射强度/发光强度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;发光强度（Luminous Intensity）&lt;/td&gt;
&lt;td&gt;辐射强度（Radiant Intensity）&lt;/td&gt;
&lt;td&gt;坎德拉（&lt;strong&gt;cd&lt;/strong&gt;）&lt;/td&gt;
&lt;td&gt;瓦特每球面度（&lt;strong&gt;W/sr&lt;/strong&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;辐照度/照度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;照度（Illuminance）&lt;/td&gt;
&lt;td&gt;辐照度（Irradiance）&lt;/td&gt;
&lt;td&gt;勒克斯（&lt;strong&gt;lx&lt;/strong&gt;）= lm/m²&lt;/td&gt;
&lt;td&gt;瓦特每平方米（&lt;strong&gt;W/m²&lt;/strong&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;辐射亮度/光亮度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;亮度（Luminance）&lt;/td&gt;
&lt;td&gt;辐射亮度（Radiance）&lt;/td&gt;
&lt;td&gt;坎德拉每平方米（&lt;strong&gt;cd/m²&lt;/strong&gt;）&lt;/td&gt;
&lt;td&gt;瓦特每平方米每球面度（&lt;strong&gt;W/m²/sr&lt;/strong&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;辐射出射度/光出射度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;光出射度（Luminous Exitance）&lt;/td&gt;
&lt;td&gt;辐射出射度（Radiant Exitance）&lt;/td&gt;
&lt;td&gt;流明每平方米（&lt;strong&gt;lm/m²&lt;/strong&gt;）&lt;/td&gt;
&lt;td&gt;瓦特每平方米（&lt;strong&gt;W/m²&lt;/strong&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;光通量：表示光源发出的总光量。单位为流明（lm）&lt;/li&gt;
&lt;li&gt;发光强度：光源在某一方向上发出的可见光强度，单位为坎德拉（cd）。&lt;/li&gt;
&lt;li&gt;照度：投射到单位面积上的可见光，单位为勒克斯（lx = lm/m²）&lt;/li&gt;
&lt;li&gt;亮度：&lt;strong&gt;光源表面&lt;/strong&gt;或反射光的可见光亮度，单位为坎德拉每平方米（cd/m²）。&lt;/li&gt;
&lt;li&gt;光出射度：单位面积上发出的可见光总量，单位为流明每平方米（lm/m²）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_14"&gt;坎德拉 和 流明&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;使用立体角作为坎德拉定义的一部分，规定了某一特定方向的发光。当我们购买灯泡时，其亮度不是以坎德拉，而是以流明为单位，表示它向各个方向发出的总光量——体现整个房间照明的效果。而坎德拉则是衡量如果直接看向光源，它的亮度将会如何显示。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;如果光源在所有方向均匀地发光（即球形发光），那么1 坎德拉 = 12.57 流明（因为球面角是 &lt;code&gt;4π&lt;/code&gt; 立体角 ≈ 12.57）。&lt;/li&gt;
&lt;li&gt;如果光源发出的光只集中在一个方向（如手电筒），那么坎德拉数可能很高，但流明数相对较低。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_15"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://www.bipm.org/en/measurement-units/si-base-units&lt;/li&gt;
&lt;li&gt;https://www.nist.gov/si-redefinition/road-revised-si&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/SI_base_unit&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/International_System_of_Units&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Kibble_balance&lt;/li&gt;
&lt;li&gt;https://www.nist.gov/si-redefinition/kilogram-kibble-balance&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Physical_constant&lt;/li&gt;
&lt;li&gt;https://pml.nist.gov/cuu/Constants/&lt;/li&gt;
&lt;/ul&gt;</content><category term="Science"></category></entry><entry><title>最小作用量原理小记</title><link href="https://blog.debao.me/2024/09/notes-on-the-principle-of-least-action/" rel="alternate"></link><published>2024-09-15T22:20:00+08:00</published><updated>2024-09-15T22:20:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-09-15:/2024/09/notes-on-the-principle-of-least-action/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;胡乱整理一下，理理思绪。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;最小？作用量？原理？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_2"&gt;原理？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;作用量？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;最小？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;莫培督原理 与 哈密顿原理&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_6"&gt;莫培督原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_7"&gt;哈密顿原理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_8"&gt;作用原理 与 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;胡乱整理一下，理理思绪。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;最小？作用量？原理？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_2"&gt;原理？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;作用量？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;最小？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;莫培督原理 与 哈密顿原理&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_6"&gt;莫培督原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_7"&gt;哈密顿原理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_8"&gt;作用原理 与 牛顿定律&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_9"&gt;拉格朗日力学&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_10"&gt;哈密顿力学&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_11"&gt;路径积分 与 薛定谔方程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_12"&gt;薛定谔方程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_13"&gt;积分路径&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_14"&gt;泛函&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#function"&gt;函数（Function）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_15"&gt;区分函数与函数值&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#functional"&gt;泛函（Functional）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#linear-functional"&gt;线性泛函（Linear Functional）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#calculus-of-variation"&gt;变分（Calculus of Variation）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_16"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;最小？作用量？原理？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;虽然这个原理历史上被称为“最小作用量原理（Principle of Least Action）”，或“最小作用原理”，但更准确的说法应该是“驻定作用量原理（Principle of Stationary Action）”，因为系统的路径不一定总是使作用量达到最小值，它可以是驻定值，可能是最小值、最大值或鞍点。为避免混淆，现在一般称呼“哈密顿原理”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;最小（least）：&lt;strong&gt;不一定&lt;/strong&gt;是最小值，还可能是最大值，或者鞍点值。&lt;/li&gt;
&lt;li&gt;作用量（action）：物理系统在某一段时间内的整体行为。为什么翻译成作用量，估计是借鉴的日语翻译？&lt;/li&gt;
&lt;li&gt;原理（principle）：经验总结出的广泛规则或假设，&lt;strong&gt;不需要严格证明&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分别看看&lt;/p&gt;
&lt;h3 id="_2"&gt;原理？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;作为对自然现象的一种特别有效的描述方式，最小作用量原理在其发展史上曾被赋予各种神秘特性或目的论（Teleology /ˌtiːliˈɒlədʒi/）色彩。目的论是一种哲学思想，认为自然界中的事物或过程是朝着某种“目的”进行的。在最小作用量原理的语境中，目的论的含义可以理解为：自然界中的物理系统会选择一种特定的路径或演化方式（上帝创造自然界时的设计），以实现某种“最优”或“最小”的状态。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有好多词，经常出现，似乎挺容易混的。不过本来也没有严格定义，很多时候界限也不明确&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;中文概念&lt;/th&gt;
&lt;th&gt;英文名称&lt;/th&gt;
&lt;th&gt;音标&lt;/th&gt;
&lt;th&gt;...&lt;/th&gt;
&lt;th&gt;证明性&lt;/th&gt;
&lt;th&gt;例子&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;原理&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Principle&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;/ˈprɪnsɪpəl/&lt;/td&gt;
&lt;td&gt;经验总结出的广泛规则或假设&lt;/td&gt;
&lt;td&gt;不需要严格证明&lt;/td&gt;
&lt;td&gt;最小作用量原理、费马原理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;公理&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Axiom&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;/ˈæksiəm/&lt;/td&gt;
&lt;td&gt;理论体系中的基本假设或前提，无需证明&lt;/td&gt;
&lt;td&gt;不需要证明&lt;/td&gt;
&lt;td&gt;欧几里得几何的平行公理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;定理&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Theorem&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;/ˈθɪərəm/&lt;/td&gt;
&lt;td&gt;通过逻辑推理，从公理或其他定理推导出的结论&lt;/td&gt;
&lt;td&gt;需要严格证明&lt;/td&gt;
&lt;td&gt;勾股定理、费马小定理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;定律&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Law&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;/lɔː/&lt;/td&gt;
&lt;td&gt;对自然界现象的普遍性描述，通常基于实验和观察&lt;/td&gt;
&lt;td&gt;不需要证明，但需验证&lt;/td&gt;
&lt;td&gt;牛顿运动定律、热力学第一定律、欧姆定律&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;假设&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Hypothesis&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;/haɪˈpɒθɪsɪs/&lt;/td&gt;
&lt;td&gt;对某个现象或问题的暂时性解释或假定，等待验证&lt;/td&gt;
&lt;td&gt;需要验证或证伪&lt;/td&gt;
&lt;td&gt;进化假设、宇宙膨胀假设&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;猜想&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Conjecture&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;/kənˈdʒɛktʃər/&lt;/td&gt;
&lt;td&gt;基于观察或直觉提出的命题，尚未被证明&lt;/td&gt;
&lt;td&gt;需要证明或证伪&lt;/td&gt;
&lt;td&gt;哥德巴赫猜想、庞加莱猜想&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;模型&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Model&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;/ˈmɒdəl/&lt;/td&gt;
&lt;td&gt;用于解释、预测或模拟某些现象的简化系统或结构&lt;/td&gt;
&lt;td&gt;不需要严格证明，但需验证&lt;/td&gt;
&lt;td&gt;原子模型、气体分子运动模型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;假说&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Postulate&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;/ˈpɒstʃʊlɪt/&lt;/td&gt;
&lt;td&gt;在理论体系中被假定为真的陈述，通常用作推导其他结论的基础&lt;/td&gt;
&lt;td&gt;不需要证明&lt;/td&gt;
&lt;td&gt;狭义相对论的光速不变假说&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;推论&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Corollary&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;/ˈkɒrəlɛri/&lt;/td&gt;
&lt;td&gt;从一个已证明的定理或命题直接得出的结论&lt;/td&gt;
&lt;td&gt;基于已知定理的证明&lt;/td&gt;
&lt;td&gt;勾股定理的推论：等腰直角三角形的斜边与直角边的比例为 √2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;定则&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Rule&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;/ruːl/&lt;/td&gt;
&lt;td&gt;特定领域的经验性总结，用于描述某类现象的行为模式或操作方式&lt;/td&gt;
&lt;td&gt;通常不需要严格证明&lt;/td&gt;
&lt;td&gt;克拉默定则&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;效应&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Effect&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;/ɪˈfɛkt/&lt;/td&gt;
&lt;td&gt;特定条件下的因果关系现象，通常是实验观察中的结果&lt;/td&gt;
&lt;td&gt;不需要证明，但需验证&lt;/td&gt;
&lt;td&gt;多普勒效应、光电效应&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;怎么能图形化显示一下？，chatgpt给出下面一个表，凑活看一下&lt;/p&gt;
&lt;div class="mermaid"&gt;
graph TD
    A[理论基础] --&gt;|公理| C[Axiom]
    A --&gt;|原理| I[Principle]
    A --&gt;|假说| K[Postulate]
    A --&gt;|假设| B[Hypothesis]

    B --&gt;|验证/证伪| D[Theory/Model]
    B --&gt;|未验证| J[Conjecture]

    C --&gt;|推导| E[Theorem]
    E --&gt;|直接推导| F[Corollary]

    D --&gt;|总结| G[Law]
    D --&gt;|简化描述| H[Model]

    D --&gt;|具体现象| L[Effect]
    G --&gt;|特定场景应用| M[Rule]
&lt;/div&gt;

&lt;h3 id="_3"&gt;作用量？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Action 作用量？？？ 神奇的翻译，Action为什么翻译成作用量，源于日语翻译？？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作用量的核心思想是：它是某个物理系统在一定时间间隔内经历的运动的整体度量。&lt;/p&gt;
&lt;p&gt;取决于所研究的系统和使用的理论框架，作用量在不同的物理学理论中有不同的形式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;莫培督的定义：作用量是动量与路径长度的积分。【简略作用量（泛函）】&lt;/li&gt;
&lt;li&gt;经典力学：作用量等于拉格朗日量在时间上的积分。【作用量（泛函）】&lt;/li&gt;
&lt;li&gt;哈密顿力学：作用量可以表示为动量和广义坐标的积分。&lt;/li&gt;
&lt;li&gt;广义相对论：爱因斯坦-希尔伯特作用量用于描述引力场的动态行为。&lt;/li&gt;
&lt;li&gt;费曼路径积分：作用量用于描述所有可能路径的概率幅。&lt;/li&gt;
&lt;li&gt;杨-米尔斯理论：作用量用于描述规范场的行为。&lt;/li&gt;
&lt;li&gt;场论：作用量通过拉格朗日密度在时空上的积分来定义。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;最小？&lt;/h3&gt;
&lt;p&gt;最小 到 驻点 演变：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最小作用原理：最早由莫培督提出，认为物理系统沿着使作用量最小的路径演化。这一思想也体现在费马的最小时间原理中。&lt;/li&gt;
&lt;li&gt;拉格朗日力学：拉格朗日通过动能和势能的差来定义作用量，并基于最小作用原理导出了经典力学的运动方程。&lt;/li&gt;
&lt;li&gt;变分法的发展：随着数学变分法的发展，物理学家意识到系统的实际路径并不总是最小作用量的路径，而是驻定作用量的路径。&lt;/li&gt;
&lt;li&gt;驻点作用原理：最终导致了从“最小作用原理”到“驻点作用原理”的演变。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_5"&gt;莫培督原理 与 哈密顿原理&lt;/h2&gt;
&lt;p&gt;最小作用原理名字不够准确，一般用“哈密顿原理”称呼。而莫培督提出的最小作用量原理，用“莫培督原理”称呼。&lt;/p&gt;
&lt;h3 id="_6"&gt;莫培督原理&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;莫培督原理&lt;/strong&gt;（Maupertuis's Principle）表述如下：&lt;/p&gt;
&lt;p&gt;对于一个物理系统，其真实运动轨迹是在&lt;strong&gt;固定能量&lt;/strong&gt;条件下，使得某种物理量（称为&lt;strong&gt;作用量&lt;/strong&gt;）达到极小值的轨迹。莫培督原理适用于描述系统在空间中的路径，并通过动量和位移的关系来表达。&lt;/p&gt;
&lt;p&gt;作用量 &lt;span class="math inline"&gt;W&lt;/span&gt; 定义为：&lt;/p&gt;
&lt;div class="math display"&gt;
W = \int_{x_1}^{x_2} p \, dx = \int_{x_1}^{x_2} mv \, ds
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;p = mv&lt;/span&gt; 是系统的动量，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;v&lt;/span&gt; 是系统的速度，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;m&lt;/span&gt; 是系统的质量，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;ds&lt;/span&gt; 是沿路径的微小位移。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;莫培督原理指出，系统的真实路径是使作用量 &lt;span class="math inline"&gt;W&lt;/span&gt; 取极小值的路径。这意味着系统选择的运动轨迹使得动量 &lt;span class="math inline"&gt;p&lt;/span&gt; 与位移 &lt;span class="math inline"&gt;ds&lt;/span&gt; 的积分最小化。在数学上，这可以表述为：&lt;/p&gt;
&lt;div class="math display"&gt;
(\delta W)_E = 0
&lt;/div&gt;

&lt;p&gt;这里，&lt;span class="math inline"&gt;E&lt;/span&gt; 表示系统的总能量保持不变。&lt;/p&gt;
&lt;p&gt;换句话说，物理系统在固定能量下选择的路径是使动量与位移的乘积积分最小的路径，即系统在空间中“节约”它的运动。&lt;/p&gt;
&lt;h3 id="_7"&gt;哈密顿原理&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;哈密顿原理&lt;/strong&gt;（Hamilton's Principle）表述如下：&lt;/p&gt;
&lt;p&gt;对于一个由广义坐标 &lt;span class="math inline"&gt;q = (q_1, q_2, ..., q_N)&lt;/span&gt; 描述的物理系统，其在两个给定时刻 &lt;span class="math inline"&gt;t_1&lt;/span&gt; 和 &lt;span class="math inline"&gt;t_2&lt;/span&gt; 之间的真实演化轨迹 &lt;span class="math inline"&gt;q(t)&lt;/span&gt; 是使得&lt;strong&gt;作用量&lt;/strong&gt;（Action）泛函 &lt;span class="math inline"&gt;S[q]&lt;/span&gt; 取驻值（通常为极值）的轨迹。作用量 &lt;span class="math inline"&gt;S[q]&lt;/span&gt; 由系统的&lt;strong&gt;拉格朗日量&lt;/strong&gt; &lt;span class="math inline"&gt;L(q, \dot{q}, t)&lt;/span&gt; 随时间的积分定义：&lt;/p&gt;
&lt;div class="math display"&gt;
S[q] = \int_{t_1}^{t_2} L(q(t), \dot{q}(t), t) \, dt
&lt;/div&gt;

&lt;p&gt;哈密顿原理指出，物理系统的真实演化轨迹满足以下条件：在固定的边界条件（即在 &lt;span class="math inline"&gt;t_1&lt;/span&gt; 和 &lt;span class="math inline"&gt;t_2&lt;/span&gt; 的时刻，系统的状态 &lt;span class="math inline"&gt;q(t_1)&lt;/span&gt; 和 &lt;span class="math inline"&gt;q(t_2)&lt;/span&gt; 是固定的）下，作用量 &lt;span class="math inline"&gt;S[q]&lt;/span&gt; 对轨迹 &lt;span class="math inline"&gt;q(t)&lt;/span&gt; 的一阶变分为零：&lt;/p&gt;
&lt;div class="math display"&gt;
\frac{\delta S}{\delta q(t)} = 0
&lt;/div&gt;

&lt;p&gt;换句话说，系统的真实运动轨迹是作用量泛函的&lt;strong&gt;驻定点&lt;/strong&gt;，也就是系统所选择的路径使得作用量在所有可能路径中取极值（通常是最小值）。&lt;/p&gt;
&lt;h2 id="_8"&gt;作用原理 与 牛顿定律&lt;/h2&gt;
&lt;p&gt;在经典力学中，作用原理和牛顿定律是两种不同的理论框架，虽然它们的数学表述和逻辑基础不同，但它们在结果上是等价的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;牛顿力学&lt;/strong&gt;：直观、简单，适用于质点和刚体等简单系统。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;拉格朗日力学&lt;/strong&gt;：适合处理复杂约束系统，通过最小作用原理描述运动。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;哈密顿力学&lt;/strong&gt;：更抽象，适用于经典和量子力学，广泛应用于现代物理学。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;牛顿力学&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;拉格朗日力学&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;哈密顿力学&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;基本方程&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;F = ma&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;\frac{d}{dt} \left( \frac{\partial L}{\partial \dot{q}_i} \right) = \frac{\partial L}{\partial q_i}&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math inline"&gt;\dot{q}_i = \frac{\partial H}{\partial p_i}, \quad \dot{p}_i = -\frac{\partial H}{\partial q_i}&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;变量&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;位置&lt;span class="math inline"&gt;r(t)&lt;/span&gt;，速度 &lt;span class="math inline"&gt;v(t)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;广义坐标&lt;span class="math inline"&gt;q_i(t)&lt;/span&gt;，广义速度 &lt;span class="math inline"&gt;\dot{q}_i(t)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;广义坐标&lt;span class="math inline"&gt;q_i(t)&lt;/span&gt;，共轭动量 &lt;span class="math inline"&gt;p_i(t)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;描述对象&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;通过&lt;strong&gt;力&lt;/strong&gt;和&lt;strong&gt;加速度&lt;/strong&gt;描述运动&lt;/td&gt;
&lt;td&gt;通过&lt;strong&gt;拉格朗日量&lt;/strong&gt; &lt;span class="math inline"&gt;L = T - V&lt;/span&gt; 描述运动&lt;/td&gt;
&lt;td&gt;通过&lt;strong&gt;哈密顿量&lt;/strong&gt; &lt;span class="math inline"&gt;H = T + V&lt;/span&gt; 描述运动&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;数学框架&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;基于牛顿第二定律的&lt;strong&gt;微分方程&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;基于&lt;strong&gt;最小作用原理&lt;/strong&gt;的变分法，推导运动方程&lt;/td&gt;
&lt;td&gt;基于正则方程，使用广义坐标和共轭动量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;优势&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;概念直观，适用于简单系统&lt;/td&gt;
&lt;td&gt;能处理复杂、多粒子、约束系统&lt;/td&gt;
&lt;td&gt;提供更抽象广泛的框架，适用于经典和量子系统&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_9"&gt;拉格朗日力学&lt;/h3&gt;
&lt;p&gt;在牛顿力学的基础上，达朗贝尔原理和虚功原理被提出，用以处理有约束的系统。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;达朗贝尔原理（D'Alembert's Principle）指出，对于有约束的系统，真正的受力和约束力之间存在一种平衡关系，使得系统的虚位移不做功。&lt;/li&gt;
&lt;li&gt;虚功原理（Principle of Virtual Work）为引入广义坐标奠定了基础。通过广义坐标 &lt;span class="math inline"&gt; q_i &lt;/span&gt; 和广义速度 &lt;span class="math inline"&gt; \dot{q}_i &lt;/span&gt; ，可以将系统的自由度进行重新表述，进而简化约束系统的分析。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;约瑟夫·拉格朗日基于上述原理，提出了一个新的动力学描述方式：&lt;strong&gt;拉格朗日力学&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;他引入了一个新的函数，称为&lt;strong&gt;拉格朗日量（Lagrangians）&lt;/strong&gt; &lt;span class="math inline"&gt; L &lt;/span&gt; ，它是系统动能 &lt;span class="math inline"&gt; T &lt;/span&gt; 和势能 &lt;span class="math inline"&gt; V &lt;/span&gt; 的差：&lt;/p&gt;
&lt;div class="math display"&gt;
L = T - V
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;T 是系统的动能，通常表示为 &lt;span class="math inline"&gt; T = \frac{1}{2} m \dot{q}^2 &lt;/span&gt; 。&lt;/li&gt;
&lt;li&gt;V 是系统的势能，表示为 &lt;span class="math inline"&gt; V = V(q) &lt;/span&gt; ，它依赖于系统的位置。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;拉格朗日量的引入与&lt;strong&gt;最小作用原理&lt;/strong&gt;密切相关。最小作用原理指出，物理系统的演化路径是使得总作用量 &lt;span class="math inline"&gt; S &lt;/span&gt; 取极值（通常是最小值）的路径。作用量 &lt;span class="math inline"&gt; S &lt;/span&gt; 是拉格朗日量在时间上的积分：&lt;/p&gt;
&lt;div class="math display"&gt;
S = \int_{t_1}^{t_2} L \, dt
&lt;/div&gt;

&lt;p&gt;通过对作用量 &lt;span class="math inline"&gt; S &lt;/span&gt; 取变分 &lt;span class="math inline"&gt; \delta S = 0 &lt;/span&gt;，可以得到系统的运动方程。这一过程称为&lt;strong&gt;变分法&lt;/strong&gt;，最终推导出&lt;strong&gt;欧拉-拉格朗日方程&lt;/strong&gt;：&lt;/p&gt;
&lt;div class="math display"&gt;
\frac{d}{dt} \left( \frac{\partial L}{\partial \dot{q}} \right) - \frac{\partial L}{\partial q} = 0
&lt;/div&gt;

&lt;p&gt;欧拉-拉格朗日方程是拉格朗日力学的核心方程，它取代了牛顿的运动方程，给出了物理系统的更一般的运动描述。&lt;/p&gt;
&lt;h3 id="_10"&gt;哈密顿力学&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;哈密顿力学&lt;/strong&gt;是经典力学的一种重要表述方式，由&lt;strong&gt;威廉·哈密顿&lt;/strong&gt;（William Rowan Hamilton）在1833年提出。它与拉格朗日力学一样，基于&lt;strong&gt;最小作用量原理&lt;/strong&gt;，但通过引入新的变量——&lt;strong&gt;哈密顿量&lt;/strong&gt;（Hamiltonian）和&lt;strong&gt;正则共轭变量&lt;/strong&gt;，为描述物理系统提供了一个更加对称、通用的框架。这种形式在现代物理学，尤其是量子力学和统计力学中，具有广泛的应用。&lt;/p&gt;
&lt;p&gt;在哈密顿力学中，系统的状态由一组&lt;strong&gt;广义坐标&lt;/strong&gt; &lt;span class="math inline"&gt;q_i&lt;/span&gt; 和与之共轭的&lt;strong&gt;广义动量&lt;/strong&gt; &lt;span class="math inline"&gt;p_i&lt;/span&gt; 描述。哈密顿力学的核心是&lt;strong&gt;哈密顿量&lt;/strong&gt; &lt;span class="math inline"&gt;H(q, p, t)&lt;/span&gt;，它通常是系统的&lt;strong&gt;总能量&lt;/strong&gt;，即动能与势能的和。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;广义坐标&lt;/strong&gt; &lt;span class="math inline"&gt;q_i&lt;/span&gt;：描述系统的配置或位置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;广义动量&lt;/strong&gt; &lt;span class="math inline"&gt;p_i&lt;/span&gt;：与 &lt;span class="math inline"&gt;q_i&lt;/span&gt; 共轭的动量，定义为拉格朗日量 &lt;span class="math inline"&gt;L&lt;/span&gt; 对广义速度 &lt;span class="math inline"&gt;\dot{q}_i&lt;/span&gt; 的偏导数：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
p_i = \frac{\partial L}{\partial \dot{q}_i}
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;哈密顿量&lt;/strong&gt; &lt;span class="math inline"&gt;H(q, p, t)&lt;/span&gt;：系统的总能量函数，定义为拉格朗日量 &lt;span class="math inline"&gt;L&lt;/span&gt; 的勒让德变换（Legendre Transform）：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
H(q, p, t) = \sum_i p_i \dot{q}_i - L(q, \dot{q}, t)
&lt;/div&gt;

&lt;p&gt;哈密顿力学的核心是&lt;strong&gt;哈密顿方程（Hamilton's Equations）&lt;/strong&gt;，也叫做正则方程，它描述了系统随时间的演化。哈密顿方程由一组一阶微分方程组成，给出了广义坐标和广义动量随时间的变化：&lt;/p&gt;
&lt;div class="math display"&gt;
\dot{q}_i = \frac{\partial H}{\partial p_i}, \quad \dot{p}_i = -\frac{\partial H}{\partial q_i}
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\dot{q}_i = \frac{\partial H}{\partial p_i}&lt;/span&gt;：广义坐标的变化等于哈密顿量对广义动量的偏导数。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\dot{p}_i = -\frac{\partial H}{\partial q_i}&lt;/span&gt;：广义动量的变化等于哈密顿量对广义坐标的负偏导数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;哈密顿力学与拉格朗日力学是经典力学的两种等价表述。拉格朗日力学使用&lt;strong&gt;广义坐标&lt;/strong&gt; &lt;span class="math inline"&gt;q_i&lt;/span&gt; 和&lt;strong&gt;广义速度&lt;/strong&gt; &lt;span class="math inline"&gt;\dot{q}_i&lt;/span&gt; 来描述系统，而哈密顿力学则使用&lt;strong&gt;广义坐标&lt;/strong&gt; &lt;span class="math inline"&gt;q_i&lt;/span&gt; 和&lt;strong&gt;广义动量&lt;/strong&gt; &lt;span class="math inline"&gt;p_i&lt;/span&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在拉格朗日力学中，运动方程由&lt;strong&gt;欧拉-拉格朗日方程&lt;/strong&gt;给出：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
\frac{d}{dt} \left( \frac{\partial L}{\partial \dot{q}_i} \right) - \frac{\partial L}{\partial q_i} = 0
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;在哈密顿力学中，这些二阶微分方程被转化为一组一阶的哈密顿方程：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
\dot{q}_i = \frac{\partial H}{\partial p_i}, \quad \dot{p}_i = -\frac{\partial H}{\partial q_i}
&lt;/div&gt;

&lt;p&gt;这两个表述方式实际上是等价的，但哈密顿力学在某些问题中提供了更大的便利和对称性。&lt;/p&gt;
&lt;h2 id="_11"&gt;路径积分 与 薛定谔方程&lt;/h2&gt;
&lt;p&gt;薛定谔方程可以通过费曼的路径积分表述重新解释，路径积分方法被认为是一种更具普遍性的量子力学框架，它与薛定谔方程等价。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;对比维度&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;薛定谔方程&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;路径积分表述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;历史背景&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;由薛定谔提出，基于波动力学理论&lt;/td&gt;
&lt;td&gt;由费曼提出，基于狄拉克的量子作用思想&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;数学形式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;偏微分方程&lt;/td&gt;
&lt;td&gt;路径积分，即对所有可能路径的求和&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;物理意义&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;描述波函数的时间演化，给出概率幅&lt;/td&gt;
&lt;td&gt;对所有可能路径的干涉进行求和，给出传播振幅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;计算方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;通过求解微分方程得到波函数&lt;/td&gt;
&lt;td&gt;通过对路径积分得到传播子&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;经典极限&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;WKB近似，经典轨迹&lt;/td&gt;
&lt;td&gt;经典路径的贡献最大，符合最小作用原理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;直观性&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;波函数较为抽象&lt;/td&gt;
&lt;td&gt;强调所有可能路径的叠加，直观反映量子态的干涉效应&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_12"&gt;薛定谔方程&lt;/h3&gt;
&lt;p&gt;薛定谔方程是量子力学的基本方程，用来描述系统的波函数 &lt;span class="math inline"&gt; \psi(\mathbf{r}, t) &lt;/span&gt; 随时间的演化。对于一个非相对论、无自旋的单粒子系统，薛定谔方程为：&lt;/p&gt;
&lt;div class="math display"&gt;
i\hbar \frac{\partial}{\partial t} \psi(\mathbf{r}, t) = \hat{H} \psi(\mathbf{r}, t)
&lt;/div&gt;

&lt;p&gt;其中 &lt;span class="math inline"&gt; \hat{H} &lt;/span&gt; 是哈密顿算符，通常包含动能和势能部分：&lt;/p&gt;
&lt;div class="math display"&gt;
\hat{H} = -\frac{\hbar^2}{2m} \nabla^2 + V(\mathbf{r}, t)
&lt;/div&gt;

&lt;p&gt;这个方程描述了粒子的波函数随时间的演化，给出量子态的时间演化规则。&lt;/p&gt;
&lt;h3 id="_13"&gt;积分路径&lt;/h3&gt;
&lt;p&gt;传播子可以写成：&lt;/p&gt;
&lt;div class="math display"&gt;
K(\mathbf{r}_2, t_2; \mathbf{r}_1, t_1) = \int \mathcal{D}[\mathbf{r}(t)] \exp \left( \frac{i}{\hbar} S[\mathbf{r}(t)] \right)
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt; \mathcal{D}[\mathbf{r}(t)] &lt;/span&gt; 表示对所有可能路径 &lt;span class="math inline"&gt; \mathbf{r}(t) &lt;/span&gt; 的积分。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt; S[\mathbf{r}(t)] &lt;/span&gt; 是路径上的&lt;strong&gt;作用量&lt;/strong&gt;，由拉格朗日量 &lt;span class="math inline"&gt; L &lt;/span&gt; 对时间的积分给出：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
S[\mathbf{r}(t)] = \int_{t_1}^{t_2} L(\mathbf{r}(t), \dot{\mathbf{r}}(t)) dt
&lt;/div&gt;

&lt;p&gt;对于一个经典的粒子，拉格朗日量为：&lt;/p&gt;
&lt;div class="math display"&gt;
L(\mathbf{r}, \dot{\mathbf{r}}) = \frac{m}{2} \dot{\mathbf{r}}^2 - V(\mathbf{r})
&lt;/div&gt;

&lt;p&gt;因此，路径积分表述将粒子的传播振幅 &lt;span class="math inline"&gt; K(\mathbf{r}_2, t_2; \mathbf{r}_1, t_1) &lt;/span&gt; 解释为所有可能路径对的贡献，其中每条路径的贡献由经典作用量 &lt;span class="math inline"&gt; S[\mathbf{r}(t)] &lt;/span&gt; 决定。&lt;/p&gt;
&lt;h2 id="_14"&gt;泛函&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;泛函&lt;/strong&gt;是函数的一个推广。泛函是“函数的函数”（注意不同于复合函数）。&lt;/p&gt;
&lt;h3 id="function"&gt;函数（Function）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Function 为什么翻译成“函数”？&lt;strong&gt;函&lt;/strong&gt;原意是“信函”或“封套”的意思，表示包裹、包含或传递信息。在数学中，“函” 引申为“包含某种关系的映射”。&lt;strong&gt;数&lt;/strong&gt;表示数字或数值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;函数&lt;/strong&gt;是一种数学映射，它将一个数或一组数映射到另一个数。更形式化地说，函数是定义在某个集合上的一种规则，它将集合中的每一个元素映射到另一个集合中的唯一一个元素。&lt;/p&gt;
&lt;p&gt;如果 &lt;span class="math inline"&gt;x&lt;/span&gt; 是一个变量，&lt;span class="math inline"&gt;f(x)&lt;/span&gt; 是一个函数，则函数 &lt;span class="math inline"&gt;f&lt;/span&gt; 是将变量 &lt;span class="math inline"&gt;x&lt;/span&gt; 映射到一个值的规则，通常写作：&lt;/p&gt;
&lt;div class="math display"&gt;
y = f(x)
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;x&lt;/span&gt; 是函数的输入（自变量），&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;y&lt;/span&gt; 是函数的输出（因变量）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_15"&gt;区分函数与函数值&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;函数是一种映射关系。（注：20世纪初，大家默认函数=公式？）&lt;/li&gt;
&lt;li&gt;函数值是一个数值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="functional"&gt;泛函（Functional）&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;泛函&lt;/strong&gt;是函数的一个推广。与函数不同的是，&lt;strong&gt;泛函的输入是一个函数，输出是一个标量&lt;/strong&gt;。简而言之，泛函是“函数的函数”。&lt;/p&gt;
&lt;p&gt;如果 &lt;span class="math inline"&gt;f(x)&lt;/span&gt; 是一个函数，泛函 &lt;span class="math inline"&gt;S&lt;/span&gt; 是一个将**函数 &lt;span class="math inline"&gt;f(x)`** 映射到一个**标量**的规则。通常，泛函的形式为一个涉及函数 $`f&lt;/span&gt; 及其导数的积分表达式：&lt;/p&gt;
&lt;div class="math display"&gt;
S[f] = \int_{a}^{b} F(x, f(x), f'(x)) \, dx
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;f(x)&lt;/span&gt; 是泛函的输入，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;S[f]&lt;/span&gt; 是泛函的输出，是一个标量，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;F(x, f(x), f'(x))&lt;/span&gt; 是一个包含 &lt;span class="math inline"&gt;x&lt;/span&gt;、&lt;span class="math inline"&gt;f(x)&lt;/span&gt; 和 &lt;span class="math inline"&gt;f'(x)&lt;/span&gt; 的函数，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;a&lt;/span&gt; 和 &lt;span class="math inline"&gt;b&lt;/span&gt; 是积分的上下限。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;泛函的输入是一个函数，输出是一个数值（标量）&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id="linear-functional"&gt;线性泛函（Linear Functional）&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;线性泛函&lt;/strong&gt;是泛函的一种特殊形式，它是&lt;strong&gt;线性映射&lt;/strong&gt;，将&lt;strong&gt;向量空间中的向量（函数）映射到实数或复数&lt;/strong&gt;。简单来说，线性泛函是作用在向量空间上的线性函数，并且输出是一个标量。&lt;/p&gt;
&lt;p&gt;设 &lt;span class="math inline"&gt;V&lt;/span&gt; 是一个&lt;strong&gt;向量空间&lt;/strong&gt;，其中的元素可以是向量或函数。一个&lt;strong&gt;线性泛函&lt;/strong&gt; &lt;span class="math inline"&gt;L&lt;/span&gt; 是定义在 &lt;span class="math inline"&gt;V&lt;/span&gt; 上的一个映射，它将 &lt;span class="math inline"&gt;V&lt;/span&gt; 中的每个元素 &lt;span class="math inline"&gt;v&lt;/span&gt; 映射到一个标量（通常是实数或复数）上，并且满足以下两个性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;齐次性&lt;/strong&gt;（Homogeneity）：对于任意的标量 &lt;span class="math inline"&gt;a&lt;/span&gt; 和向量 &lt;span class="math inline"&gt;v \in V&lt;/span&gt;，有：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
  L(a v) = a L(v)
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;可加性&lt;/strong&gt;（Additivity）：对于任意的向量 &lt;span class="math inline"&gt;v_1, v_2 \in V&lt;/span&gt;，有：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
  L(v_1 + v_2) = L(v_1) + L(v_2)
&lt;/div&gt;

&lt;p&gt;这两个性质合起来就是&lt;strong&gt;线性性质&lt;/strong&gt;，因此这种类型的泛函就是&lt;strong&gt;线性泛函&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id="calculus-of-variation"&gt;变分（Calculus of Variation）&lt;/h4&gt;
&lt;p&gt;变分与泛函之间的关系可以类比为&lt;strong&gt;微分与函数&lt;/strong&gt;的关系：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;函数与微分&lt;/strong&gt;：对于普通的函数 &lt;span class="math inline"&gt;f(x)&lt;/span&gt;，其微分描述了在 &lt;span class="math inline"&gt;x&lt;/span&gt; 发生微小变化时，函数 &lt;span class="math inline"&gt;f(x)&lt;/span&gt; 如何变化。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math display"&gt;
df = \frac{df}{dx} \, dx
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;泛函与变分&lt;/strong&gt;：对应地，对于泛函 &lt;span class="math inline"&gt;S[f]&lt;/span&gt;，其变分描述了在输入的函数 &lt;span class="math inline"&gt;f(x)&lt;/span&gt; 发生微小变化时，泛函 &lt;span class="math inline"&gt;S[f]&lt;/span&gt; 如何变化。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设 &lt;span class="math inline"&gt;f(x)&lt;/span&gt; 是函数，&lt;span class="math inline"&gt;\eta(x)&lt;/span&gt; 是一个小扰动函数，&lt;span class="math inline"&gt;\epsilon&lt;/span&gt; 是一个非常小的实数，则 &lt;span class="math inline"&gt;f(x) + \epsilon \eta(x)&lt;/span&gt; 表示 &lt;span class="math inline"&gt;f(x)&lt;/span&gt; 的微小变化。在这种情况下，泛函 &lt;span class="math inline"&gt;S[f]&lt;/span&gt; 的变分定义为：&lt;/p&gt;
&lt;div class="math display"&gt;
\delta S[f] = \lim_{\epsilon \to 0} \frac{S[f + \epsilon \eta] - S[f]}{\epsilon}
&lt;/div&gt;

&lt;p&gt;这个变化量 &lt;span class="math inline"&gt;\delta S[f]&lt;/span&gt; 就是泛函 &lt;span class="math inline"&gt;S[f]&lt;/span&gt; 的&lt;strong&gt;变分&lt;/strong&gt;（变分也是一个函数）。&lt;/p&gt;
&lt;h2 id="_16"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;许良 《最小作用量原理与物理学的发展》&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Action_principles&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/History_of_variational_principles_in_physics&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Hamilton%27s_principle&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Calculus_of_variations&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="module"&gt;
    import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.esm.min.mjs';
    mermaid.initialize({ startOnLoad: true });
&lt;/script&gt;</content><category term="Science"></category></entry><entry><title>希腊字母小记</title><link href="https://blog.debao.me/2024/09/notes-on-greek-alphabet/" rel="alternate"></link><published>2024-09-11T22:45:00+08:00</published><updated>2024-09-11T22:45:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-09-11:/2024/09/notes-on-greek-alphabet/</id><summary type="html">&lt;p&gt;希腊字母表起源于公元前9世纪左右，它是从更早的腓尼基字母演变而来的。与腓尼基字母不同，希腊字母首次引入了元音字母，这 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;希腊字母表起源于公元前9世纪左右，它是从更早的腓尼基字母演变而来的。与腓尼基字母不同，希腊字母首次引入了元音字母，这使得书写系统更加完善，能够更准确地记录语言的发音。它不仅用于书写希腊语，还在现代的数学、物理等领域中广泛使用。&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;希腊字母表&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_2"&gt;变体&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;物理中常用的几个？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;其他&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#blackboard-bold"&gt;Blackboard Bold&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#script-letters"&gt;Script Letters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;希腊字母表&lt;/h2&gt;
&lt;p&gt;希腊字母表24个字符，区分大写和小写。只关注其 &lt;strong&gt;字母音&lt;/strong&gt;：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;大写&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;小写&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;英文对应符号&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;英文名&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;英文音标&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;中文名&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Α&lt;/td&gt;
&lt;td style="text-align: center;"&gt;α&lt;/td&gt;
&lt;td style="text-align: center;"&gt;a&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Alpha&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/ˈælfə/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;阿尔法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Β&lt;/td&gt;
&lt;td style="text-align: center;"&gt;β&lt;/td&gt;
&lt;td style="text-align: center;"&gt;b&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Beta&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/ˈbiːtə/, /ˈbeɪtə/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;贝塔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Γ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;γ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;g&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Gamma&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/ˈɡæmə/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;伽玛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Δ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;δ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;d&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Delta&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/ˈdɛltə/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;德尔塔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Ε&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ε&lt;/td&gt;
&lt;td style="text-align: center;"&gt;e&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Epsilon&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/ˈɛpsɪlɒn/, /ɛpˈsaɪlən/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;艾普西隆/厄普西隆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Ζ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ζ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;z&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Zeta&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/ˈziːtə/, /ˈzeɪtə/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;泽塔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Η&lt;/td&gt;
&lt;td style="text-align: center;"&gt;η&lt;/td&gt;
&lt;td style="text-align: center;"&gt;h&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Eta&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/ˈiːtə/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;伊塔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Θ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;θ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;th&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Theta&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/ˈθiːtə/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;西塔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Ι&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ι&lt;/td&gt;
&lt;td style="text-align: center;"&gt;i&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Iota&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/aɪˈəʊtə/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;约塔 (yāo塔)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Κ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;κ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;k&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Kappa&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/ˈkæpə/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;卡帕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Λ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;λ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;l&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Lambda&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/ˈlæmdə/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;拉姆达&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Μ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;μ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;m&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Mu&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/mjuː/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;缪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Ν&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ν&lt;/td&gt;
&lt;td style="text-align: center;"&gt;n&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Nu&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/njuː/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;纽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Ξ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ξ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;x&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Xi&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/zaɪ/, /saɪ/, /ksaɪ/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;克西&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Ο&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ο&lt;/td&gt;
&lt;td style="text-align: center;"&gt;o&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Omicron&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/ˈɒmɪkrɒn/, /əʊˈmaɪkrɒn/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;奥米克戎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Π&lt;/td&gt;
&lt;td style="text-align: center;"&gt;π&lt;/td&gt;
&lt;td style="text-align: center;"&gt;p&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Pi&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/paɪ/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;派&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Ρ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ρ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;r&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Rho&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/rəʊ/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;柔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Σ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;σ, ς&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;s&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Sigma&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/ˈsɪɡmə/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;西格马&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Τ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;τ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;t&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Tau&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/tɔː/, /taʊ/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;陶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Υ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;υ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;u/y&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Upsilon&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/ˈʌpsɪlɒn/, /juːpˈsaɪlən/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;阿普西隆/厄普西隆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Φ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;φ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ph&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Phi&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/faɪ/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;斐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Χ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;χ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ch&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Chi&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/kaɪ/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;希&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Ψ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ψ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ps&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Psi&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/psaɪ/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;普西&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;Ω&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ω&lt;/td&gt;
&lt;td style="text-align: center;"&gt;o&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Omega&lt;/td&gt;
&lt;td style="text-align: center;"&gt;/ˈəʊmɪɡə/, /oʊˈmeɪɡə/&lt;/td&gt;
&lt;td style="text-align: center;"&gt;欧米伽/奥米伽&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_2"&gt;变体&lt;/h3&gt;
&lt;p&gt;在数学和物理中，经常看到小写字符的变体。可能是变体源自书写传统或印刷排版的差异，二逐渐被保留下来，并用于特定场合。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;字母&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;大写形式&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;标准小写&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;变体小写&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;strong&gt;Epsilon&lt;/strong&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Ε&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ε&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ϵ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;strong&gt;Theta&lt;/strong&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Θ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;θ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ϑ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;strong&gt;Kappa&lt;/strong&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Κ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;κ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ϰ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;strong&gt;Phi&lt;/strong&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Φ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;φ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ϕ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;strong&gt;Pi&lt;/strong&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Π&lt;/td&gt;
&lt;td style="text-align: center;"&gt;π&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ϖ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;strong&gt;Rho&lt;/strong&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Ρ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ρ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ϱ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;strong&gt;Sigma&lt;/strong&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Σ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;σ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;ς&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_3"&gt;物理中常用的几个？&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;符号&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;中文名&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;英文名&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;数值/单位&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ε₀&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;真空介电常数&lt;/td&gt;
&lt;td&gt;Vacuum permittivity&lt;/td&gt;
&lt;td&gt;&lt;code&gt;8.854187817 × 10⁻¹² F/m&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;μ₀&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;真空磁导率&lt;/td&gt;
&lt;td&gt;Vacuum permeability&lt;/td&gt;
&lt;td&gt;&lt;code&gt;4π × 10⁻⁷ N/A²&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;α&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;精细结构常数&lt;/td&gt;
&lt;td&gt;Fine-structure constant&lt;/td&gt;
&lt;td&gt;约 &lt;code&gt;1/137&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;λ_D&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;德拜长度&lt;/td&gt;
&lt;td&gt;Debye length&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;σ&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;电导率&lt;/td&gt;
&lt;td&gt;Electrical conductivity&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;γ&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;表面张力&lt;/td&gt;
&lt;td&gt;Surface tension&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ω&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;角速度&lt;/td&gt;
&lt;td&gt;Angular velocity&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;χ&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;磁化率&lt;/td&gt;
&lt;td&gt;Magnetic susceptibility&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ψ&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;量子态波函数&lt;/td&gt;
&lt;td&gt;Wave function&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Λ&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;宇宙学常数&lt;/td&gt;
&lt;td&gt;Cosmological constant&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;θ&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;角度&lt;/td&gt;
&lt;td&gt;Angle&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ρ&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;电荷密度&lt;/td&gt;
&lt;td&gt;Charge density&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在物理和数学中，希腊字符和英文字符同时使用。区分一个符号是希腊字符还是英文字符。通常依赖于上下文、字体风格以及使用惯例。印刷和手写时，希腊字母和拉丁字母的外观通常有细微差异，特别是在斜体和笔划处理上。&lt;/p&gt;
&lt;p&gt;小写：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;希腊字母&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;英文字符&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;希腊字符常见用途&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;英文字符常见用途&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;α&lt;/code&gt; (Alpha)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;a&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;角加速度、吸收系数&lt;/td&gt;
&lt;td style="text-align: center;"&gt;线加速度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;β&lt;/code&gt; (Beta)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;b&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;速度比、β粒子、磁化率&lt;/td&gt;
&lt;td style="text-align: center;"&gt;磁场、宽度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;ε&lt;/code&gt; (Epsilon)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;e&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;介电常数、应变、能量损失因子&lt;/td&gt;
&lt;td style="text-align: center;"&gt;电荷量、电子、自然对数基数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;η&lt;/code&gt; (Eta)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;n&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;效率、粘度&lt;/td&gt;
&lt;td style="text-align: center;"&gt;数量、折射率&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;κ&lt;/code&gt; (Kappa)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;k&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;热导率、曲率系数&lt;/td&gt;
&lt;td style="text-align: center;"&gt;波数、玻尔兹曼常数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;ρ&lt;/code&gt; (Rho)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;p&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;密度、电阻率、体电荷密度&lt;/td&gt;
&lt;td style="text-align: center;"&gt;压力、动量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;τ&lt;/code&gt; (Tau)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;t&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;时间常数、剪切应力、寿命&lt;/td&gt;
&lt;td style="text-align: center;"&gt;时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;χ&lt;/code&gt; (Chi)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;x&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;磁化率、电极化率&lt;/td&gt;
&lt;td style="text-align: center;"&gt;坐标、未知量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;ω&lt;/code&gt; (Omega)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;w&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;角速度、角频率、固有频率&lt;/td&gt;
&lt;td style="text-align: center;"&gt;功、重量&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;大写：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;希腊字母&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;英文字符&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;希腊字母常见用途&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;英文字符常见用途&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;Α&lt;/code&gt; (Alpha)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;A&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;面积、安培、矢量势&lt;/td&gt;
&lt;td style="text-align: center;"&gt;面积、安培&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;Β&lt;/code&gt; (Beta)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;B&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;β粒子、磁通量&lt;/td&gt;
&lt;td style="text-align: center;"&gt;磁场强度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;Ε&lt;/code&gt; (Epsilon)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;E&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;电场强度、电势&lt;/td&gt;
&lt;td style="text-align: center;"&gt;电场、能量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;Η&lt;/code&gt; (Eta)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;H&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;效率&lt;/td&gt;
&lt;td style="text-align: center;"&gt;磁场强度、亥姆霍兹线圈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;Ι&lt;/code&gt; (Iota)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;I&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;-&lt;/td&gt;
&lt;td style="text-align: center;"&gt;电流、惯性矩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;Κ&lt;/code&gt; (Kappa)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;K&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;热导率、弹性系数&lt;/td&gt;
&lt;td style="text-align: center;"&gt;动能、温度因子&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;Μ&lt;/code&gt; (Mu)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;M&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;磁导率、偶极矩&lt;/td&gt;
&lt;td style="text-align: center;"&gt;质量、磁矩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;Ν&lt;/code&gt; (Nu)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;N&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;粒子数、频率&lt;/td&gt;
&lt;td style="text-align: center;"&gt;牛顿（力的单位）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;Ο&lt;/code&gt; (Omicron)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;O&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;-&lt;/td&gt;
&lt;td style="text-align: center;"&gt;圆周、氧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;Ρ&lt;/code&gt; (Rho)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;P&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;电阻率、动量密度&lt;/td&gt;
&lt;td style="text-align: center;"&gt;压力、功率、动量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;Τ&lt;/code&gt; (Tau)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;T&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;张量、时间常数、扭矩&lt;/td&gt;
&lt;td style="text-align: center;"&gt;温度、时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;Χ&lt;/code&gt; (Chi)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;X&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;磁化率、电极化率&lt;/td&gt;
&lt;td style="text-align: center;"&gt;坐标、未知量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;Ζ&lt;/code&gt; (Zeta)&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;Z&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;阻尼系数&lt;/td&gt;
&lt;td style="text-align: center;"&gt;原子序数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_4"&gt;其他&lt;/h2&gt;
&lt;p&gt;除了希腊字符，在数学中经常遇到所谓的黑板黑体（Blackboard bold），以及 Fraktur（德文尖角体，哥特体）、Script（花体）等。&lt;/p&gt;
&lt;h3 id="blackboard-bold"&gt;Blackboard Bold&lt;/h3&gt;
&lt;p&gt;Blackboard Bold 字母，通常用于表示数学中的特殊集合，如实数、整数、复数等。&lt;/p&gt;
&lt;p&gt;LaTeX 中通过&lt;code&gt;\mathbb{}&lt;/code&gt; 可以生成的所有 Blackboard Bold 字母（大写和小写）。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;大写字母&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;LaTeX 代码&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;小写字母&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;LaTeX 代码&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝔸&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{A}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕒&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{a}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝔹&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{B}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕓&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{b}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;ℂ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{C}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕔&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{c}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝔻&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{D}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕕&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{d}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝔼&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{E}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕖&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{e}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝔽&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{F}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕗&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{f}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝔾&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{G}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕘&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{g}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;ℍ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{H}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕙&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{h}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝕀&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{I}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕚&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{i}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝕁&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{J}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕛&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{j}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝕂&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{K}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕜&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{k}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝕃&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{L}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕝&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{l}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝕄&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{M}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕞&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{m}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;ℕ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{N}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕟&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{n}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝕆&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{O}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕠&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{o}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;ℙ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{P}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕡&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{p}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;ℚ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{Q}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕢&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{q}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;ℝ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{R}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕣&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{r}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝕊&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{S}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕤&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{s}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝕋&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{T}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕥&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{t}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝕌&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{U}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕦&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{u}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝕍&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{V}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕧&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{v}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝕎&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{W}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕨&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{w}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝕏&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{X}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕩&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{x}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝕐&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{Y}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕪&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{y}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;ℤ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{Z}&lt;/code&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;𝕫&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathbb{z}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="script-letters"&gt;Script Letters&lt;/h3&gt;
&lt;p&gt;在 LaTeX 中，\mathcal{} 是一种用于生成 花体字母（Script Letters）的命令。花体字母是一种装饰性的字体，常用于数学公式中，表示特定的数学对象或符号。通常，\mathcal 仅适用于大写字母，且它没有标准的小写形式。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;符号&lt;/strong&gt;&lt;/th&gt;
&lt;th style="text-align: center;"&gt;&lt;strong&gt;LaTeX 代码&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝒜&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{A}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;ℬ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{B}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;ℭ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{C}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝒟&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{D}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;ℰ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{E}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;ℱ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{F}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝒢&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{G}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;ℋ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{H}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;ℐ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{I}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝒥&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{J}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝒦&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{K}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;ℒ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{L}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;ℳ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{M}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝒩&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{N}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝒪&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{O}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝒫&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{P}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝒬&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{Q}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;ℛ&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{R}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝒮&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{S}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝒯&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{T}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝒰&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{U}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝒱&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{V}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝒲&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{W}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝒳&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{X}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝒴&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{Y}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;𝒵&lt;/td&gt;
&lt;td style="text-align: center;"&gt;&lt;code&gt;\mathcal{Z}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_5"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Greek_alphabet&lt;/li&gt;
&lt;li&gt;https://www.rapidtables.com/math/symbols/greek_alphabet.html&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/ISO_843&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Greek_letters_used_in_mathematics,_science,_and_engineering&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Blackboard_bold&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Fraktur&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;注：在希腊语书写中，Σ 的小写形式 σ 用于单词开头和中间，ς 仅用于单词末尾。&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="ESL"></category></entry><entry><title>Python Markdown使用小记</title><link href="https://blog.debao.me/2024/09/notes-on-python-markdown-usage/" rel="alternate"></link><published>2024-09-03T21:14:00+08:00</published><updated>2024-09-03T21:14:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-09-03:/2024/09/notes-on-python-markdown-usage/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;在getpeclican下启用了 python-markdown 的 markdown-katex后，markdown到html转换速度奇慢无比（在Windows下，从10秒变成了30分钟，Github Action的Ubuntu下，尽管没Windows下夸张，其workflow也从1分钟以内变成了4分钟出头。问题出在哪里？？不妨，从 python-markdown 基本用法开始...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;python-markdown 是一个用于将 Markdown 文本转换为 HTML 的 Python …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;在getpeclican下启用了 python-markdown 的 markdown-katex后，markdown到html转换速度奇慢无比（在Windows下，从10秒变成了30分钟，Github Action的Ubuntu下，尽管没Windows下夸张，其workflow也从1分钟以内变成了4分钟出头。问题出在哪里？？不妨，从 python-markdown 基本用法开始...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;python-markdown 是一个用于将 Markdown 文本转换为 HTML 的 Python 库。它提供了一个简单而灵活的方式来处理 Markdown 格式的文本，并将其转换为可以在网页上显示的 HTML 代码。&lt;/p&gt;
&lt;p&gt;注意：python-markdown 是一个较早的 Markdown 解析器，它遵循的是原始 Markdown 语法，所以不完全符合 CommonMark 标准。在python下，符合CommonMark的解析器有 markdown-it-py 和 mistune。&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#python-markdown"&gt;python-markdown 使用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;基本用法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;使用扩展（一）：单一内置扩展&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;使用扩展（二）：内置扩展介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;使用扩展（三）：配置扩展&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#katex"&gt;使用扩展（四）：第三方扩展katex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#markdown-katex"&gt;markdown-katex 源码？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#setuppy"&gt;setup.py 文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#initpy"&gt;init.py 文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#extensionpy"&gt;extension.py 文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wrapperpy"&gt;wrapper.py 文件&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_5"&gt;单独‌拎出来看看&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#github-action"&gt;Github Action&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;最终方案&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#vscode"&gt;其他：vscode使用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_7"&gt;公式分隔符&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_8"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="python-markdown"&gt;python-markdown 使用&lt;/h2&gt;
&lt;p&gt;安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;markdown
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_1"&gt;基本用法&lt;/h3&gt;
&lt;p&gt;将markdown文本作为输入，调用 markdown.markdown() 函数将其转换为HTML。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;markdown&lt;/span&gt;

&lt;span class="n"&gt;md_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;# 这是一个标题&lt;/span&gt;

&lt;span class="s2"&gt;这是一个段落，其中包括 **加粗** 和 *斜体* 文本。&lt;/span&gt;

&lt;span class="s2"&gt;- 列表项 1&lt;/span&gt;
&lt;span class="s2"&gt;- 列表项 2&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# 转换为 HTML&lt;/span&gt;
&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md_text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;输出内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;这是一个标题&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;这是一个段落，其中包括 &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;加粗&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; 和 &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;em&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;斜体&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;em&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; 文本。&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;列表项 1&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;列表项 2&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;如果markdown内容在文件中，比如a.md，可以直接写简单的脚本（比较灵活）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;markdown&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pathlib&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;argparse&lt;/span&gt;

&lt;span class="c1"&gt;# Parse command line&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Convert a Markdown file to HTML.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;md_file&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;nargs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a.md&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;The Markdown file to convert. Defaults to &amp;#39;a.md&amp;#39;.&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;md_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md_file&lt;/span&gt;

&lt;span class="c1"&gt;# Read the md file&lt;/span&gt;
&lt;span class="n"&gt;md_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pathlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;md_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;md_path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Convert .md to .html&lt;/span&gt;
&lt;span class="n"&gt;html_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md_text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Write to html file&lt;/span&gt;
&lt;span class="n"&gt;html_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;md_path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;with_suffix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;html_path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;另外，python-markdown也有自己的命令模式可用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;markdown&lt;span class="w"&gt; &lt;/span&gt;a.md&lt;span class="w"&gt; &lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;b.html&lt;span class="w"&gt; &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;utf-8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;markdown_py&lt;span class="w"&gt; &lt;/span&gt;a.md&lt;span class="w"&gt; &lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;b.html&lt;span class="w"&gt; &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;utf-8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;如果.md文件内有非ASCII字符的话，指定输出文件名和编码是很重要的。这也是此处不用输出重定向的原因（不能指定编码）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_2"&gt;使用扩展（一）：单一内置扩展&lt;/h3&gt;
&lt;p&gt;Python markdown使用了扩展式设计，使用起来很灵活。&lt;/p&gt;
&lt;p&gt;比如，前面的例子中，一旦我们的markdown中使用了表格，类似下面这样：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;First Header  | Second Header
------------- | -------------
Content Cell  | Content Cell
Content Cell  | Content Cell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;可以发现，输出的html中，它是作为纯文本处理的，并没有转换成html表格。要转成表格，需要写成下面这样（'tables'是注册的入口点，通常在setup.py中）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tables&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或者（对第三方插件来说，这种写法不需要注册）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;markdown.extensions.tables&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TableExtension&lt;/span&gt;
&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;TableExtension&lt;/span&gt;&lt;span class="p"&gt;()])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;还可以写成下面这样（不需要注册）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;markdown.extensions.tables:TableExtension&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;如果省略 ':' 后面的内容，可以这样...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;markdown.extensions.tables&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;这样能工作的前提的，扩展模块在模块级别实现了 &lt;code&gt;makeExtension(**kwargs)&lt;/code&gt; 函数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于，python-markdown将一些常用的扩展放置到了一个extra扩展中，所以，还可以&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;如果使用命令行的话，需要使用 &lt;code&gt;-x&lt;/code&gt; 来指定启动的扩展&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;markdown_py&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="se"&gt;\d&lt;/span&gt;ebaodemo.md&lt;span class="w"&gt; &lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;a.html&lt;span class="w"&gt; &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;utf-8&lt;span class="w"&gt; &lt;/span&gt;-x&lt;span class="w"&gt; &lt;/span&gt;fenced_code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_3"&gt;使用扩展（二）：内置扩展介绍&lt;/h3&gt;
&lt;p&gt;Python-markdown支持扩展如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;扩展&lt;/th&gt;
&lt;th&gt;入口点&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Extra&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;extra&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;包含一组常用扩展的集合。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;├── Abbreviations&lt;/td&gt;
&lt;td&gt;&lt;code&gt;abbr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;支持缩写语法。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;├── Attribute Lists&lt;/td&gt;
&lt;td&gt;&lt;code&gt;attr_list&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;允许为 Markdown 元素添加 HTML 属性。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;├── Definition Lists&lt;/td&gt;
&lt;td&gt;&lt;code&gt;def_list&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;支持定义列表语法。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;├──&lt;strong&gt;Fenced Code Blocks&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fenced_code&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;支持围栏代码块语法。&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;├── Footnotes&lt;/td&gt;
&lt;td&gt;&lt;code&gt;footnotes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;支持脚注语法。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;├── Markdown in HTML&lt;/td&gt;
&lt;td&gt;&lt;code&gt;md_in_html&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;允许在 HTML 标签中嵌入 Markdown 内容。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;└──&lt;strong&gt;Tables&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;tables&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;支持表格语法。&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Admonition&lt;/td&gt;
&lt;td&gt;&lt;code&gt;admonition&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;支持提示框语法。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;CodeHilite&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;codehilite&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;为代码块添加语法高亮功能。&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Legacy Attributes&lt;/td&gt;
&lt;td&gt;&lt;code&gt;legacy_attrs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;支持旧版的属性语法。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Legacy Emphasis&lt;/td&gt;
&lt;td&gt;&lt;code&gt;legacy_em&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;支持旧版的强调语法。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Meta-Data&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;meta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;允许在 Markdown 文档的开头添加元数据。&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;New Line to Break&lt;/td&gt;
&lt;td&gt;&lt;code&gt;nl2br&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将换行符 &lt;code&gt;\n&lt;/code&gt; 转换为 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; 标签。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sane Lists&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sane_lists&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;修复列表解析的不合理行为。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SmartyPants&lt;/td&gt;
&lt;td&gt;&lt;code&gt;smarty&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;自动转换直角引号、连字符等为更符合排版规则的符号。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Table of Contents&lt;/td&gt;
&lt;td&gt;&lt;code&gt;toc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;自动生成内容目录（Table of Contents）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WikiLinks&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wikilinks&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;支持类似 Wiki 的链接语法。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注意表格中的入口点（entry point)，通常扩展会在自己的的 setup.py 文件内注册。通常放置在在markdown.extensions组中，如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;

&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="c1"&gt;# ...&lt;/span&gt;
    &lt;span class="n"&gt;entry_points&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;markdown.extensions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;markdown_katex = markdown_katex.extension:KatexExtension&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;后面dot方式可以工作的前提是：扩展模块在模块级别实现了 &lt;code&gt;makeExtension(**kwargs)&lt;/code&gt; 函数。像下面这样&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Extension&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# Define extension here...&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;makeExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;MyExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;注意：Extra中的tables和Fenced Code，以及CodeHilite都是很常用的扩展。Meta-Data对于 getpeclian是必须的。TOC、Footnotes也有一定意义。&lt;/p&gt;
&lt;p&gt;要在代码中启用常用的扩展，只需要&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;html_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;meta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;codehilite&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;toc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;如果用命令行的话，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;markdown_py&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="se"&gt;\d&lt;/span&gt;ebaodemo.md&lt;span class="w"&gt; &lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;a.html&lt;span class="w"&gt; &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;utf-8&lt;span class="w"&gt; &lt;/span&gt;-x&lt;span class="w"&gt; &lt;/span&gt;extra&lt;span class="w"&gt; &lt;/span&gt;-x&lt;span class="w"&gt; &lt;/span&gt;codehilite&lt;span class="w"&gt; &lt;/span&gt;-x&lt;span class="w"&gt; &lt;/span&gt;toc&lt;span class="w"&gt; &lt;/span&gt;-x&lt;span class="w"&gt; &lt;/span&gt;meta
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_4"&gt;使用扩展（三）：配置扩展&lt;/h3&gt;
&lt;p&gt;前两个例子，启用了扩展，但是如何对其配置？&lt;/p&gt;
&lt;p&gt;比如要配置toc的层级？构造扩展时直接指定：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;markdown.extensions.toc&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TocExtension&lt;/span&gt;
&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;TocExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;baselevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;toc_depth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;2-3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;如果不直接构建，需要借助于 &lt;code&gt;extension_configs&lt;/code&gt;进行（每个扩展的配置对应一个dict，所有扩展的配置又放置在一个大的dict内）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;toc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;extension_configs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;toc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;baselevel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;toc_depth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2-3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;如果使用命令行，那就需要写一个配置文件，使用yml或json格式，而后通过 &lt;code&gt;-c&lt;/code&gt;来指定：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;markdown_py&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;\&lt;span class="n"&gt;debaodemo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;utf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;extra&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;codehilite&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;toc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;meta&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;注意，启用配置的 &lt;code&gt;-x&lt;/code&gt; 是不可少的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="katex"&gt;使用扩展（四）：第三方扩展katex&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;最终到了关注的问题的点，看看katex如何用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先，安装很简单：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;markdown-katex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;然后，编写带公式的markdown文本：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="sb"&gt;` `&lt;/span&gt; `math
\int_{a}^{b} x^2 \,dx
&lt;span class="sb"&gt;` `&lt;/span&gt; `
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;最后，启用katex进行转换：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;html_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;markdown_katex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;extension_configs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;markdown_katex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;no_inline_svg&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;insert_fonts_css&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或者考虑其他扩展&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;html_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;meta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;codehilite&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;toc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;markdown_katex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;extension_configs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;toc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:{},&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;markdown_katex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;no_inline_svg&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;insert_fonts_css&amp;#39;&lt;/span&gt; &lt;span class="err"&gt;：&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;工作都正常，但是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以复现：就是很慢！！转换速度从秒级变成分钟级。原因？？&lt;/p&gt;
&lt;p&gt;在其老的gitlab的网站上，可以看到有人提过类似的性能问题。但是看起来其他人没遇到过？https://gitlab.com/mbarkhau/markdown-katex/-/issues/17&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="markdown-katex"&gt;markdown-katex 源码？&lt;/h2&gt;
&lt;p&gt;要排查问题，只能看看源码。简单记录一下，源码查看过程...&lt;/p&gt;
&lt;h3 id="setuppy"&gt;setup.py 文件&lt;/h3&gt;
&lt;p&gt;精简一下，内容大概如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;read_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;setuptools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;markdown-katex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;202406.1035&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Manuel Barkhau&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;author_email&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mbarkhau@gmail.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://github.com/mbarkhau/markdown-katex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;KaTeX extension for Python Markdown&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;long_description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;read_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;README.md&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;long_description_content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text/markdown&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;license&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MIT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;markdown_katex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="n"&gt;package_data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;markdown_katex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;katex*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]},&lt;/span&gt;
    &lt;span class="n"&gt;install_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;read_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;requirements/pypi.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="n"&gt;python_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;gt;=2.7&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;entry_points&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;markdown.extensions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;markdown_katex = markdown_katex.extension:KatexExtension&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="n"&gt;classifiers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;License :: OSI Approved :: MIT License&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Programming Language :: Python :: 2.7&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Programming Language :: Python :: 3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;核心关注：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;package_data&lt;/code&gt;：需要打包二进制可执行文件 katex&lt;/li&gt;
&lt;li&gt;&lt;code&gt;entry_points&lt;/code&gt;：注册入口点 &lt;code&gt;makedown_katex&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="initpy"&gt;&lt;strong&gt;init&lt;/strong&gt;.py 文件&lt;/h3&gt;
&lt;p&gt;精简一下，大致这样&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;__version__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;v202406.1035&amp;quot;&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;markdown_katex.wrapper&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;tex2html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;get_bin_cmd&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;markdown_katex.extension&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;KatexExtension&lt;/span&gt;

&lt;span class="n"&gt;makeExtension&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;KatexExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;__all__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;makeExtension&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__version__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;get_bin_cmd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tex2html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;主要关注 &lt;code&gt;makeExtension&lt;/code&gt;。它的存在使得第二个写法可用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;markdown_katex.extension:KatexExtension&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_katex.extension&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="extensionpy"&gt;extension.py 文件&lt;/h3&gt;
&lt;p&gt;这是个katex扩展的主文件，主要的类是 KatexExtension，大致如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;markdown.extensions&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Extension&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;markdown.preprocessors&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Preprocessor&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;markdown.postprocessors&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Postprocessor&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;KatexExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Extension&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;no_inline_svg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Replace inline &amp;lt;svg&amp;gt; with &amp;lt;img&amp;gt; tags.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;insert_fonts_css&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Insert font loading stylesheet.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options_text&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options_text&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_options&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;()},&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;math_html&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;typ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;math_html&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;extendMarkdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;preprocessors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;KatexPreprocessor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;katex_fenced_code_block&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;priority&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;postprocessors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;KatexPostprocessor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;katex_fenced_code_block&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;priority&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;registerExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;可以看到它注册了两个处理器类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;KatexPreprocessor：预处理器类，负责在 Markdown 文档解析前处理 LaTeX 数学公式。它会将公式替换为占位符标记，并在 KatexExtension 中缓存 HTML 代码。&lt;/li&gt;
&lt;li&gt;KatexPostprocessor：后处理器类，负责在 Markdown 文档解析后将占位符标记替换为实际的 HTML 代码。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主要工作在预处理器类中&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;KatexPreprocessor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Preprocessor&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ext&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;KatexExtension&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ext&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_make_tag_for_block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;block_lines&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;typ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;block_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;block_lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;block_lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstrip&lt;/span&gt;&lt;span class="p"&gt;()):]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;block_lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;marker_tag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tmp_block_md_katex_&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;make_marker_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;block&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;block_text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ext&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;math_html&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;marker_tag&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;md_block2html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;block_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ext&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/p&amp;gt;&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;block_lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][:&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;block_lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;block_lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstrip&lt;/span&gt;&lt;span class="p"&gt;())]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;marker_tag&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_make_tag_for_inline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inline_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;marker_tag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tmp_inline_md_katex_&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;make_marker_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;inline&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;inline_text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ext&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;math_html&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;marker_tag&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;md_inline2html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inline_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ext&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;marker_tag&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_iter_out_lines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;typ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;typ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Iterable&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;is_in_math_fence&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;is_in_fence&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;block_lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="n"&gt;expected_close_fence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;```&amp;quot;&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;is_in_fence&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;is_in_math_fence&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;expected_close_fence&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;is_in_math_fence&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_make_tag_for_block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;block_lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="n"&gt;block_lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                    &lt;span class="n"&gt;is_in_fence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;is_in_math_fence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;BLOCK_START_RE&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="n"&gt;is_in_math_fence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
                    &lt;span class="n"&gt;expected_close_fence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;BLOCK_START_RE&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;BLOCK_START_RE&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;block_lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;FENCE_RE&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="n"&gt;is_in_fence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
                    &lt;span class="n"&gt;expected_close_fence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;FENCE_RE&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;FENCE_RE&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;reversed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iter_inline_katex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;))):&lt;/span&gt;
                        &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_make_tag_for_inline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inline_text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="p"&gt;:]&lt;/span&gt;
                    &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;block_lines&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;yield from&lt;/span&gt; &lt;span class="n"&gt;block_lines&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;typ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;typ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_iter_out_lines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;其入口是 &lt;code&gt;run&lt;/code&gt;函数，逐行遍历，识别公式块和行内公式，而后调用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;md_block2html()&lt;/code&gt;：处理块级数学公式，将其转换为 HTML。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;md_inline2html()&lt;/code&gt;：处理行内数学公式，将其转换为 HTML。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="wrapperpy"&gt;wrapper.py 文件&lt;/h3&gt;
&lt;p&gt;真正的tex到html的转换操作发生在这个文件内。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tex2html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;MaybeOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;cmd_parts&lt;/span&gt;         &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_iter_cmd_parts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;digest&lt;/span&gt;            &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_cmd_digest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cmd_parts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cache_filename&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;digest&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.html&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;cache_output_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CACHE_DIR&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;cache_filename&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cache_output_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="c1"&gt;# give cached file a life extension (update mtime)&lt;/span&gt;
            &lt;span class="n"&gt;cache_output_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;touch&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;_atomic_writable_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cache_output_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tmp_output_file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;_write_tex2html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd_parts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tmp_output_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;cache_output_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;KATEX_OUTPUT_ENCODING&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fobj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fobj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;_cleanup_cache_dir&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;它竟然使用大量缓存文件，为什么？？缓存不能命中的再调用katex转换&lt;/p&gt;
&lt;p&gt;具体转换操作在 &lt;code&gt;_write_tex2html()&lt;/code&gt;函数中&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_write_tex2html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd_parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;typ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;tex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tmp_output_file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# pylint: disable=consider-using-with ; not supported on py27&lt;/span&gt;
    &lt;span class="n"&gt;tmp_input_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CACHE_DIR&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;tmp_output_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.tex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;input_data&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;KATEX_INPUT_ENCODING&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;CACHE_DIR&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parents&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exist_ok&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;_atomic_writable_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp_input_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tmp_path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;tmp_path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;wb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fobj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;fobj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;cmd_parts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--input&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp_input_file&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;--output&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp_output_file&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
    &lt;span class="n"&gt;proc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;proc&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd_parts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;ret_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;proc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;每一个公式都通过子进程方式调用一次 katex 进行转换！！&lt;/p&gt;
&lt;h4 id="_5"&gt;单独‌拎出来看看&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;根源：markdown-katex始终优先用户安装的katex或者nodejs的katex的包，它遍历系统PATH，搜索katex或npx是否存在。但一旦npx存在，但是npx中的katex没有安装，就会阻塞很长时间。而且每个公式会阻塞一次。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;单独用这个tex2html试试：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;markdown_katex&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;tex2html&lt;/span&gt;

&lt;span class="n"&gt;latex_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;c = \pm\sqrt{a^2 + b^2}&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;html_output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tex2html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;latex_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html_output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在个人PC上，确实非常慢！&lt;/p&gt;
&lt;p&gt;再进一步，试一下，发现还是很慢。看来慢的原因不在转换上，在于搜索katex程序&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;markdown_katex&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;tex2html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;get_bin_cmd&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get_bin_cmd&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在Windows下，它遍历系统环境变量PATH中的所有路径，逐一去搜索 katex.cmd、katex.exe、katex.ps1、npx.cmd、npx.exe、npx.ps1&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;CMD_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;katex&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_get_local_bin_candidates&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;typ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;OSNAME&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Windows&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# whackamole&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;CMD_NAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.cmd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;CMD_NAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;npx.cmd --no-install &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;CMD_NAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;npx.exe --no-install &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;CMD_NAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;CMD_NAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.ps1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;npx.ps1 --no-install &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;CMD_NAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;CMD_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;npx --no-install &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;CMD_NAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;而后添加参数 &lt;code&gt;--version&lt;/code&gt; 进行执行和确认&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;output_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;check_output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;local_cmd_parts&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STDOUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;output_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;output_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\d+\.\d+\.\d+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;continue&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CalledProcessError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;continue&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;OSError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;continue&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;直接原因&lt;/strong&gt;：我的系统PATH路径中有 nodejs，但是没有通过npm装katex模块，造成在执行如下命令时，会阻塞很长时间，而后抛出 CalledProcessError 异常。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sp&lt;/span&gt;
&lt;span class="n"&gt;local_cmd_parts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;D:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Program Files&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;nodejs&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;npx.cmd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;--no-install&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;katex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;output_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;check_output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;local_cmd_parts&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;--version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STDOUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;解决方案，安装katex&lt;/strong&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;npm&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-g&lt;span class="w"&gt; &lt;/span&gt;katex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;使用国内源的话：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;npm&lt;span class="w"&gt; &lt;/span&gt;--registry&lt;span class="w"&gt; &lt;/span&gt;https://registry.npm.taobao.org&lt;span class="w"&gt; &lt;/span&gt;--strict-ssl&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-g&lt;span class="w"&gt; &lt;/span&gt;katex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="github-action"&gt;Github Action&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;测试表明，再Github Action中，配置好 nodejs 的 katex 包，也能显著提升转换速度。（从4分钟恢复到1分钟以内，也就是没用启用markdown-katex时的水平）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;附 github action的workflow文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CI&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;debao&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;

&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Trigger&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;workflow&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;branch&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;branches&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="n"&gt;jobs&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;latest&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;checkout&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v4&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;submodules&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;true&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Python&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v5&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;3.12&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Nodejs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;katex&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v4&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;needed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;upgrade&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;txt&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;npm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;katex&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;publishconf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;py&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;depoly&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;gh&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="_6"&gt;最终方案&lt;/h4&gt;
&lt;p&gt;20241024更新：&lt;/p&gt;
&lt;p&gt;当前blog 使用自己编写Markdown的katex插件，不进行离线转换。速度只需数秒。&lt;/p&gt;
&lt;h2 id="vscode"&gt;其他：vscode使用&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;随手记录一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_7"&gt;公式分隔符&lt;/h3&gt;
&lt;p&gt;vscode下有多种扩展支持 markdown + katex 组合。而且支持的katex的公式分隔符各式各样，详见：https://github.com/goessner/markdown-it-texmath 。&lt;/p&gt;
&lt;p&gt;而本文中提及的python下的这个包只支持 gitlab风格的公式分割。&lt;/p&gt;
&lt;p&gt;一些正则表达式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 dollar 风格的行内单个dollar替换为 gitlab风格&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;查找表达式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;(?&amp;lt;!`)\$(?!`)([^$`]+)(?&amp;lt;!`)\$(?!`)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;替换表达式&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;`$1`&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;将括号风格的行内公式替换为 gitlab风格&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;查找表达式&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;\\\((.+?)\\\)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;替换表达式&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;$&lt;/span&gt;\&lt;span class="nv"&gt;`$1\`&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;另外，vscode似乎不支持跨行的正则表达式，这使得替换显示公式的分隔符，不太容易，只能开头和结尾逐个替换（而且还处理不了前后分隔符一样的情况）。对于括号分割符：&lt;/p&gt;
&lt;p&gt;查找表达式&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;\\\[
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;替换表达式（注意，确保合法！！)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;```math
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_8"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/mbarkhau/markdown-katex&lt;/li&gt;
&lt;li&gt;https://python-markdown.github.io/&lt;/li&gt;
&lt;li&gt;https://markdown-it-py.readthedocs.io&lt;/li&gt;
&lt;li&gt;https://mistune.lepture.com/&lt;/li&gt;
&lt;/ul&gt;</content><category term="Python"></category><category term="katex"></category><category term="markdown"></category></entry><entry><title>麦克斯韦方程小记</title><link href="https://blog.debao.me/2024/09/notes-on-maxwell-s-equations/" rel="alternate"></link><published>2024-09-02T20:10:00+08:00</published><updated>2024-09-02T20:10:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-09-02:/2024/09/notes-on-maxwell-s-equations/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;看看入门书，温习一下电磁场相关的内容，简单做个整理。从麦克斯韦方程（Maxwell's equations)开始吧，顺便再熟悉一下LaTeX/Katex写法...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;麦克斯韦方程 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;看看入门书，温习一下电磁场相关的内容，简单做个整理。从麦克斯韦方程（Maxwell's equations)开始吧，顺便再熟悉一下LaTeX/Katex写法...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;麦克斯韦方程是英国科学家麦克斯韦（James Clerk Maxwell）根据法拉第（Michael Faraday）等人关于电磁现象的试验定律创建的电子学的基本定律，反映了宏观电磁现象的普遍规律。&lt;/p&gt;
&lt;h2 id="_1"&gt;高校三门课？&lt;/h2&gt;
&lt;p&gt;除了大学物理之外，大学有多门课涉及麦克斯韦方程，主要的有三个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;电磁学 (Electromagnetism)&lt;/strong&gt;：基础课程。基于各种实验归纳出电现象、磁现象、电磁感应，最终总结到麦克斯韦方程。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;电磁学介绍了电荷 (charge)、电流 (current)、电场 (electric field)、磁场 (magnetic field) 等基本概念及其相互作用，涵盖库仑定律 (Coulomb's law)、安培定律 (Ampère's law)、法拉第定律 (Faraday's law) 等，构建了电磁现象的基础理论。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;电动力学 (Electrodynamics)&lt;/strong&gt;：理论物理课程，有经典电动力学和量子电动力学之分。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以麦克斯韦方程组 (Maxwell's equations) 为核心，电动力学探讨随时间变化的电磁场 (time-varying electromagnetic fields)，引入狭义相对论 (special relativity) 以分析高速运动下的电磁现象，涉及洛伦兹变换 (Lorentz transformation) 和四维矢量 (four-vectors) 等高级理论。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;电磁场与电磁波 (Electromagnetic Fields and Waves)&lt;/strong&gt;：面向工科的课程，和经典电动力学相比，去掉了相对论，增加了应用例子。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;专注于电磁场 (electromagnetic field) 性质和电磁波 (electromagnetic wave) 传播，从理论到应用，深入探讨电磁波在不同介质中的行为，广泛应用于通信 (communication)、雷达 (radar) 和光学 (optics) 等领域。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大致可以认为：电磁学是基础，电动力学是深化，电磁场与电磁波是应用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_2"&gt;麦克斯韦方程&lt;/h2&gt;
&lt;h3 id="_3"&gt;历史&lt;/h3&gt;
&lt;p&gt;在1861到1862年间，麦克斯韦陆续发表了名为《论电磁场的物理力线》 (On Physical Lines of Force)的四篇论文（part1到part4）。由于当时向量分析上不成熟，麦克斯韦的方程是以电场和磁场在 &lt;span class="math inline"&gt;x y z&lt;/span&gt; 三个方向上的分量形式给出的。&lt;/p&gt;
&lt;p&gt;1865年，麦克斯韦发表的著名论文《电磁场的动力学理论》（A Dynamical Theory of the Electromagnetic Field）中，他使用分量形式，共有包含20个未知数的20个标量方程，分别描述了电场和磁场的各个分量之间的关系。其中18个方程按分量可以6组，共给出了A、B、C、D、E、F、G、H八组方程。&lt;/p&gt;
&lt;p&gt;19世纪后期，奥利弗·海维赛（Oliver Heaviside）和乔西亚·威拉德·吉布斯（Josiah Willard Gibbs）发展了矢量分析，并将麦克斯韦的方程简化为我们今天所熟悉的4个矢量形式的方程组。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高斯电场定律（Gauss‘s Law for Electricity）：电场的散度与电荷密度成正比&lt;/li&gt;
&lt;li&gt;高斯磁场定律（Gauss's Law for Magnetism）：没有磁单极子，磁场线总是闭合的&lt;/li&gt;
&lt;li&gt;法拉第定律（Faraday's Law of Induction）：变化的磁场产生电场&lt;/li&gt;
&lt;li&gt;安培-麦克斯韦定律（Ampère's Law with Maxwell's Correction）：变化的电场和电流产生磁场&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;方程&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;麦克斯韦方程有许多表现形式，而且当时也没有SI单位制，不同书中给出的记法可能不同。我们考虑一种真空下的记法：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="_5"&gt;积分形式&lt;/h4&gt;
&lt;div class="math display"&gt;
\oint_{S} \mathbf{E} \cdot d\mathbf{S} = \frac{q_{\text{enc}}}{\epsilon_0}

\\

\oint_{S} \mathbf{B} \cdot d\mathbf{S} = 0

\\

\oint_{C} \mathbf{E} \cdot d\mathbf{l} = -\frac{d}{dt} \int_S \mathbf{B} \cdot d\mathbf{S}

\\

\oint_{C} \mathbf{B} \cdot d\mathbf{l} = \mu_0 I_{\text{enc}} + \mu_0 \epsilon_0 \frac{d}{dt} \int_S \mathbf{E} \cdot d\mathbf{S}
&lt;/div&gt;

&lt;h4 id="_6"&gt;微分形式&lt;/h4&gt;
&lt;div class="math display"&gt;
\nabla \cdot \mathbf{E} = \frac{\rho}{\epsilon_0}

\\

\nabla \cdot \mathbf{B} = 0

\\

\nabla \times \mathbf{E} = -\frac{\partial \mathbf{B}}{\partial t}

\\

\nabla \times \mathbf{B} = \mu_0 \mathbf{J} + \mu_0 \epsilon_0 \frac{\partial \mathbf{E}}{\partial t}
&lt;/div&gt;

&lt;p&gt;逐一看看&lt;/p&gt;
&lt;h3 id="-gausss-law-for-electricity"&gt;高斯电场定律 - Gauss's Law for Electricity&lt;/h3&gt;
&lt;p&gt;积分形式处理的是电场在整个曲面的法线方向上的积分。微分形式处理的是空间中一点处电场散度。&lt;/p&gt;
&lt;h4 id="_7"&gt;积分形式&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;电荷产生电场，电场通过任意闭合曲面的通量与曲面包围的电荷总量成正比。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="math display"&gt;
\oint_{S} \mathbf{E} \cdot d\mathbf{S} = \frac{q_{\text{enc}}}{\epsilon_0}
&lt;/div&gt;

&lt;p&gt;在一个闭合曲面 &lt;span class="math inline"&gt;S&lt;/span&gt; 上，电场 &lt;span class="math inline"&gt; \mathbf{E} &lt;/span&gt; 的通量等于该曲面包围的电荷总量 &lt;span class="math inline"&gt; q_{\text{enc}} &lt;/span&gt; 除以真空介电常数 &lt;span class="math inline"&gt; \epsilon_0 &lt;/span&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电荷包含自由电荷和束缚电荷。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_8"&gt;微分形式&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;电荷产生的电场从正电荷散开，汇集到负电荷。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="math display"&gt;
\nabla \cdot \mathbf{E} = \frac{\rho}{\epsilon_0}
&lt;/div&gt;

&lt;p&gt;电场的散度与电荷密度成正比。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;散度不为零的地方有电荷，正电荷存在的地方散度为正（流出），负电荷存在的地方散度为负（流入）。&lt;/li&gt;
&lt;li&gt;避免认为：场线发散的地方散度不为零。比如点电荷形成的电场，处处都是散开的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="-gausss-law-for-magnetism"&gt;高斯磁场定律 - Gauss's Law for Magnetism&lt;/h3&gt;
&lt;p&gt;积分形式关注场穿过闭合曲面的通量，微分形式关注场在某一点的散度。&lt;/p&gt;
&lt;p&gt;正负电荷可以分离，但不存在磁单极子，影响高斯磁场定律与电场定律不同。&lt;/p&gt;
&lt;h4 id="_9"&gt;积分形式&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;穿过任意闭合曲面的总磁通量为0。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="math display"&gt;
\oint_{S} \mathbf{B} \cdot d\mathbf{S} = 0
&lt;/div&gt;

&lt;p&gt;在一个闭合曲面 &lt;span class="math inline"&gt;S&lt;/span&gt; 上，磁场 &lt;span class="math inline"&gt; \mathbf{B} &lt;/span&gt; 的通量总是为零。&lt;/p&gt;
&lt;h4 id="_10"&gt;微分形式&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;磁场散度处处为零。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="math display"&gt;
\nabla \cdot \mathbf{B} = 0
&lt;/div&gt;

&lt;h3 id="-faradays-law-of-induction"&gt;法拉第电磁感应定律 - Faraday's Law of Induction&lt;/h3&gt;
&lt;h4 id="_11"&gt;积分形式&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;穿过一个曲面的磁通量的变化会在该曲面的任意边界路径上感生出电动势，并且变化的磁场会感生出环绕的电场。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="math display"&gt;
\oint_{C} \mathbf{E} \cdot d\mathbf{l} = -\frac{d}{dt} \int_S \mathbf{B} \cdot d\mathbf{S}
&lt;/div&gt;

&lt;p&gt;在一个闭合路径 &lt;span class="math inline"&gt;C&lt;/span&gt; 上，电场 &lt;span class="math inline"&gt; \mathbf{E} &lt;/span&gt; 的环量积分等于穿过该路径所围成的曲面 &lt;span class="math inline"&gt;S&lt;/span&gt; 的磁感应强度 &lt;span class="math inline"&gt; \mathbf{B} &lt;/span&gt; 的变化率。&lt;/p&gt;
&lt;p&gt;公式中的负号：感生电动势与磁通量的变化相反，其趋向于保持磁通量不变。楞次定律。&lt;/p&gt;
&lt;h4 id="_12"&gt;微分形式&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;随时间变化的磁场产生环绕的电场。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="math display"&gt;
\nabla \times \mathbf{E} = -\frac{\partial \mathbf{B}}{\partial t}
&lt;/div&gt;

&lt;h3 id="-amperes-law-with-maxwells-correction"&gt;安培-麦克斯韦定律 - Ampère's Law with Maxwell's Correction&lt;/h3&gt;
&lt;h4 id="_13"&gt;积分形式&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;穿过曲面的电流或变化的电通量会产生沿曲面边界的环绕磁场。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="math display"&gt;
\oint_{C} \mathbf{B} \cdot d\mathbf{l} = \mu_0 I_{\text{enc}} + \mu_0 \epsilon_0 \frac{d}{dt} \int_S \mathbf{E} \cdot d\mathbf{S}
&lt;/div&gt;

&lt;p&gt;在一个闭合路径 &lt;span class="math inline"&gt;C&lt;/span&gt; 上，磁场 &lt;span class="math inline"&gt; \mathbf{B} &lt;/span&gt; 的环量积分等于通过该路径所围成的曲面 &lt;span class="math inline"&gt;S&lt;/span&gt; 的电流 &lt;span class="math inline"&gt; I_{\text{enc}} &lt;/span&gt; 和电场 &lt;span class="math inline"&gt; \mathbf{E} &lt;/span&gt; 的变化率。&lt;/p&gt;
&lt;h4 id="_14"&gt;微分形式&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;电流和随时间变化的电场会产生环绕的磁场。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="math display"&gt;
\nabla \times \mathbf{B} = \mu_0 \mathbf{J} + \mu_0 \epsilon_0 \frac{\partial \mathbf{E}}{\partial t}
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\mathbf{B}&lt;/span&gt;的旋度在有电流流动或电场变化的位置不为零。&lt;/li&gt;
&lt;li&gt;避免认为：场弯曲的地方旋度就不为零。比如无限长导线上电流产生的磁场，处处都是弯曲的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_15"&gt;麦克斯韦修正&lt;/h4&gt;
&lt;p&gt;安培定律原始形式：&lt;/p&gt;
&lt;div class="math display"&gt;
\nabla \times \mathbf{B} = \mu_0 \mathbf{J}
&lt;/div&gt;

&lt;p&gt;这个方程说明，电流 &lt;span class="math inline"&gt;J&lt;/span&gt;能够产生旋转的磁场&lt;span class="math inline"&gt;B&lt;/span&gt;。然而，如果考虑到电路中的电容器，就会有个问题。&lt;/p&gt;
&lt;p&gt;设想一个带电的电容器正在充电，电流流经导线进入电容器的极板。然而，在电容器内部（即两极板之间的区域），没有传导电流&lt;span class="math inline"&gt;J=0&lt;/span&gt;，根据原始的安培定律，这意味着在这个区域内不会有磁场变化。这显然与实验观察到的现象不符，因为在电容器间隙的区域，磁场确实存在并且随时间变化。&lt;/p&gt;
&lt;p&gt;加入一个额外的项，即所谓的“位移电流”，它与电场的变化率有关。&lt;/p&gt;
&lt;p&gt;修正的意义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电荷守恒：麦克斯韦引入的位移电流项确保了电荷守恒定律的自洽性。没有这个项，电荷守恒定律在某些情况下会被破坏。&lt;/li&gt;
&lt;li&gt;统一电磁场理论：麦克斯韦的修正使得电场和磁场之间的对称性更加明显。这表明，电场和磁场在本质上是相互关联的，变化的电场可以产生磁场，反之亦然。&lt;/li&gt;
&lt;li&gt;预测电磁波的存在：麦克斯韦的修正直接导致了电磁波方程的出现，预测了光是电磁波的一种形式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_16"&gt;真空介电常数 与 真空磁导率&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;真空介电常数和真空磁导率这两个常数是在SI单位制中引入的。麦克斯韦时期用的是其他单位制，所以没有直接使用这两个系数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;真空介电常数 &lt;span class="math inline"&gt;\epsilon_0&lt;/span&gt;：描述了真空中电场的响应能力——即单位电荷在真空中产生的电场强度。&lt;/li&gt;
&lt;li&gt;真空磁导率 &lt;span class="math inline"&gt;\mu_0&lt;/span&gt;：描述了真空中磁场的响应能力——即单位电流在真空中产生的磁场强度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_17"&gt;测量？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\epsilon_0&lt;/span&gt; 可以试验测量&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\mu_0&lt;/span&gt; 不能试验测量？？&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\frac{1}{\sqrt{\mu_0 \epsilon_0}}&lt;/span&gt; 可以试验测量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;历史上，&lt;span class="math inline"&gt;\epsilon_0&lt;/span&gt; 可以通过试验进行测量。具体来说，库仑定律描述了真空中两个电荷之间的静电力：&lt;/p&gt;
&lt;div class="math display"&gt;
F = \frac{1}{4\pi \epsilon_0} \frac{q_1 q_2}{r^2}
&lt;/div&gt;

&lt;p&gt;早期通过电学实验，测量电荷之间的力和距离，科学家能够较为准确地确定真空介电常数。&lt;/p&gt;
&lt;p&gt;与真空介电常数不同，真空磁导率 &lt;span class="math inline"&gt;\mu_0&lt;/span&gt; 并不能通过简单的实验直接测量出来。&lt;/p&gt;
&lt;p&gt;1855年，威廉·爱德华·韦伯（Wilhelm Eduard Weber）和鲁道夫·科尔劳施（Rudolf Kohlrausch）比较了电磁单位制中的电量和静电单位制中的电量，发现它们的比值具有速度的量纲。他们测出来对应于 &lt;span class="math inline"&gt;\frac{1}{\sqrt{\mu_0 \epsilon_0}}&lt;/span&gt; 的数值。测量值 &lt;span class="math inline"&gt;3.107×10^8 m/s&lt;/span&gt;，这个数值与当时光速测量值很接近。&lt;/p&gt;
&lt;h3 id="_18"&gt;现代&lt;/h3&gt;
&lt;p&gt;在现代国际单位制（SI）中，1948年~2019年之间：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\mu_0&lt;/span&gt; 实际上是被&lt;strong&gt;定义为&lt;/strong&gt; &lt;span class="math inline"&gt;4\pi \times 10^{-7} \ \text{N/A}^2&lt;/span&gt;。数值被&lt;strong&gt;固定下来&lt;/strong&gt;，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\epsilon_0&lt;/span&gt; 则通过光速 &lt;span class="math inline"&gt;c&lt;/span&gt; 和 &lt;span class="math inline"&gt;\mu_0&lt;/span&gt; 的关系间接确定。数值 &lt;span class="math inline"&gt;8.854187817×10^{−12} F/m&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而2019年开始，因为安培的定义发生变化，&lt;span class="math inline"&gt;\mu_0&lt;/span&gt;变成了测量值：&lt;code&gt;μ₀ = 4π × 0.99999999987(16)×10⁻⁷ H/m&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;二者都可以基于测量精细结构 &lt;span class="math inline"&gt;\alpha&lt;/span&gt; 获得：&lt;/p&gt;
&lt;div class="math display"&gt;
\alpha = \frac{2 \varepsilon_0 h c}{e^2} = \frac{2 h}{\mu_0 e^2 c}
&lt;/div&gt;

&lt;h2 id="_19"&gt;波动方程&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;通过麦克斯韦方程，可以预言电磁波的存在，那么波动方程...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;波动方程是一种描述波动现象的偏微分方程，广泛应用于物理学中的声波、光波、电磁波等各种波动现象。&lt;/p&gt;
&lt;h3 id="_20"&gt;波动方程一般形式&lt;/h3&gt;
&lt;p&gt;在三维空间中，描述一个以速度 &lt;span class="math inline"&gt;v&lt;/span&gt; 传播的矢量场&lt;span class="math inline"&gt;A&lt;/span&gt; 的波动行为&lt;/p&gt;
&lt;div class="math display"&gt;
\nabla^2 \mathbf{A} = \frac{1}{v^2} \frac{\partial^2 \mathbf{A}}{\partial t^2}
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;左边&lt;/strong&gt;：&lt;span class="math inline"&gt; \nabla^2 A &lt;/span&gt; 描述了波在空间中的扩散或曲率（空间三个方向上的二阶导数之和）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;右边&lt;/strong&gt;：&lt;span class="math inline"&gt; \frac{1}{v^2} \frac{\partial^2 A}{\partial t^2} &lt;/span&gt; 描述了波动随时间的变化（随时间的二阶导数，即它的加速度）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个波动方程意味着&lt;strong&gt;波的扰动会以速度 &lt;span class="math inline"&gt; v &lt;/span&gt; 在空间中传播&lt;/strong&gt;，并且波的传播速度和空间中的变化率以及时间上的变化率密切相关。&lt;/p&gt;
&lt;p&gt;波动方程的一维形式，可以写为&lt;/p&gt;
&lt;div class="math display"&gt;
\frac{\partial^2 A}{\partial x^2} = \frac{1}{v^2} \frac{\partial^2 A}{\partial t^2}
&lt;/div&gt;

&lt;p&gt;其中 &lt;span class="math inline"&gt;A(x, t)&lt;/span&gt; 是波的位移或振幅，&lt;span class="math inline"&gt;v&lt;/span&gt; 是波速。&lt;/p&gt;
&lt;h3 id="_21"&gt;电磁场波动方程&lt;/h3&gt;
&lt;p&gt;电磁波的波动方程可以从麦克斯韦方程组推导出来。在自由空间（即没有电荷和电流的区域）中，电场和磁场满足以下波动方程：&lt;/p&gt;
&lt;div class="math display"&gt;
\nabla^2 \mathbf{E} - \mu_0 \epsilon_0 \frac{\partial^2 \mathbf{E}}{\partial t^2} = 0
&lt;/div&gt;

&lt;div class="math display"&gt;
\nabla^2 \mathbf{B} - \mu_0 \epsilon_0 \frac{\partial^2 \mathbf{B}}{\partial t^2} = 0
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;由于当时试验已经测出 &lt;span class="math inline"&gt;\frac{1}{\sqrt{\mu_0 \epsilon_0}}&lt;/span&gt; 的值 与当时光速测量值很接近。使得麦克斯韦猜测光也是电磁波的一种形式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\mathbf{E}(\mathbf{r}, t)&lt;/span&gt; 表示电场强度矢量，依赖于位置 &lt;span class="math inline"&gt;\mathbf{r}&lt;/span&gt; 和时间 &lt;span class="math inline"&gt;t&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\mathbf{B}(\mathbf{r}, t)&lt;/span&gt; 表示磁场强度矢量，依赖于位置 &lt;span class="math inline"&gt;\mathbf{r}&lt;/span&gt; 和时间 &lt;span class="math inline"&gt;t&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\mu_0&lt;/span&gt; 是真空磁导率，&lt;span class="math inline"&gt;\epsilon_0&lt;/span&gt; 是真空介电常数。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;c = \frac{1}{\sqrt{\mu_0 \epsilon_0}}&lt;/span&gt; 是电磁波在真空中的传播速度，即光速。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_22"&gt;电磁波验证&lt;/h3&gt;
&lt;p&gt;在1887年至1888年间，赫兹（Heinrich Hertz）通过一系列巧妙的实验成功地产生和探测到了电磁波。验证了麦克斯韦的理论，并证明了电磁波确实可以在空间中传播。&lt;/p&gt;
&lt;div class="mermaid"&gt;
graph TD
    subgraph 发射器
        A1[高压电源] 
        A2[电火花间隙]
        A3[振荡电路]
    end

    A1 --&gt; A2
    A2 --&gt; A3
    A3 --&gt;|发射电磁波| B((电磁波))

    B --&gt;|电磁波传播| C[接收器]

    subgraph 接收器
        C1[金属环] 
        C2[火花间隙]
    end

    C1 --&gt; C2
    C2 --&gt;|产生微小火花| D[观察火花]

    style A1 fill:#f9f,stroke:#333,stroke-width:2px
    style A2 fill:#f9f,stroke:#333,stroke-width:2px
    style A3 fill:#9f9,stroke:#333,stroke-width:2px
    style B fill:#9f9,stroke:#333,stroke-width:2px
    style C1 fill:#f99,stroke:#333,stroke-width:2px
    style C2 fill:#f99,stroke:#333,stroke-width:2px
    style D fill:#99f,stroke:#333,stroke-width:2px
&lt;/div&gt;

&lt;h2 id="_23"&gt;洛伦兹变换下的麦克斯韦方程&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;麦克斯韦方程组预言了光速在真空中是恒定的，而伽利略变换假设速度是可以简单相加的。为了解释这个矛盾，物理学家们提出了一个假设，即光是通过一种被称为“以太”（Ether）的介质传播的，类似于声波通过空气传播。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;洛伦兹变换最初是由洛伦兹和菲茨杰拉德等人提出的，他们试图将其作为一种数学修正工具来调和以太假设与光速恒定原则。洛伦兹设想，光是通过某种假设的介质——“以太”传播的，物体相对于以太的运动会导致时间和空间的变化（如“时间膨胀”和“长度收缩”）。&lt;/p&gt;
&lt;p&gt;但是1887年迈克尔逊-莫雷实验（Michelson-Morley Experiment）通过测量光速在不同方向上的差异，未能发现以太风的存在，这表明光速在不同方向上没有变化，强烈暗示了以太假说的错误。这一结果动摇了经典物理学对以太的信仰，并为爱因斯坦的狭义相对论铺平了道路。&lt;/p&gt;
&lt;p&gt;为了解释麦克斯韦方程与实验结果的矛盾，爱因斯坦提出了狭义相对论。狭义相对论赋予了洛伦兹变换新的物理意义，使其成为描述时空结构的核心工具，而不再依赖于“以太”假设。&lt;/p&gt;
&lt;h3 id="_24"&gt;洛伦兹变换&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;洛伦兹变换在最初的提出是为了调和光速恒定与经典力学中的“以太”假说而引入的一种数学工具，尽管在某种程度上可以理解为是“硬凑出来”的，但最终被证明是时空的基本特性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="_25"&gt;空间和时间坐标变换&lt;/h4&gt;
&lt;div class="math display"&gt;
t' = \gamma \left( t - \frac{v x}{c^2} \right)

\\

x' = \gamma (x - v t)

\\

y' = y

\\

z' = z
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\gamma = \frac{1}{\sqrt{1 - \frac{v^2}{c^2}}}&lt;/span&gt; 是洛伦兹因子，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;v&lt;/span&gt; 是两个参考系之间的相对速度，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;c&lt;/span&gt; 是光速，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;t&lt;/span&gt;, &lt;span class="math inline"&gt;t'&lt;/span&gt; 表示两个不同参考系中的时间，&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;x&lt;/span&gt;, &lt;span class="math inline"&gt;x'&lt;/span&gt;, &lt;span class="math inline"&gt;y&lt;/span&gt;, &lt;span class="math inline"&gt;y'&lt;/span&gt;, &lt;span class="math inline"&gt;z&lt;/span&gt;, &lt;span class="math inline"&gt;z'&lt;/span&gt; 表示两个不同参考系中的空间坐标。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_26"&gt;速度变换&lt;/h4&gt;
&lt;p&gt;沿 &lt;span class="math inline"&gt;x&lt;/span&gt; 方向的速度变换公式为：&lt;/p&gt;
&lt;div class="math display"&gt;
u_x' = \frac{u_x - v}{1 - \frac{u_x v}{c^2}}
&lt;/div&gt;

&lt;p&gt;沿 &lt;span class="math inline"&gt;y&lt;/span&gt; 和 &lt;span class="math inline"&gt;z&lt;/span&gt; 方向的速度变换公式为：&lt;/p&gt;
&lt;div class="math display"&gt;
u_y' = \frac{u_y}{\gamma \left( 1 - \frac{u_x v}{c^2} \right)}

\\

u_z' = \frac{u_z}{\gamma \left( 1 - \frac{u_x v}{c^2} \right)}
&lt;/div&gt;

&lt;h4 id="_27"&gt;洛伦兹变换的矩阵形式&lt;/h4&gt;
&lt;p&gt;洛伦兹变换可以用矩阵表示为：&lt;/p&gt;
&lt;div class="math display"&gt;
x'^\mu = \Lambda^\mu_{\ \nu} x^\nu
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;x^\mu = (ct, x, y, z)&lt;/span&gt; 是事件在参考系 &lt;span class="math inline"&gt;S&lt;/span&gt; 中的四维时空坐标。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;x'^\mu = (ct', x', y', z')&lt;/span&gt; 是事件在参考系 &lt;span class="math inline"&gt;S'&lt;/span&gt; 中的四维时空坐标。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于沿 &lt;span class="math inline"&gt;x&lt;/span&gt;-轴方向的运动，洛伦兹变换矩阵 &lt;span class="math inline"&gt;\Lambda^\mu_{\ \nu}&lt;/span&gt; 的形式为：&lt;/p&gt;
&lt;div class="math display"&gt;
\Lambda^\mu_{\ \nu} =
\begin{pmatrix}
\gamma &amp; -\gamma \frac{v}{c} &amp; 0 &amp; 0 \\
-\gamma \frac{v}{c} &amp; \gamma &amp; 0 &amp; 0 \\
0 &amp; 0 &amp; 1 &amp; 0 \\
0 &amp; 0 &amp; 0 &amp; 1
\end{pmatrix}
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\gamma = \frac{1}{\sqrt{1 - \frac{v^2}{c^2}}}&lt;/span&gt; 是&lt;strong&gt;洛伦兹因子&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;v&lt;/span&gt; 是参考系 &lt;span class="math inline"&gt;S'&lt;/span&gt; 相对于参考系 &lt;span class="math inline"&gt;S&lt;/span&gt; 的相对速度。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;c&lt;/span&gt; 是光速。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该矩阵变换描述了两个惯性参考系 &lt;span class="math inline"&gt;S&lt;/span&gt; 和 &lt;span class="math inline"&gt;S'&lt;/span&gt; 之间的坐标变换，其中 &lt;span class="math inline"&gt;S'&lt;/span&gt; 以速度 &lt;span class="math inline"&gt;v&lt;/span&gt; 沿 &lt;span class="math inline"&gt;x&lt;/span&gt;-轴相对运动。&lt;/p&gt;
&lt;h3 id="_28"&gt;电磁场张量&lt;/h3&gt;
&lt;p&gt;电磁场张量的引入是为了统一描述电场和磁场在不同参考系下的变化，确保它们在洛伦兹变换下保持协变形式。&lt;/p&gt;
&lt;p&gt;在狭义相对论中，电场和磁场并不是完全独立的。在不同的参考系中，电场和磁场会相互混合：一个参考系中的电场在另一个相对运动的参考系中可能会部分表现为磁场，反之亦然。为了在不同参考系中保持麦克斯韦方程组的形式不变，需要引入了电磁场张量。&lt;/p&gt;
&lt;p&gt;电磁场张量 &lt;span class="math inline"&gt;F_{\mu\nu}&lt;/span&gt; 是一个 &lt;span class="math inline"&gt;4 \times 4&lt;/span&gt; 的反对称矩阵，它统一描述了电场 &lt;span class="math inline"&gt;\mathbf{E}&lt;/span&gt; 和磁场 &lt;span class="math inline"&gt;\mathbf{B}&lt;/span&gt;。在洛伦兹变换下，&lt;span class="math inline"&gt;F_{\mu\nu}&lt;/span&gt; 的形式保持不变，这意味着电磁场的描述在所有惯性参考系中都是一致的。&lt;/p&gt;
&lt;p&gt;张量 &lt;span class="math inline"&gt;F_{\mu\nu}&lt;/span&gt; 的具体形式为：&lt;/p&gt;
&lt;div class="math display"&gt;
F_{\mu\nu} =
\begin{pmatrix}
0 &amp; -E_x/c &amp; -E_y/c &amp; -E_z/c \\
E_x/c &amp; 0 &amp; B_z &amp; -B_y \\
E_y/c &amp; -B_z &amp; 0 &amp; B_x \\
E_z/c &amp; B_y &amp; -B_x &amp; 0
\end{pmatrix}
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;E_x, E_y, E_z&lt;/span&gt; 是电场 &lt;span class="math inline"&gt;\mathbf{E}&lt;/span&gt; 的分量。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;B_x, B_y, B_z&lt;/span&gt; 是磁场 &lt;span class="math inline"&gt;\mathbf{B}&lt;/span&gt; 的分量。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;c&lt;/span&gt; 是光速。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个张量是反对称的，即 &lt;span class="math inline"&gt;F_{\mu\nu} = -F_{\nu\mu}&lt;/span&gt;，因此它只有 6 个独立的分量，分别对应于电场和磁场的 3 个分量。&lt;/p&gt;
&lt;h3 id="_29"&gt;协变形式的麦克斯韦方程&lt;/h3&gt;
&lt;p&gt;通过引入电磁场张量，麦克斯韦方程组可以简洁地写成协变形式。这种表示方式不仅大大简化了麦克斯韦方程的表达，还确保了它们在不同参考系中的形式不变（即协变性），揭示了电磁学与狭义相对论的深刻联系。&lt;/p&gt;
&lt;h4 id="_30"&gt;方程一&lt;/h4&gt;
&lt;p&gt;这一方程是麦克斯韦方程组中的高斯定律和安培-麦克斯韦定律的协变形式。它说明了电荷和电流是电磁场的源，并且在不同参考系中，这一关系保持不变。&lt;/p&gt;
&lt;div class="math display"&gt;
\partial^\mu F_{\mu\nu} = \mu_0 J_\nu
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\partial^\mu = \left( \frac{\partial}{\partial t}, \nabla \right)&lt;/span&gt; 是四维导数。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;J_\nu&lt;/span&gt; 是四维电流密度 &lt;span class="math inline"&gt;J^\nu = (\rho c, \mathbf{J})&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\mu_0&lt;/span&gt; 是真空磁导率。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_31"&gt;方程二&lt;/h4&gt;
&lt;p&gt;这一方程是完全反对称的，并包含了法拉第电磁感应定律和磁场的高斯定律。它表明了磁场和电场的相互关系，以及磁场没有单极子（即磁场的散度为零）。&lt;/p&gt;
&lt;div class="math display"&gt;
\partial_\lambda F_{\mu\nu} + \partial_\mu F_{\nu\lambda} + \partial_\nu F_{\lambda\mu} = 0
&lt;/div&gt;

&lt;h2 id="_32"&gt;数学基础？？&lt;/h2&gt;
&lt;p&gt;前面19世纪后期，奥利弗·海维赛（Oliver Heaviside）和乔西亚·威拉德·吉布斯（Josiah Willard Gibbs）发展了矢量分析，并将麦克斯韦的方程简化为我们今天所熟悉的4个矢量形式的方程组。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;简单起见，各个公式只考虑笛卡尔坐标系，不列出圆柱坐标系和球坐标系。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_33"&gt;散度、旋度、梯度&lt;/h3&gt;
&lt;p&gt;它们是矢量分析（矢量微积分）中的三个重要概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;散度（Divergence）&lt;/strong&gt;：描述矢量场的“源”或“汇”的强度，表示矢量场从一点“发散”或“汇集”的程度。(矢量 &lt;code&gt;-&amp;gt;&lt;/code&gt; 标量)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;旋度（Curl）&lt;/strong&gt;：描述矢量场的旋转趋势，表示矢量场在某点附近的旋转性质。（矢量 &lt;code&gt;-&amp;gt;&lt;/code&gt; 矢量）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;梯度（Gradient）&lt;/strong&gt;：描述标量场在各个方向上的变化率和方向。（标量 &lt;code&gt;-&amp;gt;&lt;/code&gt; 矢量）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="divergence"&gt;散度（Divergence）&lt;/h4&gt;
&lt;p&gt;散度是描述一个矢量场（&lt;strong&gt;Vector Field&lt;/strong&gt;）在某一点的“源”或“汇”的强度。它是一个标量，表示矢量场在该点的发散程度。如果散度为正，这表明在这个点有“源”；散度为负，则表明有“汇”&lt;/p&gt;
&lt;p&gt;对于一个矢量场 &lt;span class="math inline"&gt;\mathbf{F}(x, y, z) = (F_x, F_y, F_z)&lt;/span&gt;，它的散度表示为：&lt;/p&gt;
&lt;div class="math display"&gt;
\mathbf{div}\, \mathbf{F} = \nabla \cdot \mathbf{F} = \frac{\partial F_x}{\partial x} + \frac{\partial F_y}{\partial y} + \frac{\partial F_z}{\partial z}
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;电场的散度与电荷密度直接相关（即高斯定律）。在流体力学中，流体的速度场的散度如果为零，意味着流体是不可压缩的（没有净流出或流入）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="curl"&gt;旋度（Curl）&lt;/h4&gt;
&lt;p&gt;旋度描述一个矢量场在某一点的旋转程度或旋转趋势。它是一个矢量，表示矢量场的局部旋转。如果旋度为零，说明矢量场在该点没有旋转（例如静止或线性流动）；如果非零，说明有旋转或涡流。&lt;/p&gt;
&lt;p&gt;对于一个矢量场 &lt;span class="math inline"&gt;\mathbf{F}(x, y, z) = (F_x, F_y, F_z)&lt;/span&gt;，它的旋度表示为：&lt;/p&gt;
&lt;div class="math display"&gt;
\mathbf{curl}\, \mathbf{F} = \nabla \times \mathbf{F} = \left( \frac{\partial F_z}{\partial y} - \frac{\partial F_y}{\partial z}, \frac{\partial F_x}{\partial z} - \frac{\partial F_z}{\partial x}, \frac{\partial F_y}{\partial x} - \frac{\partial F_x}{\partial y} \right)
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;磁场的旋度与电流密度及时间变化的电场有关（即安培-麦克斯韦定律）。在流体力学中，流体速度场的旋度为零表示流体没有旋转或涡流。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="gradient"&gt;梯度（Gradient）&lt;/h4&gt;
&lt;p&gt;梯度是一个标量场（&lt;strong&gt;Scalar Field&lt;/strong&gt;）变化最快的方向和变化率。它将标量场转换为矢量场。它的方向是标量场增加最快的方向，大小则是变化的速率。&lt;/p&gt;
&lt;p&gt;对于一个标量场 &lt;span class="math inline"&gt;f(x, y, z)&lt;/span&gt;，它的梯度是一个矢量场，表示为：&lt;/p&gt;
&lt;div class="math display"&gt;
\mathbf{grad}\, f = \nabla f = \left( \frac{\partial f}{\partial x}, \frac{\partial f}{\partial y}, \frac{\partial f}{\partial z} \right)
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;在一个温度场中，温度梯度表示温度升高最快的方向。风通常从高压区吹向低压区，这个方向与气压梯度相反。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_34"&gt;几个恒等式&lt;/h3&gt;
&lt;h4 id="_35"&gt;梯度的旋度&lt;/h4&gt;
&lt;p&gt;对于任意标量场 &lt;span class="math inline"&gt; \phi &lt;/span&gt;，其梯度的旋度为零：&lt;/p&gt;
&lt;div class="math display"&gt;
\nabla \times (\nabla \phi) = \mathbf{0}
&lt;/div&gt;

&lt;h4 id="_36"&gt;旋度的散度&lt;/h4&gt;
&lt;p&gt;对于任意向量场 &lt;span class="math inline"&gt; \mathbf{F} &lt;/span&gt;，其旋度的散度为零：&lt;/p&gt;
&lt;div class="math display"&gt;
\nabla \cdot (\nabla \times \mathbf{F}) = 0
&lt;/div&gt;

&lt;h4 id="_37"&gt;旋度的旋度&lt;/h4&gt;
&lt;p&gt;对于任意向量场 &lt;span class="math inline"&gt; \mathbf{F} &lt;/span&gt;，其旋度的旋度可以表示如下：&lt;/p&gt;
&lt;div class="math display"&gt;
\nabla \times (\nabla \times \mathbf{F}) = \nabla(\nabla \cdot \mathbf{F}) - \nabla^2 \mathbf{F}
&lt;/div&gt;

&lt;p&gt;其中，&lt;span class="math inline"&gt; \nabla^2 &lt;/span&gt; 是拉普拉斯算子&lt;/p&gt;
&lt;h4 id="_38"&gt;梯度的散度（拉普拉斯算子）&lt;/h4&gt;
&lt;p&gt;对于任意标量场 &lt;span class="math inline"&gt; \phi &lt;/span&gt;，其梯度的散度称为拉普拉斯算子：&lt;/p&gt;
&lt;div class="math display"&gt;
\nabla \cdot (\nabla \phi) = \nabla^2 \phi
&lt;/div&gt;

&lt;h3 id="_39"&gt;散度与面积分，旋度与线积分的关系&lt;/h3&gt;
&lt;p&gt;散度与面积分，以及旋度与线积分之间有着深刻的关系。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;高斯散度定理（Gauss's Divergence Theorem）&lt;/strong&gt; ：建立了向量场在一个体积内的散度（体积积分）与向量场通过该体积边界的通量（&lt;strong&gt;Flux&lt;/strong&gt;，面积分）之间的关系。。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;斯托克斯定理（Stokes' Theorem）&lt;/strong&gt; ：建立了一个向量场在一个曲面边界上的循环（线积分）与该向量场在该曲面上旋度的总量（面积积分）之间的关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_40"&gt;散度与面积分：高斯散度定理&lt;/h4&gt;
&lt;p&gt;数学表达：&lt;/p&gt;
&lt;p&gt;设 &lt;span class="math inline"&gt;\mathbf{F}&lt;/span&gt; 是一个矢量场，&lt;span class="math inline"&gt;V&lt;/span&gt; 是一个三维空间中的体积，&lt;span class="math inline"&gt;S&lt;/span&gt; 是包围 &lt;span class="math inline"&gt;V&lt;/span&gt; 的封闭曲面，那么高斯散度定理表示为：&lt;/p&gt;
&lt;div class="math display"&gt;
\int_V (\nabla \cdot \mathbf{F}) \, dV = \oint_S \mathbf{F} \cdot d\mathbf{A}
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\nabla \cdot \mathbf{F}&lt;/span&gt; 是矢量场 &lt;span class="math inline"&gt;\mathbf{F}&lt;/span&gt; 的散度。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;dV&lt;/span&gt; 是体积元素。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;d\mathbf{A}&lt;/span&gt; 是封闭曲面 &lt;span class="math inline"&gt;S&lt;/span&gt; 上的微小面积元素，方向与曲面的外法线一致。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\oint_S&lt;/span&gt; 表示对封闭曲面 &lt;span class="math inline"&gt;S&lt;/span&gt; 的面积分。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;物理意义：&lt;/p&gt;
&lt;p&gt;高斯散度定理表明，通过一个封闭曲面的矢量场的总通量等于该曲面包围的体积内的散度的积分。直观地说，散度描述了矢量场在某点“发散”或“汇集”的程度，而通过曲面的通量表示矢量场“穿过”该曲面的流量。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在电场中，高斯定理与高斯定律直接相关：电场的散度与电荷密度成正比，而电场通过一个封闭曲面的通量与封闭曲面内部的净电荷成正比。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="_41"&gt;旋度与线积分：斯托克斯定理&lt;/h4&gt;
&lt;p&gt;数学表达：&lt;/p&gt;
&lt;p&gt;设 &lt;span class="math inline"&gt;\mathbf{F}&lt;/span&gt; 是一个矢量场，&lt;span class="math inline"&gt;S&lt;/span&gt; 是一个具有边界 &lt;span class="math inline"&gt;\partial S&lt;/span&gt; 的开放曲面，那么斯托克斯定理表示为：&lt;/p&gt;
&lt;div class="math display"&gt;
\oint_{\partial S} \mathbf{F} \cdot d\mathbf{r} = \int_S (\nabla \times \mathbf{F}) \cdot d\mathbf{A}
&lt;/div&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\nabla \times \mathbf{F}&lt;/span&gt; 是矢量场 &lt;span class="math inline"&gt;\mathbf{F}&lt;/span&gt; 的旋度。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;d\mathbf{r}&lt;/span&gt; 是沿闭合曲线 &lt;span class="math inline"&gt;\partial S&lt;/span&gt; 的微小线段。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;d\mathbf{A}&lt;/span&gt; 是曲面 &lt;span class="math inline"&gt;S&lt;/span&gt; 上的微小面积元素，方向与曲面的法线一致。&lt;/li&gt;
&lt;li&gt;&lt;span class="math inline"&gt;\oint_{\partial S}&lt;/span&gt; 表示沿闭合曲线 &lt;span class="math inline"&gt;\partial S&lt;/span&gt; 的线积分。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;物理意义：&lt;/p&gt;
&lt;p&gt;斯托克斯定理表明，沿一个闭合曲线的矢量场的线积分等于该曲线所包围的曲面上旋度的面积分。旋度描述了矢量场在某点附近的旋转趋势，而线积分表示矢量场沿路径的累积作用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在电磁学中，安培-麦克斯韦定律可以通过斯托克斯定理进行描述，表明磁场的环路积分与电流和电场的变化率相关。在流体力学中，斯托克斯定理与旋度直接相关，描述了流体的环流强度与流体速度场的旋度之间的关系。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="tensor"&gt;张量（Tensor）&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;张量&lt;/strong&gt;是数学和物理学中描述多维数据和线性变换的工具，可以看作是&lt;strong&gt;标量&lt;/strong&gt;、&lt;strong&gt;向量&lt;/strong&gt;和&lt;strong&gt;矩阵&lt;/strong&gt;的推广。&lt;/p&gt;
&lt;p&gt;张量的&lt;strong&gt;阶&lt;/strong&gt;（Rank）表示它有多少个下标或上标，也就是它描述了多少个方向。不同阶的张量对应于不同的对象：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;0阶张量&lt;/strong&gt;：标量，没有下标。例子：&lt;span class="math inline"&gt;5&lt;/span&gt;、&lt;span class="math inline"&gt;\pi&lt;/span&gt; 等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1阶张量&lt;/strong&gt;：向量，有一个下标。例子：&lt;span class="math inline"&gt;\mathbf{v}_i&lt;/span&gt;，如位置向量、速度向量等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2阶张量&lt;/strong&gt;：矩阵，有两个下标。例子：&lt;span class="math inline"&gt;A_{ij}&lt;/span&gt;，如应力或惯性矩等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3阶及以上的张量&lt;/strong&gt;：高阶张量，有三个或更多下标。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;张量的分量可以分为&lt;strong&gt;协变分量&lt;/strong&gt;（下标）和&lt;strong&gt;逆变分量&lt;/strong&gt;（上标）。协变与逆变的区别在于它们在坐标变换下的行为不同：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;协变张量&lt;/strong&gt;：分量用下标表示，在坐标变换中按照基向量的反向变换。一个常见的例子是梯度 &lt;span class="math inline"&gt;\partial_i&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;逆变张量&lt;/strong&gt;：分量用上标表示，在坐标变换中按照基向量的同向变换。向量 &lt;span class="math inline"&gt;v^i&lt;/span&gt; 是一个逆变张量的例子。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;高阶张量可以同时有协变和逆变分量。例如，&lt;span class="math inline"&gt;T_i^j&lt;/span&gt; 是一个混合张量，有一个下标和一个上标。&lt;/p&gt;
&lt;p&gt;张量通常使用爱因斯坦求和约定，其中重复的上标和下标表示求和。例如，假设 &lt;span class="math inline"&gt;A_{ij}&lt;/span&gt; 是一个二阶张量（矩阵），&lt;span class="math inline"&gt;v^j&lt;/span&gt; 是一个一阶张量（向量），则它们的乘积可以写作：&lt;/p&gt;
&lt;div class="math display"&gt;
u_i = A_{ij} v^j
&lt;/div&gt;

&lt;p&gt;根据爱因斯坦求和约定，上下标相同的 &lt;span class="math inline"&gt;j&lt;/span&gt; 表示对 &lt;span class="math inline"&gt;j&lt;/span&gt; 进行求和，这样 &lt;span class="math inline"&gt;u_i&lt;/span&gt; 也是一个向量。&lt;/p&gt;
&lt;h2 id="_42"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Maxwell%27s_equations&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/History_of_Maxwell%27s_equations&lt;/li&gt;
&lt;li&gt;https://www.researchgate.net/publication/302966559_Maxwell%27s_Original_Equations&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="module"&gt;
    import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.esm.min.mjs';
    mermaid.initialize({ startOnLoad: true });
&lt;/script&gt;</content><category term="Science"></category></entry><entry><title>英语历史小记</title><link href="https://blog.debao.me/2024/08/notes-on-english-history/" rel="alternate"></link><published>2024-08-26T09:48:00+08:00</published><updated>2024-08-26T09:48:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-08-26:/2024/08/notes-on-english-history/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;陪着孩子学英文。看看坚持多久...&lt;/p&gt;
&lt;p&gt;老婆说，&lt;a href="https://blog.debao.me/2024/08/notes-on-pronunciation-of-g/"&gt;英语字母g发音小记&lt;/a&gt;写的太乱了。换个方式先看看历史...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;历史？&lt;/h2&gt;
&lt;p&gt;英语的历史可以从凯尔特人（Celts …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;陪着孩子学英文。看看坚持多久...&lt;/p&gt;
&lt;p&gt;老婆说，&lt;a href="https://blog.debao.me/2024/08/notes-on-pronunciation-of-g/"&gt;英语字母g发音小记&lt;/a&gt;写的太乱了。换个方式先看看历史...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;历史？&lt;/h2&gt;
&lt;p&gt;英语的历史可以从凯尔特人（Celts）开始说起。&lt;/p&gt;
&lt;h3 id="celts"&gt;凯尔特人（Celts）时期&lt;/h3&gt;
&lt;p&gt;在公元前，不列颠岛（今天的英国）上的居民主要讲凯尔特语。那个时代，中国正处于战国时期，各诸侯国之间争斗不断。&lt;/p&gt;
&lt;p&gt;公元43年，罗马帝国的军队入侵不列颠，罗马人带来了他们的语言——拉丁语（Latin）。罗马的影响在许多地方都可以看到，比如很多以“chester”结尾的英国城市名称，这个词来自拉丁语“castra”，意味着“营地”或“城堡”。这个时期，中国正由汉光武帝统治，他是东汉的开国皇帝。&lt;/p&gt;
&lt;h3 id="old-english-4501100"&gt;古英语 (Old English) - 450至1100年&lt;/h3&gt;
&lt;p&gt;公元5世纪，盎格鲁人（Angles）、撒克逊人（Saxons）和朱特人（Jutes）从现在的德国和丹麦地区迁移到不列颠岛，他们的语言逐渐演化成了古英语。这一时期中国经历了南北朝的分裂与动荡。&lt;/p&gt;
&lt;p&gt;虽然古英语和现代英语在很多方面都不相同，一些基本词汇如“be”（是）、“water”（水）和“strong”（强壮）却延续至今。&lt;/p&gt;
&lt;p&gt;大约公元800年，来自北欧的维京人（Vikings）开始入侵英格兰，他们的诺尔斯语（Norse）对古英语产生了较大的影响，例如单词“sky”（天空）。在中国，这一时期对应唐朝，当时唐德宗在位，中国正享受“贞观之治”的盛世。&lt;/p&gt;
&lt;h3 id="middle-english-11001500"&gt;中古英语 (Middle English) - 1100至1500年&lt;/h3&gt;
&lt;p&gt;1066年，诺曼（Norman）的威廉征服者征服了英格兰，标志着中古英语时期的开始。这时上层社会主要使用法语，而普通民众仍然使用英语。这一时期对应中国的宋朝。&lt;/p&gt;
&lt;p&gt;英语在这一时期吸收了大量的法语词汇，如“crown”（皇冠）、“court”（法庭），“pork”（猪肉），“beef”（牛肉），“mutton”（羊肉）等。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在诺曼征服后，英语中保留了古英语的动物名称，但使用法语词汇来描述食物。这是因为当时以法语为主的贵族主要消费这些食物，而负责养殖的普通百姓使用的是古英语。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;后缀-or与-er：上层社会以及给富人干活的多使用法语标志性后缀比如&lt;code&gt;-or&lt;/code&gt;，而普通的手工业者使用本土的&lt;code&gt;-er&lt;/code&gt;后缀。使得现代英语中-or结尾的词汇似乎更"高贵"。比如governor、doctor、inventor、director、counselor、tailor对比 farmer、teacher、writer、driver、painter&lt;/p&gt;
&lt;p&gt;元音大转移(Great Vowel Shift)发生在15世纪到17世纪，这一变化极大地影响了英语的发音系统。这一时期内，英语中的长元音发生了系统性的变化，使得早期现代英语的发音方式与中古英语有了显著的不同。例如，单词如“meat”（肉）和“house”（房子）的发音方式发生了变化。这一变化被视为现代英语形成的重要标志。&lt;/p&gt;
&lt;h3 id="early-modern-english-15001800"&gt;早期现代英语 (Early Modern English) - 1500至1800年&lt;/h3&gt;
&lt;p&gt;16世纪的文艺复兴（Renaissance）时期，拉丁语和希腊语的词汇大量被引入英语，如“encyclopedia”（百科全书）和“theory”（理论）。同时，印刷术的发明使书籍变得更加便宜，更多的人开始学习阅读。1604年，第一本英语词典出版，这一时期中国正处于明朝万历年间。&lt;/p&gt;
&lt;h3 id="late-modern-english-1800"&gt;晚期现代英语 (Late Modern English) - 1800年至今&lt;/h3&gt;
&lt;p&gt;从1800年开始，英语词汇量因工业革命和大英帝国的全球扩展而大增，此时中国进入了清朝。&lt;/p&gt;
&lt;p&gt;新引入的词汇包括“engine”（引擎）和“telephone”（电话）。&lt;/p&gt;
&lt;h2 id="_2"&gt;故事？&lt;/h2&gt;
&lt;h3 id="_3"&gt;罗马入侵&lt;/h3&gt;
&lt;p&gt;大约两千年前，罗马帝国非常强大。他们的皇帝克劳狄乌斯想把英国变成罗马的一部分。&lt;/p&gt;
&lt;p&gt;罗马军队穿着闪亮的盔甲，带着盾牌和长矛，乘船来到英国。他们和当地部落展开了许多战斗，最终取得了胜利。&lt;/p&gt;
&lt;p&gt;罗马人在英国建造了坚固的道路、城墙和房子。他们还修建了“哈德良长城”，用来保护罗马领土，防止来自北方苏格兰的部落入侵。&lt;/p&gt;
&lt;p&gt;虽然罗马人试图征服苏格兰，但面对勇敢的部落和困难的地形，他们很难完全控制那里。&lt;/p&gt;
&lt;p&gt;罗马带来了新技术、法律和文化，改变了英国的生活。虽然罗马最终离开了，但他们的影响一直持续，比如修建的道路和城市。&lt;/p&gt;
&lt;h3 id="_4"&gt;诺曼征服&lt;/h3&gt;
&lt;p&gt;从前，有一个叫威廉的公爵，他住在法国的诺曼底。他听说自己的亲戚去世了，英格兰的王位空缺。威廉认为自己有资格成为国王。&lt;/p&gt;
&lt;p&gt;威廉决定带领他的军队去英格兰。他们乘坐大船，经过风浪，终于到达了英格兰的海岸。威廉的军队穿着闪亮的盔甲，准备展开一场伟大的冒险。&lt;/p&gt;
&lt;p&gt;在一个叫黑斯廷斯的地方，威廉遇到了英格兰的军队。两支军队在山坡上展开了激烈的战斗。威廉非常聪明，他制定了巧妙的计划，终于在战斗中获胜。&lt;/p&gt;
&lt;p&gt;威廉赢得了胜利，所有人都称他为“征服者威廉”。他带领军队进入伦敦，戴上了英格兰的皇冠，成为了新的国王。&lt;/p&gt;
&lt;p&gt;威廉带来了法国的文化和语言，许多法语词汇融入了英语。他建造了许多坚固的城堡，比如著名的伦敦塔，用来保护他的国家。他引入了新的法律和制度，让英格兰变得更有秩序。&lt;/p&gt;
&lt;h3 id="_5"&gt;文艺复兴&lt;/h3&gt;
&lt;p&gt;从前，在欧洲，有一个叫“黑暗时代”的时期，人们的生活很艰难。后来，大约在600多年前，一些聪明的人开始重新发现古代希腊和罗马的知识、艺术和科学。这就是“文艺复兴”的开始，意思是“重生”。&lt;/p&gt;
&lt;p&gt;在意大利的城市，比如佛罗伦萨和威尼斯，许多艺术家和科学家开始创造新的东西。一个叫达·芬奇的人，不仅画了美丽的画，还设计了飞行机器。他画的《蒙娜丽莎》很有名，微笑神秘而美丽。&lt;/p&gt;
&lt;p&gt;还有一个叫米开朗基罗的艺术家，他雕刻了惊人的雕像，比如大卫。他还在一个大教堂的天花板上画了许多美丽的壁画。&lt;/p&gt;
&lt;p&gt;那时，人们开始用望远镜观察星星，像伽利略这样的科学家发现了许多宇宙的秘密。&lt;/p&gt;
&lt;p&gt;文艺复兴让人们开始思考，探索世界，尝试新的事物。书籍变得更加普及，因为印刷术的发明让书本变得便宜，更多人可以阅读学习。&lt;/p&gt;
&lt;h2 id="_6"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/History_of_English&lt;/li&gt;
&lt;li&gt;https://www.oxfordinternationalenglish.com/a-brief-history-of-the-english-language/&lt;/li&gt;
&lt;li&gt;https://zhuanlan.zhihu.com/p/369326367&lt;/li&gt;
&lt;li&gt;https://zhuanlan.zhihu.com/p/20912866&lt;/li&gt;
&lt;/ul&gt;</content><category term="ESL"></category></entry><entry><title>英语字母g发音小记</title><link href="https://blog.debao.me/2024/08/notes-on-pronunciation-of-g/" rel="alternate"></link><published>2024-08-23T16:46:00+08:00</published><updated>2024-08-23T16:46:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-08-23:/2024/08/notes-on-pronunciation-of-g/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;陪着孩子学英文。看看坚持多久...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;英文单词的中 &lt;code&gt;g&lt;/code&gt; 的发音，套用拼音的习惯，似乎还是挺直观的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;get /ɡɛt/&lt;/li&gt;
&lt;li&gt;give /ɡɪv/&lt;/li&gt;
&lt;li&gt;girl /ɡɜːrl/&lt;/li&gt;
&lt;li&gt;gift /ɡɪft/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;好不容易 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;陪着孩子学英文。看看坚持多久...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;英文单词的中 &lt;code&gt;g&lt;/code&gt; 的发音，套用拼音的习惯，似乎还是挺直观的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;get /ɡɛt/&lt;/li&gt;
&lt;li&gt;give /ɡɪv/&lt;/li&gt;
&lt;li&gt;girl /ɡɜːrl/&lt;/li&gt;
&lt;li&gt;gift /ɡɪft/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;好不容易学这几个单词，但在突然知晓这几个单词的发音都是 &lt;strong&gt;特例&lt;/strong&gt; 的时候，还是挺吃惊的&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当g后面的字母是 &lt;code&gt;e&lt;/code&gt;、&lt;code&gt;i&lt;/code&gt;或 &lt;code&gt;y&lt;/code&gt;时，g发软音/dʒ/；其他时候发硬音/ɡ/。不符合规则的当作特例。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="soft-g-hard-g"&gt;Soft g 与 Hard g&lt;/h2&gt;
&lt;p&gt;和字母c在单词中有软音/s/ 和 硬音/k/两个读音类似，g在单词中也有软音/dʒ/与硬音/ɡ/两个发音。比如下面单词，同时包含两个音&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;language /ˈlæŋɡwɪdʒ/&lt;/li&gt;
&lt;li&gt;gigantic /dʒaɪˈɡæntɪk/&lt;/li&gt;
&lt;li&gt;garage /ɡəˈrɑːʒ/ 或 /ɡəˈrɑːdʒ/&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_1"&gt;背景&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在晚期拉丁语中，/g/ 在前元音 [e] 和 [i] 前发生了腭化（Palatalization），影响了后来的语言，比如法语。&lt;/li&gt;
&lt;li&gt;后来法语成为英国上层社会的语言，英语中吸收大量法语词汇。使得法语中，"g" 在 e、i、y 前发 /ʒ/ ，这种影响也传入了英语，形成软音 /dʒ/。&lt;/li&gt;
&lt;li&gt;为了帮助区分词义和发音，英语保留了这种拼写规则。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="e-i-yd"&gt;在e i y之前腭化（软音）/dʒ/&lt;/h3&gt;
&lt;p&gt;一般来说，g的发音一般取决于它后面的字母：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;如果g后面的字母是 &lt;code&gt;e&lt;/code&gt;、&lt;code&gt;i&lt;/code&gt;或 &lt;code&gt;y&lt;/code&gt;，g发软音/dʒ/&lt;/strong&gt; 。比如general、giant、large、energy、change 等。&lt;/li&gt;
&lt;li&gt;如果是其他字母，g发硬音 /g/。比如golf、pig、great、grasp、gum 等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;后缀（不）影响&lt;/h3&gt;
&lt;p&gt;当一个以/dʒ/或/g/结尾的单词后面添加后缀，形成新的单词时，通常不改变发音。常见的后缀&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-ed&lt;/li&gt;
&lt;li&gt;-ing&lt;/li&gt;
&lt;li&gt;-er&lt;/li&gt;
&lt;li&gt;-est&lt;/li&gt;
&lt;li&gt;-ism&lt;/li&gt;
&lt;li&gt;-ist&lt;/li&gt;
&lt;li&gt;-edness&lt;/li&gt;
&lt;li&gt;-ish&lt;/li&gt;
&lt;li&gt;-ily&lt;/li&gt;
&lt;li&gt;-iness&lt;/li&gt;
&lt;li&gt;-ier&lt;/li&gt;
&lt;li&gt;-iest&lt;/li&gt;
&lt;li&gt;-ingly&lt;/li&gt;
&lt;li&gt;-edly&lt;/li&gt;
&lt;li&gt;-ishly&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;找几个例子：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;原单词&lt;/th&gt;
&lt;th&gt;音标&lt;/th&gt;
&lt;th&gt;加后缀后&lt;/th&gt;
&lt;th&gt;音标&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Bag&lt;/td&gt;
&lt;td&gt;/bæɡ/&lt;/td&gt;
&lt;td&gt;Bagged&lt;/td&gt;
&lt;td&gt;/ˈbæɡd/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jog&lt;/td&gt;
&lt;td&gt;/dʒɒɡ/&lt;/td&gt;
&lt;td&gt;Jogging&lt;/td&gt;
&lt;td&gt;/ˈdʒɒɡɪŋ/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Big&lt;/td&gt;
&lt;td&gt;/bɪɡ/&lt;/td&gt;
&lt;td&gt;Bigger&lt;/td&gt;
&lt;td&gt;/ˈbɪɡər/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dog&lt;/td&gt;
&lt;td&gt;/dɒɡ/&lt;/td&gt;
&lt;td&gt;Dogged&lt;/td&gt;
&lt;td&gt;/ˈdɒɡɪd/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mug&lt;/td&gt;
&lt;td&gt;/mʌɡ/&lt;/td&gt;
&lt;td&gt;Mugged&lt;/td&gt;
&lt;td&gt;/ˈmʌɡd/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Judge&lt;/td&gt;
&lt;td&gt;/dʒʌdʒ/&lt;/td&gt;
&lt;td&gt;Judging&lt;/td&gt;
&lt;td&gt;/ˈdʒʌdʒɪŋ/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Change&lt;/td&gt;
&lt;td&gt;/tʃeɪndʒ/&lt;/td&gt;
&lt;td&gt;Changing&lt;/td&gt;
&lt;td&gt;/ˈtʃeɪndʒɪŋ/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Age&lt;/td&gt;
&lt;td&gt;/eɪdʒ/&lt;/td&gt;
&lt;td&gt;Ageism&lt;/td&gt;
&lt;td&gt;/ˈeɪdʒɪzəm&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，硬音/g/的单词，通常重复字母g。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;后缀规则也有例外，比如下面的单词，一个硬音，一个软音：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;analogous: /əˈnæləɡəs/&lt;/li&gt;
&lt;li&gt;analogy: /əˈnælədʒi/&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_3"&gt;不发音字母&lt;/h3&gt;
&lt;h4 id="e"&gt;字母e&lt;/h4&gt;
&lt;p&gt;增加able时，保留了字母e，指示软音/dʒ/&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;change → changeable&lt;/li&gt;
&lt;li&gt;manage → manageable&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="u"&gt;字母u&lt;/h4&gt;
&lt;p&gt;从法语中借来的单词&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;analogue /ˈænəˌlɔːɡ/&lt;/li&gt;
&lt;li&gt;league /liːɡ/&lt;/li&gt;
&lt;li&gt;guide /ɡaɪd/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以及受法语影响的词&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;guess /ɡɛs/&lt;/li&gt;
&lt;li&gt;guest /ɡɛst/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在g后面增加一个不发音字符u，来使得其发硬音 /ɡ/&lt;/p&gt;
&lt;h4 id="h"&gt;字母h&lt;/h4&gt;
&lt;p&gt;从意大利借来的单词，增加一个不发音字符h，来保持硬音 /ɡ/&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ghetto  /ˈɡɛtoʊ/&lt;/li&gt;
&lt;li&gt;spaghetti  /spəˈɡɛti/&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_4"&gt;例外单词&lt;/h2&gt;
&lt;p&gt;前面说了这么多，为什么一开始的几个常见单词都不满足规则呢?&lt;/p&gt;
&lt;h3 id="eiy"&gt;在e、i、y之前发硬/ɡ/&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;软音的规则适用于来自法语和拉丁语的单词&lt;/strong&gt;。但是英语本身源于自古英语和日耳曼语，所以&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;get&lt;/li&gt;
&lt;li&gt;give&lt;/li&gt;
&lt;li&gt;girl&lt;/li&gt;
&lt;li&gt;gift&lt;/li&gt;
&lt;li&gt;burger&lt;/li&gt;
&lt;li&gt;gear&lt;/li&gt;
&lt;li&gt;geek&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;together&lt;/li&gt;
&lt;li&gt;finger&lt;/li&gt;
&lt;li&gt;hunger&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些来自古英语和日耳曼语的词汇，不受腭化影响。继续读/ɡ/。似乎，这些也都只能作为例外来记了...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例外还是无处不在，比如常见单词 tiger、target，尽管是通过法语从拉丁语借来的，却也发/g/音。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="eiy-d"&gt;不在e、i、y之前却发软 /dʒ/&lt;/h3&gt;
&lt;p&gt;这个情况，很少！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gaol /dʒeɪl/ 监狱，监禁&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;不过这个单词现在一般用 jail /dʒeɪl/，这样的话，就不用考虑例外了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;另外有些缩短词，这些词中的软“g”在从其完整形式缩短时，失去了其后的“e”或“i”：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;reg /rɛdʒ/，是registrar，registry的简写&lt;/li&gt;
&lt;li&gt;veg /vɛdʒ/，是vegetable的简写&lt;/li&gt;
&lt;li&gt;frig /frɪdʒ/，是fridge，refrigerator简写&lt;/li&gt;
&lt;li&gt;vag /vædʒ/，是vagina的简写&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_5"&gt;保持/ʒ/音&lt;/h3&gt;
&lt;p&gt;有些后来从法语中引入的词，保持法语中的/ʒ/音&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;genre /ˈʒɒnrə/ - 类型，体裁&lt;/li&gt;
&lt;li&gt;massage /məˈsɑːʒ/ - 按摩&lt;/li&gt;
&lt;li&gt;mirage /mɪˈrɑːʒ/ - 海市蜃楼&lt;/li&gt;
&lt;li&gt;sabotage /ˈsæbətɑːʒ/ - 蓄意破坏&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="gg-d"&gt;gg 发软 /dʒ/&lt;/h3&gt;
&lt;p&gt;前面增加后缀时提到，两个gg来发硬音。但是下面的单词及其 -ed、-s、-ing等形式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;suggest&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;发软音&lt;/p&gt;
&lt;h3 id="_6"&gt;其他&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;g 不发音&lt;/li&gt;
&lt;li&gt;gh 不发音&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="gif"&gt;gif ?&lt;/h3&gt;
&lt;p&gt;因为英文中缺少发音标准，gif（Graphics Interchange Format）作为互联网上广泛使用的是图像格式，也遇到的发音尴尬。&lt;/p&gt;
&lt;p&gt;g代表 Graphics，理应读 /ɡ/。但是后面跟了一个i，似乎又应该读/dʒ/：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/ɡɪf/&lt;/li&gt;
&lt;li&gt;/dʒɪf/&lt;/li&gt;
&lt;li&gt;/dʒiː aɪ ɛf/&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="g-j"&gt;g 与 j&lt;/h2&gt;
&lt;p&gt;因为二者字母音中都有/dʒ/，这两个在国内有时不好区分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;g：/dʒiː/&lt;/li&gt;
&lt;li&gt;j：/dʒeɪ/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;理论上 /iː/和 /eɪ/挺好区分的，但是遇到几个辅音时，就是有点头大：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;辅音 /w/：如 "way" (/weɪ/) 和 "we" (/wiː/)&lt;/li&gt;
&lt;li&gt;辅音 /h/：如 "hay" (/heɪ/) 和 "he" (/hiː/)&lt;/li&gt;
&lt;li&gt;辅音 /dʒ/：如 "jail" (/dʒeɪl/) 和 "jeel" (/dʒiːl/)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外，用在在单词中，g有硬音/ɡ/和 软音/dʒ/，而j一般只有/dʒ/一个音。这点和c也不一样，c软音可以对应字母s，硬音可以对应字母k。&lt;/p&gt;
&lt;h2 id="_7"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://www.bbc.co.uk/worldservice/learningenglish/language/askaboutenglish/2009/06/090825_aae_g.shtml&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Hard_and_soft_G&lt;/li&gt;
&lt;li&gt;https://en.wiktionary.org/wiki/Appendix:English_words_where_G_is_pronounced_exceptionally&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Pronunciation_of_GIF&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/English_orthography&lt;/li&gt;
&lt;/ul&gt;</content><category term="ESL"></category></entry><entry><title>模拟电路仿真SPICE小记</title><link href="https://blog.debao.me/2024/08/notes-on-spice/" rel="alternate"></link><published>2024-08-19T20:26:00+08:00</published><updated>2024-08-19T20:26:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-08-19:/2024/08/notes-on-spice/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/04/notes-on-eda-softwares/"&gt;EDA小记&lt;/a&gt;，查查SPICE内容，胡乱整理一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;SPICE，取自&lt;strong&gt;Simulation Program with Integrated Circuit Emphasis&lt;/strong&gt;（集成电路通用模拟程序）首字母缩写 ，是一种用于电路描述与仿真的 …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/04/notes-on-eda-softwares/"&gt;EDA小记&lt;/a&gt;，查查SPICE内容，胡乱整理一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;SPICE，取自&lt;strong&gt;Simulation Program with Integrated Circuit Emphasis&lt;/strong&gt;（集成电路通用模拟程序）首字母缩写 ，是一种用于电路描述与仿真的语言和仿真器软件，用于检测电路的连接和功能的完整性，以及用于预测电路的行为。&lt;/p&gt;
&lt;h2 id="spice"&gt;SPICE 历史&lt;/h2&gt;
&lt;p&gt;SPICE，1975年由加利福尼亚大学伯克莱分校的Donald Pederson在电子研究实验室首先建立的。第一版和第二版都是用Fortran语言编写的，从第三版开始用&lt;a href="https://zh.wikipedia.org/wiki/C" title="C"&gt;C&lt;/a&gt;语言编写。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1973：SPICE1&lt;/li&gt;
&lt;li&gt;1975：SPICE2，最后一个版本 SPICE2G.6(1983)，当今很多商业仿真器基于这个版本&lt;/li&gt;
&lt;li&gt;1989：SPICE3，最后一个版本 SPICE3f.5(1993)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_1"&gt;商业软件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;HSPICE：1970年代末，由Meta-Software开发，1980年代成为集成电路行业的标准工具，1994年被收入Synopsys旗下。&lt;/li&gt;
&lt;li&gt;PSPICE：第一个用于PC机的SPICE，1980年代初由MicroSim开发，1998年被OrCAD收购，1999年OrCAD被Cadence收购。&lt;/li&gt;
&lt;li&gt;NI Multisim：1990年代由Interactive Image Technologies开发，最初叫做Electronics Workbench，后称为Multisim。2005被 National Instruments收购。提供直观的图形化设计环境，易于使用。&lt;/li&gt;
&lt;li&gt;IsSPICE：1985年由Intusoft推出，用于研究或中小型项目&lt;/li&gt;
&lt;li&gt;MICROCAP：1980年代末，由Spectrum Software开发，2019年停止开发。版本停留在 Micro-Cap 12，商业软件变为免费提供&lt;/li&gt;
&lt;li&gt;ProSPICE：Proteus中使用的SPICE仿真器。Proteus 由 Labcenter Electronics 于1988开发。Proteus支持MCU模拟。&lt;/li&gt;
&lt;li&gt;LTspice：1990年代末由Linear Technology发布，2017年被Analog Devices收购。免费提供。包含Analog Devices元件库。&lt;/li&gt;
&lt;li&gt;TINA：Toolkit for Interactive Network Analysis是基于SPICE的仿真软件，由DesignSoft于1990年发布。支持模拟、数字、射频以及MCU。&lt;/li&gt;
&lt;li&gt;TINA-TI：DesignSoft的TINA的受限版本。2004年起由Texas Instruments免费提供。包含 TI 提供的丰富元件库，便于使用 TI 产品进行设计。注意，它比TINA学生版相比，功能都受限。（另外，它和PSpice for TI无关）&lt;/li&gt;
&lt;li&gt;PSPICE for TI：由 Texas Instruments (TI) 提供的电路仿真工具，基于 Cadence 设计系统的 PSpice 技术。此工具专为设计涉及 TI 元件的电子电路的工程师而开发。免费提供&lt;/li&gt;
&lt;li&gt;QSPICE：qorvo公司免费提供。它是由原LTspice的作者开发的。支持C++/Verilog编译器。包含Qorvo器件库。&lt;/li&gt;
&lt;li&gt;AIM-SPICE：1990年代由 俄罗斯科学院 开发，含义 Automatic Integrated Circuit Modeling Spice，旨在为学术研究和教育提供免费的电路仿真工具。免费，但是社区不大&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有很多&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SmartSpice&lt;/li&gt;
&lt;li&gt;HSIM&lt;/li&gt;
&lt;li&gt;NANOSIM&lt;/li&gt;
&lt;li&gt;ADiT&lt;/li&gt;
&lt;li&gt;ULTRASIM&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;追求免费的话，LTspice似乎是社区比较大的。另外QSPICE由于是LTspice的原作者新开发的，似乎也有点意思。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_2"&gt;开源软件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ngspice：开源软件，融合了XSPICE和CIDER等变体。它本身是一个基于命令行的电路仿真器，但是它可以与其他图形界面工具集成。比如KiCad, Qucs-S 等，另外EasyEDA、Autodesk fusion、Altium Designer等也支持ngspice。&lt;/li&gt;
&lt;li&gt;XYCE：由美国桑迪亚国家实验室开发的，支持并行计算，适合大规模电路模型。它没有基于SPICE的代码，是重新开发的兼容SPICE的程序。&lt;/li&gt;
&lt;li&gt;WRspice：WrSpice是JSPICE3的继任者，它使用C++进行了重写，在一些行为上（SPICE和HSPICE不一致时），向HSPICE靠拢。WRspice由 Whiteley Research Inc. (WRI) 开发和维护，2017年起已经停止维护。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;XSPICE由Georgia Tech开发，添加数模混合仿真功能；CIDER（CODECS）是由U.C. Berkeley和Oregon State University合作开发，支持半导体器件的数值仿真，并利用数值仿真结果进行电路分析。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="ngspice-gui"&gt;配合ngspice 的 GUI 程序&lt;/h4&gt;
&lt;p&gt;以下是一些可以与 ngspice 集成，提供图形界面的工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;KiCad  (使用 wxwidgets 这一跨平台 C++的 UI库)&lt;/li&gt;
&lt;li&gt;Qucs-S （使用 Qt 这一跨平台 C++的 UI库）: 网址 https://ra3xdh.github.io/，派生自Qucs，但是使用Spice。&lt;/li&gt;
&lt;li&gt;gEDA （使用GTK+ 这一个gnome的UI库）&lt;/li&gt;
&lt;li&gt;XSchem：在Unix下使用X11和Tcl-Tk库。&lt;/li&gt;
&lt;li&gt;EasyEDA（Web端）&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外，多个商业软件可以支持/使用 ngspice：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Eagle 8.4&lt;/li&gt;
&lt;li&gt;Altium Designer 20&lt;/li&gt;
&lt;li&gt;Autodesk fusion&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;网表文件语法&lt;/h2&gt;
&lt;p&gt;尽管现代多数仿真工具可以通过电路图输入，还是有必要先了解一下SPICE基础的语法。&lt;/p&gt;
&lt;p&gt;SPICE语法主要涉及电路描述文件（通常为.cir或.sp文件），该文件包含了定义和分析电路所需的所有指令和元件描述。&lt;/p&gt;
&lt;h3 id="_4"&gt;基本组成&lt;/h3&gt;
&lt;p&gt;SPICE的输入文件主要由以下几部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标题行（Title Card/Title Line）：文件的第一行，用于描述电路或仿真的简要信息。&lt;/li&gt;
&lt;li&gt;元件说明（Element Cards）：描述电路中的具体元件，如电阻、电容、电感、晶体管等。&lt;/li&gt;
&lt;li&gt;控制语句（Control Statements）：指定仿真类型（如直流分析、交流分析、瞬态分析等）和输出要求。&lt;/li&gt;
&lt;li&gt;模型描述（Model Descriptions）：定义特定元件的详细物理特性&lt;/li&gt;
&lt;li&gt;结束行（.END）：标记文件结束。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注释行（Comment)：&lt;/li&gt;
&lt;li&gt;子电路(Subcircuit)：&lt;/li&gt;
&lt;li&gt;文件包含(.INCLUDE)：&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;SPICE在1970年代被开发时，打孔卡还是主要的数据输入手段之一，每个电路元件或控制语句通常对应一行输入，这被视为一个“card”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_5"&gt;数字？&lt;/h3&gt;
&lt;p&gt;SPICE大小写不敏感，数字数量级的单位：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;T = 10^12&lt;/li&gt;
&lt;li&gt;G = 10^9&lt;/li&gt;
&lt;li&gt;Meg = 10^6&lt;/li&gt;
&lt;li&gt;K = 10^3&lt;/li&gt;
&lt;li&gt;mil = 25.4x10^-6&lt;/li&gt;
&lt;li&gt;m = 10^-3&lt;/li&gt;
&lt;li&gt;u = 10^-6&lt;/li&gt;
&lt;li&gt;n = 10^-9&lt;/li&gt;
&lt;li&gt;p = 10^-12&lt;/li&gt;
&lt;li&gt;f = 10^-15&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不加数量级的数字，可以表示为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;5&lt;/span&gt;
&lt;span class="mf"&gt;5.0&lt;/span&gt;
&lt;span class="mf"&gt;5&lt;/span&gt;&lt;span class="n"&gt;E3&lt;/span&gt;
&lt;span class="mf"&gt;5.0E3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;单位：V、A、HZ、OHM、H、F、DEG&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，最好不要加单位。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_6"&gt;标题行&lt;/h3&gt;
&lt;p&gt;标题行必须是输入文件的第一行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;My first circuit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_7"&gt;结束行&lt;/h3&gt;
&lt;p&gt;结束行，注意前面的 &lt;code&gt;.&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;END&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_8"&gt;注释行&lt;/h3&gt;
&lt;p&gt;与C语言中使用 &lt;code&gt;//&lt;/code&gt;或 &lt;code&gt;/* */&lt;/code&gt;进行注释不同，SPICE中使用星号（&lt;code&gt;*&lt;/code&gt;）来注释行，例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;这是一个注释&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;行内注释，使用分号 &lt;code&gt;;&lt;/code&gt;，有的用SPICE支持 &lt;code&gt;$&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;V1 1 0 DC 10V ; 这是电源定义，电压为10V
R1 1 2 1k ; 这是一个电阻，阻值为1千欧姆
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_9"&gt;续行&lt;/h3&gt;
&lt;p&gt;在不同的 SPICE 版本中，续行符的使用有细微的差异。在多数 SPICE 方言中，使用加号（+）作为续行符。加号放在新行的行首。&lt;/p&gt;
&lt;h3 id="_10"&gt;元件说明&lt;/h3&gt;
&lt;p&gt;每个元件在SPICE中都用一行文本描述，格式通常为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;类型&amp;gt;&amp;lt;名称&amp;gt; &amp;lt;连接节点&amp;gt; &amp;lt;参数&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;例如，电阻类型用R标识，一个电阻可以描述为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;R1 1 2 100k
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;这表示一个名为R1的电阻，连接在节点1和节点2之间，阻值为100千欧姆。&lt;/p&gt;
&lt;p&gt;注意，名字和节点，不一定用数字（节点地必须是0）。所以下面也可以&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Rabc myin1 myin2 100000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;常用元件的类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;R&lt;/strong&gt;：电阻 (Resistor)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C&lt;/strong&gt;：电容 (Capacitor)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;L&lt;/strong&gt;：电感 (Inductor)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;V&lt;/strong&gt;：独立电压源 (Independent Voltage Source)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;I&lt;/strong&gt;：独立电流源 (Independent Current Source)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;E&lt;/strong&gt;：电压控制电压源 (Voltage-Controlled Voltage Source)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;G&lt;/strong&gt;：电压控制电流源 (Voltage-Controlled Current Source)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;H&lt;/strong&gt;：电流控制电压源 (Current-Controlled Voltage Source)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F&lt;/strong&gt;：电流控制电流源 (Current-Controlled Current Source)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;D&lt;/strong&gt;：二极管 (Diode)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt;：双极型晶体管 (Bipolar Junction Transistor)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;M&lt;/strong&gt;：MOSFET (Metal-Oxide-Semiconductor Field-Effect Transistor)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;J&lt;/strong&gt;：JFET (Junction Field-Effect Transistor)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_11"&gt;控制语句&lt;/h3&gt;
&lt;p&gt;控制语句以点（.）开始，用于定义仿真的设置和进行的分析类型。常见的控制语句包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.DC：直流扫描分析&lt;/li&gt;
&lt;li&gt;.AC：交流扫描分析&lt;/li&gt;
&lt;li&gt;.TRAN：瞬态分析&lt;/li&gt;
&lt;li&gt;.OP：工作点分析(Operation Point Analysis)&lt;/li&gt;
&lt;li&gt;.PRINT：定义输出变量&lt;/li&gt;
&lt;li&gt;.PLOT：定义绘图输出&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.NODESET：为电路节点提供初始电压&lt;strong&gt;估计&lt;/strong&gt;，有助于加速仿真收敛&lt;/li&gt;
&lt;li&gt;.IC：Initial Condition，为某些节点设置仿真开始时的确切电压或初始条件。常用于瞬态分析。&lt;/li&gt;
&lt;li&gt;.OPTION：设置仿真的各种参数，比如迭代步长、容差、输出格式等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如，进行一个瞬态分析的控制语句可能如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;.TRAN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="no"&gt;us&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="no"&gt;ms&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;这表示进行瞬态分析，步长为1微秒，总时长为100毫秒。&lt;/p&gt;
&lt;p&gt;在ngspice中，支持.control 块功能。块中可以包含任何有效的 ngspice 命令，比如设定仿真选项、执行仿真和后处理数据等。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;.control&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;ngspice&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;命令&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="na"&gt;.endc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_12"&gt;模型描述&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;设备模型对于准确模拟电子元件在各种条件下的行为至关重要。SPICE定义了多种模型类型，每种模型在 SPICE 中都有特定的参数集，这些参数可以根据实际器件的数据手册进行调整以匹配实际行为。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;SPICE中的.MODEL语句允许用户定义诸如二极管、晶体管等半导体器件的特性。这些模型有助于预测器件在电路中的运行情况。&lt;/p&gt;
&lt;p&gt;.MODEL语句在SPICE中的通用格式如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;.MODEL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;MNAME&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;TYPE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;PNAME1&lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PVAL1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;PNAME2&lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PVAL2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;MNAME：这是模型名称，用于在仿真的其他部分中唯一标识此模型。&lt;/li&gt;
&lt;li&gt;TYPE：指定设备的类型。常见类型包括MOSFET的NMOS和PMOS，双极结型晶体管的NPN和PNP，二极管的D等。&lt;/li&gt;
&lt;li&gt;PNAME1, PNAME2, ...：这些是针对所建模设备类型的参数名称。&lt;/li&gt;
&lt;li&gt;PVAL1, PVAL2, ...：每个参数的对应值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MODEL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;MYMNAME&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;NMOS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;LEVEL&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;VTO&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="m m-Double"&gt;2.0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;KP&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="nx"&gt;U&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;W&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="nx"&gt;U&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;U&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;这定义了一个NMOS型号为M1的模型，指定了多个物理参数。&lt;/p&gt;
&lt;p&gt;定义好之后，可以通过原件类型M使用它。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;M1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;MYMNAME&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;这里，M1 是NMOS晶体管的实例，1、2、3、4是连接节点（分别是栅极、漏极、源极和衬底），MNMOS是之前定义的模型。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：区分SPICE模型于IBIS模型。不同于 SPICE模型是一种基于文本的行为模型，SPICE仿真器使用这种模型通过数学运算预测器件在不同条件下的行为。IBIS是Input/Output Buffer Information Specification（输入/输出缓冲器信息规范）的首字母缩写。它是一种行为模型，描述器件的数字输入和输出缓冲器的模拟行为。它由表格数据组成，描述数字缓冲器内元器件的电流-电压(I-V)关系，以及输出或I/O缓冲器的电压随时间变化的(V-t)开关特性。它用于在制造之前对系统板进行信号完整性分析，并以纯ASCII文本格式的数据呈现。它不披露任何专有信息，因为IBIS模型就像一个黑盒模型，不包含可逆向工程的内部信息。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_13"&gt;子电路&lt;/h3&gt;
&lt;p&gt;子电路在 SPICE 中是通过 .SUBCKT 语句定义的，其结构允许将一组电路元件封装成单一的实体。定义子电路的基本语法如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;.SUBCKT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;子电路名&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;输入端口节点&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;输出端口节点&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;其他端口节点&lt;/span&gt;&lt;span class="no"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="na"&gt;...&lt;/span&gt;&lt;span class="err"&gt;（电路元件描述）&lt;/span&gt;
&lt;span class="na"&gt;.ENDS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;lt;子电路名&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;.ENDS 后面的子电路名可以省略。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;子电路的调用就像使用任何其他内置元件一样。调用子电路的语法通常如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;X&amp;lt;名称&amp;gt; &amp;lt;连接节点列表&amp;gt; &amp;lt;子电路名&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;定义子电路OPAMP&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="nx"&gt;端口分配&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;输入&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;输入&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;输出&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SUBCKT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;OPAMP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="nx"&gt;Rin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;
&lt;span class="nx"&gt;G1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;
&lt;span class="nx"&gt;Rout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ENDS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;OPAMP&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;调用子电路OPAMP&lt;/span&gt;
&lt;span class="nx"&gt;XU1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;OPAMP&lt;/span&gt;
&lt;span class="nx"&gt;V1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;DC&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nx"&gt;Rload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;OPAMP 是子电路的名称，1, 2, 3 是端口节点。内部包含了输入电阻 Rin，一个控制源 G1 和输出电阻 Rout。&lt;/li&gt;
&lt;li&gt;XU1 表示一个子电路实例，连接到节点 1, 0, 和 2。OPAMP 是调用的子电路名称。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_14"&gt;文件包含&lt;/h3&gt;
&lt;p&gt;.INCLUDE 语句的基本语法如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;.INCLUDE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;文件路径&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="na"&gt;.INCLUDE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;文件路径2&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;文件路径是要引入文件的完整或相对路径。使用双引号（"）或单引号（'）均可用来包围文件路径。&lt;/p&gt;
&lt;p&gt;非标准的 .LIB，在一些SPICE中，用于导入第三方库。比如ngspice中：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;LIB filename libname
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_15"&gt;函数&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;SPICE 提供了多种内置函数，函数可以在 SPICE 仿真中用于不同的目的，包括定义复杂的源特性、控制电路行为，以及分析和优化电路性能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;数学函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;abs(x)&lt;/strong&gt; - 返回 x 的绝对值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sqrt(x)&lt;/strong&gt; - 返回 x 的平方根。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;exp(x)&lt;/strong&gt; - 计算 e 的 x 次方。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;log(x)&lt;/strong&gt; - 计算 x 的自然对数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sin(x)&lt;/strong&gt; - 计算 x 的正弦值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cos(x)&lt;/strong&gt; - 计算 x 的余弦值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tan(x)&lt;/strong&gt; - 计算 x 的正切值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;asin(x)&lt;/strong&gt; - 计算 x 的反正弦值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;acos(x)&lt;/strong&gt; - 计算 x 的反余弦值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;atan(x)&lt;/strong&gt; - 计算 x 的反正切值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sinh(x)&lt;/strong&gt; - 计算 x 的双曲正弦值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cosh(x)&lt;/strong&gt; - 计算 x 的双曲余弦值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tanh(x)&lt;/strong&gt; - 计算 x 的双曲正切值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逻辑和条件函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;if(cond, then_expr, else_expr)&lt;/strong&gt; - 根据条件 &lt;code&gt;cond&lt;/code&gt; 返回 &lt;code&gt;then_expr&lt;/code&gt; 或 &lt;code&gt;else_expr&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sgn(x)&lt;/strong&gt; - 返回 x 的符号，正数为1，负数为-1，零为0。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;u(x)&lt;/strong&gt; - 单位阶跃函数，x 大于0时返回1，否则返回0。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;特殊电路分析函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;limit(x, min, max)&lt;/strong&gt; - 将 x 限制在 min 和 max 之间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pow(x, y)&lt;/strong&gt; - 计算 x 的 y 次幂。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;min(x, y)&lt;/strong&gt; - 返回 x 和 y 中的最小值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;max(x, y)&lt;/strong&gt; - 返回 x 和 y 中的最大值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 SPICE 及其许多变体中，.func 指令用于定义用户自定义的数学函数，这些函数可以在电路描述中被重用。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;函数名&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;参数&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;参数&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;参数&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;表达式&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="spice_1"&gt;SPICE 解算器?&lt;/h2&gt;
&lt;p&gt;SPICE使用数值积分方法来求解由网表定义的电路方程。这些方程通常是非线性微分方程。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;节点分析&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;基于节点电压法，将电路转化为节点电压方程。利用基尔霍夫电流定律（KCL）构建方程。
2. &lt;strong&gt;稀疏矩阵技术&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;由于电路方程组通常是稀疏的，SPICE 使用稀疏矩阵存储和操作数据，以节省内存和提高计算速度。
3. &lt;strong&gt;牛顿-拉夫森迭代法&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;用于求解非线性电路方程。通过线性化非线性方程并反复迭代逼近求解。&lt;/li&gt;
&lt;li&gt;每次迭代计算雅可比矩阵，并求解线性方程组。
4. &lt;strong&gt;瞬态分析&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;使用梯形积分法和向后欧拉法进行时间步进，模拟电路的动态行为。&lt;/li&gt;
&lt;li&gt;梯形法稳定性高，适合大多数电路仿真。
5. &lt;strong&gt;直流分析&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;计算电路在直流稳态下的行为。通过迭代求解节点电压，确定稳态电流和电压。
6. &lt;strong&gt;交流分析&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;通过线性化电路，使用小信号模型进行频域分析。&lt;/li&gt;
&lt;li&gt;计算电路的增益、相位等频率响应特性。
7. ...&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_16"&gt;杂项&lt;/h2&gt;
&lt;h3 id="_17"&gt;命令行&lt;/h3&gt;
&lt;p&gt;SPICE有交互式模式、批处理模式以及server模式。不过直接手动编辑spice文件的场景应该挺少了，都是通过GUI界面绘制电路图。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于ngspice来说，其他软件还可以直接使用其动态库，比如KiCAD。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="ngspice"&gt;ngspice 行为&lt;/h3&gt;
&lt;p&gt;ngspice源自spice3f5，远远不像其他商业版本进化那么快。通过 ngbehavior 来模拟一些兼容行为&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;set ngbehavior=ltpsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;注意写法，这些都是Flag！可以多个同时使用的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Flag&lt;/th&gt;
&lt;th&gt;Short Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A complete netlist transformed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ps&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;PSPICE compatibility&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;HSPICE compatibility&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;spe&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Spectre compatibility&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lt&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;LTSPICE compatibility&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Spice3 compatibility&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;All (currently not used)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ki&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;KiCad compatibility&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eg&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;EAGLE compatibility&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;For 'make check' (test environments)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_18"&gt;模型导入&lt;/h3&gt;
&lt;p&gt;在实际中，由于同一个型号的半导体器件，可能由多个半导体制造商生产，尽管他们基本的电气特性可能相似，但是细节上还有差异。比如 1N4148 是一种非常普遍的开关二极管，但是各个仿真软件因为使用不同厂家的器件，造成参数不同。有时需要手动导入仿真软件没有提供的器件模型&lt;/p&gt;
&lt;p&gt;模型可以是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过 &lt;code&gt;.MODEL&lt;/code&gt; 使用内置模型，只是修改一下参数&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;.subckt&lt;/code&gt; 定义新的使用各个内置模型创建的子电路&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;直接编辑spice文件的话，使用 &lt;code&gt;.include&lt;/code&gt;似乎就够了，但是在GUI下，需要编辑器件（对应好引脚，这样电路图和仿真模型才能对应）&lt;/p&gt;
&lt;p&gt;对于Kicad(NGSpice)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://docs.kicad.org/8.0/en/eeschema/eeschema.html#assigning_models&lt;/li&gt;
&lt;li&gt;https://ngspice.sourceforge.io/ngspice-eeschema.html#OpAmp1641&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于LTSpice&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.analog.com/en/resources/technical-articles/ltspice-simple-steps-to-import-third-party-models.html"&gt;LTspice: Simple Steps to Import Third-Party Models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;https://ieee.li/pdf/viewgraphs/ltspice_importing_third_party_models.pdf&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于MutiSim&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://knowledge.ni.com/KnowledgeArticleDetails?id=kA03q000000YH5fCAG&amp;amp;l=zh-CN"&gt;在NI Multisim中创建自定义组件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://knowledge.ni.com/KnowledgeArticleDetails?id=kA03q000000YIN6CAO&amp;amp;l=zh-CN"&gt;在没有组件向导的情况下将SPICE模型导入Multisim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_19"&gt;在线仿真网站&lt;/h2&gt;
&lt;p&gt;有一堆在线网站，后台是否和spice有关不清楚&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;multisim live（商业，收费）：https://www.multisim.com/&lt;/li&gt;
&lt;li&gt;easyeda（国产，免费，后台使用ngspice）：https://easyeda.com/&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;circuitlab: https://www.circuitlab.com/&lt;/li&gt;
&lt;li&gt;everycircuit： https://everycircuit.com/&lt;/li&gt;
&lt;li&gt;circuitverse：https://circuitverse.org/simulator&lt;/li&gt;
&lt;li&gt;falsted:  https://www.falstad.com/circuit/&lt;/li&gt;
&lt;li&gt;circuitjs：https://lushprojects.com/circuitjs/&lt;/li&gt;
&lt;li&gt;dcalab：https://dcaclab.com/&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_20"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/SPICE&lt;/li&gt;
&lt;li&gt;http://www.ecircuitcenter.com/SpiceTopics/History.htm&lt;/li&gt;
&lt;li&gt;http://www.ecircuitcenter.com/SPICEsummary.htm&lt;/li&gt;
&lt;li&gt;https://web.archive.org/web/20090928075648/http://newton.ex.ac.uk/teaching/CDHW/Electronics2/userguide/sec2.html&lt;/li&gt;
&lt;li&gt;https://www.altium.com/documentation/knowledge-base/altium-designer/understand-spice-models-supported-in-altium&lt;/li&gt;
&lt;li&gt;https://ngspice.sourceforge.io/ngspice-eeschema.html&lt;/li&gt;
&lt;li&gt;https://ngspice.sourceforge.io/resources.html&lt;/li&gt;
&lt;li&gt;https://xyce.sandia.gov/&lt;/li&gt;
&lt;li&gt;https://people.eecs.berkeley.edu/~boser/courses/40/software/MultiSim-Tutorial.pdf&lt;/li&gt;
&lt;li&gt;https://www.tina.com/&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/TINA_(program)&lt;/li&gt;
&lt;li&gt;https://ngspice.sourceforge.io/resources.html&lt;/li&gt;
&lt;li&gt;https://p.qorvo.com/qspice-simulator.html&lt;/li&gt;
&lt;li&gt;http://www.intusoft.com/icap.htm&lt;/li&gt;
&lt;li&gt;https://ngspice.sourceforge.io/docs/ngspice-42-manual.pdf&lt;/li&gt;
&lt;li&gt;https://m.elecfans.com/article/1925576.html&lt;/li&gt;
&lt;li&gt;https://www.analog.com/en/resources/analog-dialogue/articles/spice-vs-ibis-choosing-the-more-appropriate-model-for-your-circuit.html&lt;/li&gt;
&lt;li&gt;http://www.wrcad.com/manual/wrsmanual/wrsmanual.html&lt;/li&gt;
&lt;li&gt;https://xschem.sourceforge.io/stefan/index.html&lt;/li&gt;
&lt;/ul&gt;</content><category term="CAx"></category></entry><entry><title>步进电机小记</title><link href="https://blog.debao.me/2024/08/notes-on-step-motors/" rel="alternate"></link><published>2024-08-15T15:36:00+08:00</published><updated>2024-08-15T15:36:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-08-15:/2024/08/notes-on-step-motors/</id><summary type="html">&lt;p&gt;步进电机是一种能够将电脉冲信号转换为精确角位移的电机。有三类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;永磁步进电机（Permanent Magnet Stepper Motor）：使用永久磁铁作为转子。扭 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;步进电机是一种能够将电脉冲信号转换为精确角位移的电机。有三类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;永磁步进电机（Permanent Magnet Stepper Motor）：使用永久磁铁作为转子。扭矩较大，适合低速应用。&lt;/li&gt;
&lt;li&gt;可变磁阻步进电机（Variable Reluctance Stepper Motor）：转子由软铁材料制成，没有永磁体。结构简单，成本低。&lt;/li&gt;
&lt;li&gt;混合式步进电机（Hybrid Synchronous Stepper Motor）：结合永磁和可变磁阻的优点。提供高精度和高扭矩，是最常用的类型。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下主要关注混合式步进电机。&lt;/p&gt;
&lt;h2 id="_1"&gt;混合式步进电机&lt;/h2&gt;
&lt;p&gt;结构：&lt;/p&gt;
&lt;p&gt;&lt;img alt="step motor" src="https://blog.debao.me/images/motor/stepmotor.png"&gt;&lt;/p&gt;
&lt;p&gt;混合式步进电机的转子结构为两个导磁圆盘中间夹着一个永磁圆柱体轴向串在一起，两个导磁圆盘的外圆齿节距相同，其两个圆盘的齿错开1/2齿距安装，转子中圆柱永磁体沿轴向充磁，一段为N，另一端为S。&lt;/p&gt;
&lt;p&gt;对一个典型的2相步进电机：&lt;/p&gt;
&lt;p&gt;&lt;img alt="2phase angle" src="https://blog.debao.me/images/motor/stepmotor-2phase-angle.png"&gt;&lt;/p&gt;
&lt;h3 id="25"&gt;2相与5相&lt;/h3&gt;
&lt;p&gt;典型情况下，2相与5相步进电机，转子都是50个齿。2相电机，定子有8个磁极；5相电机，定子有10个磁极。&lt;/p&gt;
&lt;p&gt;&lt;img alt="2 v 5 step motor" src="https://blog.debao.me/images/motor/2-v-5-phase-stepper-motor-cutaway.jpg"&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;2相步进电机&lt;/th&gt;
&lt;th&gt;5相步进电机&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;结构&lt;/td&gt;
&lt;td&gt;简单&lt;/td&gt;
&lt;td&gt;复杂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;成本&lt;/td&gt;
&lt;td&gt;较低&lt;/td&gt;
&lt;td&gt;较高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;步距角&lt;/td&gt;
&lt;td&gt;1.8度（每步）&lt;/td&gt;
&lt;td&gt;0.72度（每步）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;扭矩输出&lt;/td&gt;
&lt;td&gt;较低&lt;/td&gt;
&lt;td&gt;较高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;运行平滑度&lt;/td&gt;
&lt;td&gt;振动较大&lt;/td&gt;
&lt;td&gt;运行更平滑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;控制电路&lt;/td&gt;
&lt;td&gt;简单&lt;/td&gt;
&lt;td&gt;复杂&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_2"&gt;驱动模式&lt;/h3&gt;
&lt;p&gt;步进电机需要使用运动控制卡、驱动器进行控制。通过脉冲信号的数量和频率可控制位置和速度。&lt;/p&gt;
&lt;p&gt;&lt;img alt="stepmotor-drive" src="https://blog.debao.me/images/motor/stepmotor-2phase-pulses.png"&gt;&lt;/p&gt;
&lt;p&gt;对2相步进电机，驱动模式主要包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单相驱动（Wave Drive）：每次只通电一个线圈。简单但扭矩较低。&lt;/li&gt;
&lt;li&gt;两相驱动（Full Step）：同时通电两个线圈。提供更高的扭矩。&lt;/li&gt;
&lt;li&gt;半步驱动（Half Step）：交替通电一个或两个线圈。提高分辨率，运行更平滑。&lt;/li&gt;
&lt;li&gt;微步驱动（Microstep）：将电流分为更小的步进。实现更高的精度和平滑度。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="stepmotor-drive" src="https://blog.debao.me/images/motor/stepmotor-drive.png"&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Stepper_motor&lt;/li&gt;
&lt;li&gt;https://www.moonsindustries.com/article/basic-structure-and-operating-principle-of-stepper-motor&lt;/li&gt;
&lt;li&gt;https://www.orientalmotor.com/stepper-motors/technology/2-phase-vs-5-phase-stepper-motors.html&lt;/li&gt;
&lt;li&gt;https://www.orientalmotor.com/stepper-motors/technology/stepper-motor-basics.html&lt;/li&gt;
&lt;li&gt;https://haokan.baidu.com/v?pd=wisenatural&amp;amp;vid=14005628814363889303&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tools"></category></entry><entry><title>电机小记</title><link href="https://blog.debao.me/2024/08/notes-on-electric-motors/" rel="alternate"></link><published>2024-08-14T23:10:00+08:00</published><updated>2024-08-14T23:10:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-08-14:/2024/08/notes-on-electric-motors/</id><summary type="html">&lt;p&gt;电机（Electric Motor）是一种将电能转换成机械能的设备，也被称为马达，是Motor的音译。&lt;/p&gt;
&lt;h2 id="_1"&gt;一些术语？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;定子（Stator）：固定部分，包含绕组。&lt;/li&gt;
&lt;li&gt;转子（Rotor）：旋转部分，连 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;电机（Electric Motor）是一种将电能转换成机械能的设备，也被称为马达，是Motor的音译。&lt;/p&gt;
&lt;h2 id="_1"&gt;一些术语？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;定子（Stator）：固定部分，包含绕组。&lt;/li&gt;
&lt;li&gt;转子（Rotor）：旋转部分，连接负载。&lt;/li&gt;
&lt;li&gt;转矩（Torque）：旋转力。&lt;/li&gt;
&lt;li&gt;转速（Speed）：旋转速度，以RPM表示。&lt;/li&gt;
&lt;li&gt;反馈（Feedback）：监控电机状态的信号。&lt;/li&gt;
&lt;li&gt;编码器（Encoder）：提供位置或速度反馈的传感器。&lt;/li&gt;
&lt;li&gt;闭环控制（Closed-loop Control）：使用反馈调整输出。&lt;/li&gt;
&lt;li&gt;开环控制（Open-loop Control）：无反馈的控制方式。&lt;/li&gt;
&lt;li&gt;驱动器（Driver）：控制电机运行的设备。&lt;/li&gt;
&lt;li&gt;PWM（脉宽调制）：控制速度和转矩的技术。&lt;/li&gt;
&lt;li&gt;额定电压（Rated Voltage）：设计运行电压。&lt;/li&gt;
&lt;li&gt;额定电流（Rated Current）：额定负载下的电流。&lt;/li&gt;
&lt;li&gt;额定功率（Rated Power）：最大输出功率。&lt;/li&gt;
&lt;li&gt;启动转矩（Starting Torque）：启动时的转矩。&lt;/li&gt;
&lt;li&gt;转差（Slip）：转子转速与同步转速的差异。&lt;/li&gt;
&lt;li&gt;惯量（Inertia）：抵抗加速或减速的性质。&lt;/li&gt;
&lt;li&gt;电枢（Armature）：产生电磁力的部分。&lt;/li&gt;
&lt;li&gt;堵转电流（Stall Current）：转子阻止转动时的电流。&lt;/li&gt;
&lt;li&gt;换向器（Commutator）：反转电流方向的装置。&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;缩写&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;PMSM：permanent-magnet synchronous motor&lt;/li&gt;
&lt;li&gt;BLDC：brushless DC electric motor&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;VFD：Variable-frequency drive&lt;/li&gt;
&lt;li&gt;FOC：Field-oriented control&lt;/li&gt;
&lt;li&gt;DTC：Direct torque control&lt;/li&gt;
&lt;li&gt;MPC：Model predictive control&lt;/li&gt;
&lt;li&gt;SVPWM：Space Vector Pulse Width Modulation&lt;/li&gt;
&lt;li&gt;PI：Proportional-integral&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;分类？&lt;/h2&gt;
&lt;p&gt;电机在生活中无处不在，种类繁多... 查查资料，简单整理一下&lt;/p&gt;
&lt;h3 id="_4"&gt;直流电机、交流电机&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;直流电机（DC motor）：直流电驱动的电机。常说的直流电机指代有刷电机（Brushed DC electric motor）。&lt;/li&gt;
&lt;li&gt;交流电机（AC motor）：交流电驱动的电机。交流电可以控制电流和磁场方向，可以不用电刷。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;广义的直流电机，可以包括：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;直流有刷电机&lt;/th&gt;
&lt;th&gt;直流无刷电机&lt;/th&gt;
&lt;th&gt;开关磁阻电机&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;结构&lt;/td&gt;
&lt;td&gt;有电刷和换向器&lt;/td&gt;
&lt;td&gt;无电刷，电子换向&lt;/td&gt;
&lt;td&gt;简单结构，无电刷&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;控制&lt;/td&gt;
&lt;td&gt;简单&lt;/td&gt;
&lt;td&gt;复杂，需要控制器&lt;/td&gt;
&lt;td&gt;复杂，需要控制器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;维护&lt;/td&gt;
&lt;td&gt;需定期更换电刷&lt;/td&gt;
&lt;td&gt;低维护&lt;/td&gt;
&lt;td&gt;低维护&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;效率&lt;/td&gt;
&lt;td&gt;较低&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;td&gt;中等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;噪音&lt;/td&gt;
&lt;td&gt;中等&lt;/td&gt;
&lt;td&gt;低&lt;/td&gt;
&lt;td&gt;较大&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;转子&lt;/td&gt;
&lt;td&gt;缠绕线圈&lt;/td&gt;
&lt;td&gt;永磁体&lt;/td&gt;
&lt;td&gt;无磁体（软磁材料）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;定子&lt;/td&gt;
&lt;td&gt;永磁体或线圈&lt;/td&gt;
&lt;td&gt;缠绕线圈&lt;/td&gt;
&lt;td&gt;缠绕线圈&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;步进电机（stepper motor、step motor）是直流无刷电机的一种。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="_5"&gt;步进电机&lt;/h4&gt;
&lt;p&gt;步进电机采用开回路（open-loop)处理，不依赖出传感器或编码器，不需要位置检出和速度检出的回馈，可以脉冲信号进行运动。&lt;/p&gt;
&lt;p&gt;步进电机有三种，混合式比较常见。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;永磁步进电机（PM）&lt;/th&gt;
&lt;th&gt;反应式步进电机（VR）&lt;/th&gt;
&lt;th&gt;混合式步进电机（HB）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;特点&lt;/td&gt;
&lt;td&gt;使用永磁体，步距角较大&lt;/td&gt;
&lt;td&gt;无永久磁场，依靠磁阻变化&lt;/td&gt;
&lt;td&gt;结合永磁和反应式优点，精度高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;转子&lt;/td&gt;
&lt;td&gt;永磁体&lt;/td&gt;
&lt;td&gt;软铁材料&lt;/td&gt;
&lt;td&gt;永磁体与软铁组合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;定子&lt;/td&gt;
&lt;td&gt;缠绕线圈&lt;/td&gt;
&lt;td&gt;缠绕线圈&lt;/td&gt;
&lt;td&gt;缠绕线圈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;精度&lt;/td&gt;
&lt;td&gt;中等&lt;/td&gt;
&lt;td&gt;较低&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;扭矩&lt;/td&gt;
&lt;td&gt;较低&lt;/td&gt;
&lt;td&gt;较低&lt;/td&gt;
&lt;td&gt;较高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;复杂性&lt;/td&gt;
&lt;td&gt;简单&lt;/td&gt;
&lt;td&gt;简单&lt;/td&gt;
&lt;td&gt;复杂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;应用&lt;/td&gt;
&lt;td&gt;低成本、简单应用&lt;/td&gt;
&lt;td&gt;精度较低，适合基本定位&lt;/td&gt;
&lt;td&gt;高精度、高性能应用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;混合式步进电机有2相、3相、5相。其中2相电机步距角1.8°。&lt;/p&gt;
&lt;p&gt;&lt;img alt="step motor" src="https://blog.debao.me/images/motor/stepmotor.png"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;脉冲数决定了旋转角度，脉冲频率决定了旋转速度。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_6"&gt;同步电机、异步电机（感应电机）&lt;/h3&gt;
&lt;p&gt;同步电机（Synchronous Motor）和异步电机（Induction Motor）都是交流电机。它们都使用交流电源来运行，但在结构和工作原理上有所不同。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;同步电机&lt;/th&gt;
&lt;th&gt;异步电机（感应电机）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;转速&lt;/td&gt;
&lt;td&gt;与电源频率同步&lt;/td&gt;
&lt;td&gt;低于电源频率&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;效率&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;td&gt;略低&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;结构&lt;/td&gt;
&lt;td&gt;需要外部励磁（永磁或电枢）&lt;/td&gt;
&lt;td&gt;无需外部励磁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;启动&lt;/td&gt;
&lt;td&gt;较复杂&lt;/td&gt;
&lt;td&gt;简单&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;转子&lt;/td&gt;
&lt;td&gt;永磁体或励磁绕组&lt;/td&gt;
&lt;td&gt;鼠笼式或绕线式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;定子&lt;/td&gt;
&lt;td&gt;缠绕线圈&lt;/td&gt;
&lt;td&gt;缠绕线圈&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="_7"&gt;单相电机、三相电机&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;单相电机&lt;/th&gt;
&lt;th&gt;三相电机&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;电源类型&lt;/td&gt;
&lt;td&gt;单相交流&lt;/td&gt;
&lt;td&gt;三相交流&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;结构&lt;/td&gt;
&lt;td&gt;简单&lt;/td&gt;
&lt;td&gt;复杂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;启动扭矩&lt;/td&gt;
&lt;td&gt;低，需要启动装置&lt;/td&gt;
&lt;td&gt;高，不需启动装置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;效率&lt;/td&gt;
&lt;td&gt;较低&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;定子&lt;/td&gt;
&lt;td&gt;单相绕组&lt;/td&gt;
&lt;td&gt;三相绕组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;转子&lt;/td&gt;
&lt;td&gt;鼠笼式&lt;/td&gt;
&lt;td&gt;鼠笼式或绕线式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img alt="3phase motor" src="https://blog.debao.me/images/motor/motor-3phase.gif"&gt;&lt;/p&gt;
&lt;p&gt;根据转子结构不同，三相电机有：鼠笼式电机（Squirrel Cage Motor）和 绕线式（Wound Rotor Motor）&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;鼠笼式电机&lt;/th&gt;
&lt;th&gt;绕线式电机&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;结构&lt;/td&gt;
&lt;td&gt;转子由导条和短路环组成&lt;/td&gt;
&lt;td&gt;转子有绕组，连接滑环&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;维护&lt;/td&gt;
&lt;td&gt;维护方便，无需电刷&lt;/td&gt;
&lt;td&gt;需要滑环和电刷维护&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;启动特性&lt;/td&gt;
&lt;td&gt;启动电流大，转矩低&lt;/td&gt;
&lt;td&gt;启动转矩高，可调电阻&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;复杂性&lt;/td&gt;
&lt;td&gt;结构简单&lt;/td&gt;
&lt;td&gt;结构较复杂&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img alt="squirrel cage motor" src="https://blog.debao.me/images/motor/3motors_2.webp"&gt;&lt;/p&gt;
&lt;h3 id="_8"&gt;伺服电机&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;伺服电机（Servomotor、Servo）不是特定类别的电机，尽管“伺服电机”这一术语通常用于指适用于闭环控制系统的电机。伺服电机是一个电机系统，它包含电机、传感器和控制器，使伺服电机能够实现精确的闭环控制。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;编码器的使用是伺服电机的关键特征之一，但并非所有伺服电机都一定内置编码器，某些系统可能采用外部传感器。&lt;/p&gt;
&lt;p&gt;提到伺服电机，经常遇到一个名词：舵机。&lt;/p&gt;
&lt;h4 id="_9"&gt;舵机&lt;/h4&gt;
&lt;p&gt;“舵机” 其实是一个俗称，是玩航模、船模的人起的名字，因为这种电机常被用于舵面控制。舵机其实就是一个低端一点的伺服电机系统。舵机可以分为模拟舵机和数字舵机。&lt;/p&gt;
&lt;p&gt;舵机内部包含：一个小型直流电机，电位计，和一个控制电路。电机通过齿轮与控制轮相连，工作时，传入电信号，电机旋转时，电位计的电阻会发生变化，控制电路通过电阻变化来精确调节转动的角度，当输出轴角度位置恰好处于需要控制的位置时，电机停止转动。&lt;/p&gt;
&lt;p&gt;&lt;img alt="servo motor" src="https://blog.debao.me/images/motor/servomotor.png"&gt;&lt;/p&gt;
&lt;p&gt;舵机通常3根线：电源线，底线，控制信号线。如果控制信号线通过PWM进行控制，通过脉冲宽度（占空比）控制角度位置，脉冲宽度的变化变化控制运动速度。&lt;/p&gt;
&lt;h3 id="_10"&gt;永磁电机、励磁电机、感应电机&lt;/h3&gt;
&lt;p&gt;根据转子磁场产生方式和结构不同？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;永磁电机（Permanent Magnet Motor）：使用永久磁体。&lt;/li&gt;
&lt;li&gt;励磁电机（Electrically Excited Motor）：通过电流在绕组中产生磁场。&lt;/li&gt;
&lt;li&gt;感应电机（Induction Motor）：通过电磁感应产生磁场。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_11"&gt;直线电机、旋转电机&lt;/h3&gt;
&lt;p&gt;直线电机，也叫做线性电机（linear motor）是一种将&lt;strong&gt;电能&lt;/strong&gt;直接转换成&lt;strong&gt;直线运动机械能&lt;/strong&gt;而不需要任何中间转换机构的传动装置。不同于旋转电机，它不是产生扭矩（旋转），而是沿其长度产生直线力。它可以看成是一台旋转电机按径向剖开，并展成平面而成。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Linear motor" src="https://blog.debao.me/images/motor/linearmotorprinzip.png"&gt;&lt;/p&gt;
&lt;p&gt;直线电机种类基本与旋转电机对应&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;直线电机种类&lt;/th&gt;
&lt;th&gt;对应旋转电机种类&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;直线感应电机（LIM）&lt;/td&gt;
&lt;td&gt;感应电机（IM）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;直线同步电机（LSM）&lt;/td&gt;
&lt;td&gt;同步电机（SM）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;直线开关磁阻电机（LSRM）&lt;/td&gt;
&lt;td&gt;开关磁阻电机（SRM）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;直线步进电机（LSM）&lt;/td&gt;
&lt;td&gt;步进电机（SM）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_12"&gt;压电马达（压电陶瓷电机）&lt;/h2&gt;
&lt;p&gt;压电马达（piezoelectric motor、piezo motor）是一种利用压电效应驱动的电机，通过电压改变压电材料的形状来产生运动。&lt;/p&gt;
&lt;p&gt;压电马达大致可以分为三大类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;共振马达（超声波驱动器），resonance-motors (ultrasonic drives)&lt;/li&gt;
&lt;li&gt;惯性马达（粘滑原理），inertia-motors (stick-slip principle)&lt;/li&gt;
&lt;li&gt;压电步行驱动器。piezo-walk drives&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_13"&gt;共振马达&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;通过高频电压在压电材料中产生超声波振动，利用共振效应放大振动幅度，增加驱动力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;共振马达分为：行波马达和驻波马达。&lt;/p&gt;
&lt;h3 id="_14"&gt;惯性马达&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;惯性马达是一种利用压电效应和惯性原理进行运动的电机,通过快速的膨胀和收缩产生摩擦力，导致负载移动。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_15"&gt;压电步行马达&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;通过电压驱动压电材料，使其产生微小的机械运动。利用多个压电元件的协调动作，模拟步行方式推动负载。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="inchworm motor" src="https://blog.debao.me/images/motor/piezomotor_type_inchworm.gif"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="bimorph motor" src="https://blog.debao.me/images/motor/piezomotor_type_bimorph.gif"&gt;&lt;/p&gt;
&lt;h2 id="_16"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Electric_motor&lt;/li&gt;
&lt;li&gt;https://www.moonsindustries.com/article/basic-structure-and-operating-principle-of-stepper-motor&lt;/li&gt;
&lt;li&gt;https://en.wikipedia.org/wiki/Piezoelectric_motor&lt;/li&gt;
&lt;li&gt;https://www.pi-usa.us/en/tech-blog/overview-of-different-piezo-motor-design-principles&lt;/li&gt;
&lt;li&gt;https://www.163.com/dy/article/HEC3ISH505380ADU.html&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tools"></category></entry><entry><title>电子光学仿真软件小记</title><link href="https://blog.debao.me/2024/08/notes-on-electron-optical-simulation-softwares/" rel="alternate"></link><published>2024-08-13T19:13:00+08:00</published><updated>2024-08-13T19:13:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-08-13:/2024/08/notes-on-electron-optical-simulation-softwares/</id><summary type="html">&lt;p&gt;简单记录一下电子光学仿真软件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电磁场计算（FEM、DEM、BEM等）&lt;/li&gt;
&lt;li&gt;基于轨迹追踪的光学属性分析、优化&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="mebsmunros-electron-beam-software"&gt;MEBS（Munro's Electron Beam software）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Munro’s Electron Beam Software Ltd 是一 …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;简单记录一下电子光学仿真软件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电磁场计算（FEM、DEM、BEM等）&lt;/li&gt;
&lt;li&gt;基于轨迹追踪的光学属性分析、优化&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="mebsmunros-electron-beam-software"&gt;MEBS（Munro's Electron Beam software）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Munro’s Electron Beam Software Ltd 是一家成立于1991年的英国公司，创始人是Eric Munro、John rouse和Xieqing zhu。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上学期间，曾拜读过Munro先生在上世纪80年代用fortran 77编写的一阶有限元计算程序，一共有四个程序，其中E11用于静电透镜的电场分布计算，M11、M12、M13用于磁透镜的磁场计算：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;C&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;*****************************************&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;                                       &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;ERIC&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MUNRO&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ELECTRON&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LENS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PROGRAMS&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;IBM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;PC&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;VERSION&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;COPYRIGHT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;BY&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ERIC&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MUNRO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SEPT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1985&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;                                       &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;*****************************************&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;PROGRAM &lt;/span&gt;&lt;span class="n"&gt;M13&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;FINITE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ELEMENT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;PROGRAM &lt;/span&gt;&lt;span class="n"&gt;FOR&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;COMPUTING&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;AXIAL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FLUX&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DENSITY&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;DISTRIBUTIONS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;AND &lt;/span&gt;&lt;span class="n"&gt;VECTOR&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;POTENTIAL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DISTRIBUTIONS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;THROUGHOUT&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;THE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAGNETIC&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CIRCUITS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;OF&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SATURATED&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAGNETIC&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LENSES&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;MEBS 包含众多的软件包，可以大致分成几个系列：&lt;/p&gt;
&lt;h3 id="optics"&gt;OPTICS 系列&lt;/h3&gt;
&lt;p&gt;OPTICS 是核心软件包系列，用于由任意旋转对称透镜和偏转器构成的电子和离子光学镜筒的仿真和设计。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OPTICS：用于镜筒的模拟仿真，包含旋转对称透镜与偏转器的一阶有限元计算程序，aber象差分析程序等。&lt;/li&gt;
&lt;li&gt;REFINE与REFINE5：用于镜筒的优化&lt;/li&gt;
&lt;li&gt;DYNAMIC与DYNAMIC5：用于消象散器和动态聚焦透镜&lt;/li&gt;
&lt;li&gt;TOLERANCE：用于误差分析，比如生产或合轴过程中微小机械缺陷对象差影响。&lt;/li&gt;
&lt;li&gt;ABER5：五阶象差分析&lt;/li&gt;
&lt;li&gt;RB3与RB5：用于束流摇摆(rock)或倾斜（tilt）的分析&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="sources"&gt;SOURCES 系列&lt;/h3&gt;
&lt;p&gt;SOURCES系列用于电子源或离子源的仿真与设计。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SOURCES：只用于电子源和静电聚焦&lt;/li&gt;
&lt;li&gt;SOURCES-TOLERANCE：电子源误差分析&lt;/li&gt;
&lt;li&gt;SOURCE-MAGNETIC：用于包含磁聚焦的电子源设计&lt;/li&gt;
&lt;li&gt;SOURCE-CI：相较于SOURCES只考虑空间电荷效应，SOURCES-CI考虑带电粒子间的库伦相互作用（Coulomb Interactions）.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="image"&gt;IMAGE 系列&lt;/h3&gt;
&lt;p&gt;IMAGE系列使用直接轨迹追踪方式计算离散库伦相互作用和象差的综合效果。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IMAGE-LENS：用于旋转对称透镜系统的象差和离散库伦相互作用仿真。只支持旋转对称透镜。&lt;/li&gt;
&lt;li&gt;IMAGE：支持偏转器，多极透镜与韦恩过滤器。&lt;/li&gt;
&lt;li&gt;IMAGE-TOLERANCE：支持误差分析&lt;/li&gt;
&lt;li&gt;PARALLEL-IMAGE：支持并行计算以发挥多核CPU优势&lt;/li&gt;
&lt;li&gt;MIRROR-IMAGE：用于电子和离子镜(Mirror)的仿真。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="sofem"&gt;SOFEM 系列&lt;/h3&gt;
&lt;p&gt;SOFEM系列使用2阶(Second Order)有限元进行电磁场的计算与轨迹追踪。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SOFEM Field：用于静电场和磁场的仿真&lt;/li&gt;
&lt;li&gt;SOFEM Ray-Tracing：使用轨迹追踪计算电子轨迹并进行绘制&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="3d"&gt;3D 系列&lt;/h3&gt;
&lt;p&gt;3D系列用于三维电磁场的计算以及直接电子追踪和空间电荷计算分析。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3D Field：使用有限差分法进行三维静电场和磁场仿真&lt;/li&gt;
&lt;li&gt;3D Ray-Tracing：使用三维有限差分法进行轨迹追踪&lt;/li&gt;
&lt;li&gt;3D Space Charge：考虑空间电荷效应&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="wien"&gt;WIEN 系列&lt;/h3&gt;
&lt;p&gt;WIEN 系列用于设计包含Wien过滤器的镜筒，可以处理旋转对称透镜、多极透镜以及Wien过滤器。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WIEN：用于处理包含旋转对称透镜、多极透镜以及Wien过滤器的镜筒仿真。象差到3阶&lt;/li&gt;
&lt;li&gt;WIEN-REFINE：用于镜筒优化，象差到3阶&lt;/li&gt;
&lt;li&gt;WIEN-5：镜筒仿真，象差到5阶&lt;/li&gt;
&lt;li&gt;WIEN-REFINE-5：镜筒优化，象差到5阶&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="multipole"&gt;MULTIPOLE 系列&lt;/h3&gt;
&lt;p&gt;MULTIPOLE 系列用于仿真包含多极透镜和偏转器的镜筒。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MULTIPOLE：用于处理包含旋转对称透镜、多极透镜和偏转器的镜筒仿真。象差到3阶&lt;/li&gt;
&lt;li&gt;MULTIPOLE-REFINE：镜筒优化&lt;/li&gt;
&lt;li&gt;MULTIPOLE-TOLERANCE：镜筒误差分析，比如生产或合轴过程中微小机械缺陷对象差影响。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="curve"&gt;CURVE 系列&lt;/h3&gt;
&lt;p&gt;CURVE 系列用户曲光轴的光学系统的仿真。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FILTER：用于磁能量过滤器&lt;/li&gt;
&lt;li&gt;PRISM：用于模拟磁棱镜系统，象差到3阶&lt;/li&gt;
&lt;li&gt;CURVED IMAGE：曲光轴光学系统中的象差与库伦相互作用仿真。是IMAGE的扩展。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_1"&gt;其他&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;MIRROR：用于电子镜的仿真&lt;/li&gt;
&lt;li&gt;PROJECTION：用于模拟电子束投影系统，包括动态校正和高达五阶象差的优化。&lt;/li&gt;
&lt;li&gt;WAVE：用于计算电子束中的电流密度分布，考虑衍射、球差、色差等影响&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="eodelectron-optical-design"&gt;EOD（Electron Optical Design）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;EOD基于 Bohumila Lencova 编写的 SPOC 进行开发的。Bohumila Lencova当时就职于捷克科学院科学仪器研究所，并在代尔夫特理工大学做的访问科学家？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;EOD可用于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;复杂形状的饱和此透镜计算？&lt;/li&gt;
&lt;li&gt;静电透镜计算（含电介质）&lt;/li&gt;
&lt;li&gt;磁透镜中鞍形或环形偏转器计算&lt;/li&gt;
&lt;li&gt;多极静电或磁场&lt;/li&gt;
&lt;li&gt;静电透镜与磁透镜的误差分析&lt;/li&gt;
&lt;li&gt;包括象差系数在内的高精度的光学属性分析&lt;/li&gt;
&lt;li&gt;精确的轨迹追踪，优化&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="simion"&gt;SIMION&lt;/h2&gt;
&lt;p&gt;SIMION® 是用于带电粒子光学仿真的软件。它主要计算二维/三维静电场和某些磁场，并计算带电粒子在这些场中的轨迹。还支持四极场中的低频（准静态）场。通过用户编程功能，可以模拟碰撞模型和其他特殊效果。&lt;/p&gt;
&lt;p&gt;SIMION 最初由 David Dahl 在现今的爱达荷国家实验室开发，它现在由 Adaptas Solutions, LLC开发。 该仿真程序采用的方法包括通过有限差分法（优化的超松弛和多网格方法）直接求解所需的偏微分方程特别是拉普拉斯方程，以及通过龙格-库塔法求解常微分方程。&lt;/p&gt;
&lt;h2 id="cpocharged-particle-optics"&gt;CPO（Charged Particle Optics）&lt;/h2&gt;
&lt;p&gt;CPO软件提供精确的空间电荷和空间电荷限制阴极发射计算，通过边界元法 (BEM) 进行高精度场计算。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPO3D：2D、3D静电系统仿真&lt;/li&gt;
&lt;li&gt;CPO3DS：2D、3D静电系统仿真，包含阴极与空间电荷仿真&lt;/li&gt;
&lt;li&gt;CPO Complete：包含电解质、空间电荷等所有变体&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;CPO 32bit的程序可以免费下载使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="field-precision-llc"&gt;Field Precision LLC&lt;/h2&gt;
&lt;p&gt;Field Precision LLC 是一家专注于电磁场仿真和相关技术的软件开发公司。该公司成立于1989年，总部位于美国新墨西哥州阿尔伯克基。&lt;/p&gt;
&lt;p&gt;它提供3D仿真套件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HiPhi：静电场网格生成与数值分析&lt;/li&gt;
&lt;li&gt;Magnum：磁场网格生成与数值分析&lt;/li&gt;
&lt;li&gt;Aeter：频域与时域电磁场仿真&lt;/li&gt;
&lt;li&gt;OmniTrac：包含静电场、磁场数值分析与轨迹追踪等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以及2D仿真套件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静电场套件&lt;/li&gt;
&lt;li&gt;磁场套件&lt;/li&gt;
&lt;li&gt;轨迹追踪套件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="e-gunspace-charge-particle-optics"&gt;E-GUN（Space Charge Particle Optics）&lt;/h2&gt;
&lt;p&gt;EGUN 是一种世界著名的模拟工具，由斯坦福线性加速器中心（SLAC）的 Bill Herrmannsfeldt 开发，用于电子枪的数值模拟。&lt;/p&gt;
&lt;p&gt;它的主要产品包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EGUN（EGN2w）：电子枪和电子光学仿真&lt;/li&gt;
&lt;li&gt;IGUN：离子源和离子光学仿真&lt;/li&gt;
&lt;li&gt;INTMAG：磁透镜仿真&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="egun family" src="https://blog.debao.me/images/sem/egun-igun-family.jpg"&gt;&lt;/p&gt;
&lt;h2 id="inp"&gt;INP&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;INP 系列软件工具官网地址暂时不清楚，似乎与德国的 GSI Helmholtz Centre for Heavy Ion Research&lt;a href="https://www.gsi.de"&gt;（GSI 重离子研究中心）&lt;/a&gt;有关系，。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;INP 是一组模拟工具，专注于离子源提取、粒子束传输、温度和磁场计算，包含以下模块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AXCEL-INP：二维模拟粒子源和粒子束传输（轴对称或二维几何粒子行为分析），支持 ECR 离子源、激光离子源、电子枪。&lt;/li&gt;
&lt;li&gt;KOBRA3-INP：三维粒子源和粒子束模拟。支持等离子体模型和二次粒子计算，无对称性限制。&lt;/li&gt;
&lt;li&gt;MAGNET-INP：二维磁场计算，基于毕奥-萨伐尔法。输出磁场数据可用于前述 AXCEL-INP 和 KOBRA3-INP。&lt;/li&gt;
&lt;li&gt;DOT-INP：二维温度场计算，支持静态与瞬态解。可模拟热传导和热源影响下的温度分布。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="ibsimu"&gt;IBSimu&lt;/h2&gt;
&lt;p&gt;IBSimu 是一个&lt;strong&gt;开源&lt;/strong&gt;的离子束仿真软件（C++库），用于模拟电场和磁场中带电粒子的运动。该软件特别适用于离子源、加速器和其他涉及带电粒子束传输的应用。IBSimu 是由芬兰 于韦斯屈莱大学（University of Jyväskylä） 物理系开发的。&lt;/p&gt;
&lt;p&gt;见：&lt;a href="https://indico.cern.ch/event/129870/contributions/117701/attachments/89886/128681/pres.pdf"&gt;Ion Beam Simulator&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个一个C++库。直接提供C++源代码，门槛有点高。另外界面部分使用Gtk+，对Windows也不友好...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="comsol-multiphysics"&gt;COMSOL Multiphysics&lt;/h2&gt;
&lt;p&gt;COMSOL 也可以用电子光学的仿真，官方有不少blog和例程，比如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://www.comsol.com/blogs/modeling-a-pierce-electron-gun-in-comsol-multiphysics&lt;/li&gt;
&lt;li&gt;https://www.comsol.com/paper/electron-trajectories-in-scanning-field-emission-microscopy-52501&lt;/li&gt;
&lt;li&gt;https://www.comsol.com/model/magnetic-lens-10185&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="cst-particle-studio-cst-ps"&gt;CST Particle Studio (CST PS)&lt;/h2&gt;
&lt;p&gt;CST Studio Suite 由 Computer Simulation Technology (CST) 开发的高性能电磁场仿真软件。2016年被法国达索（Dassault Systèmes）收购，现在在达索的SIMULIA 品牌旗下。它包含多个模块，其中：&lt;/p&gt;
&lt;p&gt;CST PS专门用于带电粒子在电磁场中的运动仿真。非常适合用于粒子加速器、电子枪、X 射线管和其他涉及带电粒子束设备的设计与研究。&lt;/p&gt;
&lt;h2 id="opera"&gt;Opera&lt;/h2&gt;
&lt;p&gt;OPERA 的起源可以追溯到 1970 年代，由英国公司 Vector Fields 开发。Vector Fields 专注于开发用于静磁场和低频电磁场仿真的软件工具，目标是在那些需要高精度电磁场分析的领域提供有效的解决方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2005年，Vector Fields 被 Cobham 收购，成为其技术服务部门的一部分。&lt;/li&gt;
&lt;li&gt;2017 年，Dassault Systèmes收购了 Cobham 的一些业务，其中包括 OPERA 软件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Opera 是 Dassault Systèmes 的产品,用于电磁场和粒子轨迹的模拟和分析。&lt;/p&gt;
&lt;h2 id="gptgeneral-particle-tracer"&gt;GPT（General Particle Tracer）&lt;/h2&gt;
&lt;p&gt;GPT 是Pulsar Physics的主要产品，该公司专注于charged particle accelerator与beam line设计。&lt;/p&gt;
&lt;p&gt;GPT 基于完整的三维粒子追踪技术，为研究电磁场中带电粒子动力学的三维和非线性效应提供了坚实基础。&lt;/p&gt;
&lt;h2 id="_2"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://mebs.co.uk/&lt;/li&gt;
&lt;li&gt;https://www.lencova.com/&lt;/li&gt;
&lt;li&gt;https://simion.com/&lt;/li&gt;
&lt;li&gt;https://www.electronoptics.com/&lt;/li&gt;
&lt;li&gt;http://egun-igun.com/&lt;/li&gt;
&lt;li&gt;https://www.mswil.com/suppliers/adaptas/&lt;/li&gt;
&lt;li&gt;http://www.fieldp.com&lt;/li&gt;
&lt;li&gt;https://www.comsol.com/comsol-multiphysics&lt;/li&gt;
&lt;li&gt;https://www.3ds.com/products/simulia/opera&lt;/li&gt;
&lt;li&gt;https://www.pulsar.nl/gpt/&lt;/li&gt;
&lt;/ul&gt;</content><category term="CAx"></category></entry><entry><title>3D机械设计CAD软件小记</title><link href="https://blog.debao.me/2024/08/notes-on-3d-cad-softwares/" rel="alternate"></link><published>2024-08-09T00:44:00+08:00</published><updated>2024-08-09T00:44:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-08-09:/2024/08/notes-on-3d-cad-softwares/</id><summary type="html">&lt;p&gt;稍微整理一下&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;列个表&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_2"&gt;国外商业&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;开源&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#freecad"&gt;FreeCAD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#openscad"&gt;OpenSCAD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;国产&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#viewer"&gt;Viewer？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;三维几何内核？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#plm-vs-pdm"&gt;PLM vs PDM&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#plm"&gt;PLM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pdm"&gt;PDM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;缩写&lt;/th&gt;
&lt;th&gt;全称&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;代表软件？&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CAD&lt;/td&gt;
&lt;td&gt;Computer-Aided Design&lt;/td&gt;
&lt;td&gt;创建精确 …&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</summary><content type="html">&lt;p&gt;稍微整理一下&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;列个表&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_2"&gt;国外商业&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;开源&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#freecad"&gt;FreeCAD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#openscad"&gt;OpenSCAD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;国产&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#viewer"&gt;Viewer？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;三维几何内核？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#plm-vs-pdm"&gt;PLM vs PDM&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#plm"&gt;PLM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pdm"&gt;PDM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;缩写&lt;/th&gt;
&lt;th&gt;全称&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;代表软件？&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CAD&lt;/td&gt;
&lt;td&gt;Computer-Aided Design&lt;/td&gt;
&lt;td&gt;创建精确的2D和3D设计模型&lt;/td&gt;
&lt;td&gt;SolidWorks, AutoCAD&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CAE&lt;/td&gt;
&lt;td&gt;Computer-Aided Engineering&lt;/td&gt;
&lt;td&gt;模拟和分析产品性能&lt;/td&gt;
&lt;td&gt;ANSYS, Abaqus&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CAM&lt;/td&gt;
&lt;td&gt;Computer-Aided Manufacturing&lt;/td&gt;
&lt;td&gt;规划和控制制造过程&lt;/td&gt;
&lt;td&gt;Mastercam, Fusion 360&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CAQ&lt;/td&gt;
&lt;td&gt;Computer-Aided Quality&lt;/td&gt;
&lt;td&gt;质量管理和检测&lt;/td&gt;
&lt;td&gt;Q-DAS, Minitab&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CAPP&lt;/td&gt;
&lt;td&gt;Computer-Aided Process Planning&lt;/td&gt;
&lt;td&gt;制定制造工艺流程&lt;/td&gt;
&lt;td&gt;Siemens Tecnomatix, CAPPS&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;主要关注CAD&lt;/p&gt;
&lt;h2 id="_1"&gt;列个表&lt;/h2&gt;
&lt;h3 id="_2"&gt;国外商业&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;软件名称&lt;/th&gt;
&lt;th&gt;厂商&lt;/th&gt;
&lt;th&gt;别名或缩写&lt;/th&gt;
&lt;th&gt;特点&lt;/th&gt;
&lt;th&gt;适用领域&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SolidWorks&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Dassault Systèmes&lt;/td&gt;
&lt;td&gt;SW&lt;/td&gt;
&lt;td&gt;参数化建模，模拟功能强大&lt;/td&gt;
&lt;td&gt;机械设计、产品开发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AutoCAD&lt;/td&gt;
&lt;td&gt;Autodesk&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;经典CAD软件，支持2D和3D设计&lt;/td&gt;
&lt;td&gt;建筑、工程、制图&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Fusion&lt;/strong&gt; 360&lt;/td&gt;
&lt;td&gt;Autodesk&lt;/td&gt;
&lt;td&gt;F360&lt;/td&gt;
&lt;td&gt;云端平台，集成CAD、CAM、CAE&lt;/td&gt;
&lt;td&gt;合作设计、快速迭代&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Creo&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;PTC&lt;/td&gt;
&lt;td&gt;Pro/E（Pro/ENGINEER）&lt;/td&gt;
&lt;td&gt;参数化和直接建模功能&lt;/td&gt;
&lt;td&gt;产品设计和开发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;CATIA&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Dassault Systèmes&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;适用于复杂和高精度设计&lt;/td&gt;
&lt;td&gt;航空航天、汽车行业&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Inventor&lt;/td&gt;
&lt;td&gt;Autodesk&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;强大的仿真和可视化工具&lt;/td&gt;
&lt;td&gt;机械设计、3D建模&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;NX&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Siemens&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;UG&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;集成CAD、CAM、CAE，适合复杂设计&lt;/td&gt;
&lt;td&gt;复杂产品设计和工程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Solid Edge&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Siemens&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;参数化和同步建模功能&lt;/td&gt;
&lt;td&gt;中小型企业设计&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tinkercad&lt;/td&gt;
&lt;td&gt;Autodesk&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;3D 打印建模、简单电子设计 和 编程教学&lt;/td&gt;
&lt;td&gt;学生和教育工作者&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Onshape&lt;/td&gt;
&lt;td&gt;PTC&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;参数化建模 和 协作设计&lt;/td&gt;
&lt;td&gt;实时协作，云存储&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;Siemens NX 的前身是 Unigraphics。Unigraphics 是一款强大的 CAD/CAM/CAE 软件，由 Unigraphics Solutions 开发。Siemens 在 2007 年收购了 Unigraphics 的母公司 UGS，从而将 Unigraphics 整合为 Siemens NX。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;SolidWorks 的前身是由 Jon Hirschtick 于 1993 年创立的公司，目标是开发一款在 Windows 上运行的易用 3D CAD 软件。1995 年，推出了 SolidWorks 1.0，迅速受到欢迎。1997 年，Dassault Systèmes 收购了 SolidWorks。SolidWorks 使用 Parasolid 作为其几何建模内核。Parasolid 由 Siemens 开发，提供了稳定和精确的 3D 建模功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_3"&gt;开源&lt;/h3&gt;
&lt;h4 id="freecad"&gt;FreeCAD&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;https://www.freecad.org/&lt;/li&gt;
&lt;li&gt;支持参数化建模&lt;/li&gt;
&lt;li&gt;可扩展插件系统&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="openscad"&gt;OpenSCAD&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;https://openscad.org/&lt;/li&gt;
&lt;li&gt;侧重于编程生成的设计&lt;/li&gt;
&lt;li&gt;适合需要精确参数化的模型&lt;/li&gt;
&lt;li&gt;通过脚本语言进行建模&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;国产&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.zwsoft.cn/product/zw3d"&gt;中望3D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gstarcad.com/3d/"&gt;浩辰3D软件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;软件名称&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;特点&lt;/th&gt;
&lt;th&gt;应用领域&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;中望 3D&lt;/td&gt;
&lt;td&gt;参数化建模、曲面设计&lt;/td&gt;
&lt;td&gt;兼容性强，支持多种格式&lt;/td&gt;
&lt;td&gt;机械设计、模具设计&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;浩辰 3D&lt;/td&gt;
&lt;td&gt;3D建模、装配、工程图&lt;/td&gt;
&lt;td&gt;界面友好，易于上手&lt;/td&gt;
&lt;td&gt;建筑设计、工程应用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="viewer"&gt;Viewer？&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;软件名称&lt;/th&gt;
&lt;th&gt;厂家&lt;/th&gt;
&lt;th&gt;支持格式&lt;/th&gt;
&lt;th&gt;主要特点&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;JT2Go&lt;/td&gt;
&lt;td&gt;Siemens&lt;/td&gt;
&lt;td&gt;JT, 其他常见格式&lt;/td&gt;
&lt;td&gt;免费查看、标注、测量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eDrawings&lt;/td&gt;
&lt;td&gt;Dassault Systèmes&lt;/td&gt;
&lt;td&gt;SolidWorks, eDrawing&lt;/td&gt;
&lt;td&gt;查看和标注，支持多种文件格式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Autodesk Viewer&lt;/td&gt;
&lt;td&gt;Autodesk&lt;/td&gt;
&lt;td&gt;DWG, DXF, 其他格式&lt;/td&gt;
&lt;td&gt;在线查看，多格式支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FreeCAD&lt;/td&gt;
&lt;td&gt;开源社区&lt;/td&gt;
&lt;td&gt;多种CAD格式&lt;/td&gt;
&lt;td&gt;开源，支持查看和简单编辑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Blender&lt;/td&gt;
&lt;td&gt;开源社区&lt;/td&gt;
&lt;td&gt;OBJ, FBX, 3DS 等&lt;/td&gt;
&lt;td&gt;开源，3D查看和编辑功能&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_5"&gt;三维几何内核？&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;三维几何内核&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;所有者&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;CAD 产品&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;CGM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;法国 - 达索集团&lt;/td&gt;
&lt;td&gt;CATIA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ACIS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;美国 - Spatial 公司 (达索)&lt;/td&gt;
&lt;td&gt;Inventor（后使用 ShapeManager？）, Abaqus&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Parasolid&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;德国 - 西门子&lt;/td&gt;
&lt;td&gt;NX, SolidWorks, SolidEdge, ANSYS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Granite&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;美国 - PTC&lt;/td&gt;
&lt;td&gt;Creo（PRO/E）, Gibbs, Altair&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;C3D Molder&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;俄罗斯 - ASCON&lt;/td&gt;
&lt;td&gt;KOMPAS-3D, nanoCAD&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Overdrive&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;中国 - 中望软件&lt;/td&gt;
&lt;td&gt;中望3D, ZWMeshWorks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;CRUX IV&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;中国 - 华天软件&lt;/td&gt;
&lt;td&gt;SINOVATION&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;DGM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;中国 - 华云三维&lt;/td&gt;
&lt;td&gt;CrownCAD&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Open Cascade&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;法国 - CapGemini&lt;/td&gt;
&lt;td&gt;FreeCAD, AnyCAD&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="plm-vs-pdm"&gt;PLM vs PDM&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;如何对CAD设计的文件进行 版本管控和追踪，如何进行协作和共享...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;产品生命周期管理（PLM）和产品数据管理（PDM）是两个相关但不同的概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PDM：管理和组织产品数据，包括设计文档、版本控制、权限管理等。确保团队成员使用正确的版本，提高协作效率。&lt;/li&gt;
&lt;li&gt;PLM：涵盖产品从概念到退役的整个生命周期，包括设计、制造、服务等环节。PLM 包含 PDM 功能，但更关注整体流程和战略管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="plm"&gt;PLM&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Teamcenter：与 Siemens CAD 软件（如 NX、Solid Edge）集成良好。&lt;/li&gt;
&lt;li&gt;Windchill：与 PTC Creo 配合使用。&lt;/li&gt;
&lt;li&gt;Enovia：与 Dassault Systèmes 产品（如 CATIA、SolidWorks）集成。&lt;/li&gt;
&lt;li&gt;Autodesk Vault：适用于 Autodesk 产品（如 AutoCAD、Inventor）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="pdm"&gt;PDM&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;SolidWorks PDM：与 SolidWorks 紧密集成。&lt;/li&gt;
&lt;li&gt;Autodesk Vault：适用于 Autodesk 产品，如 AutoCAD 和 Inventor。&lt;/li&gt;
&lt;li&gt;Teamcenter Rapid Start：适用于 Siemens 的 CAD 软件。&lt;/li&gt;
&lt;li&gt;PTC Windchill PDM Essentials：与 Creo 集成。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_6"&gt;链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.edrawingsviewer.com/download-edrawings"&gt;Download eDrawings | eDrawings Viewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://viewer.autodesk.com/"&gt;Autodesk Viewer | Free Online File Viewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://plm.sw.siemens.com/en-US/plm-components/jt/jt2go/"&gt;JT2Go JT File Viewer | Siemens Software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="CAx"></category><category term="cad"></category></entry><entry><title>Qt公司的律师威胁信</title><link href="https://blog.debao.me/2024/07/legal-threat-letter-from-qt-s-attorney/" rel="alternate"></link><published>2024-07-10T00:11:00+08:00</published><updated>2024-07-10T00:11:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-07-10:/2024/07/legal-threat-letter-from-qt-s-attorney/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;哈哈哈，一直听过用Qt的LGPL版本会收到律师函，这次总算收到这个这东西啦，记录一下...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;扫描件&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;真不知道这律师从哪儿获取的信息，哪怕网上搜一下 …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;哈哈哈，一直听过用Qt的LGPL版本会收到律师函，这次总算收到这个这东西啦，记录一下...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;扫描件&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;真不知道这律师从哪儿获取的信息，哪怕网上搜一下都行啊。公司负责人写不对，地址也写不对，但竟然把我的手机号码整对了...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第一页
&lt;img alt="Page1" src="https://blog.debao.me/images/qt/legal-240705-page1.png"&gt;&lt;/p&gt;
&lt;p&gt;第二页
&lt;img alt="Page2" src="https://blog.debao.me/images/qt/legal-240705-page2.png"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;整篇文件只字不提LGPL，故意使用GPL进行混淆。要看看侵权的证据，竟然还需要现整理...（不应该是先有证据再发律师函吗？）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="WeChat" src="https://blog.debao.me/images/qt/legal-240705-wechat.png"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;整个感觉，似乎比骗子还业余...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="WeChat" src="https://blog.debao.me/images/qt/legal-240712-wechat.png"&gt;&lt;/p&gt;
&lt;h2 id="lgpl"&gt;如何使用LGPL？&lt;/h2&gt;
&lt;p&gt;回顾&lt;a href="https://blog.debao.me/2024/03/notes-on-qt-history/"&gt;Qt近些年的历史&lt;/a&gt;，十多年来，它一直在淡化LGPL协议的使用，不明确告诉大家——&lt;a href="https://blog.debao.me/zh/2015/04/obligations-of-the-lgpl/"&gt;使用LGPL授权的Qt开发商用程序的注意事项&lt;/a&gt;是什么反倒罢了，直接用律师函来威胁购买商业版，是什么逻辑...，实在有些想不通&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.qt.io/licensing/open-source-lgpl-obligations"&gt;Qt - Obligations of the GPL and LGPL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;其他&lt;/h2&gt;
&lt;h3 id="_3"&gt;术语&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Propagate
  传播：指任何你使软件可用的行为，包括复制、修改、发布等。传播是一个广义的术语，涵盖了软件的多种处理方式。&lt;/li&gt;
&lt;li&gt;Convey
  传送：指将程序提供给他人。传送是传播的一种具体形式，意味着将软件交付给另一方，无论是出售、赠送还是其他方式。&lt;/li&gt;
&lt;li&gt;Distribute
  分发：通常与传送类似，指将软件复制并提供给他人。GPL 中更多使用“传送”而不是“分发”来避免混淆。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;非“传送”&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;无论是GPL还是LGPL，在公司内部用都是没问题的（内部使用不是“传送/发布”）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;见：https://www.gnu.org/licenses/gpl-faq.zh-cn.html#InternalDistribution&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同事间拷贝GPL软件，只要是公司内使用，不属于“传送”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;见：https://www.gnu.org/licenses/gpl-faq.zh-cn.html#v3CoworkerConveying&lt;/p&gt;</content><category term="Legal"></category></entry><entry><title>劳动仲裁相关法律法规 小记</title><link href="https://blog.debao.me/2024/07/notes-on-labor-arbitration-related-laws-and-regulations/" rel="alternate"></link><published>2024-07-09T22:00:00+08:00</published><updated>2024-07-09T22:00:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-07-09:/2024/07/notes-on-labor-arbitration-related-laws-and-regulations/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;简单整理一下，万一有用呢...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生效的文件&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;废止的文件（特别注意，网上到处在引用失效的法律解释文件）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;《中华人民共和国劳动 …&lt;/h2&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;简单整理一下，万一有用呢...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生效的文件&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;废止的文件（特别注意，网上到处在引用失效的法律解释文件）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;《中华人民共和国劳动争议调解仲裁法》&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gov.cn/zhengce/2007-12/29/content_2602214.htm"&gt;中华人民共和国劳动争议调解仲裁法（主席令第八十号）_中华人民共和国中央人民政府门户网站&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;2007年12月29日第十届全国人民代表大会常务委员会 第三十一次会议通过&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;摘录：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第六条 发生劳动争议，当事人对自己提出的主张，有责任提供证据。&lt;strong&gt;与争议事项有关的证据属于用人单位掌握管理的，用人单位应当提供&lt;/strong&gt;；用人单位不提供的，应当承担不利后果。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;第七条 发生劳动争议的&lt;strong&gt;劳动者一方在十人以上&lt;/strong&gt;，并有共同请求的，可以推举代表参加调解、仲裁或者诉讼活动。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;第四十七条 下列劳动争议，除本法另有规定的外，仲裁裁决为终局裁决，裁决书自作出之日起发生法律效力：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（一）追索劳动报酬、工伤医疗费、经济补偿或者赔偿金，不超过当地月最低工资标准十二个月金额的争议； &lt;/p&gt;
&lt;h2 id="_2"&gt;《最高人民法院关于审理劳动争议案件适用法律若干问题的解释（一）》&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.court.gov.cn/fabu/xiangqing/282121.html"&gt;权威发布 - 中华人民共和国最高人民法院&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;2020年12月25日最高人民法院审判委员会 第1825次会议通过，自2021年1月1日起施行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;摘录&lt;/p&gt;
&lt;p&gt;第三十五条劳动者与用人单位就解除或者终止劳动合同办理相关手续、支付工资报酬、加班费、经济补偿或者赔偿金等达成的协议，不违反法律、行政法规的强制性规定，且&lt;strong&gt;不存在欺诈、胁迫或者乘人之危&lt;/strong&gt;情形的，应当认定有效。&lt;/p&gt;
&lt;p&gt;前款协议存在重大误解或者显失公平情形，当事人请求撤销的，人民法院应予支持。&lt;/p&gt;
&lt;p&gt;第四十六条劳动者&lt;strong&gt;非因本人原因从原用人单位被安排到新用人单位工作&lt;/strong&gt;，原用人单位未支付经济补偿，劳动者依据劳动合同法第三十八条规定与新用人单位解除劳动合同，或者新用人单位向劳动者提出解除、终止劳动合同，在计算支付经济补偿或赔偿金的工作年限时，劳动者请求把在原用人单位的工作年限合并计算为新用人单位工作年限的，人民法院应予支持。 &lt;/p&gt;
&lt;h2 id="_3"&gt;《中华人民共和国劳动合同法》&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gov.cn/ziliao/flfg/2007-06/29/content_669394.htm"&gt;中华人民共和国劳动合同法（主席令第六十五号）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;2007年6月29日第十届全国人民代表大会常务委员会第二十八次会议通过&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;摘录&lt;/p&gt;
&lt;p&gt;第四十一条　有下列情形之一，需要&lt;strong&gt;裁减人员二十人以上&lt;/strong&gt;或者裁减不足二十人但占企业职工总数百分之十以上的，用人单位提前三十日向工会或者全体职工说明情况，听取工会或者职工的意见后，裁减人员方案经向劳动行政部门报告，可以裁减人员&lt;/p&gt;
&lt;h2 id="_4"&gt;《中华人民共和国劳动合同法实施条例》&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gov.cn/jrzg/2008-09/18/content_1098995.htm"&gt;国令第535号:中华人民共和国劳动合同法实施条例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;２００８年９月３日国务院第２５次常务会议通过，现予公布，自公布之日起施行 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_5"&gt;《中华人民共和国劳动法》&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.mohrss.gov.cn/xxgk2020/fdzdgknr/zcfg/fl/202011/t20201102_394625.html"&gt;中华人民共和国劳动法_中华人民共和国人力资源和社会保障部&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;1994年7月5日第八届全国人民代表大会常务委员会第八次会议通过　根据2009年8月27日第十一届全国人民代表大会常务委员会第十次会议《关于修改部分法律的决定》第一次修正　根据2018年12月29日第十三届全国人民代表大会常务委员会第七次会议《关于修改〈中华人民共和国劳动法〉等七部法律的决定》第二次修正 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_6"&gt;《北京市高级人民法院、北京市劳动人事争议仲裁委员会关于审理劳动争议案件解答（一）》&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.beijing.gov.cn/zhengce/fygfxwj/202405/t20240530_3699652.html"&gt;关于印发《北京市高级人民法院、北京市劳动人事争议仲裁委员会关于审理劳动争议案件解答（一）》的通知_法院规范性文件_首都之窗_北京市人民政府门户网站&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;于2024年3月8日经北京市高级人民法院2024年第9次审判委员会审议通过&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;摘录&lt;/p&gt;
&lt;p&gt;73．劳动者以《劳动合同法》第三十八条规定之外的情形为由提出解除劳动合同的，在仲裁或诉讼阶段又主张是用人单位存在前述法定情形迫使其解除劳动合同，请求用人单位支付经济补偿或赔偿金的如何处理？&lt;/p&gt;
&lt;p&gt;对于劳动者提出解除劳动合同的，应以劳动者当时实际解除劳动合同时提出理由作为认定案件事实的依据，劳动者以《劳动合同法》第三十八条规定之外的情形为由提出解除劳动合同，在仲裁或诉讼阶段又主张是用人单位存在前述法定情形迫使其解除劳动合同，请求用人单位支付经济补偿或赔偿金的，劳动争议仲裁机构、人民法院不予支持，但劳动者证明在解除劳动合同时，存在&lt;strong&gt;欺诈、胁迫、重大误解&lt;/strong&gt;等违背其真实意思表示的情形的除外。&lt;/p&gt;
&lt;h2 id="2020-16"&gt;《最高人民法院 关于废止部分司法解释及相关规范性文件的决定》法释[2020] 16号&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://gongbao.court.gov.cn/Details/ae5b93285eab867ce0346bee77be26.html"&gt;最高人民法院关于废止部分司法解释及相关规范性文件的决定 - 中华人民共和国最高人民法院公报&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.chinacourt.org/law/detail/2020/12/id/150223.shtml"&gt;中国法院网 最高院 法释 2020 16号&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;摘录：&lt;/p&gt;
&lt;p&gt;“为切实实施民法典，保证国家法律统一正确适用，根据《中华人民共和国民法典》等法律规定，结合审判实际，现&lt;strong&gt;决定废止&lt;/strong&gt;《最高人民法院关于适用〈中华人民共和国民法总则〉诉讼时效制度若干问题的解释》等116件司法解释及相关规范性文件（目录附后）。”&lt;/p&gt;
&lt;p&gt;“本决定自2021年1月1日起施行。”&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;序号&lt;/th&gt;
&lt;th&gt;标题&lt;/th&gt;
&lt;th&gt;发文日期及文号&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;62&lt;/td&gt;
&lt;td&gt;最高人民法院关于审理劳动争议案件适用法律若干问题的解释&lt;/td&gt;
&lt;td&gt;2001年4月16日 &lt;br/&gt;法释 [2001] 14号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;63&lt;/td&gt;
&lt;td&gt;最高人民法院关于审理劳动争议案件适用法律若干问题的解释（二）&lt;/td&gt;
&lt;td&gt;2006年8月14日&lt;br/&gt;法释[2006〕6号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;最高人民法院关于审理劳动争议案件适用法律若干问题的解释（三）&lt;/td&gt;
&lt;td&gt;2010年9月13日&lt;br/&gt;法释〔2010〕12号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;65&lt;/td&gt;
&lt;td&gt;最高人民法院关于审理劳动争议案件适用法律若干问题的解释（四）&lt;/td&gt;
&lt;td&gt;2013年1月18日&lt;br/&gt;法释〔2013〕14号&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;表中失效文件的原文链接如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://gongbao.court.gov.cn/Details/5b8be9baaa84c724c30b9cc380014e.html"&gt;最高人民法院关于审理劳动争议案件适用法律若干问题的解释 - 中华人民共和国最高人民法院公报&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gongbao.court.gov.cn/Details/f4c35d476fe7f547cd6802188ec032.html"&gt;最高人民法院关于审理劳动争议案件适用法律若干问题的解释（二） - 中华人民共和国最高人民法院公报&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gongbao.court.gov.cn/Details/6bf593c3bef2e7b9a723b1343130e4.html"&gt;最高人民法院关于审理劳动争议案件适用法律若干问题的解释（三） - 中华人民共和国最高人民法院公报&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gongbao.court.gov.cn/Details/811bdac65d1992d26d60339c558077.html"&gt;最高人民法院关于审理劳动争议案件适用法律若干问题的解释（四） - 中华人民共和国最高人民法院公报&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Legal"></category></entry><entry><title>STM32系统外设小记</title><link href="https://blog.debao.me/2024/06/notes-on-stm32-system-peripherals/" rel="alternate"></link><published>2024-06-02T20:00:00+08:00</published><updated>2024-06-02T20:00:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-06-02:/2024/06/notes-on-stm32-system-peripherals/</id><summary type="html">&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/05/notes-on-keil-mdk-community/"&gt;Keil MDK 社区版小记&lt;/a&gt;与&lt;a href="https://blog.debao.me/2024/05/notes-on-stm32cubemx/"&gt;STM32CubeMX小记&lt;/a&gt;，已经可以实现，让 CubeMX 生成的代码，同时兼容Keil MDK和CubeIDE两套环境：一套代码，两个IDE可以自由切换，两个人可以用不同的IDE协同工作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;只是 …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/05/notes-on-keil-mdk-community/"&gt;Keil MDK 社区版小记&lt;/a&gt;与&lt;a href="https://blog.debao.me/2024/05/notes-on-stm32cubemx/"&gt;STM32CubeMX小记&lt;/a&gt;，已经可以实现，让 CubeMX 生成的代码，同时兼容Keil MDK和CubeIDE两套环境：一套代码，两个IDE可以自由切换，两个人可以用不同的IDE协同工作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;只是想不通，国内各种资料为什么执着于Keil MDK这个开发环境（其社区版又不能商用）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在可以回到起点，了解一下STM32的系统外设了...&lt;/p&gt;
&lt;h2 id="_1"&gt;系统外设？&lt;/h2&gt;
&lt;p&gt;ST的 &lt;a href="https://wiki.st.com/stm32mcu/wiki/Category:Getting_started_with_STM32_system_peripherals"&gt;wiki&lt;/a&gt; 中列的4类14种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统外设（System Peripherals）：GPIO，EXTI，PWR，LPBAM，DMA&lt;/li&gt;
&lt;li&gt;基本通讯外设（Basic communication peripherals）：UART，SPI，I2C，I3C&lt;/li&gt;
&lt;li&gt;定时外设（Timing peripherals）：RTC，WDG，HRTIM&lt;/li&gt;
&lt;li&gt;模拟外设（Analog peripherals）：DAC，ADC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;列个表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;模块&lt;/th&gt;
&lt;th&gt;全称&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;主要特点&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GPIO&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;General-Purpose Input/Output&lt;/td&gt;
&lt;td&gt;通用输入/输出端口，用于控制和读取外部设备的状态&lt;/td&gt;
&lt;td&gt;可配置为输入、输出、复用功能；支持上拉、下拉电阻&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;EXTI&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;External Interrupt/Event Controller&lt;/td&gt;
&lt;td&gt;外部中断/事件控制器，用于处理外部信号触发的中断&lt;/td&gt;
&lt;td&gt;支持多种触发模式（上升沿、下降沿、双边沿）；灵活的中断优先级配置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;PWR&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Power Control&lt;/td&gt;
&lt;td&gt;电源管理模块，用于控制微控制器的电源状态和低功耗模式&lt;/td&gt;
&lt;td&gt;支持不同的低功耗模式（睡眠、停止、待机）；电压监控和电池管理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;LPBAM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Low Power Background Autonomous Mode&lt;/td&gt;
&lt;td&gt;低功耗自动模式，用于在低功耗状态下执行后台任务&lt;/td&gt;
&lt;td&gt;允许在低功耗模式下执行特定任务，如数据传输和采集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;DMA&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Direct Memory Access&lt;/td&gt;
&lt;td&gt;直接存储器访问，用于在外设和内存之间快速传输数据&lt;/td&gt;
&lt;td&gt;减少CPU负载，提高数据传输效率；支持多通道和多种传输模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;UART&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Universal Asynchronous Receiver/Transmitter&lt;/td&gt;
&lt;td&gt;通用异步收发器，用于串行通信&lt;/td&gt;
&lt;td&gt;支持全双工通信，波特率可编程；具有硬件流控制和多种错误检测机制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SPI&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Serial Peripheral Interface&lt;/td&gt;
&lt;td&gt;串行外设接口，用于高速同步串行通信&lt;/td&gt;
&lt;td&gt;支持主从模式、多从设备；全双工通信，数据传输速率高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;I2C&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Inter-Integrated Circuit&lt;/td&gt;
&lt;td&gt;集成电路间通信，用于短距离通信的多主多从总线&lt;/td&gt;
&lt;td&gt;支持多主多从模式；具有从设备地址识别和7位或10位地址模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;I3C&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Improved Inter-Integrated Circuit&lt;/td&gt;
&lt;td&gt;改进型集成电路间通信，I2C 的升级版&lt;/td&gt;
&lt;td&gt;兼容 I2C；更高的速度和更低的功耗；支持动态地址分配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;RTC&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Real-Time Clock&lt;/td&gt;
&lt;td&gt;实时时钟，用于提供准确的时间和日期信息&lt;/td&gt;
&lt;td&gt;支持闹钟、中断和时间戳功能；内置备份电池，掉电后仍能保持时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;WDG&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Watchdog Timer&lt;/td&gt;
&lt;td&gt;看门狗定时器，用于防止系统失效或卡死&lt;/td&gt;
&lt;td&gt;定时器溢出时触发系统复位；可编程超时时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;HRTIM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;High-Resolution Timer&lt;/td&gt;
&lt;td&gt;高分辨率定时器，用于精确的时间控制和信号生成&lt;/td&gt;
&lt;td&gt;提供高分辨率的PWM输出；支持复杂的时间和事件控制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;DAC&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Digital-to-Analog Converter&lt;/td&gt;
&lt;td&gt;数模转换器，用于将数字信号转换为模拟信号&lt;/td&gt;
&lt;td&gt;支持多通道输出；分辨率和采样率可编程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ADC&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Analog-to-Digital Converter&lt;/td&gt;
&lt;td&gt;模数转换器，用于将模拟信号转换为数字信号&lt;/td&gt;
&lt;td&gt;高速采样、分辨率可调；支持多通道输入和多种触发模式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;东西太多了，先了解一下其中的 GPIO、UART、SPI&lt;/p&gt;
&lt;h2 id="gpio"&gt;GPIO&lt;/h2&gt;
&lt;p&gt;这个东西...&lt;/p&gt;
&lt;h3 id="gpio_1"&gt;GPIO是什么？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;GPIO（General Purpose Input/Output，通用输入/输出）是微控制器或其他集成电路上的一种通用引脚，用于与外部设备进行数字信号交互。GPIO 引脚没有特定的功能，可以通过软件配置来实现多种用途，因此称为“通用”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;先借ST官方&lt;a href="https://wiki.st.com/stm32mpu/wiki/GPIO_internal_peripheral"&gt;GPIO internal peripheral&lt;/a&gt;一张图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="stm32-gpio-internal" src="https://blog.debao.me/images/arm/stm32-gpio-internal.png"&gt;&lt;/p&gt;
&lt;p&gt;对于GPIO的几种模式，可以列个表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;模式名称&lt;/th&gt;
&lt;th&gt;宏定义&lt;/th&gt;
&lt;th&gt;详细描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;输入模式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GPIO_Mode_IN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;配置引脚为输入模式，用于读取外部信号。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;输出模式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GPIO_Mode_OUT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;配置引脚为输出模式，用于驱动外部设备。可以选择推挽输出（Push-pull Output）或开漏输出（Open-drain Output）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;复用功能模式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GPIO_Mode_AF&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;配置引脚为复用功能模式，用于连接内部外设（如 UART、I2C、SPI 等）。具体的复用功能由引脚的 AF（Alternate Function）寄存器配置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;模拟模式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GPIO_Mode_AN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;配置引脚为模拟模式，用于模拟信号处理。常用于 ADC 输入或 DAC 输出。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;对于输出模式PuPd：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;推挽输出（Push-pull Output）：标准的输出模式，能够提供强驱动能力。&lt;/li&gt;
&lt;li&gt;开漏输出（Open-drain Output）：适用于需要外部上拉电阻的应用，如 I2C 总线。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="hal"&gt;HAL函数&lt;/h3&gt;
&lt;p&gt;HAL库中主要的一些GPIO相关函数（具体可以查看stm32xxxx_hal_gpio.h文件)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;初始化和配置相关&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;HAL_GPIO_Init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GPIO_TypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;GPIOx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_InitTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;GPIO_Init&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;HAL_GPIO_DeInit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GPIO_TypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;GPIOx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint32_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_Pin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;状态读写&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;HAL_GPIO_ReadPin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GPIO_TypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;GPIOx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_Pin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;HAL_GPIO_WritePin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GPIO_TypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;GPIOx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_Pin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_PinState&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PinState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;HAL_GPIO_TogglePin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GPIO_TypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;GPIOx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_Pin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;中断配置和处理&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;HAL_GPIO_EXTI_IRQHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_Pin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;HAL_GPIO_EXTI_Callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_Pin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_2"&gt;使用&lt;/h3&gt;
&lt;p&gt;cubemx或cubeide可以直接生成配置代码。剩下的编写读写代码就行了。单独控制一个灯闪烁，很简单：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/* Infinite loop */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/* USER CODE BEGIN WHILE */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;HAL_GPIO_TogglePin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GPIOA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_PIN_2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;HAL_Delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;/* USER CODE END WHILE */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;引脚可以通过cubemx设置别名（对应C语言的宏），那么：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;HAL_GPIO_TogglePin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_GPIO_Port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LED_Pin&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;如果不使用toggle，可以直接设置值：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;HAL_GPIO_WritePin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_GPIO_Port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LED_Pin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_PIN_RESET&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;HAL_Delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;HAL_GPIO_WritePin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_GPIO_Port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LED_Pin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_PIN_SET&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;HAL_Delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;使用Delay延迟比较比较傻，正常应该使用定时器中断，比如配置使用CubeMX配置，TIM2定时器。而后在main.c 中定义：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// 定时器中断回调函数&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HAL_TIM_PeriodElapsedCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIM_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;htim&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;htim&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Instance&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TIM2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// 切换 LED 状态&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;HAL_GPIO_TogglePin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GPIOA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_PIN_5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;这是一个弱定义函数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;它能工作，另一方面是因为在stm32xxx_it.c中的中断处理函数调用HAL的函数。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;TIM2_IRQHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;HAL_TIM_IRQHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;htim2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="uart"&gt;UART&lt;/h2&gt;
&lt;p&gt;RS232等uart串口概念简单&lt;/p&gt;
&lt;h3 id="hal_1"&gt;HAL函数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;初始化与配置&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;HAL_UART_Init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;HAL_UART_DeInit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;UART数据传输&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;HAL_UART_Transmit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint32_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;HAL_UART_Receive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint32_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;HAL_UART_Transmit_IT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;HAL_UART_Receive_IT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;HAL_UART_Transmit_DMA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;HAL_UART_Receive_DMA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;中断处理&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;HAL_UART_IRQHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;HAL_UART_TxCpltCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;HAL_UART_RxCpltCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_3"&gt;使用&lt;/h3&gt;
&lt;p&gt;初始化代码cubemx可以生成。只需关注数据传输，数据传输有三个编程模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;轮询方式&lt;/li&gt;
&lt;li&gt;中断方式（IT)&lt;/li&gt;
&lt;li&gt;DMA方式（DMA）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;先只考虑其中的中断方式。&lt;/p&gt;
&lt;h4 id="_4"&gt;全局变量&lt;/h4&gt;
&lt;p&gt;main函数外，定义全局变量，代表发送和接受缓冲区&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;/* USER CODE BEGIN PV */&lt;/span&gt;
&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;recv_buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;send_buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cm"&gt;/* USER CODE END PV */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="_5"&gt;接收&lt;/h4&gt;
&lt;p&gt;main函数中，在while之外，启动接收&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;/* USER CODE BEGIN 2 */&lt;/span&gt;
&lt;span class="n"&gt;HAL_UART_Receive_IT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;huart1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;recv_buffef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cm"&gt;/* USER CODE END 2 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="_6"&gt;中断处理&lt;/h4&gt;
&lt;p&gt;main函数外，定义回调函数，内部书写比较自由&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;/* USER CODE BEGIN 4 */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HAL_UART_RxCpltCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;HAL_GPIO_TogglePin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GPIOA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_PIN_2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;memcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;send_buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;recv_buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;HAL_UART_Transmit_IT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;send_buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;HAL_UART_Receive_IT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;recv_buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/* USER CODE END 4 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;注意：这个函数名&lt;strong&gt;一定不能&lt;/strong&gt;拼错了（Cplt是完成Complete的意思），拼错后也不会报错，没有这个函数也不会报错。因为:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在 STM32 HAL 库中，HAL_UART_RxCpltCallback 是一个弱定义（__weak）的函数。这意味着，如果用户没有显式地定义这个函数，链接器会使用库中提供的默认实现；如果用户定义了这个函数，链接器会使用用户提供的实现而不是默认的实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可用的回调，可以通过&lt;code&gt;stm32xxxx_hal_uart.h&lt;/code&gt;文件查看：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TxHalfCpltCallback&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;__UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="cm"&gt;/*!&amp;lt; UART Tx Half Complete Callback        */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TxCpltCallback&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;__UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="cm"&gt;/*!&amp;lt; UART Tx Complete Callback             */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;RxHalfCpltCallback&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;__UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="cm"&gt;/*!&amp;lt; UART Rx Half Complete Callback        */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;RxCpltCallback&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;__UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="cm"&gt;/*!&amp;lt; UART Rx Complete Callback             */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ErrorCallback&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;__UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="cm"&gt;/*!&amp;lt; UART Error Callback                   */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;AbortCpltCallback&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;__UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="cm"&gt;/*!&amp;lt; UART Abort Complete Callback          */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;AbortTransmitCpltCallback&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;__UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/*!&amp;lt; UART Abort Transmit Complete Callback */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;AbortReceiveCpltCallback&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;__UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/*!&amp;lt; UART Abort Receive Complete Callback  */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;WakeupCallback&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;__UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="cm"&gt;/*!&amp;lt; UART Wakeup Callback                  */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;RxEventCallback&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;__UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/*!&amp;lt; UART Reception Event Callback     */&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MspInitCallback&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;__UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="cm"&gt;/*!&amp;lt; UART Msp Init callback                */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MspDeInitCallback&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;__UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="cm"&gt;/*!&amp;lt; UART Msp DeInit callback              */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="spi"&gt;SPI&lt;/h2&gt;
&lt;p&gt;SPI（Serial Peripheral Interface，串行外设接口）是一种同步串行通信协议，通常用于微控制器与各种外围设备（如传感器、存储设备、显示屏等）之间的通信。SPI 由 Motorola 公司开发，是一种全双工通信协议，具有高速、简单和灵活的特点。&lt;/p&gt;
&lt;p&gt;四条主要信号线：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MISO（Master In Slave Out）：主设备输入、从设备输出。这条线用于从设备向主设备发送数据。&lt;/li&gt;
&lt;li&gt;MOSI（Master Out Slave In）：主设备输出、从设备输入。这条线用于主设备向从设备发送数据。&lt;/li&gt;
&lt;li&gt;SCLK（Serial Clock）：串行时钟信号，由主设备生成，用于同步数据传输。&lt;/li&gt;
&lt;li&gt;SS（Slave Select）或 CS（Chip Select）：从设备选择信号。通常由主设备控制，用于选择哪个从设备进行通信。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="hal_2"&gt;HAL函数&lt;/h3&gt;
&lt;p&gt;和串口一样，也是支持轮询、中断、DMA三种传输方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;初始化与配置&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;HAL_StatusTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HAL_SPI_Init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SPI_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hspi&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;数据传输&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;HAL_StatusTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HAL_SPI_Transmit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SPI_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hspi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint32_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;HAL_StatusTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HAL_SPI_Receive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SPI_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hspi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint32_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;HAL_StatusTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HAL_SPI_TransmitReceive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SPI_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hspi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pTxData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pRxData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint32_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;HAL_StatusTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HAL_SPI_Transmit_IT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SPI_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hspi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;HAL_StatusTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HAL_SPI_Receive_IT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SPI_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hspi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;HAL_StatusTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HAL_SPI_TransmitReceive_IT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SPI_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hspi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pTxData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pRxData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;HAL_StatusTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HAL_SPI_Transmit_DMA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SPI_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hspi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;HAL_StatusTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HAL_SPI_Receive_DMA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SPI_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hspi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;HAL_StatusTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HAL_SPI_TransmitReceive_DMA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SPI_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hspi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pTxData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pRxData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;状态监控&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;HAL_SPI_StateTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HAL_SPI_GetState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SPI_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hspi&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;uint32_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HAL_SPI_GetError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SPI_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hspi&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="c"&gt;C语言知识补充&lt;/h2&gt;
&lt;p&gt;之前没关注这个&lt;/p&gt;
&lt;h3 id="_7"&gt;关于弱定义&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;弱定义（Weak Symbol）是一种符号（可以是函数或变量）的声明方式，它允许在链接过程中，如果没有强定义（Strong Symbol）与之对应，则使用该弱定义。弱定义通常用于库和框架中，以提供默认实现或默认值，而用户可以通过提供自己的强定义来覆盖这些默认行为。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不同的编译器通过不同的方式支持弱定义。以下是一些常见编译器的支持方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC 和 Clang：使用 &lt;strong&gt;attribute&lt;/strong&gt;((weak))。&lt;/li&gt;
&lt;li&gt;ARM 编译器：使用 __weak。&lt;/li&gt;
&lt;li&gt;MSVC：不直接支持，但可以通过链接器选项 /alternatename 实现类似功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_8"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://wiki.st.com/stm32mcu/wiki/Category:Getting_started_with_STM32_system_peripherals&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Weak_symbol"&gt;Weak symbol - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="EE"></category><category term="STM32"></category></entry><entry><title>Git 杂记</title><link href="https://blog.debao.me/2024/05/notes-on-git/" rel="alternate"></link><published>2024-05-31T22:00:00+08:00</published><updated>2024-05-31T22:00:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-05-31:/2024/05/notes-on-git/</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;工作与个人配置 如何分开？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#ssh-key"&gt;创建新的ssh key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gitconfig-work"&gt;创建 ~/.gitconfig-work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gitconfig"&gt;修改 ~/.gitconfig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;其他&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#master-vs-main"&gt;默认分支: master vs main ?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#windowsgit-openssh"&gt;Windows版Git的 openssh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#windowsgitssl"&gt;Windows版Git的ssl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;工作与个人配置 如何分开？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;考虑 …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;工作与个人配置 如何分开？&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#ssh-key"&gt;创建新的ssh key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gitconfig-work"&gt;创建 ~/.gitconfig-work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gitconfig"&gt;修改 ~/.gitconfig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;其他&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#master-vs-main"&gt;默认分支: master vs main ?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#windowsgit-openssh"&gt;Windows版Git的 openssh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#windowsgitssl"&gt;Windows版Git的ssl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="_1"&gt;工作与个人配置 如何分开？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;考虑一个场景：同一台电脑，既用于工作，又要用于个人事务，如何为其配置不同的email。如果这两个都同时位于github或gitlab上。又如何为其指定ssh的key？？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;假定 &lt;code&gt;E:/work&lt;/code&gt; 是为工作服务的，其他都是个人事务，那么只需要为work文件夹指定不同的配置即可：&lt;/p&gt;
&lt;h3 id="ssh-key"&gt;创建新的ssh key&lt;/h3&gt;
&lt;p&gt;执行命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh-keygen&lt;span class="w"&gt; &lt;/span&gt;-t&lt;span class="w"&gt; &lt;/span&gt;rsa&lt;span class="w"&gt; &lt;/span&gt;-C&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;work@example.com&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;提示输入文件名时，输入 &lt;code&gt;~/.ssh/id_work_rsa&lt;/code&gt;，以便于和默认key进行区分。&lt;/p&gt;
&lt;h3 id="gitconfig-work"&gt;创建 ~/.gitconfig-work&lt;/h3&gt;
&lt;p&gt;配置用户名，email，以及key，
内容如下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[user]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Work&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;work@example.com&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;[core]&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="na"&gt;sshCommand&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ssh -i ~/.ssh/id_work_rsa&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="gitconfig"&gt;修改 ~/.gitconfig&lt;/h3&gt;
&lt;p&gt;当仓库位于work文件夹时，使用工作配置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[includeIf &amp;quot;gitdir:E:/Work/&amp;quot;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;.gitconfig-work&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;注意：gitdir指定的路径区分大小写（即使在Windows下）。忽略大小写用&lt;code&gt;gitdir/i&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_2"&gt;其他&lt;/h3&gt;
&lt;p&gt;完成类似任务，除了这种做法，gitlab文档中还给出了其他做法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.gitlab.com/ee/user/ssh.html#use-different-accounts-on-a-single-gitlab-instance"&gt;https://docs.gitlab.com/ee/user/ssh.html#use-different-accounts-on-a-single-gitlab-instance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="master-vs-main"&gt;默认分支: master vs main ?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;好多年没在Github上创建新代码仓库，也没有更新公司内的gerrit2和gitlab。2年前就突然注意到，天天看到的master分支，竟已经被main取代...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再仔细看看，变更竟发生在4年前：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;时间&lt;/th&gt;
&lt;th&gt;事件&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2020年6月&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;GitHub 宣布将把默认分支名改为 &lt;code&gt;main&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2020年7月&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Git 2.28.0 版本发布，允许用户通过配置选项自定义默认分支&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2020年10月&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;GitHub 新建的仓库默认分支改为 &lt;code&gt;main&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2020年10月&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;GitLab 宣布从 2021 年起新建仓库使用 &lt;code&gt;main&lt;/code&gt; 作为默认分支&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2021年&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;其他git平台和工具（如 Bitbucket、Azure DevOps）开始支持 &lt;code&gt;main&lt;/code&gt; 作为默认分支。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在此之前：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;时间&lt;/th&gt;
&lt;th&gt;事件&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2014年&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Django 宣布将 &lt;code&gt;master-slave&lt;/code&gt; 替换为 &lt;code&gt;leader-follower&lt;/code&gt; 或 &lt;code&gt;primary-replica&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2017年&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Redis 将 &lt;code&gt;master-slave&lt;/code&gt; 替换为 &lt;code&gt;primary-replica&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2020年&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Black Lives Matter 运动引发对种族不公正和系统性种族主义的广泛讨论，推动科技行业重新审视用词。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;好吧，更名原因竟然和&lt;strong&gt;主人&lt;/strong&gt;与 &lt;strong&gt;奴隶&lt;/strong&gt;有关。尽管main与master短也是一个可以说的优势。&lt;/p&gt;
&lt;h2 id="windowsgit-openssh"&gt;Windows版Git的 openssh&lt;/h2&gt;
&lt;p&gt;在 Git for Windows 2.33.1 版本中，捆绑的 OpenSSH 升级到了 8.8p1 版本。OpenSSH 8.8 默认禁用了使用 SHA-1 算法的 ssh-rsa 密钥。&lt;/p&gt;
&lt;p&gt;如果不幸，某些老的网站还在用的旧版的 RSA 密钥，并且默认使用 ssh-rsa 签名算法，&lt;strong&gt; 这会造成连接失败&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如果不能使用新算法生成密钥对，需要修改ssh配置文件&lt;code&gt;~/.ssh/config&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Host *
    PubkeyAcceptedAlgorithms +ssh-rsa
    HostkeyAlgorithms +ssh-rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;或者只针对特定网站&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Host codereview.debao.me
   Port 29418
   HostkeyAlgorithms +ssh-rsa
   PubkeyAcceptedAlgorithms +ssh-rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Git for Windows 版本&lt;/th&gt;
&lt;th&gt;OpenSSH 版本&lt;/th&gt;
&lt;th&gt;关键变化&lt;/th&gt;
&lt;th&gt;发布时间&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2.20.1&lt;/td&gt;
&lt;td&gt;OpenSSH 7.9p1&lt;/td&gt;
&lt;td&gt;初始版本&lt;/td&gt;
&lt;td&gt;2018年12月&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.23.0&lt;/td&gt;
&lt;td&gt;OpenSSH 8.0p1&lt;/td&gt;
&lt;td&gt;更新到 8.0 版本&lt;/td&gt;
&lt;td&gt;2019年8月&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.30.0&lt;/td&gt;
&lt;td&gt;OpenSSH 8.4p1&lt;/td&gt;
&lt;td&gt;更新到 8.4 版本&lt;/td&gt;
&lt;td&gt;2021年1月&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.33.1&lt;/td&gt;
&lt;td&gt;OpenSSH 8.8p1&lt;/td&gt;
&lt;td&gt;禁用了使用 &lt;code&gt;ssh-rsa&lt;/code&gt; 的 RSA 签名&lt;/td&gt;
&lt;td&gt;2021年9月&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="windowsgitssl"&gt;Windows版Git的ssl&lt;/h2&gt;
&lt;p&gt;简单记录一下&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Git for Windows 版本&lt;/th&gt;
&lt;th&gt;OpenSSL 版本&lt;/th&gt;
&lt;th&gt;关键变化&lt;/th&gt;
&lt;th&gt;发布时间&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2.20.1&lt;/td&gt;
&lt;td&gt;OpenSSL 1.0.2p&lt;/td&gt;
&lt;td&gt;使用 OpenSSL 1.0.2 系列&lt;/td&gt;
&lt;td&gt;2018年12月&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.23.0&lt;/td&gt;
&lt;td&gt;OpenSSL 1.1.1c&lt;/td&gt;
&lt;td&gt;升级到 OpenSSL 1.1.1 系列&lt;/td&gt;
&lt;td&gt;2019年8月&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.30.0&lt;/td&gt;
&lt;td&gt;OpenSSL 1.1.1i&lt;/td&gt;
&lt;td&gt;持续更新 1.1.1 系列&lt;/td&gt;
&lt;td&gt;2021年1月&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.42.0&lt;/td&gt;
&lt;td&gt;OpenSSL 3.0.11&lt;/td&gt;
&lt;td&gt;升级到 OpenSSL 3.0 系列&lt;/td&gt;
&lt;td&gt;2023年9月&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="_3"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/github/renaming"&gt;github/renaming: Guidance for changing the default branch name for GitHub repositories&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.openssh.com/txt/release-8.8"&gt;https://www.openssh.com/txt/release-8.8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/docs/git-config#_conditional_includes"&gt;https://git-scm.com/docs/git-config#_conditional_includes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itnext.io/how-to-handle-multiple-ssh-keys-with-gitlab-27f7cf2e77ed"&gt;https://itnext.io/how-to-handle-multiple-ssh-keys-with-gitlab-27f7cf2e77ed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.gitlab.com/ee/user/ssh.html#use-different-accounts-on-a-single-gitlab-instance"&gt;https://docs.gitlab.com/ee/user/ssh.html#use-different-accounts-on-a-single-gitlab-instance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tools"></category><category term="Git"></category></entry><entry><title>STM32CubeMX小记</title><link href="https://blog.debao.me/2024/05/notes-on-stm32cubemx/" rel="alternate"></link><published>2024-05-30T21:01:00+08:00</published><updated>2024-05-30T21:01:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-05-30:/2024/05/notes-on-stm32cubemx/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/04/notes-on-arm-development/"&gt;ARM开发环境小记&lt;/a&gt;与&lt;a href="https://blog.debao.me/2024/05/notes-on-keil-mdk-community/"&gt;Keil MDK 社区版小记&lt;/a&gt;。不求深入，简单了解一下CubeMX生成的代码的基本结构...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="stm32-cubemx"&gt;STM32 CubeMX 是什么？&lt;/h2&gt;
&lt;p&gt;CubeMX 是 STM32 Cube  家族一员，全家福这样：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;STM32CubeMX： 用于生成初始化代 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2024/04/notes-on-arm-development/"&gt;ARM开发环境小记&lt;/a&gt;与&lt;a href="https://blog.debao.me/2024/05/notes-on-keil-mdk-community/"&gt;Keil MDK 社区版小记&lt;/a&gt;。不求深入，简单了解一下CubeMX生成的代码的基本结构...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="stm32-cubemx"&gt;STM32 CubeMX 是什么？&lt;/h2&gt;
&lt;p&gt;CubeMX 是 STM32 Cube  家族一员，全家福这样：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;STM32CubeMX： 用于生成初始化代码和配置项目，然后在&lt;/li&gt;
&lt;li&gt;STM32CubeIDE： 中编辑、编译和调试这些代码&lt;/li&gt;
&lt;li&gt;STM32CubeProgrammer： 用于将编译好的程序烧写到微控制器上&lt;/li&gt;
&lt;li&gt;STM32CubeMonitor： 可用于进一步的运行时分析和性能调优。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类比Qt的话，CubeMX 相当于qdesigner，CubeIDE相当于Qt Creator。CubeIDE中集成了CubeMX的大部分功能，但是使用其他IDE（比如Keil MDK）时，使用CubeMX生成的代码更容易。&lt;/p&gt;
&lt;p&gt;CubeMX可以为如下工具和IDE生成项目代码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EWARM&lt;/li&gt;
&lt;li&gt;MDK-ARM&lt;/li&gt;
&lt;li&gt;STM32CubeIDE&lt;/li&gt;
&lt;li&gt;Makefile&lt;/li&gt;
&lt;li&gt;CMake&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;生成代码结构？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;本文所用 STM32CubeMX 版本为6.11.1，盲选择MCU型号STM32F051C8Tx。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="mdk-arm"&gt;尝试一（MDK-ARM)&lt;/h3&gt;
&lt;p&gt;生成代码结构如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;顶层 .mxproject 和 MyTest.ioc： 都是 CubeMX 的工程文件。需要保留以便于后续使用Cube重新生成或更新代码【.ioc 文件代表“Initialization and Configuration”】。&lt;/li&gt;
&lt;li&gt;MDK-ARM：为Keil MDK生成的项目文件（以便于在Keil下直接打开工程），以及启动文件 &lt;code&gt;startup_stm32f051x8.s&lt;/code&gt;【这个文件被放在这儿，是因为它能只用于Keil MDK，不通用】&lt;/li&gt;
&lt;li&gt;Core：用户需要修改的代码！！（在指定位置修改，以免后续用CubeMX更新时被覆盖）&lt;/li&gt;
&lt;li&gt;Drivers：CMSIS 和 HAL库文件&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;│  .mxproject
│  MyTest.ioc
│
├─Core
│  ├─Inc
│  │      main.h
│  │      stm32f0xx_hal_conf.h
│  │      stm32f0xx_it.h
│  │
│  └─Src
│          main.c
│          stm32f0xx_hal_msp.c
│          stm32f0xx_it.c
│          system_stm32f0xx.c
│
├─Drivers
│  ├─CMSIS
│  │  │  LICENSE.txt
│  │  │
│  │  ├─Device
│  │  │  └─ST
│  │  │      └─STM32F0xx
│  │  │          │  LICENSE.txt
│  │  │          │
│  │  │          └─Include
│  │  │                 stm32f051x8.h
│  │  │                 stm32f0xx.h
│  │  │                 system_stm32f0xx.h
│  │  └─Include
│  │          cmsis_armcc.h
│  │          cmsis_armclang.h
│  │          ...
│  │
│  └─STM32F0xx_HAL_Driver
│      │  LICENSE.txt
│      │
│      ├─Inc
│      │  │  stm32f0xx_hal.h
│      │  │  stm32f0xx_hal_cortex.h
|      |  |  ...
│      │  │
│      │  └─Legacy
│      │          stm32_hal_legacy.h
│      │
│      └─Src
│              stm32f0xx_hal.c
│              stm32f0xx_hal_cortex.c
|              .....
│
└─MDK-ARM
        MyTest.uvoptx
        MyTest.uvprojx
        startup_stm32f051x8.s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;重点关注下Core下的几个文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;main.c&lt;/li&gt;
&lt;li&gt;stm32f0xx_hal_msp.c&lt;/li&gt;
&lt;li&gt;stm32f0xx_it.c&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这几个文件内部都有大量的如下风格的注释段，用于让用户加入自定义的代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/* USER CODE BEGIN xxxxx */&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/* USER CODE END xxxx */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="mainc"&gt;main.c&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;系统初始化：初始化硬件抽象层（HAL）、配置系统时钟。&lt;/li&gt;
&lt;li&gt;外设初始化：初始化各个外设模块，例如 GPIO、USART、I2C 等。&lt;/li&gt;
&lt;li&gt;主循环：包含应用程序的主逻辑，通常是一个无限循环。&lt;/li&gt;
&lt;li&gt;功能实现：执行主要的应用功能，例如数据处理、通信协议等。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;quot;main.h&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;quot;stm32f0xx_hal.h&amp;quot;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;SystemClock_Config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;MX_GPIO_Init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;MX_USART2_UART_Init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;UART_HandleTypeDef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;huart2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;HAL_Init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;SystemClock_Config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;MX_GPIO_Init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;MX_USART2_UART_Init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// 主应用逻辑&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;SystemClock_Config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// 配置系统时钟&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;MX_GPIO_Init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// 初始化 GPIO&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;MX_USART2_UART_Init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// 初始化 UART&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;如果生成代码时，勾选了&lt;code&gt;Generate peripheral initialization as a pair of .c/.h files per peripheral&lt;/code&gt;，各个外设的代码会生成在独立的外设文件中，比如gpio.c，uart.c  等，对应的初始化代码，比如&lt;code&gt;MX_GPIO_Init()&lt;/code&gt;，将不再直接位于main.c中，而是通过include被包含进来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="stm32f0xx_hal_mspc"&gt;stm32f0xx_hal_msp.c&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;msp 表示“Microcontroller Support Package”（微控制器支持包）。这个支持包包含了一些用于初始化和配置硬件外设的底层代码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;外设支持包 (MSP) 配置：提供 HAL 库初始化和去初始化过程中的底层硬件配置。&lt;/li&gt;
&lt;li&gt;GPIO 配置：配置用于特定外设功能的 GPIO 引脚。&lt;/li&gt;
&lt;li&gt;中断配置：配置外设中断优先级和中断处理函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;quot;stm32f0xx_hal.h&amp;quot;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HAL_MspInit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// 初始化全局 MSP&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HAL_UART_MspInit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UART_HandleTypeDef&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Instance&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;USART2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// 配置 USART2 的 MSP&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HAL_UART_MspDeInit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UART_HandleTypeDef&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;huart&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Instance&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;USART2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// 去初始化 USART2 的 MSP&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="stm32f0xx_itc"&gt;stm32f0xx_it.c&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;it&lt;/code&gt; 表示“Interrupt”（中断）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;中断服务程序 (ISR)：实现各种中断处理函数，例如定时器中断、外部中断、通信中断等。&lt;/li&gt;
&lt;li&gt;系统中断处理：处理系统级中断，如 SysTick 中断。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;quot;main.h&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;quot;stm32f0xx_it.h&amp;quot;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;NMI_Handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;HardFault_Handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;SVC_Handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;PendSV_Handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;SysTick_Handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;HAL_IncTick&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="cubeide"&gt;尝试二（CubeIDE）&lt;/h3&gt;
&lt;p&gt;和上面很像：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;都有 .mxproject 和 MyText.ioc：作为CubeMX的工程文件&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Drivers 文件夹和前面完全一样&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;都有对应的工程文件，CubeIDE的工程文件是 .project和 .cproject【这两个文件是Eclipse IDE 及其衍生版本的配置文件】。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;都有启动文件，CubeIDE的启动文件在Core文件夹内【文件内容和keil下的不一样，难怪keil下的放置到 MDK-ARM文件夹下】。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;不同之外&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Core下多了两个文件&lt;code&gt;syscalls.c&lt;/code&gt;和 &lt;code&gt;sysmem.c&lt;/code&gt;。用于实现依赖于底层硬件的C标准库功能，比如内存分配和输入输出等。另外，Keil 有自己的运行时和系统调用，所以不需要它们。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;多了一个&lt;code&gt;STM32F051C8TX_FLASH.ld&lt;/code&gt;文件。这是一个&lt;strong&gt;链接脚本文件（linker script）&lt;/strong&gt;，用于GNU 工具链，链接脚本文件定义了 MCU 内存布局，并告诉链接器如何将编译生成的代码和数据段放置到目标设备的内存中。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;由于其他都一样，两套IDE并存，感觉上应该没问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;│  .cproject
│  .mxproject
│  .project
│  MyTest.ioc
│  STM32F051C8TX_FLASH.ld
│
├─Core
│  ├─Inc
│  │      main.h
│  │      stm32f0xx_hal_conf.h
│  │      stm32f0xx_it.h
│  │
│  ├─Src
│  │      main.c
│  │      stm32f0xx_hal_msp.c
│  │      stm32f0xx_it.c
│  │      syscalls.c
│  │      sysmem.c
│  │      system_stm32f0xx.c
│  │
│  └─Startup
│          startup_stm32f051c8tx.s
│
└─Drivers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="cmake"&gt;尝试三（CMake)&lt;/h3&gt;
&lt;p&gt;生成适用于&lt;code&gt;arm-none-eabi-gcc&lt;/code&gt;的cmake工程文件。&lt;/p&gt;
&lt;p&gt;所有源码文件都和为CubeIDE生成的一样，局部差异&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动文件&lt;code&gt;startup_stm32f051x8.s&lt;/code&gt;从Core文件夹移到根目录下（内容完全一样）。Why？&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;STM32F051C8TX_FLASH.ld&lt;/code&gt;文件，大致一样，但是内容又不完全一样！！（是否通用？）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;│  .mxproject
│  CMakeLists.txt
│  CMakePresets.json
│  MyTest.ioc
│  startup_stm32f051x8.s
│  STM32F051C8Tx_FLASH.ld
│
├─cmake
│  │  gcc-arm-none-eabi.cmake
│  │
│  └─stm32cubemx
│          CMakeLists.txt
│
├─Core
│  ├─Inc
│  │      main.h
│  │      stm32f0xx_hal_conf.h
│  │      stm32f0xx_it.h
│  │
│  └─Src
│          main.c
│          stm32f0xx_hal_msp.c
│          stm32f0xx_it.c
│          syscalls.c
│          sysmem.c
│          system_stm32f0xx.c
│
└─Drivers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_2"&gt;如何生成代码？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;选择MCU&lt;/li&gt;
&lt;li&gt;指定引脚&lt;/li&gt;
&lt;li&gt;配置时钟&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;似乎很简单，但是由于不了解硬件，看起来很发懵...&lt;/p&gt;
&lt;h3 id="_3"&gt;指定引脚&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;直接在左侧启用相应的功能，有自动分配的引脚&lt;/li&gt;
&lt;li&gt;在引脚上点击右键，可以选择引脚&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="stm32cubemx-pinout" src="https://blog.debao.me/images/arm/stm32cubemx-pinout.png"&gt;&lt;/p&gt;
&lt;p&gt;图中，系统Core部分配置了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GPIO（General-Purpose Input/Output)：通用输入输出端口。STM32 微控制器的每个引脚都可以配置为不同的功能，包括输入、输出、模拟功能或特定外设的功能。&lt;/li&gt;
&lt;li&gt;NVIC（Nested Vectored Interrupt Controller）：管理和处理中断。无论是使用中断方式还是 DMA 方式进行 UART 通信，都需要正确配置 NVIC 以确保中断能够正确触发和处理。&lt;/li&gt;
&lt;li&gt;RCC（Reset and Clock Control）：配置微控制器的时钟系统，包括内部和外部时钟源的选择、时钟分频、总线时钟的配置等。此处启用外部高速时钟HSE（其他 外部低速时钟LSE，内部高速时钟HSI，内部低速时钟LSI）&lt;/li&gt;
&lt;li&gt;SYS（System Configuration）：配置系统级别的设置，包括中断优先级、调试接口、复位源等。图中配置了&lt;code&gt;SYS_SWDIO&lt;/code&gt;和 &lt;code&gt;SYS_SWCLK&lt;/code&gt;引脚，用于调试接口。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;外设部分配置了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SPI1&lt;/li&gt;
&lt;li&gt;SPI2&lt;/li&gt;
&lt;li&gt;USART1&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;设置时钟&lt;/h3&gt;
&lt;p&gt;出来这个图，完全不知道是什么了...&lt;/p&gt;
&lt;p&gt;&lt;img alt="stm32cubemx-clock" src="https://blog.debao.me/images/arm/stm32cubemx-clock.png"&gt;&lt;/p&gt;
&lt;h4 id="_5"&gt;概念&lt;/h4&gt;
&lt;p&gt;时钟源（Clock Sources)：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;High Speed External (HSE) Clock&lt;/strong&gt;：配置外部高速时钟（如晶振或外部时钟源）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;High Speed Internal (HSI) Clock&lt;/strong&gt;：配置内部高速时钟。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Low Speed External (LSE) Clock&lt;/strong&gt;：配置外部低速时钟（如 RTC 时钟源）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Low Speed Internal (LSI) Clock&lt;/strong&gt;：配置内部低速时钟。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;系统时钟（System Clock)：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SYSCLK&lt;/strong&gt;：系统时钟，是所有时钟的核心，可以由 HSE、HSI 或 PLL 产生。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HCLK&lt;/strong&gt;：AHB 总线时钟，用于 CPU、存储器和 DMA。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PCLK1&lt;/strong&gt;：APB1 总线时钟，用于低速外设。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PCLK2&lt;/strong&gt;：APB2 总线时钟，用于高速外设。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PLL配置（Phase-Locked Loop Configuration）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PLL Source&lt;/strong&gt;：PLL 的输入时钟源（通常为 HSE 或 HSI）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PLL Multipliers and Dividers&lt;/strong&gt;：配置 PLL 的倍频和分频因子，以生成所需的时钟频率。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缩写：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AHB（Advanced High-performance Bus）：高级高性能总线，链接高带宽和高性能外设，如DMA和存储控制器等。&lt;/li&gt;
&lt;li&gt;APB（Advanced Peripheral Bus）：低带宽的外设。不同的MCU上细分不同，比如F1系列又分APB1和APB2，其中APB1通常比APB2频率低。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_6"&gt;配置&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;选择时钟源（HSE或HSI）&lt;/li&gt;
&lt;li&gt;配置PLL（如果需要更高的时钟频率，使用PLL，并设置其倍频和分频因子）&lt;/li&gt;
&lt;li&gt;设置总线时钟分频器（AHB、APB1、APB2等）&lt;/li&gt;
&lt;/ul&gt;</content><category term="EE"></category><category term="STM32"></category></entry><entry><title>禅道配置与使用小记</title><link href="https://blog.debao.me/2024/05/notes-on-zentao/" rel="alternate"></link><published>2024-05-28T21:13:00+08:00</published><updated>2024-05-28T21:13:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-05-28:/2024/05/notes-on-zentao/</id><summary type="html">&lt;p&gt;准备试试禅道，简单记录一下。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，本文提到的禅道，指代禅道 开源版18.11。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;安装&lt;/h2&gt;
&lt;p&gt;禅道有提供Linux下的一键安装包，也有用于Debian和Ubuntu的Deb包。&lt;/p&gt;
&lt;p&gt;安装后,apache的配置文件位于：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/opt/zbox …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;准备试试禅道，简单记录一下。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，本文提到的禅道，指代禅道 开源版18.11。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;安装&lt;/h2&gt;
&lt;p&gt;禅道有提供Linux下的一键安装包，也有用于Debian和Ubuntu的Deb包。&lt;/p&gt;
&lt;p&gt;安装后,apache的配置文件位于：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/opt/zbox/etc/apache/httpd.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在该文件内，可以修改监听地址等，比如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Listen 127.0.0.1:81
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;以便于配置nginx作为反向代理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;php配置文件位于&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/opt/zbox/etc/php/php.ini
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;在该文件内，通过&lt;code&gt;log_errors&lt;/code&gt;设置成on，可以启用日志记录。路径在&lt;code&gt;/opt/zbox/logs/php_error_log&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;另外，配置文件&lt;code&gt;/opt/zbox/app/zentao/config/my.php&lt;/code&gt;中 &lt;code&gt;$config-&amp;gt;debug&lt;/code&gt;，也用于配置日志。日志目录位于 &lt;code&gt;/opt/zbox/app/zentao/tmp/log&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一些命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动：&lt;code&gt;/opt/zbox/zbox/start&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;停止：&lt;code&gt;/opt/zbox/zbox stop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;重启：&lt;code&gt;/opt/zbox/zbox restart&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;检查：&lt;code&gt;/opt/zbox/zbox check&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;ZBOX是禅道官方在linux下面运行的apache, php, mysql一键安装包。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_2"&gt;插件学习&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;禅道的扩展系统，从16.5版本起，其行了比较大的重构。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;感觉上，对插件开发挺不友好的，官方文档似乎很不全，第三方插件少，可能我没找到原因&lt;/p&gt;
&lt;h3 id="_3"&gt;基本机制&lt;/h3&gt;
&lt;p&gt;禅道有一个个的模块组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;project&lt;/li&gt;
&lt;li&gt;user&lt;/li&gt;
&lt;li&gt;admin&lt;/li&gt;
&lt;li&gt;product&lt;/li&gt;
&lt;li&gt;job&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每个模块又按照mvc进行划分M V C三层和辅助config、lang、css、js：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;control：控制层&lt;/li&gt;
&lt;li&gt;model：模型层&lt;/li&gt;
&lt;li&gt;view：视图层&lt;/li&gt;
&lt;li&gt;config：配置&lt;/li&gt;
&lt;li&gt;lang：语言&lt;/li&gt;
&lt;li&gt;css：样式&lt;/li&gt;
&lt;li&gt;js：脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;对已有模块扩展&lt;/strong&gt;（直接在对应ext目录下）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;extension/custom/user/ext/control/{method1.php, method2.php, ...} 
extension/custom/user/ext/model/{extend1.php, extend2.php, ...}
extension/custom/user/ext/view/{method1.html.php, method2.html.php, ...}
extension/custom/user/ext/config/{config1.php, config2.php, ...}
extension/custom/user/ext/lang/zh-cn/{lang1.php, lang2.php, ...}
extension/custom/user/ext/lang/en/{lang1.php, lang2.php, ...}
extension/custom/user/ext/css/method1/{1.css, 2.css, ...}
extension/custom/user/ext/js/method1/{1.js, 2.js, ...}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;对新的模块&lt;/strong&gt;，都在extension目录下。包含ext外的基本文件，和ext下的的扩展文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;extension/custom/oa/control.php
extension/custom/oa/model.php
extension/custom/oa/view/{metho1.html.php, method2.html.php, ...}
extension/custom/oa/config/config.php
extension/custom/oa/css/{method1.css, method2.css, common.css, ...}
extension/custom/oa/js/{method1.js, method2.js, common.js, ...}

extension/custom/oa/ext/control/{method1.php, method2.php, ...} 
extension/custom/oa/ext/model/{extend1.php, extend2.php, ...}
extension/custom/oa/ext/view/{method1.html.php, method2.html.php, ...}
extension/custom/oa/ext/config/{config1.php, config2.php, ...}
extension/custom/oa/ext/lang/zh-cn/{lang1.php, lang2.php, ...}
extension/custom/oa/ext/lang/en/{lang1.php, lang2.php, ...}
extension/custom/oa/ext/css/method1/{1.css, 2.css, ...}
extension/custom/oa/ext/js/method1/{1.js, 2.js, ...}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_4"&gt;打包规范&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;需要一个doc目录。不知道怎么回事，越看越看不懂，特别是releases...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;doc目录下面包含了插件的配置信息，按照语言进行存储，比如英文版本的，存为en.yaml，中文zh-cn.yaml&lt;/p&gt;
&lt;p&gt;插件的配置文件采用yaml格式，里面包含了插件的基本信息以及历次版本的发布信息。&lt;/p&gt;
&lt;h3 id="_5"&gt;新建模块&lt;/h3&gt;
&lt;p&gt;按照zentaoPHP框架结构，在插件目录(&lt;code&gt;extension/custom&lt;/code&gt;)下创建子目录，比如ldap，然后，按照预定，分别实现对应的control，model，view，css，js，lang等概念。&lt;/p&gt;
&lt;p&gt;比如ldap插件，在&lt;code&gt;extension/custom/ldap&lt;/code&gt;目录下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;.
├── config.php
├── control.php
├── css
│   └── setting.css
├── js
│   └── setting.js
├── lang
│   ├── en.php
│   ├── zh-cn.php
│   └── zh-tw.php
├── model.php
└── view
    └── setting.html.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;对比官网说法，这个插件的config.php位置似乎有问题，应该在 config/config.php 下？，不过官方extension之外的标准模块，config.php都是直接用的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="model"&gt;对model扩展&lt;/h3&gt;
&lt;p&gt;前面的ldap模块，对user的model层进行了扩展，&lt;code&gt;extension/custom/user&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;.
└── ext
    ├── config
    │   └── config.php
    └── model
        ├── identify.php
        └── updatePassword.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;禅道有多种方法扩展model层。此处是通过在 &lt;strong&gt;ext/model/&lt;/strong&gt; 目录下面建立相应的 &lt;strong&gt;以方法为名的文件&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;禅道框架在执行的时候，会自动将扩展目录下面的identify.php里面的代码，替换misc/model.php中的identify方法的代码。如果是新增的方法，则会追加到misc/model.php的代码中，最终生成一个合并之后的model类文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_6"&gt;对语言扩展&lt;/h3&gt;
&lt;p&gt;语言的扩展文件存放在&lt;strong&gt;ext/lang/&lt;/strong&gt; 目录下面。按照不同的语言建立相应的目录，比如zh-cn下面，可以有多个文件，zentaoPHP框架会 &lt;strong&gt;自动加载该目录下面所有以.php结尾的文件&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;比如 Ldap，对admin模块进行扩展，在&lt;code&gt;extension/custom/admin&lt;/code&gt;下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;.
└── ext
    └── lang
        ├── de
        │   └── ldapauth.php
        ├── en
        │   └── ldapauth.php
        ├── fr
        │   └── ldapauth.php
        ├── zh-cn
        │   └── ldapauth.php
        └── zh-tw
            └── ldapauth.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="_7"&gt;对配置扩展&lt;/h3&gt;
&lt;p&gt;每个模块配置文件的扩展文件存放在 &lt;strong&gt;ext/config/&lt;/strong&gt; 目录下面，可以有多个文件，zentaoPHP框架会&lt;strong&gt;自动加载该目录下面以config开头的.php文件&lt;/strong&gt;。这样不同的扩展可以有自己的配置项，彼此之间不会冲突。&lt;/p&gt;
&lt;p&gt;在前面的 `extension/custom/user``下，可以配置的扩展（文件名无所谓）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;.
└── ext
    ├── config
    │   └── config.php
    └── model
        ├── identify.php
        └── updatePasswo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2 id="_8"&gt;配置&lt;/h2&gt;
&lt;h3 id="nginx"&gt;nginx 配置&lt;/h3&gt;
&lt;p&gt;可以使用nginx作为反向代理，以便于引入ssl支持等，简单配置一下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# server configuration for gitlab&lt;/span&gt;
&lt;span class="k"&gt;server&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;listen&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;443&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;server_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;projects.debao.me&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;ssl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;ssl_certificate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/etc/ssl/projects.debao.me.cer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;ssl_certificate_key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/etc/ssl/projects.debao.me.key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;location&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="kn"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;301&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;https://projects.debao.me/zentao/user-login-L3plbnRhby8=.html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;location&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="kn"&gt;proxy_pass&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;http://127.0.0.1:81&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="c1"&gt;# Allow for large file uploads&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="kn"&gt;client_max_body_size&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$http_host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;X-Real-IP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$remote_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;X-Forwarded-For&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;X-Forwarded-Proto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$scheme&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;注意：配置行 &lt;code&gt;proxy_set_header X-Forwarded-Proto $scheme;&lt;/code&gt;很关键，不然用户在https模式下无法登录。&lt;/p&gt;
&lt;p&gt;这是因为在文件&lt;code&gt;/opt/zbox/zbox/app/zentao/framework/base/router.class.php&lt;/code&gt;中，有如下处理CSRF的代码。网上不少人遇到的https无法登录的问题，给出的方案就是：直接注释掉它们。这也...太简单粗暴了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="x"&gt;        /* Change for CSRF. */&lt;/span&gt;
&lt;span class="x"&gt;        if($this-&amp;gt;config-&amp;gt;framework-&amp;gt;filterCSRF)&lt;/span&gt;
&lt;span class="x"&gt;        {&lt;/span&gt;
&lt;span class="x"&gt;            $httpType = (isset($_SERVER[&amp;quot;HTTPS&amp;quot;]) &amp;amp;&amp;amp; $_SERVER[&amp;quot;HTTPS&amp;quot;] == &amp;#39;on&amp;#39;) ? &amp;#39;https&amp;#39; : &amp;#39;http&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;            if(isset($_SERVER[&amp;#39;HTTP_X_FORWARDED_PROTO&amp;#39;]) and strtolower($_SERVER[&amp;#39;HTTP_X_FORWARDED_PROTO&amp;#39;]) == &amp;#39;https&amp;#39;) $httpType = &amp;#39;https&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;            if(isset($_SERVER[&amp;#39;REQUEST_SCHEME&amp;#39;]) and strtolower($_SERVER[&amp;#39;REQUEST_SCHEME&amp;#39;]) == &amp;#39;https&amp;#39;) $httpType = &amp;#39;https&amp;#39;;&lt;/span&gt;

&lt;span class="x"&gt;            $httpHost = zget($_SERVER, &amp;#39;HTTP_HOST&amp;#39;, &amp;#39;&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt;            $apiMode  = (defined(&amp;#39;RUN_MODE&amp;#39;) &amp;amp;&amp;amp; RUN_MODE == &amp;#39;api&amp;#39;) || isset($_GET[$this-&amp;gt;config-&amp;gt;sessionVar]);&lt;/span&gt;
&lt;span class="x"&gt;            if(!$apiMode &amp;amp;&amp;amp; (empty($httpHost) or strpos($this-&amp;gt;server-&amp;gt;http_referer, &amp;quot;$httpType://$httpHost&amp;quot;) !== 0)) $_FILES = $_POST = array();&lt;/span&gt;
&lt;span class="x"&gt;        }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;另外&lt;code&gt;location = /&lt;/code&gt;配置行，只为了直接跳转到登录页面，而不是停留在默认的广告界面，在手动点击登录开源版本。&lt;/p&gt;
&lt;p&gt;除此之外，在局域网内，可以设置根据主机名或者非ssl端口，直接进行跳转到ssl端口（配置文件加入如下若干行）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;server&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;listen&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;server_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;projects&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;projects.debao.me&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;301&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;https://projects.debao.me&lt;/span&gt;&lt;span class="nv"&gt;$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;server&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;listen&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;443&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;server_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;projects&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;301&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;https://projects.debao.me&lt;/span&gt;&lt;span class="nv"&gt;$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h3 id="ldap"&gt;Ldap配置&lt;/h3&gt;
&lt;p&gt;禅道官方没有给开源版提供Ldap支持。官网有如下一个链接，只支持到禅道7.3版本，早过时了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.zentao.net/extension-viewrelease-326-front.html"&gt;禅道开源版LDAP插件 - 版本详情 - 禅道开源项目管理软件 (zentao.net)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在Github有不少用于禅道的LDAP插件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/twoBxx/zentao-ldap-plugin"&gt;twoBxx/zentao-ldap-plugin: Zentaopms LDAP plugin (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/luzi2000/zentao-ldap"&gt;luzi2000/zentao-ldap: 根据前人总结的ldap工程改编而来，支持17.5版本 (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DYSDF/zentao-ldap"&gt;DYSDF/zentao-ldap (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iboxpay/ldap"&gt;iboxpay/ldap: 禅道开源版 LDAP插件 (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shynome/zentao-ldap"&gt;shynome/zentao-ldap: 禅道 zentao 11.5 可用的 ldap 插件 (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Mohamed-ncib19/Zentao-LDAP-plugin"&gt;Mohamed-ncib19/Zentao-LDAP-plugin (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;东西最多，但一眼看去，感觉都不太靠谱...，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="1"&gt;尝试1&lt;/h4&gt;
&lt;p&gt;先试试第一个 twoBxx/zentao-ldap-plugin，下载后，做成zip压缩包 ldap.zip (不包含顶层目录）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;插件安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在界面等登陆后，通过 &lt;code&gt;后台-&amp;gt;插件管理&lt;/code&gt; 调出插件管理界面。&lt;/p&gt;
&lt;p&gt;选中前面的 ldap.zip，强制安装（因为版本不完全匹配）。&lt;/p&gt;
&lt;p&gt;安装后到 &lt;code&gt;后台-&amp;gt;系统设置-&amp;gt;LDAP&lt;/code&gt;页面进行配置&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LDAP配置&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;示例值&lt;/th&gt;
&lt;th&gt;必填&lt;/th&gt;
&lt;th&gt;默认值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;基础配置&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;协议&lt;/td&gt;
&lt;td&gt;ldap://，ldaps://&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;ldap://&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LDAP服务器&lt;/td&gt;
&lt;td&gt;ldap.test.com&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;端口&lt;/td&gt;
&lt;td&gt;389，636&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;searchDN&lt;/td&gt;
&lt;td&gt;ou=users,dc=test,dc=com&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BindDN&lt;/td&gt;
&lt;td&gt;cn=admin,dc=test,dc=com&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BindDN 密码&lt;/td&gt;
&lt;td&gt;ou=users,dc=test,dc=com&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;属性配置&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;账号字段&lt;/td&gt;
&lt;td&gt;uid/sAMAccountName&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;uid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;默认用户组&lt;/td&gt;
&lt;td&gt;下拉选择&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;管理员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mail&lt;/td&gt;
&lt;td&gt;mail&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;mail&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;姓名字段&lt;/td&gt;
&lt;td&gt;cn&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;cn&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;手机号&lt;/td&gt;
&lt;td&gt;mobile&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;mobile&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;界面修改的配置，写入到文件&lt;code&gt;extension/custom/ldap/config.php&lt;/code&gt; 中。&lt;/p&gt;
&lt;p&gt;保存操作位于&lt;code&gt;extension/custom/ldap/control.php&lt;/code&gt;中&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，由于ldap_get_entries() 返回的数组中所有键名都是小写的，所以uid设置samaccountname也应该都用小写字符。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;问题：ldap连接测试不过&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;找到一个bug&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;extension/custom/ldap/control.php 文件内，sssList在lang中而不是config中：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="x"&gt; public function test()&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt;      $fh = $this-&amp;gt;config-&amp;gt;ldap-&amp;gt;sslList[$this-&amp;gt;post-&amp;gt;ssl] . $this-&amp;gt;post-&amp;gt;host . &amp;#39;:&amp;#39; .$this-    &amp;gt;post-&amp;gt;port;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;改为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;fh&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;ldap&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;sslList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;非tsl下的连接测试通过。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问题：任然无法同步账户&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用ldap和389端口，ldap连接没问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是Ldap用户还是无法登录，可能和用的 uid 取的 'sAMAccountName' 有关（改写全小写samaccountname）没有改善。&lt;/p&gt;
&lt;p&gt;排查extension/custom/ldap/model.php，由于AD中不是所有用户都配置了email和mobile字段，需要确保这两个字段不为null：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="x"&gt;        for (; $i &amp;lt; $ldapUsers[&amp;#39;count&amp;#39;]; $i++) {&lt;/span&gt;
&lt;span class="x"&gt;            $user-&amp;gt;account = $ldapUsers[$i][$config-&amp;gt;uid][0];&lt;/span&gt;
&lt;span class="x"&gt;            $user-&amp;gt;realname = $ldapUsers[$i][$config-&amp;gt;name][0];&lt;/span&gt;
&lt;span class="x"&gt;            // 确保 mobile 字段不为 NULL&lt;/span&gt;
&lt;span class="x"&gt;            $user-&amp;gt;email = !empty($ldapUsers[$i][$config-&amp;gt;mail][0]) ? $ldapUsers[$i][$config-&amp;gt;mail][0] : $user-&amp;gt;realname . &amp;quot;@debao.me&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;            $user-&amp;gt;mobile = !empty($ldapUsers[$i][$config-&amp;gt;mobile][0]) ? $ldapUsers[$i][$config-&amp;gt;mobile][0] : &amp;quot;12345678&amp;quot;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;手动同步账户通过。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问题：LDAP账户依然无法登录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;需要排查 &lt;code&gt;extension/custom/user/ext/model/identify.php&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问题：tls&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;但是ldaps和 636默认还是不行。可能和证书不受信任有关。用ldapsearch进行测试。&lt;/p&gt;
&lt;p&gt;尽管忽略证书校验，使用ldapsearch没问题&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ldapsearch -H ldaps://dc1.debao.me:636 -x -D &amp;quot;cn=admin,dc=debao,dc=me&amp;quot; -w your_password -b &amp;quot;dc=debao,dc=me&amp;quot; -o &amp;quot;tls_reqcert=never&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h4 id="2"&gt;尝试2&lt;/h4&gt;
&lt;p&gt;试试 luzi2000/zentao-ldap&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;很顺利&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;插件安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在界面等登陆后，通过 &lt;code&gt;后台-&amp;gt;插件管理&lt;/code&gt; 调出插件管理界面。&lt;/p&gt;
&lt;p&gt;选中前面的源码对应压缩包 zentao-ldap.zip，强制安装（因为版本不完全匹配）。&lt;/p&gt;
&lt;p&gt;安装后到 &lt;code&gt;后台-&amp;gt;系统设置-&amp;gt;LDAP&lt;/code&gt;页面进行配置&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配置&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;示例值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;基础配置&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LDAP服务器&lt;/td&gt;
&lt;td&gt;ldap.test.com&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BindDN&lt;/td&gt;
&lt;td&gt;cn=admin,dc=test,dc=com&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BindDN 密码&lt;/td&gt;
&lt;td&gt;ou=users,dc=test,dc=com&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;属性配置&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;baseDN&lt;/td&gt;
&lt;td&gt;ou=users,dc=test,dc=com&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Serach Filter&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;账号字段&lt;/td&gt;
&lt;td&gt;samaccountname&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mail&lt;/td&gt;
&lt;td&gt;mail&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;姓名字段&lt;/td&gt;
&lt;td&gt;cn&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;没有tls以及端口设置，功能弱一些，但装完作为demo可以用&lt;/p&gt;
&lt;h2 id="_9"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devel.easycorp.cn/book/extension-new/intro-52.html"&gt;zentaoPHP二次开发简介 - 禅道二次开发 - 易软天创开发者中心 (easycorp.cn)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zentao.net/blog/zentao-expansion-82385.html"&gt;禅道扩展机制 - 技术笔记 - 禅道开源项目管理软件 (zentao.net)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zentao.net/book/zentaopmshelp/144.html"&gt;禅道项目管理软件打包规范1.1版本 - 禅道二次开发手册 - 禅道开源项目管理软件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;https://github.com/easysoft/zentaopms&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tools"></category></entry><entry><title>GitLab与DevOps小记</title><link href="https://blog.debao.me/2024/05/notes-on-gitlab-devops/" rel="alternate"></link><published>2024-05-27T21:13:00+08:00</published><updated>2024-05-27T21:13:00+08:00</updated><author><name>Debao Zhang</name></author><id>tag:blog.debao.me,2024-05-27:/2024/05/notes-on-gitlab-devops/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2023/11/notes-on-gitlab-and-gerrit/"&gt;Gitlab与Gerrit&lt;/a&gt;，了解一下DevOps...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="devops"&gt;DevOps&lt;/h2&gt;
&lt;p&gt;DevOps是Development和Operations两个词的组合。它的英文发音是 /de'vɒps/。&lt;/p&gt;
&lt;p&gt;&lt;img alt="DevOps-Life-Cycle" src="https://blog.debao.me/images/devops/DevOps-Life-Cycle.svg"&gt;&lt;/p&gt;
&lt;p&gt;有两个词经常会伴随着DevOps出现，那就是CI和CD。CI是Continuous Integration（持续集成），而CD对应多个英文，Continuous Delivery（持续交付）或Continuous …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;接前面&lt;a href="https://blog.debao.me/2023/11/notes-on-gitlab-and-gerrit/"&gt;Gitlab与Gerrit&lt;/a&gt;，了解一下DevOps...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="devops"&gt;DevOps&lt;/h2&gt;
&lt;p&gt;DevOps是Development和Operations两个词的组合。它的英文发音是 /de'vɒps/。&lt;/p&gt;
&lt;p&gt;&lt;img alt="DevOps-Life-Cycle" src="https://blog.debao.me/images/devops/DevOps-Life-Cycle.svg"&gt;&lt;/p&gt;
&lt;p&gt;有两个词经常会伴随着DevOps出现，那就是CI和CD。CI是Continuous Integration（持续集成），而CD对应多个英文，Continuous Delivery（持续交付）或Continuous Deployment（持续部署）。&lt;/p&gt;
&lt;h3 id="devops_1"&gt;DevOps与瀑布和敏捷&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特点&lt;/th&gt;
&lt;th&gt;瀑布模型&lt;/th&gt;
&lt;th&gt;敏捷方法&lt;/th&gt;
&lt;th&gt;DevOps&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;开发过程&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;线性顺序&lt;/td&gt;
&lt;td&gt;迭代和增量&lt;/td&gt;
&lt;td&gt;持续集成和持续交付&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;灵活性&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;低&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;用户参与&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;低&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;文档&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;详细&lt;/td&gt;
&lt;td&gt;简略&lt;/td&gt;
&lt;td&gt;自动化文档&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;交付周期&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;长&lt;/td&gt;
&lt;td&gt;短&lt;/td&gt;
&lt;td&gt;短&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;风险管理&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;集中&lt;/td&gt;
&lt;td&gt;分散&lt;/td&gt;
&lt;td&gt;分散&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;团队协作&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;开发和运维分离&lt;/td&gt;
&lt;td&gt;开发团队协作&lt;/td&gt;
&lt;td&gt;开发和运维一体化&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;适用项目&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;需求明确且稳定的小型项目&lt;/td&gt;
&lt;td&gt;需求可能变化的中大型项目&lt;/td&gt;
&lt;td&gt;需要快速交付和高稳定性的项目&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;与瀑布式开发和敏捷开发相比，将开发（Development）和运维（Operations）紧密结合，强调协作和自动化。DevOps贯穿了软件全生命周期，而不仅限于开发阶段。&lt;/p&gt;
&lt;p&gt;&lt;img alt="devops-agile-devops" src="https://blog.debao.me/images/devops/devops-agile-devops.jpg"&gt;&lt;/p&gt;
&lt;p&gt;图片来源： x.com&lt;/p&gt;
&lt;p&gt;&lt;img alt="devops-agile-devops-2" src="https://blog.debao.me/images/devops/devops-agile-devops-2.jpg"&gt;&lt;/p&gt;
&lt;p&gt;图片来源：&lt;a href="https://www.linkedin.com/pulse/agile-devops-prem-bangole/"&gt;To Agile or To DevOps | LinkedIn&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="devops_2"&gt;DevOps工具&lt;/h3&gt;
&lt;p&gt;DevOps各阶段，涉及到的工具太多了...&lt;/p&gt;
&lt;p&gt;&lt;img alt="DevOps-Tools" src="https://blog.debao.me/images/devops/DevOps-Tools.svg"&gt;&lt;/p&gt;
&lt;h2 id="gitlab"&gt;Gitlab&lt;/h2&gt;
&lt;p&gt;&lt;img alt="gitlab-ci-workflow.png" src="https://blog.debao.me/images/devops/gitlab-ci-workflow.png"&gt;Gitlab 开发于2011年，2012年开始开发 Gitlab-CI。从Gitlab 8.0版本开始，CI集成进Gitlab中（2015年）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.gitlab.com/ee/topics/build_your_application.html"&gt;Use CI/CD to build your application | GitLab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.gitlab.com/runner/install/"&gt;Install GitLab Runner | GitLab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.gitlab.com/ee/development/cicd/"&gt;CI/CD development guidelines | GitLab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;https://about.gitlab.com/releases/2015/09/22/gitlab-8-0-released/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于Jenkins与GitLab CI，两个都免费可以本地部署，前者发力早，后者官方出品与Gitlab集成更好。&lt;/p&gt;
&lt;h2 id="github"&gt;Github&lt;/h2&gt;
&lt;p&gt;Github 在2018年被微软收购后，发布了github actions！！！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/features/actions"&gt;Features • GitHub Actions · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;https://zhuanlan.zhihu.com/p/647970282&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/QbitAI/article/details/99366085"&gt;GitHub免费支持CI/CD了，开发测试部署高度自动化，支持各种语言，网友：第三方凉凉...-CSDN博客&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在Github Actions之前，2017年有人汇总github中10大 CI工具  &lt;a href="https://github.blog/2017-11-07-github-welcomes-all-ci-tools/"&gt;GitHub welcomes all CI tools - The GitHub Blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;前四位是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Travis CI&lt;/li&gt;
&lt;li&gt;Circle CI&lt;/li&gt;
&lt;li&gt;Jenkins&lt;/li&gt;
&lt;li&gt;AppVeyor&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Travis CI 已经没有免费版本（只有刚注册第一个月有免费的点数）。&lt;/p&gt;
&lt;p&gt;Circle CI每个月有免费的分钟数&lt;/p&gt;
&lt;p&gt;Jenkins 免费，需要自行部署&lt;/p&gt;
&lt;p&gt;AppVeyor 不了解&lt;/p&gt;
&lt;h2 id="_1"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/DevOps"&gt;DevOps - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.openxcell.com/devops/"&gt;DevOps - The Complete Guide for 2023 (openxcell.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/91371659"&gt;DevOps到底是什么意思？ - 知乎 (zhihu.com)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tools"></category><category term="Git"></category></entry></feed>